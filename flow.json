[
    {
        "id": "e521d174e7104ca1",
        "type": "tab",
        "label": "Launcher",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c8989d0a.49ea8",
        "type": "tab",
        "label": "Lectura/Escritura",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dcee4298f5de57d2",
        "type": "tab",
        "label": "Despliegue General",
        "disabled": false,
        "info": ""
    },
    {
        "id": "827787d0.ede678",
        "type": "tab",
        "label": "Usuarios",
        "disabled": false,
        "info": ""
    },
    {
        "id": "aa547d69.9cb8e",
        "type": "tab",
        "label": "Datos eléctricos cluster",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e997ba3b.48cc18",
        "type": "tab",
        "label": "Datos operativos pozos",
        "disabled": false,
        "info": ""
    },
    {
        "id": "93634831.aed548",
        "type": "tab",
        "label": "CCP",
        "disabled": false,
        "info": ""
    },
    {
        "id": "77e50510.f482bc",
        "type": "tab",
        "label": "Datos de fondo",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a70735f4.fb54d8",
        "type": "tab",
        "label": "Configuración Cluster",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f10e7ce.d57828",
        "type": "tab",
        "label": "Instrumentación manifold",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0dd66b875552d6bc",
        "type": "tab",
        "label": "Instrumentación pozos",
        "disabled": false,
        "info": ""
    },
    {
        "id": "242bc9a6.f9b016",
        "type": "tab",
        "label": "Alarmas/Eventos",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a409994f70cf4cc4",
        "type": "tab",
        "label": "Navegación",
        "disabled": false,
        "info": ""
    },
    {
        "id": "496d98c4c50cacbb",
        "type": "tab",
        "label": "SWC",
        "disabled": false,
        "info": ""
    },
    {
        "id": "0f6919ffca89833a",
        "type": "tab",
        "label": "Tendencias",
        "disabled": false,
        "info": ""
    },
    {
        "id": "84636ba2ba4b8fea",
        "type": "tab",
        "label": "AVAS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "85d78935bd11be27",
        "type": "tab",
        "label": "Base de datos AIC",
        "disabled": false,
        "info": ""
    },
    {
        "id": "18e29a89.99dbb5",
        "type": "subflow",
        "name": "VSD Card",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "e73d17ea.0c5538"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 670,
                "y": 30,
                "wires": [
                    {
                        "id": "50aa357a.1187dc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "2657da37.013b66",
        "type": "subflow",
        "name": "User",
        "info": "",
        "category": "Users",
        "in": [
            {
                "x": 40,
                "y": 90,
                "wires": [
                    {
                        "id": "f771788a.2843f8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 530,
                "y": 120,
                "wires": [
                    {
                        "id": "8f64c5d0.2e2de8",
                        "port": 0
                    },
                    {
                        "id": "7ac7e5a3.05d60c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#E9967A",
        "icon": "font-awesome/fa-user-plus",
        "status": {
            "x": 710,
            "y": 160,
            "wires": [
                {
                    "id": "1c0ced5.0f93b13",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "5df787f2.bf5f88",
        "type": "subflow",
        "name": "Electrical SVG",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 30,
                "y": 30,
                "wires": [
                    {
                        "id": "a2e52656.c45408"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 30,
                "wires": [
                    {
                        "id": "d42179e5.c93338",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "11d568a7.09a5c7",
        "type": "subflow",
        "name": "SWC_OS",
        "info": "",
        "category": "SWC OS",
        "in": [
            {
                "x": 140,
                "y": 110,
                "wires": [
                    {
                        "id": "1083899a.1b4716"
                    },
                    {
                        "id": "9cc3f117.42857"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 80,
                "wires": [
                    {
                        "id": "1083899a.1b4716",
                        "port": 0
                    }
                ]
            },
            {
                "x": 840,
                "y": 130,
                "wires": [
                    {
                        "id": "3228637d.9e937c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#3FADB5",
        "inputLabels": [
            "Request"
        ],
        "outputLabels": [
            "CPU Temperature",
            "CPU Freq"
        ],
        "icon": "font-awesome/fa-desktop"
    },
    {
        "id": "5c22c23.3efb43c",
        "type": "subflow",
        "name": "SCP Data",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 30,
                "wires": [
                    {
                        "id": "7b72117c.cc31b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 240,
                "y": 30,
                "wires": [
                    {
                        "id": "7b72117c.cc31b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "SCP",
                "type": "num",
                "value": "0",
                "ui": {
                    "icon": "font-awesome/fa-sort-numeric-asc",
                    "label": {
                        "en-US": "SCP"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "num"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "adf77ef5.3ae39",
        "type": "subflow",
        "name": "Data Pozo ESP/PCP",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "6feadb49.4ff014"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1550,
                "y": 20,
                "wires": [
                    {
                        "id": "274668eb.fc5d78",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a3841896.e21cd8",
        "type": "subflow",
        "name": "Instrumentación pozo",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 30,
                "y": 40,
                "wires": [
                    {
                        "id": "9ac00374.6d803"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 530,
                "y": 40,
                "wires": [
                    {
                        "id": "1aecebc1.60fd74",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "f0c3da0c.524418",
        "type": "subflow",
        "name": "Datos de fondo",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 30,
                "y": 40,
                "wires": [
                    {
                        "id": "8b151441.413e58"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 530,
                "y": 40,
                "wires": [
                    {
                        "id": "9dc007c5.140948",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "9f97d888.bf2cb8",
        "type": "subflow",
        "name": "Well Data",
        "info": "",
        "category": "dashboard",
        "in": [
            {
                "x": 60,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 0
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 1
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 2
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 3
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 4
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 5
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 6
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 7
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 8
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 9
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 10
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 11
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 12
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 13
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 14
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 15
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 16
                    }
                ]
            },
            {
                "x": 320,
                "y": 130,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 17
                    }
                ]
            },
            {
                "x": 850,
                "y": 200,
                "wires": [
                    {
                        "id": "f19d22c110b0dee6",
                        "port": 0
                    },
                    {
                        "id": "dabb508d.a5ddf",
                        "port": 0
                    }
                ]
            },
            {
                "x": 320,
                "y": 260,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 19
                    }
                ]
            },
            {
                "x": 320,
                "y": 300,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 20
                    }
                ]
            },
            {
                "x": 320,
                "y": 340,
                "wires": [
                    {
                        "id": "2fa511fe.c77c8e",
                        "port": 21
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "position",
                "type": "num",
                "value": ""
            },
            {
                "name": "rutaSCPselector",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#3FADB5",
        "inputLabels": [
            "booleano"
        ],
        "outputLabels": [
            "Nombre de SCP",
            "Disp (S/N)",
            "Velocidad",
            "Volt VSD",
            "Amp VSD",
            "Power VSD",
            "Volt motor",
            "Amp motor",
            "PIP",
            "THP",
            "THT",
            "BusDC",
            "T motor",
            "T entrada",
            "Vibracion",
            "Corriente de fuga",
            "Temperatura descarga",
            "Presión descarga",
            "ALS type"
        ],
        "icon": "node-red-dashboard/ui_gauge.png"
    },
    {
        "id": "f7ed166d.1aa528",
        "type": "group",
        "z": "827787d0.ede678",
        "name": "Usuarios",
        "style": {
            "fill": "#ffbfbf",
            "fill-opacity": "0.5",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "eb91dac5.690838"
        ],
        "x": 148,
        "y": 13
    },
    {
        "id": "aafad2ba.dcc8b",
        "type": "group",
        "z": "aa547d69.9cb8e",
        "name": "Trend Harmonics",
        "style": {
            "fill": "#ffefbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6c9ed5d3.e7799c",
            "3ea5879e.bf0588",
            "c8aa3a95.12b518",
            "20b8681c.81fd48",
            "8c73338.8deb8d",
            "3ccbaa0b.2db096"
        ],
        "x": 144,
        "y": 19,
        "w": 812,
        "h": 132
    },
    {
        "id": "73a228cd.9d45d8",
        "type": "group",
        "z": "e997ba3b.48cc18",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "5dcc4d5b.20caf4",
            "4c3a9b2b.9e2814",
            "bcf4fff3.6451c",
            "9959ff.cbb026",
            "a98b506e.03e03",
            "e2dddcc8.8c593",
            "59adc93d8528121c",
            "c06799051fae3330",
            "b6cdbd2497da75f7",
            "b6f70184864aada5",
            "5f70b9fdf661ebc1",
            "f155df4497b141e5",
            "4904603f92adf9ef"
        ],
        "x": 54,
        "y": 29,
        "w": 812,
        "h": 252
    },
    {
        "id": "2f18e23b.de32ce",
        "type": "group",
        "z": "e997ba3b.48cc18",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "dbdbcfdd.62eb8",
            "3cc764fd.7e58cc",
            "1acb0c29.0ddee4",
            "6f296e4d.6b03a",
            "8da77a70.699258",
            "e36d20a829331d71",
            "8f8700d32def862c",
            "4c25ebc9a7274f4f",
            "43030a29.bfdeb4",
            "fb0788f42bc54f91",
            "487f7f8226176ed0",
            "528f3613fd9dc550",
            "f6c4b6bdd7d87649",
            "0db3231e87512499"
        ],
        "x": 78,
        "y": 299,
        "w": 1234,
        "h": 518
    },
    {
        "id": "7b6f4b41.106164",
        "type": "group",
        "z": "242bc9a6.f9b016",
        "name": "",
        "style": {
            "fill": "#dbcbe7",
            "label": true
        },
        "nodes": [
            "11f55817.139c18",
            "cf57802e.7d258"
        ],
        "x": -2,
        "y": 13
    },
    {
        "id": "c58d9126.1869c",
        "type": "group",
        "z": "a70735f4.fb54d8",
        "name": "Pozos configurados clúster",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "34e66c29.ca92a4",
            "2f6dd56b.2afc3a",
            "55d5f923.1289d8",
            "d17b6cd1.dd167",
            "31bedd83.c1a8a2",
            "7ce5179f.e149d8",
            "5657a4b8.0747bc",
            "8bde71428f106aa5",
            "3895844e0bbc0b79"
        ],
        "x": 54,
        "y": 579,
        "w": 722,
        "h": 192
    },
    {
        "id": "89dd768a.673f58",
        "type": "group",
        "z": "e997ba3b.48cc18",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "24e0f6e3.56cf0a",
            "35696a34.d09d86",
            "ef9e9c0ea5b19048",
            "82f44a0478397706"
        ],
        "x": 904,
        "y": 69,
        "w": 662,
        "h": 82
    },
    {
        "id": "a0798509.56f3c8",
        "type": "group",
        "z": "c8989d0a.49ea8",
        "name": "Lectura",
        "style": {
            "label": true,
            "color": "#d1d1d1",
            "fill": "#e3f3d3"
        },
        "nodes": [
            "5c6293f5.b173ac",
            "1b58a441.d2605c",
            "21ef4bd1.6191c4",
            "bb4e5774.d8b198",
            "7f0e3b9d.d38d24",
            "db07dff4.23755",
            "7f00280b.114ba8",
            "7ecb5f7a.538eb",
            "e173641d.7e7c38",
            "b34b9630.1b9f88",
            "2679c3cd140bc8c2",
            "fe6bf172581b9587",
            "819e68e2c0cd8ee0",
            "6620f9a944803e2b",
            "2db92c65aacef0e5",
            "75f9fd6db8f3d35d",
            "678e40a940ceb830",
            "6fb595d3bba0fc4b",
            "88e39700f7042263"
        ],
        "x": 34,
        "y": 19,
        "w": 432,
        "h": 962
    },
    {
        "id": "73df5953.fc56e8",
        "type": "group",
        "z": "a70735f4.fb54d8",
        "name": "Configuración Clúster",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5d3a6d1e.f36e64",
            "a5204587.b883d8",
            "120f2cfa.456e63",
            "7522f5b8.a4638c",
            "dd9f6ceb.ddbe7",
            "f8ac9870.c119d8",
            "22860dee.e67e42",
            "5517b73.bd02348",
            "f4be3cec.c935f",
            "43505e5f.1b221",
            "cfa9bf86.2a8a3",
            "3a0224.13cb4ddc",
            "ca8542a4.5ca1d",
            "bbcf7cf4.41f79",
            "e2c69396.80d27",
            "4c43476f.e5a758",
            "4c365ddf.1dae34",
            "d84a013f.273ce",
            "c308cca6.9801f",
            "1fefef6a.bb0941",
            "cceedd5a9a2ea195",
            "5586ffc8b161d4a4",
            "130d6c7b4ed4e80a",
            "8d4ee20ff8081d73",
            "f076a6093ffd53e0",
            "c0c394e33b69e476",
            "c6b3588ed674f55a",
            "d7dcf99d19a0794e",
            "6a7a05e6729f5b0c"
        ],
        "x": 54,
        "y": 59,
        "w": 952,
        "h": 502
    },
    {
        "id": "a17f12b7.aff7a",
        "type": "group",
        "z": "c8989d0a.49ea8",
        "name": "Escritura Referencia SCP 1 al 9",
        "style": {
            "label": true,
            "fill": "#ffbfbf"
        },
        "nodes": [
            "9a082d5b.6a6e5",
            "91831b1b.df61b8",
            "bb351043.dc5c7",
            "491e3ffd.9afc5",
            "e9a5670b.de2478",
            "5e1fe9fd.eba2e8",
            "f60c2283.77e35",
            "145df53.ab3a50b",
            "414bd76c.c35658",
            "311fb58b.d4c35a",
            "c738a47b.f465d8",
            "1ce6bb769779860f",
            "6690f43247bfb0fe",
            "cc3c6cfc2014303e",
            "bce025532ac40c58",
            "ce852a763d5dde26",
            "c1b43ca09582f068",
            "548b4b348cc28e92",
            "97bfa9befbc1cb70",
            "338284669a1adc2c",
            "66e0dc253ce77376",
            "62df9b0c0f62744f",
            "9e1c66fb61c5314e",
            "5a6d0e3e76ebce43",
            "d5fbc2d84c809926",
            "1f6d6ff689324e69",
            "81e5d397116c488c",
            "38c838ee9ea436f4",
            "b2b70770f04451e4"
        ],
        "x": 1004,
        "y": 19,
        "w": 732,
        "h": 1102
    },
    {
        "id": "1c17956307e44e29",
        "type": "group",
        "z": "dcee4298f5de57d2",
        "name": "Datos de Pozo Posición 1",
        "style": {
            "label": true
        },
        "nodes": [
            "f151ef75ee689f12",
            "f0e67f4f0d829127",
            "c4cd163112c9c257",
            "1971c53732ba9843",
            "f398db3e910a7124",
            "357c4e57e594ef65",
            "29bb553b5154ac9a",
            "b0a0856ce0a6a98e",
            "3cbed816ab16272e",
            "391a76fe1746fcb5",
            "95efdd10e4932dd6",
            "843e8ecefd58da7f",
            "a4d4d93e835a326b",
            "06245e5bbc124fe4",
            "1c9102315cfb9531",
            "e5d02252158d5a07",
            "0795ef62c6cdf22b",
            "2a50827a3f7af931",
            "feb2591b6dfeb717",
            "0fb279837faa347f",
            "821d9be0ddb497ac",
            "63c685875964e413",
            "aeece35ccc591620"
        ],
        "x": 84,
        "y": 19,
        "w": 692,
        "h": 642
    },
    {
        "id": "6e58f0ae3fe125af",
        "type": "group",
        "z": "dcee4298f5de57d2",
        "name": "Datos de Pozo Posición 2",
        "style": {
            "label": true
        },
        "nodes": [
            "952e7831f8ba38da",
            "6befad24b902ee83",
            "bb7c17b43dc01971",
            "70b9003a66d74660",
            "3c41753814bbff34",
            "081cafd2b18a8c0b",
            "659ae12f0356cea2",
            "447a2f8ebf57eaa9",
            "76b343739d5d83d3",
            "20146e27f081f2f5",
            "269ed6d093e03918",
            "a0230928d0eeca41",
            "4658098e99000b6b",
            "468735a3363946df",
            "c2f95795d38b15b4",
            "9f80e76bb214c53e",
            "f8fd7eee237caf88",
            "d76dff8f74dbb40b",
            "610bc39c43b63394",
            "7a0c3503923f7963",
            "2545a2c9037578c0"
        ],
        "x": 844,
        "y": 19,
        "w": 702,
        "h": 602
    },
    {
        "id": "da4321a277ed136b",
        "type": "group",
        "z": "dcee4298f5de57d2",
        "name": "Datos de Pozo Posición 3",
        "style": {
            "label": true
        },
        "nodes": [
            "0c3c00860e527ec9",
            "8270a86bf4c4117c",
            "11914dc48622820b",
            "67d6bef6d812233c",
            "8a72ed007ec0bbd6",
            "4c9bd0aeb0e2a492",
            "09a2fe0707ac9cef",
            "afe95b9080436748",
            "93bd70a570662db5",
            "1c25c0cdf3cf7e71",
            "5b96c35d08822d6b",
            "5acd401d2f46b060",
            "dd9e0e91a716fe95",
            "6cc2257de261981f",
            "9ff6998a6f1ef7a1",
            "75718ac42ef4fefc",
            "757142fa2f461483",
            "1319c225b52c8337",
            "5741ce45918551a6",
            "f52712eb8d047187",
            "91ef17fe5822adfc",
            "d9fc8e1b8c8ba9cf",
            "eb893e6cd74834b7",
            "9b21c692dbc99177",
            "c91673ec5dacc4a2",
            "8c0abdf5a7d1991f"
        ],
        "x": 1564,
        "y": 19,
        "w": 742,
        "h": 602
    },
    {
        "id": "a0f89b10a58f3dbb",
        "type": "group",
        "z": "827787d0.ede678",
        "name": "Acciones usuario",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "9f98dbaaa1dfbd1c",
            "ba9b3d7a41b195a8",
            "bfabaff171ee7d62",
            "8217afa77c53c8c4",
            "287db0c4cf9142ef",
            "8e53c477b66d3a99",
            "268a70d127375de5",
            "fd031b5f60e0bb6b",
            "fc7ac26950eab4f6"
        ],
        "x": 144,
        "y": 443
    },
    {
        "id": "5e0b04a10149786e",
        "type": "group",
        "z": "a409994f70cf4cc4",
        "name": "Eventos de pantalla",
        "style": {
            "label": true
        },
        "nodes": [
            "fd17caf4e1cb953b",
            "82aa836a1d0ebabd",
            "b56aa71999519568",
            "9e4ecba6a9605392",
            "fe0f305772eadaa5"
        ],
        "x": 94,
        "y": 39
    },
    {
        "id": "1c7df9ba6cc1a3d4",
        "type": "group",
        "z": "496d98c4c50cacbb",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "af59ebdb307f926a",
            "03598c96d1c54dd4"
        ],
        "x": 88,
        "y": 103
    },
    {
        "id": "091089867260e133",
        "type": "group",
        "z": "84636ba2ba4b8fea",
        "name": "Avas IPR ",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "31e418af65442158",
            "55ef44557293a464",
            "7178e6a5fc818b18",
            "a319327ca6e39904",
            "a9302b21b3a7c502",
            "cdb98853e2a9e9bf",
            "fc67f9d106ee5bd9",
            "4f21a66cdc5abf28"
        ],
        "x": 14,
        "y": 13
    },
    {
        "id": "6c7554a242bcd1a6",
        "type": "group",
        "z": "84636ba2ba4b8fea",
        "name": "Cálculo de Sensorless",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "14ac3364ab1f35c9",
            "99037279125d9fcb",
            "c22413e09d1b89d4",
            "f5c126f3b4d54361",
            "c6fbcaf2f2a30a04",
            "a8be061e73802d8d",
            "683bbc40139c0fac"
        ],
        "x": 1294,
        "y": 569
    },
    {
        "id": "ad1eed9908ed5e2a",
        "type": "group",
        "z": "e997ba3b.48cc18",
        "name": "Tendencias Datos Operativos",
        "style": {
            "label": true
        },
        "nodes": [
            "1e1e27dfa1f3561e",
            "1889382ff553feb8",
            "0c268e6506789671",
            "5f05e290fd561209",
            "7586fea4c3b6312c",
            "a56654764ab75307",
            "48a0d2f81f738c9f",
            "bcc1d02a80a0c9a9",
            "59905feec00f5c7f",
            "a90b9db5a15e0d3e",
            "3a50b8e2f7d2c694",
            "753de0dd4495c539",
            "038ecc84a8e8e72c"
        ],
        "x": 74,
        "y": 829,
        "w": 1052,
        "h": 182
    },
    {
        "id": "53d376e89282424a",
        "type": "group",
        "z": "84636ba2ba4b8fea",
        "name": "Carta Nomográfica",
        "style": {
            "label": true,
            "label-position": "n",
            "color": "#000000"
        },
        "nodes": [
            "468aa330d11121f1",
            "cc674ca2e8075b6a",
            "b776ba52a7389804",
            "8f4859372e72c7a1",
            "35df64eb3de4bd1f",
            "614ed2a085394be5",
            "0668fdaa0b5c2bcf",
            "f08b40bf5ea23646",
            "51810e450c58c602",
            "9fbee0714f88c6ad",
            "55baa43df38d9183",
            "79c8fad952dcaa51",
            "0debf976b06e3a63"
        ],
        "x": 1294,
        "y": 859
    },
    {
        "id": "cd21ba46bdc44b70",
        "type": "group",
        "z": "77e50510.f482bc",
        "name": "Datos de fondo SCP1",
        "style": {
            "label": true
        },
        "nodes": [
            "bdac1cda867bdcab",
            "e5640f06a750ebcb",
            "37163e74bd4b85e7",
            "cf36016a415e7a37",
            "6843cf06f4648e4b",
            "731f78948e165ee4",
            "5e64a142de84ac39",
            "936b723c7ae7807e",
            "a16ce9d88bfe2b25",
            "140d811fb12cab05",
            "da0c6a7f64bd0422",
            "a0f44da51d28e071",
            "0cf47e78b5dd2816",
            "f984444e3f0ca6ae",
            "c0e8b2a38c8e9384",
            "a5be9e647a1b2f3b",
            "fa1c1388f6ea6d9e",
            "88cdc40fe1b37fa5"
        ],
        "x": 104,
        "y": 29,
        "w": 652,
        "h": 462
    },
    {
        "id": "adb0e39f299e229e",
        "type": "group",
        "z": "a409994f70cf4cc4",
        "name": "Navegación Datos Operativos de Pozo",
        "style": {
            "fill": "#ff3f3f",
            "label": true
        },
        "nodes": [
            "f28b0c02d8fcb7fb",
            "b178332f621e55c6",
            "2978554edd4b937d",
            "026025b92bfab22d",
            "6ac4c7bc1b306c2e",
            "c6f170b7e699da0a",
            "dad03e8d0c8f47ad",
            "54d16bfaedad9ae5",
            "dd9fc11158de4d41",
            "5742c17aa56d0b81",
            "1f3f45750a40c819",
            "386399794e5984dd",
            "36415da3bc5cfb3f",
            "65f3d51b20987789",
            "0f18939cc28af552",
            "dfa4869f829aa22a",
            "1885ef576f819e30",
            "8d8de6d5df9618b6",
            "580975393b9d99d0",
            "9e66bdb34193b06f",
            "2e03f1e1d51af15d",
            "98df19f4a197ebdc",
            "fb5172f3d8de2409",
            "2962ad0593f9a46d",
            "a2d67a33a3f24010",
            "ad4290b679c0ab31",
            "5fde4cc2805bfbe8",
            "84aff144b0f6a8ab"
        ],
        "x": 94,
        "y": 179
    },
    {
        "id": "916a665ce9bddd15",
        "type": "group",
        "z": "a409994f70cf4cc4",
        "name": "Navegación AVAS",
        "style": {
            "fill": "#ffff00",
            "label": true
        },
        "nodes": [
            "2b68cd765f163a22",
            "771206a08176d42f",
            "0f8d32d5bb39ae6e",
            "84edc52e87b4b522",
            "cfd84f9227a1866b",
            "49ebb1a96b8ab07b",
            "ade7f0c695edaa88",
            "8c284c7bfec72391"
        ],
        "x": 94,
        "y": 509
    },
    {
        "id": "bc8cd5f1dc716592",
        "type": "group",
        "z": "84636ba2ba4b8fea",
        "name": "Gráfica IPR",
        "style": {
            "label": true,
            "color": "#000000",
            "label-position": "n"
        },
        "nodes": [
            "5457ed051d9a846f",
            "f101ac16fcca21d3",
            "3a773acf714bdf73",
            "49c978fd3b15ff17",
            "db40606e29e86f86",
            "0f1a0557b5704453",
            "309130387c396001",
            "bcc7308cbb92b877",
            "4587f719d8fa0196",
            "f1efe9cad63828d0",
            "13259fdaccee1dce",
            "dd59438816de153f",
            "a84433bcdd3ac9e2",
            "b59377ef1f98c031",
            "3ee0341b101fbe62",
            "04b67cfaf68ce34c"
        ],
        "x": 1294,
        "y": 359
    },
    {
        "id": "4d8509ae5df6e2f9",
        "type": "group",
        "z": "84636ba2ba4b8fea",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "26db00788655ebb6",
            "bba1a28e6a54b9e5",
            "417bcb4a195ce272",
            "0f82f9ee03c34d5d",
            "b25efd376ee5f9cb",
            "7bce9a88e042c4b7",
            "9c974ead811b93f9",
            "6f8a1025621a9bb4",
            "db5d17139cddf4fc",
            "d0c56317552dc00a",
            "5ec4105488ad7a11",
            "6a0bb1a22461681d",
            "a301903459a233a5",
            "0657321b8fb40e83",
            "132f30d3c505dc76",
            "047bb0f97064e068",
            "a92509e1c13ef3d7",
            "ad87b7f412d6d7f4",
            "be7a20fe506db703",
            "5078502f17759936",
            "922cf46afad89153",
            "1f4b9f04b88b711e",
            "34c356f5807d3361",
            "61317946b2a5311c",
            "cca6bdbd713cab15",
            "4a73d5e46b34280b",
            "bf70eba5de93bb5d",
            "2bdf8ed9c5cfc716",
            "fc8b30aa16df9d26"
        ],
        "x": 1304,
        "y": 9
    },
    {
        "id": "f98bc2e0af73e621",
        "type": "group",
        "z": "77e50510.f482bc",
        "name": "Datos de fondo SCP2",
        "style": {
            "label": true
        },
        "nodes": [
            "2195733359b0c0ff",
            "695d5c290ba4a321",
            "9c1c13f0850b6142",
            "a6b7268ff5be11dc",
            "cb712cd4a0c9a16a",
            "b87e4fc268121d93",
            "393452c83811ec62",
            "fba119f4cedc1546",
            "acbd54f5d39424b5",
            "f1bfe8f2f2eb0f62",
            "d72d7c062d4d29c7",
            "999c38a49eeae4af",
            "e4bcafa88fdee7a8",
            "aa8b969698a20004",
            "b0cefaad1317dbb0",
            "4b85a9e2790b7bae",
            "7ff2646d70c075ac"
        ],
        "x": 784,
        "y": 29,
        "w": 682,
        "h": 462
    },
    {
        "id": "0ef33a76c589a53f",
        "type": "group",
        "z": "77e50510.f482bc",
        "name": "Datos de fondo SCP3",
        "style": {
            "label": true
        },
        "nodes": [
            "25d6918b6db7b666",
            "d628812c7bd251e5",
            "17590db1c0418c14",
            "94dee28cfda89e7a",
            "7308563c128fd127",
            "cade0b57011f86d9",
            "14e5c966f0ac7a55",
            "7eeaa59705bca2d0",
            "1a320b572504fdef",
            "7bf005f81169b7f3",
            "11e471a9e2260188",
            "841b81a75dbd3795",
            "452b70b9fe791a7f",
            "299beb21057a53c6",
            "0d5320beef504f1c",
            "799f45ffce7d8ae1",
            "d1f003b03a60e19b",
            "d25de6de0c651d64",
            "6ae987f442317d17",
            "88e528e757b091ac",
            "74909346a2727647",
            "d4afa70e71dfe781"
        ],
        "x": 1494,
        "y": 29,
        "w": 672,
        "h": 532
    },
    {
        "id": "6c28199fa6fc206b",
        "type": "group",
        "z": "77e50510.f482bc",
        "name": "Datos de fondo SCP4",
        "style": {
            "label": true
        },
        "nodes": [
            "d1eef4f9ee9a3a95",
            "f1205c6a282f6189",
            "58b3f4a929359d92",
            "f1618da6aa38eca9",
            "625f070aa4d112b5",
            "3e156f1b4a291e52",
            "bffe69dd0beff361",
            "ad844df1387fbd1a",
            "0183201e685f5f8f",
            "95f83ed13bca6350",
            "be78e364b61dd1fe",
            "8e67b3b175edf584",
            "e1c466c14e5d5103",
            "a6bb77d2abf09c49",
            "e7741db0c516b97e",
            "5354fd789c946d60",
            "39a224c4dfa43d19",
            "24235145d79127f3",
            "c2142d4e72432c49",
            "0b3df8fe40d049d1",
            "a19e81c383a7e44c",
            "3de8b0576878b726"
        ],
        "x": 2194,
        "y": 29,
        "w": 702,
        "h": 532
    },
    {
        "id": "a01d98e6e8680a8e",
        "type": "group",
        "z": "a409994f70cf4cc4",
        "name": "Arranque normal RPM",
        "style": {
            "label": true,
            "color": "#000000",
            "fill": "#bfdbef"
        },
        "nodes": [
            "4641720708496aa9",
            "a5c74628a83ee68e",
            "08970c3b488db87e",
            "6f75932b752b18f2",
            "87674c535db912b2",
            "ef357e33d425edee",
            "73a102f1b67894b1",
            "f68be95574cabb90",
            "52640c3d094c8889",
            "af8d909c4fa0f30c",
            "bc13f228fa4f0134",
            "f7f620d7b77ae8ee",
            "c94c71ac1452ba53",
            "afec5585df61fd83",
            "3a341cdb16c7362e",
            "04b7d2e07e7ee6cd",
            "037a44616c11133a",
            "664ecd56b5ea6db8",
            "9f8f81b08fb20231",
            "13bcf2270b33d6fc",
            "a04a534b2cea732b",
            "7af017c6bf89dea3",
            "7dd9656b276d78c2",
            "98c58797b7e19de3",
            "f5bb60a58e8e31f4",
            "00603f7ee26f47c0",
            "6a5e97a622279002",
            "8a37dcc9e4438586",
            "d2ae96cc06b64dac",
            "828938fc392c967c",
            "464f310713eff7a8",
            "81cb7f1c79a9d974",
            "236bdf2185357ce8"
        ],
        "x": 94,
        "y": 679
    },
    {
        "id": "27d017f01b6dc239",
        "type": "group",
        "z": "c8989d0a.49ea8",
        "name": "Escritura Referencia SCP 10 al 18",
        "style": {
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "4e26bbb4682ceba1",
            "646db08f6aef9d05",
            "89f94a280c4565d8",
            "4f9754b8282a283f",
            "d3c70566c294ff1f",
            "a0ca496d8ddd7e2b",
            "fdec607ce457f3fd",
            "3eaa576b37bec2d9",
            "d719b128430d4ee0",
            "3d7ecf03c361b3bd",
            "41e6b940856df6ea",
            "e8462dbd11876545",
            "90496b9ae32c6bff",
            "8b2b3511f0a68746",
            "2646a2bfce4db9ab",
            "b279cfc55a956edd",
            "b6596892246bf7b8",
            "e324cf6f4c85ac9d",
            "b49198595a35acf8",
            "169ccd626662ee4c",
            "fb299f5201ca31fa",
            "ab5b06edf70977f5",
            "9909797e495c5780",
            "51764cd14fdcccfc",
            "c39bc057ca34ac0e",
            "0a1b0a785255b165",
            "3629c8a0eec56449",
            "f22dc9c6cc41bdf9",
            "6fb4d7510fdd7772"
        ],
        "x": 1744,
        "y": 19,
        "w": 752,
        "h": 1102
    },
    {
        "id": "1a392c2d1fb561f8",
        "type": "group",
        "z": "c8989d0a.49ea8",
        "name": "",
        "style": {
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "dbfc0363.54898",
            "dc10ae36.9891c",
            "d3328da9.e913e",
            "8849090f.4e1158",
            "46ed483b.e6d4b8",
            "a7e19ed2.e38fa",
            "3d30ddb9.3bc712",
            "4d8ad5af.6a2c6c",
            "b895bd39.5c6f9",
            "639ae60a.32c788",
            "89a2b1bf.899c3",
            "55c142b4.be600c",
            "7a2317bb.99f188",
            "4cb842c7.6747fc",
            "574c44c4.56c97c",
            "987bf307.8775e",
            "edab0245.4bf97",
            "d4eaa542.9ff2f8",
            "86e1777f.bab858",
            "96bc7a3e.788358",
            "7d30cf12da4436ae",
            "a3304fe189ac5534",
            "c8f7db8c090f487c",
            "a34fdb46713774aa",
            "b31bc1f6c1ac996b",
            "944cb70486524c6c",
            "3a1f59d6576c97d9",
            "a820e0e50879eefa",
            "e968026a22538edc",
            "975d349f2b8645a6",
            "6abc52547c500390",
            "3e7b1927799ca742",
            "a2b9177e0046d09a",
            "deab7d13a291b654",
            "2b8253bcf666b1eb",
            "e75a1ed3ba54436f",
            "90a983b6aa59a476",
            "dcb5846eac15639a",
            "d1bcaebfeab23d41"
        ],
        "x": 2504,
        "y": 19,
        "w": 752,
        "h": 1102
    },
    {
        "id": "2282018314ee7576",
        "type": "group",
        "z": "496d98c4c50cacbb",
        "name": "Reemplazar Images de Inicio del Dashboard ",
        "style": {
            "label": true
        },
        "nodes": [
            "ccb6f10d6c8566a3",
            "61931b0384cfca67",
            "a56341092d74dd48",
            "c733a1aa977c67a7",
            "cacd646bcfbdbb4d",
            "3b72bc49809933f3",
            "33025713e95850ab",
            "fde3563bd759beb6",
            "7ab9425b5516ccbe",
            "7b05a6d416986637",
            "f62465a51a146bc8",
            "800b6a8d81724146",
            "5ebc9eaa4819dff0",
            "23a64f852c94d82b",
            "e5f9ddcd6e4f11fe",
            "0832a6b33e1f520c"
        ],
        "x": 634,
        "y": 119
    },
    {
        "id": "e98dc6a9.24ece8",
        "type": "group",
        "z": "a409994f70cf4cc4",
        "name": "Eventos y Alarmas",
        "style": {
            "fill": "#7f8faf",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "890323f.ee684e",
            "3031a06c.c602b",
            "36981e1d.3c8802",
            "b3363f6b.8bce4",
            "dcd696d0.332638",
            "c98bd2dc.e9d39",
            "2f580b82.d69ec4",
            "025780450e2aef6f",
            "2e850658b0f5a639",
            "9bf920288bfd3453"
        ],
        "x": 94,
        "y": 919
    },
    {
        "id": "1f826a1bd0d089b5",
        "type": "group",
        "z": "c8989d0a.49ea8",
        "name": "Comandos Arranque Paro Reset Remoto SCP10 al 18",
        "style": {
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "bedb727ca2a00ae1",
            "d37c8999d8b00446",
            "117b2d16a22542dc",
            "88b734cb0fbff356",
            "a462c4d3cc2a50fd",
            "6cbfa5a34a8d61d0",
            "d676f49d0a30741b",
            "1a429df1f63a07e2",
            "6d3c0574bfbf1cde",
            "da6db9c966711ee2",
            "38e5656bae83accb",
            "9b1577395789147b",
            "64423d49df658e62",
            "a72c5b72790fbb58",
            "b611829c3bad191b",
            "d8e3e070354c7b4b",
            "a06b2881689cc149",
            "4d2f3d5046f3626a",
            "61c2774ee6d1439c",
            "81f316e8b3fa5eb4",
            "85dbe3d0ad9248a9",
            "6b14186e8981e3d4",
            "b51d033889299e0d",
            "6a21b4294dd246d8",
            "c8dc3593783f3e72",
            "8476a517c62c3d6b",
            "a962f52b93954b8d",
            "66e21be155c91fee",
            "dc662dbf83f0e930"
        ],
        "x": 474,
        "y": 1429,
        "w": 492,
        "h": 1642
    },
    {
        "id": "d516d3f7ea6bbe72",
        "type": "group",
        "z": "e997ba3b.48cc18",
        "name": "Variables de lectura por pozo",
        "style": {
            "label": true
        },
        "nodes": [
            "1ee8792a8ad49dce",
            "45c48590d88443c0",
            "7231aaa203bbccc4",
            "73e282a538116778",
            "6c5e62d7bc0ac203",
            "64855de1103423e9",
            "3ce4bf81cd27db77",
            "2bc659acfb95281c",
            "d8a985a0d6b5b523",
            "44b57d4de10c36e9",
            "16f17bf1cfad084a",
            "9d7f859a97e62a5e",
            "41f1cfc8b28a9379",
            "bb3a1503056c9d7b",
            "d0d07b3b44df6fbe",
            "c4b00d9d.c758e",
            "5f369438a30f131e",
            "53147a8c96b2f39c",
            "933dd1c21cde4459"
        ],
        "x": 74,
        "y": 1019,
        "w": 872,
        "h": 402
    },
    {
        "id": "2fc820d53f174088",
        "type": "group",
        "z": "c8989d0a.49ea8",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "4f1eb978.d72c38",
            "9719911b.6db09",
            "4174382c.717b18",
            "9b6b8f5a.816b1",
            "e4076c43.555c2",
            "4dc72525.256e3c",
            "34ccd504.f1f4fa",
            "ccec833d56700325",
            "1b6860221d0e8472",
            "d0b26cc2905c02ad",
            "0c2335585731858a",
            "8a42d6f60daba191",
            "186f2a0e0cf031bd",
            "0bea077dd52f0325",
            "504e4ed2c3e0f61e",
            "bc99cf40ab6d6e51",
            "0af77ddbb1ce4317"
        ],
        "x": 2714,
        "y": 2069,
        "w": 482,
        "h": 622
    },
    {
        "id": "bf3daf7cc69dc1e0",
        "type": "group",
        "z": "e997ba3b.48cc18",
        "name": "Datos electricos por pozo",
        "style": {
            "label": true
        },
        "nodes": [
            "c34783412377811f",
            "cb7f821f59453b77",
            "b589e64f56e21ac7",
            "62efcf2f2e6fc20d",
            "27fbe89162252d87",
            "26f7633454cb7b7b",
            "fef1de918a0383c5",
            "696da4552d0aa3f3",
            "33a2a97f98148ea9",
            "622bf3d96f99a836",
            "c4a98d774ec39f19",
            "27bd0126aacfcdf9",
            "66a2dcde565e0f7b",
            "b70c9c5996e62a1b",
            "b106c2418d7dcedc",
            "f30aafc49351a97d",
            "51a95fddfc307309"
        ],
        "x": 974,
        "y": 979,
        "w": 1132,
        "h": 282
    },
    {
        "id": "7d0f955071a4055a",
        "type": "group",
        "z": "c8989d0a.49ea8",
        "name": "Confirmación Escritura de referencia",
        "style": {
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "a8c3e91727052407",
            "ec404e5efb3b7976",
            "d06936f1429bc8b0",
            "95cc5c3331f17c1e",
            "326666b2535769c5",
            "64ab56dee92d0c71",
            "991feede4d37d07c",
            "a754e32d257261b2",
            "a3d00ff25f9f6097",
            "56f7f39a6e609305",
            "5e6577b46be39f1a",
            "61e1182e7379ccd6",
            "08c39f4da8904fa8",
            "421d5502a1e46122",
            "0d3d5d1379399657",
            "c3c891d37ebb8b90",
            "bd0559265dc9da95",
            "7ee3f52a899f17bb",
            "a031eb47b70f5b16",
            "571503a1551ddd48"
        ],
        "x": 1234,
        "y": 1149,
        "w": 832,
        "h": 562
    },
    {
        "id": "cff3928797d25d39",
        "type": "group",
        "z": "c8989d0a.49ea8",
        "name": "Habilitar disparo de pozos",
        "style": {
            "fill": "#ffbfbf",
            "label": true
        },
        "nodes": [
            "26acffc61224be5e",
            "53af2f4329cd7e74",
            "a412ecedd9fde959",
            "366a984ba5d5668d",
            "7e48cb39fb231efd",
            "ceaa3df6f90e7f39",
            "02c00989d29b68b9",
            "25168f9e0d704448",
            "eca4f2afe08318d1",
            "d633a123f2d5b992",
            "12152ca18f22b934",
            "6b40cda1ce4a407f",
            "98e2da6305063e1f",
            "96406948bd2fb030",
            "8cf5b649e331ce15",
            "136f03e2229f030a",
            "75b2e87e6760a38b"
        ],
        "x": 3264,
        "y": 19,
        "w": 632,
        "h": 922
    },
    {
        "id": "b06bbdd518536a01",
        "type": "group",
        "z": "a70735f4.fb54d8",
        "name": "Tiempos para lógica de shutdown configurables",
        "style": {
            "label": true
        },
        "nodes": [
            "91653a058df27012",
            "697d48af184dd5a3",
            "7c62d4bf6cec9b0c",
            "e159b3a7f456d64f",
            "11c677718561cad0",
            "7a836e8c1d7959ac",
            "ed6697f8d8ed5fb2",
            "504b7f70b919a050",
            "7968d778e91e162e",
            "383a5a17c45b733d",
            "5081568a090a2ddd",
            "a1d43b891c79081b",
            "44c1b3682fbfd0fa",
            "1537d2b28d115d3e",
            "3ab2a67ab6d5d1b6",
            "01d3ec8eebc233f0",
            "724941ca68a4438d",
            "f9ca00220700b726",
            "bb62d5cddc382647",
            "4f8dfc6ffb03860e",
            "b06a9c2fd40e2160",
            "9387d42b81a56fbd",
            "c3ba83a27feb12cb",
            "e35fff6de80cfbfc",
            "70f8eebd2a442aeb",
            "265f30bbe9814685",
            "8a7f2982843784cd",
            "5097e77127557559",
            "6cca05203a26a55a",
            "a2cb3710e30beb80",
            "3b5dc031fdbe978b",
            "1198769cc60c5b27",
            "31158286d5c2ff36",
            "5207c63538353eb2",
            "9a4ede3716f06915",
            "bd0ec4baf7eb8815",
            "29774f3181a12d95",
            "9ea15e95bd5f4957",
            "8a91df4d2bde4359",
            "63507111515e94ef",
            "793d1bb05b8d4b11",
            "8487caef487fba55",
            "279ee1694dac8740",
            "eef1cdc50dc3b966",
            "464ffead7c323d25",
            "3afb8a957aa67a1c",
            "7ab7dc110e3f6c14",
            "ee5f740a9ca9c51c",
            "4b3c3bdb98c7abbb",
            "bd69a1d2a9aacce2",
            "4dbc5ae4904e149e"
        ],
        "x": 1024,
        "y": 1329,
        "w": 862,
        "h": 982
    },
    {
        "id": "bc275a3cd7d476c7",
        "type": "group",
        "z": "a70735f4.fb54d8",
        "name": "Pilotos de estado de lógica de shutdown",
        "style": {
            "label": true
        },
        "nodes": [
            "7d44207f069c346e",
            "c437ef1085f2fe23",
            "09d955ed4ea7f5d6",
            "d279d710e6a93bf2",
            "18073bcdc1cd89a1",
            "78614746ee98ea10",
            "8048575fdf075eeb",
            "1b99925f7b3656a6",
            "4b2533ec2a7805fd",
            "a302041e2b10c209",
            "3e6b7b9cdd3eeaac",
            "be16c486fa3219ab",
            "d06c1749b53ec2ce",
            "7120175d95ea4497",
            "ab701d55f9d71291",
            "506562ef40deaf6c",
            "24392d4b372f640e",
            "a382e97b67995892",
            "0c5d99103c6ddc57",
            "34755ff7143dca8a",
            "a46e4cae2208b7fd",
            "61a854cd30eb946c",
            "710175bff5ca19f9",
            "23bdf7d9e5f1808b",
            "751a55696f673ab9",
            "c039d0a6c34d0aef",
            "21f3f9db7a8f3ae0",
            "6046b92dc6b28de5",
            "e3ba296a8df6d553",
            "1802b7d423c0faa4",
            "8839df8f695615a8",
            "28bcad571c1e238b",
            "62979ce016bc2301",
            "e99315a4faf95dc3",
            "0cf831d2bd5b087d",
            "71f4b56e55aa1086",
            "bf67a0be631c553b",
            "967a7138b014c9a3",
            "4915e8965987f3d3",
            "0236ec64157e550a",
            "cd924282eae38d95",
            "5f1933d64e536f9a",
            "bc98b9781770f02b",
            "b40ae16852e864fc",
            "752e5b0a0ea98446",
            "4547f36d1b88478d",
            "91e916a1a9e90896",
            "2a562cb01f0f89bb",
            "5dd6cec381ec5f58",
            "be9ebd9679c36a52",
            "7768165e09c2a68a",
            "530a4740ba755740",
            "cd07a7b8b60f9dc8",
            "5d5767109263df02",
            "97f05e57388d9d26",
            "18e1cc57a90b61b2",
            "0b0c89d060b75469",
            "be3bc6513d1cb079",
            "d6c636bf5abdeb80",
            "a009825b9c3ac27e"
        ],
        "x": 1024,
        "y": 59,
        "w": 1472,
        "h": 872
    },
    {
        "id": "1b162d57908931b5",
        "type": "group",
        "z": "f10e7ce.d57828",
        "name": "Estado de Leds por alarmas de presion en Manifold",
        "style": {
            "label": true
        },
        "nodes": [
            "556acbac0f5c323f",
            "35272683fcac056a",
            "8d4f6a690f61b1e3",
            "8a207cd355e76c5b",
            "82573011c3d3e5de",
            "33ae545866baf33d",
            "75ce3814dab18217",
            "a01dadefb933ed94",
            "6c9128a9d6fb6b57",
            "5c9bc43b0909a1af",
            "ca9c4c69846fc73a",
            "00d891ce9452fb0a",
            "4e43e015f9dbf9e5",
            "b13f7069320f03ce",
            "e569be207bb4dee7",
            "ef551a8f254d4066",
            "983c60ca964401a6",
            "544eae19e71ad351",
            "3bbebffd836baac9",
            "4b7a3b4c589049e9",
            "0afccc90735f2ad9",
            "d27d1f89019d8a16",
            "218b6e39d134b2f9",
            "de4f2677bfa1f22c",
            "5759bf64452ea739",
            "05b39eeb2ddd4e7c",
            "2e04301f0ad2bc1c",
            "91daa3447803a463",
            "adf7324d85f33536",
            "6084c8e393eeb2aa",
            "07704cb1b87a2267",
            "34e61f0acdfbe811",
            "ae3e996599f98f19",
            "1c9bf6e628cd597a",
            "eb2f3582baede96f",
            "82d6dd4a3b819180",
            "b1b9e0dbdb6ac8a1",
            "d9fcfbb024051d73",
            "0fafeff37cb7fc21",
            "993944f17e91f3a5",
            "8c4ae2530865a4bc",
            "1b65db34f94c180e",
            "1a12ecb2c3e94be0",
            "37c70e1233f54c9b",
            "f92397db74c2d99a",
            "91fd618d59b7b4d6",
            "3fefc6b64d914ae0",
            "e636306ddfbe4e0f",
            "7ebc8075c0935d45",
            "9d12763de310f322",
            "f8da67ec1bf38fd6",
            "2859875b0ca465e8",
            "8ad21047cdde05c5",
            "c98c6a0b37ce9501",
            "35cde5193b778c94",
            "8cf04e500b246f90",
            "418048d5263b818a",
            "0894ca020d122006",
            "177fc935df87860c",
            "6d48f78997dd77d4",
            "b5db7320049014d8",
            "dbf6467b9adaacf4",
            "03548fbdda10483c",
            "991eb055c9a9be2b",
            "34b1e89fd40139d2",
            "a56d3ba5862abf40",
            "4e9d9a11bbb1cce7",
            "113428dcf1574e20",
            "dd0bfe62af67d677",
            "0946dbe8ddfa9a27",
            "83379dbdd4d088a8",
            "52d8b9ea7a07aef6",
            "a1cabd508d95e630",
            "55d2b659bde5f7de",
            "907a88fdf15fe2da",
            "2ee2eed6916c1319",
            "0aa6e8436bf0079a",
            "de419ae28bbac831",
            "a230ddb8aeaa2e12",
            "ba65515a107156dd",
            "566433ef16813084",
            "78fe5a7d768cd80c",
            "92d91b2b89ea133a",
            "7414bc966287131d",
            "31be1c34ecab20b8",
            "e123891250972186",
            "d5b941e2a96bbfa3"
        ],
        "x": 1554,
        "y": 19,
        "w": 1722,
        "h": 832
    },
    {
        "id": "26fe5463b2ea6acd",
        "type": "group",
        "z": "f10e7ce.d57828",
        "name": "Tendencias de manifold",
        "style": {
            "label": true
        },
        "nodes": [
            "22cd2fada9680a04",
            "b62a060ca27cb69f",
            "f42b56eb37f8265c",
            "7f183be2589f9e2a",
            "33646855a267b1b4",
            "f58329a789069561",
            "d3e0d81a17262194",
            "02cce9b2e05aa937",
            "bb9d57fad1dcf950",
            "fc8160ea1a425625",
            "cb4a6286aca4bd43",
            "3e1f18e73ad342b7"
        ],
        "x": 94,
        "y": 779,
        "w": 1202,
        "h": 152
    },
    {
        "id": "1d0c3cb2.7129f3",
        "type": "group",
        "z": "496d98c4c50cacbb",
        "name": "Start system",
        "style": {
            "label": true
        },
        "nodes": [
            "77d67b76.8c8804",
            "26428723.4b3e38",
            "bfa48676.a364f8"
        ],
        "x": 114,
        "y": 439
    },
    {
        "id": "0439b4a0bf2b8cc0",
        "type": "group",
        "z": "a409994f70cf4cc4",
        "name": "Navegación Configuración Cluster",
        "style": {
            "fill": "#ffff00",
            "label": true
        },
        "nodes": [
            "8690aa402dcf2f44",
            "795829f35bfa2a77",
            "0fb23fe07e982c62",
            "66f51e8cdf3572d1",
            "be1489e57b9c2385",
            "24bea420055f801b",
            "2b6a469ea59143dc"
        ],
        "x": 94,
        "y": 1109
    },
    {
        "id": "5b44b24d93b88118",
        "type": "group",
        "z": "a70735f4.fb54d8",
        "name": "RESET (HABILITAR Y DESHABILITAR) LOGICA DE SHUTDOWN",
        "style": {
            "label": true
        },
        "nodes": [
            "c493f6297cabf4bf",
            "0c5a418898f63516",
            "e59133e07a54054e",
            "e54602648111948c",
            "aebe67545135d8e1",
            "c18d47c50a3f46cf",
            "682e787b06d3aaa7",
            "e399668f23dd11ac",
            "d502aaa8c3de9297",
            "ada745a8b159b348",
            "b75a21ec8088ac93",
            "4de1359539a41ebc",
            "55320ba00209c396",
            "69591c2347f38b1e",
            "73210af5f256011a",
            "c97826ab146fbc15",
            "205d43a37d57d526",
            "74b97cf9360de41e",
            "4cdd038148a62cfd",
            "6d53d119943aea85",
            "9c8c8ad0534a95bc",
            "694b9eb48edc1905",
            "56bae0fb22d96fb4",
            "a3d11fadb3acbe9a",
            "eb3e48265cb3c627"
        ],
        "x": 1024,
        "y": 949,
        "w": 1742,
        "h": 362
    },
    {
        "id": "8cbf8180d2c70f1a",
        "type": "group",
        "z": "f10e7ce.d57828",
        "name": "Ruteo de alarmas presión manifold PIT",
        "style": {
            "label": true
        },
        "nodes": [
            "375f9fac.9004f",
            "af917ed23cdcfc3e",
            "23ffb5eda298bcff",
            "5191c9f8b0883c24",
            "52cb60edec8c3b2b",
            "b7635da86a4660b3",
            "a16a48384e3f38dd",
            "44e6ef93f1a27458",
            "79d7a71622c61ad5",
            "db8a2cdc8a7c8fb0"
        ],
        "x": 804,
        "y": 19,
        "w": 712,
        "h": 502
    },
    {
        "id": "9d8df5b4f6b8aaf2",
        "type": "group",
        "z": "f10e7ce.d57828",
        "name": "Configuración de alarmas presión manifold PIT",
        "style": {
            "label": true
        },
        "nodes": [
            "25c5df2a.68262",
            "df7e51cb.20a61",
            "78ddc0d7.477c7",
            "a5be34b4.80c1d8",
            "289c0fec.d68e1",
            "5893c294.3213dc",
            "468ce789.d74268",
            "8b190b36.c8b5b8",
            "3361a564.d48dfa",
            "2d9998c0f577bc0c",
            "1388e106.75d21f",
            "dc26c04555c849e9",
            "ec32e13194609ef9",
            "41deb6b1c279c3b9",
            "24d9e3e264824528",
            "2e4ab688aee27693",
            "63eec3feebb8bcb6",
            "d290c31a9897c8de",
            "af7b84cbace278b1",
            "3e7176c02d57fe4b",
            "96ada6f2934db373",
            "698edc58289bb46b",
            "ff105a49c624aed7",
            "1b0193143db63bd0",
            "4fffcddd14dcf8ba",
            "69711da5e2395d69",
            "06263b94b182144c",
            "cc874412dbfe50f6",
            "5ac373589c1d1849",
            "7026ba7070318c79",
            "1acd74b8f94c62c5",
            "6d4ca22faacfb6a7",
            "d6e9e6cb27b824f9",
            "df95654a91fb1023",
            "9a0b9216db14530e",
            "e37221e3efababac",
            "a13647535e0c20a6",
            "c18438482aa78cfc",
            "8b4d36053dc5b2b5"
        ],
        "x": 34,
        "y": 19,
        "w": 742,
        "h": 732
    },
    {
        "id": "4e67a9385d518b82",
        "type": "group",
        "z": "dcee4298f5de57d2",
        "name": "Datos de Pozo Posición 4",
        "style": {
            "label": true
        },
        "nodes": [
            "0707e99d923f37a2",
            "3b62e6fd6ccbfa18",
            "be09dae2fbef4e6e",
            "bed2e7e74ac3b1ef",
            "bf98e1b239b6dcc2",
            "0a37be73420b7fe8",
            "4c8093fea15c33ac",
            "ba157db276676859",
            "eb3da2225a3bbe02",
            "81ed717ceb1aadc5",
            "b28bc401f803d685",
            "24297af76f43fd83",
            "98a97a63a6bb5b41",
            "d7440f14ce40e795",
            "527c06e4d41d2bdb",
            "17dc55ccb105a5b8",
            "1f1b46b7ce05919d",
            "b309a6a5ad58635e",
            "da9338d430e54c73",
            "91212a984e2beb5f",
            "f528f7baa7fa8d7f",
            "93eb60ea83212d45",
            "37460a34c2618776",
            "dd5b88beb35b395f",
            "abc219f2ed8515d1",
            "38705d0965924c63"
        ],
        "x": 2314,
        "y": 19,
        "w": 772,
        "h": 602
    },
    {
        "id": "80e529568099f818",
        "type": "group",
        "z": "e521d174e7104ca1",
        "name": "Refrescar datos",
        "style": {
            "label": true
        },
        "nodes": [
            "6bb460a886cbe9a0",
            "87857b683465f57d"
        ],
        "x": 34,
        "y": 319
    },
    {
        "id": "b8537f731ac9a09a",
        "type": "group",
        "z": "dcee4298f5de57d2",
        "name": "Navegación Pantalla General",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "b22ff88f14cdc2c9",
            "b0f0100dece46923",
            "60699e0b54e92ff4",
            "cc344bb71296453d",
            "740f53e30c4f0078"
        ],
        "x": 84,
        "y": 709,
        "w": 772,
        "h": 82
    },
    {
        "id": "47c7e078aa019952",
        "type": "group",
        "z": "77e50510.f482bc",
        "name": "Navegación Pantalla datos de fondo",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "5922dbb308812a60",
            "b08573f5fa1c7169",
            "9bf20bca3a15225d",
            "89ff4bb15f48dd5b",
            "9fd4a9ed252b6a9d"
        ],
        "x": 104,
        "y": 519,
        "w": 812,
        "h": 82
    },
    {
        "id": "e00b7d1188a4ce2f",
        "type": "group",
        "z": "c8989d0a.49ea8",
        "name": "Simular datos PLC",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "c29d3b17f539b594",
            "6fa437dfceb3a929"
        ],
        "x": 74,
        "y": 999,
        "w": 342,
        "h": 82
    },
    {
        "id": "0fa5f2a3ef50ac33",
        "type": "group",
        "z": "85d78935bd11be27",
        "name": "Descarga a USB",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ee89b458b55779ef",
            "4ae0bb1a2ebb141b",
            "dc4ad158d3f126f6",
            "15a406755ff02a39",
            "6e8a9338e6f7d004",
            "88dcdbf8.24dc88",
            "8102dc0f.63d08",
            "febace6d.62f9c",
            "8f26d964.56a778",
            "37820ee5.859272",
            "c33aa73684305b69",
            "13da0a72fbeff069",
            "45ba8097.f74b1",
            "8db0f092.83eb9",
            "bd43bd09.9aab9",
            "f8f6d7e7.a66d88",
            "b67add6d.8a94a",
            "57b7954081dfb327",
            "988525db947e5320",
            "cf314147286d26d5"
        ],
        "x": 64,
        "y": 541.5,
        "w": 1002,
        "h": 299.5
    },
    {
        "id": "13d2193b2dc0f18d",
        "type": "group",
        "z": "85d78935bd11be27",
        "name": "Tendencia",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "d8cded3afb375cb9",
            "a8226b9089842764",
            "a39226787f356942",
            "5bdfce06d4bc789a",
            "f55bcf1b9afa8eaa",
            "8ff39960ea177e6a",
            "34049ab78b4edb4c",
            "249a7d5f76316134",
            "11e3cb104578d0fe"
        ],
        "x": 64,
        "y": 409,
        "w": 1192,
        "h": 122
    },
    {
        "id": "498c1a6f5f418d4d",
        "type": "group",
        "z": "85d78935bd11be27",
        "name": "Consuta a la BD",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "21a6467e90925aea",
            "55f9d490edafdf8d",
            "b7c05d70d357942d",
            "732c8863fb2cd243",
            "572e9151a926352a",
            "817fe254ae9c2d33",
            "2aa8e2b1173191ba",
            "b99c5537e976fb29",
            "e48317a5283cbf0a",
            "5c7d1480dca17bf8",
            "4f0bd0996f398205",
            "e1970a3b161a5236",
            "5f27cd3f11034d13",
            "17e423b079c3e727",
            "82303bb7181527b9",
            "48d40319351790b8",
            "1c19879f42efe603",
            "62985078035f5152",
            "de9967dd57c46201",
            "963664e4a877a2af",
            "45169aed9610f89b",
            "57c98bdbe3e5e015",
            "37fec61d8cb2f783",
            "c0145af1fa708bde",
            "0858807b8a145e7e"
        ],
        "x": 64,
        "y": 159,
        "w": 2242,
        "h": 242
    },
    {
        "id": "4c83aa9822cc63bb",
        "type": "group",
        "z": "85d78935bd11be27",
        "name": "Escritura a la BD",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "560676cd859a1422",
            "ca49cfa7aeb877c0",
            "61ed79f83de77405"
        ],
        "x": 64,
        "y": 69,
        "w": 662,
        "h": 82
    },
    {
        "id": "b75b4b5233e4eb65",
        "type": "group",
        "z": "a409994f70cf4cc4",
        "name": "Navegación Datos Eléctricos Cluster",
        "style": {
            "fill": "#7f8faf",
            "label": true,
            "color": "#ffffff"
        },
        "nodes": [
            "27d20979e826e75b",
            "41187449c97f31d7",
            "2b555d81f96082f5",
            "abc9b8b81ab87e58",
            "053623fb4ec2e26f",
            "80c3d5cca8f0000d",
            "db4708faaa5ac7b5"
        ],
        "x": 94,
        "y": 1279
    },
    {
        "id": "fd043472d98f9c2f",
        "type": "group",
        "z": "e521d174e7104ca1",
        "name": "Estado de comunicación HMI - PLC",
        "style": {
            "label": true
        },
        "nodes": [
            "9d98a2129132376e",
            "197d21ec14a2be14",
            "c51623889408d427",
            "53d8091c95b2bb91",
            "1f632255cb1722ff",
            "1756efa5047ff391",
            "23cd048150c665a3",
            "4e7a6d85a6662864",
            "05aa201180649b16"
        ],
        "x": 34,
        "y": 409
    },
    {
        "id": "64cc751322ef5934",
        "type": "group",
        "z": "0dd66b875552d6bc",
        "name": "Instrumentación SCP 1",
        "style": {
            "label": true
        },
        "nodes": [
            "bbae5a0fbe59bcce",
            "33ac7a0e3663121c",
            "b25f21c072a89d76",
            "0b8b05a7b4d325e9",
            "39e883bf7ad9c69c",
            "4793bc4fc745636c",
            "4d3ee88d550db7e3",
            "9a6313d8c0495a06",
            "38b713544719c774",
            "1f0709f959c285f0",
            "a268c6438f8a7858"
        ],
        "x": 154,
        "y": 39,
        "w": 552,
        "h": 242
    },
    {
        "id": "38e22d287129a8ea",
        "type": "group",
        "z": "0dd66b875552d6bc",
        "name": "Instrumentación SCP 2",
        "style": {
            "label": true
        },
        "nodes": [
            "f9e738f8a1629bbc",
            "787fd68ca75216ab",
            "9c6ff010dc9d4920",
            "8e54d373d18f63d7",
            "fcce4ee41deefce0",
            "0ceca3af17b4f17a",
            "99acea264230fa12",
            "951d6df4b4cbc7c9",
            "80d214b62db56bc9",
            "97b6e1dcfa2ab810",
            "8e8519153dd1d5b1"
        ],
        "x": 154,
        "y": 289,
        "w": 552,
        "h": 242
    },
    {
        "id": "750dd829ec7858d9",
        "type": "group",
        "z": "0dd66b875552d6bc",
        "name": "Instrumentación SCP 3",
        "style": {
            "label": true
        },
        "nodes": [
            "0ae00dda62a8086b",
            "79fb845d5e01a13b",
            "b7ee3e791f2f5bd5",
            "2b0b3db582739a3f",
            "d8a8ed3038ebcf62",
            "4c39ad9710b549bc",
            "eeb631996f5a5ac1",
            "d03e529c3124753f",
            "46298b9bf300450b",
            "566a0fce5217ea06",
            "8704fb9191b3c44d"
        ],
        "x": 154,
        "y": 539,
        "w": 552,
        "h": 242
    },
    {
        "id": "ea89d8ce08984fd2",
        "type": "group",
        "z": "0dd66b875552d6bc",
        "name": "Instrumentación SCP 4",
        "style": {
            "label": true
        },
        "nodes": [
            "7d8a9efd01a681e4",
            "8d32439056797752",
            "ce0007ba9a293d80",
            "ee41171b6b15eb17",
            "bea26cdcb475708b",
            "a4b198269b7aabe7",
            "69d637f38fcd9ee8",
            "b8ab71a82b3187f8",
            "4b662789f5c979a5",
            "c508ef59a28bfbec",
            "0037d0d2bc04a4e0"
        ],
        "x": 154,
        "y": 789,
        "w": 552,
        "h": 242
    },
    {
        "id": "4bd44e626bbf406c",
        "type": "group",
        "z": "0dd66b875552d6bc",
        "name": "Instrumentación SCP 5",
        "style": {
            "label": true
        },
        "nodes": [
            "5f01be5b0e092fc6",
            "3640b09426630830",
            "87428f9aeff14226",
            "0717b76e7038d01c",
            "7e8f5389d2a93bd6",
            "d8e8cabcbd54bfc9",
            "d56907c54e8e1596",
            "8ce5fe500c5b1513",
            "ee847912f9e40353",
            "d081d71ef70e45f4",
            "4d57b96fde22f032"
        ],
        "x": 154,
        "y": 1039,
        "w": 552,
        "h": 242
    },
    {
        "id": "a7308af0919f6403",
        "type": "group",
        "z": "0dd66b875552d6bc",
        "name": "Instrumentación SCP 6",
        "style": {
            "label": true
        },
        "nodes": [
            "677cd1ee31d78d8d",
            "a998910bbff4676e",
            "72f8401580fcc052",
            "18ad6cc163845bd6",
            "8a9f952f13531107",
            "9fc84a9fe53244bc",
            "ebccaaefe8e75b09",
            "d9f8b649767637fb",
            "6cd2728790313f7e",
            "c1ab4100666af48a",
            "b3664ef992bce9bb"
        ],
        "x": 154,
        "y": 1299,
        "w": 552,
        "h": 242
    },
    {
        "id": "a1277f9ddcd91b3f",
        "type": "group",
        "z": "0dd66b875552d6bc",
        "name": "Instrumentación SCP 7",
        "style": {
            "label": true
        },
        "nodes": [
            "53a1a34c6cc2f81e",
            "63439e39cc0fdc8c",
            "d4274be31fc446ca",
            "20d689eb4b2e46bb",
            "269b86d499d87a36",
            "4859dc6a5f988b62",
            "28dd29257d223ba1",
            "bf6ba4f89903c541",
            "492f8b6865dad046"
        ],
        "x": 154,
        "y": 1559,
        "w": 552,
        "h": 242
    },
    {
        "id": "67a470604f7a755b",
        "type": "group",
        "z": "0dd66b875552d6bc",
        "name": "Instrumentación SCP 8",
        "style": {
            "label": true
        },
        "nodes": [
            "91e016e3f820ccbf",
            "2a661f24233a555f",
            "3843b7e2b67ddea2",
            "96dd2670c2d473f9",
            "696537aa1984b7bc",
            "84a81178ab8c3f16",
            "f8bad344f0b0ea9a",
            "02fc596005c4eedc",
            "d6c13c7a5de39416"
        ],
        "x": 154,
        "y": 1819,
        "w": 552,
        "h": 242
    },
    {
        "id": "a23f5a3789f2ca13",
        "type": "group",
        "z": "0dd66b875552d6bc",
        "name": "Instrumentación SCP 9",
        "style": {
            "label": true
        },
        "nodes": [
            "d90da710e1c1ab7a",
            "8f5a32b3ebe6f9a8",
            "4a62953eaf5312c2",
            "b7a3f487dd689d68",
            "93a3876e9457a1ab",
            "1bd3155d0ebfa8cd",
            "1a90063a43a8ea2d",
            "b88d086ec8d77868",
            "140bcd1b6259e44e"
        ],
        "x": 154,
        "y": 2079,
        "w": 552,
        "h": 242
    },
    {
        "id": "657e2074.735a3",
        "type": "group",
        "z": "c8989d0a.49ea8",
        "name": "Comandos Arranque Paro Reset Remoto SCP1 al 9",
        "style": {
            "label": true,
            "fill": "#ffbfbf"
        },
        "nodes": [
            "d2f4febb.5191d",
            "d938c95c.283108",
            "47d1f5ad.53fdfc",
            "e73deb28.ab7c58",
            "308496cc.1a08fa",
            "38d893df.8a333c",
            "8ba61d08.68924",
            "b804dc17.3c11c",
            "f853ef97.ea1b",
            "f7e2b76f.736738",
            "8d5fdd06.4fa45",
            "b9f20f86.e4bf1",
            "8eab2d74.7f1fe",
            "656bbea4.ffa3f",
            "160ab9fc.7eb4e6",
            "e444da6e.5f8128",
            "25eeaa97.48ca86",
            "932b0db5.b3daa",
            "de245ad1.e52908",
            "a86fabcb.194488",
            "a4fc6f8.fdca09",
            "ac4b1a1d.2a0158",
            "3851f53d.72a3ea",
            "57de4f88.31f6f",
            "2bf7ce89.c48ff2",
            "95c6abd4.4862d8",
            "7998e18f.da1ef",
            "ca6808c4.0ce2b8",
            "c5614143.9411"
        ],
        "x": 474,
        "y": 19,
        "w": 522,
        "h": 1402
    },
    {
        "id": "eb91dac5.690838",
        "type": "group",
        "z": "827787d0.ede678",
        "g": "f7ed166d.1aa528",
        "name": "Acceso a usuarios",
        "style": {
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "df6fb5ca.5f8af8",
            "28cd79fb.3dcae6",
            "2066be8e.5c6832",
            "e04fbd1c.98ffe",
            "2ffa7be0.763644",
            "be50258c.07bb98",
            "6e26c35e.a97f8c",
            "1595def7.d11251",
            "affdacff.6646c",
            "51d66341.8ee0fc",
            "3a348318.fe982c",
            "cf6714f4.9f00d8",
            "fe313f3f60b02976",
            "9226d68a.21c148",
            "ea3b2578.9471a8",
            "d13ee029.db027",
            "ea307c20.921bb",
            "1aeb057.5ff60fb",
            "9ec2fc99.b8d92",
            "93b28ffa.83d6a",
            "c42260f.7383fa",
            "7b0bc601.5d8048",
            "423ba16e.29911",
            "6ddd2f34.2b638",
            "901c6735c8cd4585",
            "1abe9aa78aaec393",
            "d84c6818bdd3b4c9",
            "22b30717ba45ab3c",
            "ee0ae928d7535b2a",
            "e0246175d5eaa3d1",
            "354d51fb8e5d63b7",
            "0ecd6b8cb5e996f3",
            "4fc0a59f776062eb",
            "30a12ffe865f6085",
            "165652a19afcc091",
            "e1b7d609d7454478",
            "befd7b0d594b7754",
            "e7122851149fed97",
            "0cd1b5329a82816d",
            "e18db47d963ed714",
            "1249cb6a5060fda8",
            "ad1cd38b848d5ff7",
            "23b5193babb35890"
        ],
        "x": 174,
        "y": 39
    },
    {
        "id": "11f55817.139c18",
        "type": "group",
        "z": "242bc9a6.f9b016",
        "g": "7b6f4b41.106164",
        "name": "",
        "style": {
            "fill": "#b797cf",
            "label": true
        },
        "nodes": [
            "d382db6f.29f0a8",
            "972e1f74.3dd4c",
            "59e817c2.295b38",
            "d50d9b6b.bbc7f8",
            "c02fb05c.baccf",
            "75851744.fc50c8",
            "ad47f0cc.93af5",
            "7b4bd7a0.fd9398",
            "cad3d4cb.b5bc98",
            "1660e38d.24cefc",
            "e04b904dc4a17411",
            "07fdea154e1be602"
        ],
        "x": 24,
        "y": 39
    },
    {
        "id": "cf57802e.7d258",
        "type": "group",
        "z": "242bc9a6.f9b016",
        "g": "7b6f4b41.106164",
        "name": "",
        "style": {
            "fill": "#b797cf",
            "label": true
        },
        "nodes": [
            "bd165d4f.e3f48",
            "c95dde3d.c676e",
            "191d34db.93fe3b",
            "35f773cc.39ea9c",
            "ccc4d9c0.904c78",
            "d9101c40.6e85a",
            "dcdb5992.425238",
            "12f5302f.69f92",
            "33f2aa3c.6c08f6",
            "9055a2bd.67028",
            "938193ac.02d98",
            "f4dc844c.b0f888",
            "44e0e07ede65597e"
        ],
        "x": 934,
        "y": 39
    },
    {
        "id": "dbdbcfdd.62eb8",
        "type": "group",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "64748d27.b27004",
            "26c5e6f4.5cc1fa",
            "2526682.c405998",
            "dba80e92.0a13d",
            "76ade389.49748c",
            "267fdbe0.520b94",
            "ede56ecd.3a66e",
            "35e356e7.8ebc5a",
            "90ac36c9c645d371",
            "7f4725cd539a6195",
            "b9ce5171b5be1d5c",
            "8f37636c700844c8",
            "96d979476eb1b054",
            "b1f01e0593bbc7e2",
            "9f111f5f0cdb7b23",
            "e9a83abb606dc1a9",
            "e83ec346916a6a44",
            "75cd742c0d026972",
            "5c6c269da4720bd1"
        ],
        "x": 104,
        "y": 589,
        "w": 1182,
        "h": 202
    },
    {
        "id": "ba9b3d7a41b195a8",
        "type": "group",
        "z": "827787d0.ede678",
        "g": "a0f89b10a58f3dbb",
        "name": "Eventos Usuario",
        "style": {
            "fill": "#ff7f7f",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "cacc926a9dec9c16",
            "33c74e4bb2fdac2e",
            "fc19b94b0e22c56a",
            "79a2e777f2c2f926",
            "2672c65f65d99463"
        ],
        "x": 614,
        "y": 979
    },
    {
        "id": "8217afa77c53c8c4",
        "type": "group",
        "z": "827787d0.ede678",
        "g": "a0f89b10a58f3dbb",
        "name": "Acciones externas usuario",
        "style": {
            "label": true,
            "fill": "#ff7f7f",
            "color": "#000000"
        },
        "nodes": [
            "599aba5c2ae29a06",
            "e7aeb6df91329b32",
            "e01f356525ba5066"
        ],
        "x": 644,
        "y": 469
    },
    {
        "id": "fc7ac26950eab4f6",
        "type": "group",
        "z": "827787d0.ede678",
        "g": "a0f89b10a58f3dbb",
        "name": "Detectar usuario",
        "style": {
            "fill": "#ff7f7f",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "0172896cb5a6aa3a",
            "e7c14bc9d21f11dc",
            "bc609eb97c915f70",
            "9cdf0df54a5993a1",
            "27e5b49204d6a1d6"
        ],
        "x": 644,
        "y": 679
    },
    {
        "id": "af59ebdb307f926a",
        "type": "group",
        "z": "496d98c4c50cacbb",
        "g": "1c7df9ba6cc1a3d4",
        "name": "Inicializar",
        "style": {
            "label": true,
            "fill": "#ffbfbf",
            "color": "#000000"
        },
        "nodes": [
            "2f5c3ac13667c918",
            "449b37406b29dc93"
        ],
        "x": 114,
        "y": 319
    },
    {
        "id": "03598c96d1c54dd4",
        "type": "group",
        "z": "496d98c4c50cacbb",
        "g": "1c7df9ba6cc1a3d4",
        "name": "UI-Control",
        "style": {
            "label": true,
            "fill": "#ffbfbf",
            "color": "#000000"
        },
        "nodes": [
            "b8e3d64d87828004",
            "dc640e015754eebd",
            "a908951142dcc258",
            "327a194a22918b10",
            "3e15e8715278c670",
            "9165803bd4c9d17a"
        ],
        "x": 114,
        "y": 129
    },
    {
        "id": "a319327ca6e39904",
        "type": "group",
        "z": "84636ba2ba4b8fea",
        "g": "091089867260e133",
        "name": "Estado mecanico",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "f9142b1ee8f5881c",
            "0be3af70b6779232",
            "71dbde2b35bb9212",
            "bd2511d45c542582",
            "a62208834f976d51",
            "b89fc54a9739744b",
            "d2eefc465ca1acf5",
            "437520c765d815cd"
        ],
        "x": 354,
        "y": 39
    },
    {
        "id": "a9302b21b3a7c502",
        "type": "group",
        "z": "84636ba2ba4b8fea",
        "g": "091089867260e133",
        "name": "Propiedades de flujo",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "fb72fbf8a88f4e29",
            "c2cd42df9da3d2fd",
            "1e59307070e56705",
            "0985c7f3798e9eb0",
            "84f863a5f14ffa1e",
            "61dced0eece2974c"
        ],
        "x": 354,
        "y": 259
    },
    {
        "id": "fc67f9d106ee5bd9",
        "type": "group",
        "z": "84636ba2ba4b8fea",
        "g": "091089867260e133",
        "name": "Pruebas de produccion",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "6b697489dbd4f23f",
            "202e5114bf14acef",
            "6852478f4555719f",
            "2182591ec4b87133",
            "7eb5bd99894e0d5f",
            "ac16ae8704a5321c",
            "1dfb8737b303dbf0",
            "ce97eb62a1366cdb"
        ],
        "x": 354,
        "y": 439
    },
    {
        "id": "cdb98853e2a9e9bf",
        "type": "group",
        "z": "84636ba2ba4b8fea",
        "g": "091089867260e133",
        "name": "Datos gráfica IPR",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "e260da5af28ca7b9",
            "8902ef326321ed33",
            "3ea50c6096e633fb",
            "ad562b713a8d0539",
            "f8b58626cfca1831",
            "6bf1019fee5cf90f"
        ],
        "x": 354,
        "y": 659
    },
    {
        "id": "4f21a66cdc5abf28",
        "type": "group",
        "z": "84636ba2ba4b8fea",
        "g": "091089867260e133",
        "name": "Datos de instalación",
        "style": {
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "dd7547a2411a6ab7",
            "d64e36480ff48db5",
            "6366edb9570f90f4",
            "36058dc843ab65d6",
            "e0d438b1148bb97a",
            "2966bb9f9796fb6c",
            "fe4fbf56b7397a67",
            "cecb0574dc213c8d",
            "b746d9d68d9fc0e4",
            "18525d0c618725b8",
            "731ec7e15a31f443",
            "181cdea868673d7d",
            "04a19001c731f09d",
            "0434adbd5f9af963",
            "9d6bba006123a181",
            "28d4227adb5ded0a",
            "65f3fad2faed0aff",
            "e19c289cb05d96ce",
            "4b09954e165d4255",
            "749b14f9500bcdb3",
            "905b1b0d5d78ff65"
        ],
        "x": 334,
        "y": 839
    },
    {
        "id": "cacd646bcfbdbb4d",
        "type": "group",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "name": "Eliminar las Imagenes",
        "style": {
            "label": true
        },
        "nodes": [
            "b845abf3cb6387ac",
            "dd07e29916b7db6c",
            "d11d9c8160729e7c",
            "351eccb8791a5abd"
        ],
        "x": 874,
        "y": 151.5
    },
    {
        "id": "5d3525bf.f7c05c",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "BCPGroup Theme",
                "default": "#4B7930",
                "baseColor": "#324a9d",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#324a9d",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#324a9d",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#e7e9e8",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#b5b5b5",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#8c8c8c",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#e7e9e8",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#324a9d",
                    "edited": true
                },
                "widget-borderColor": {
                    "value": "#e0e0e0",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 35,
                "sy": 40,
                "gx": 5,
                "gy": 3,
                "cx": 5,
                "cy": 3,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "47822c80.53da84",
        "type": "ui_tab",
        "name": "Usuarios",
        "icon": "people",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "55735b30.433a74",
        "type": "ui_tab",
        "name": "Datos eléctricos clúster",
        "icon": "flash_on",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ff9850b.e5094b",
        "type": "ui_tab",
        "name": "Datos operativos pozos",
        "icon": "data_usage",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dfe3c396.db089",
        "type": "ui_tab",
        "name": "Configuración clúster",
        "icon": "settings",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6a3fd4b.86cdb2c",
        "type": "ui_tab",
        "name": "Instrumentación manifold",
        "icon": "fa-bar-chart",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a156af3c.344ef",
        "type": "ui_tab",
        "name": "Alarmas/Eventos",
        "icon": "fa-exclamation-triangle",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a706ea3d.b7fbc8",
        "type": "ui_group",
        "name": "Credenciales usuario",
        "tab": "47822c80.53da84",
        "order": 1,
        "disp": false,
        "width": "10",
        "collapse": false
    },
    {
        "id": "b202b2e3.2b03e",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "88a2f5c8.6345a8",
        "order": 2,
        "width": 7,
        "height": 1
    },
    {
        "id": "4bf2ecd2.a0a944",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "88a2f5c8.6345a8",
        "order": 3,
        "width": 7,
        "height": 1
    },
    {
        "id": "c84ac463.ad82a8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "88a2f5c8.6345a8",
        "order": 4,
        "width": 7,
        "height": 1
    },
    {
        "id": "adca4e5d.3683b",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "88a2f5c8.6345a8",
        "order": 5,
        "width": 7,
        "height": 1
    },
    {
        "id": "a087458a.6f7368",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "88a2f5c8.6345a8",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "62c04dc0.b2b5b4",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "88a2f5c8.6345a8",
        "order": 7,
        "width": 7,
        "height": 1
    },
    {
        "id": "96632db9.d6b04",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "88a2f5c8.6345a8",
        "order": 8,
        "width": 7,
        "height": 1
    },
    {
        "id": "da514e5e.0a575",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "88a2f5c8.6345a8",
        "order": 9,
        "width": 7,
        "height": 1
    },
    {
        "id": "df584326.f4b59",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "88a2f5c8.6345a8",
        "order": 10,
        "width": 7,
        "height": 1
    },
    {
        "id": "81cfe70a.0c0198",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "88a2f5c8.6345a8",
        "order": 11,
        "width": 7,
        "height": 1
    },
    {
        "id": "cc789a9d.61fab8",
        "type": "ui_group",
        "name": "Analisis electrico CCP",
        "tab": "55735b30.433a74",
        "order": 2,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "7360f8fc.f7b758",
        "type": "ui_group",
        "name": "Selección",
        "tab": "ff9850b.e5094b",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "6e1fd4cd.a547cc",
        "type": "ui_group",
        "name": "Datos operativos",
        "tab": "ff9850b.e5094b",
        "order": 2,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "3b7087bd.454fe8",
        "type": "ui_group",
        "name": "Comandos",
        "tab": "ff9850b.e5094b",
        "order": 15,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "cdb8cc7.0f2ac3",
        "type": "ui_tab",
        "name": "Estado CCP",
        "icon": "fa-plug",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ee226df1.9537a",
        "type": "ui_group",
        "name": "CIRCUITO 1",
        "tab": "cdb8cc7.0f2ac3",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "9ad8c1e8.7c9",
        "type": "ui_group",
        "name": "CIRCUITO 2",
        "tab": "cdb8cc7.0f2ac3",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4c82d8af.0c5498",
        "type": "ui_group",
        "name": "INTERRUPTORES",
        "tab": "cdb8cc7.0f2ac3",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "9f770546.c22c38",
        "type": "ui_group",
        "name": "UPS",
        "tab": "cdb8cc7.0f2ac3",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f0eab73b.7f1978",
        "type": "ui_tab",
        "name": "Datos de fondo",
        "icon": "insert_chart",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "9699862a.4679e8",
        "type": "ui_group",
        "name": "SCP 1",
        "tab": "f0eab73b.7f1978",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "40cbe96.5ec1618",
        "type": "ui_group",
        "name": "SCP 2",
        "tab": "f0eab73b.7f1978",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "12be7692.1a93f9",
        "type": "ui_group",
        "name": "SCP 3",
        "tab": "f0eab73b.7f1978",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "54c5820f.3a1ccc",
        "type": "ui_group",
        "name": "SCP 4",
        "tab": "f0eab73b.7f1978",
        "order": 5,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "c5f05af1.a4c158",
        "type": "ui_group",
        "name": "CONFIGURACIÓN",
        "tab": "dfe3c396.db089",
        "order": 2,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "f7c7b392.40ecb",
        "type": "ui_group",
        "name": "Tendencia",
        "tab": "6a3fd4b.86cdb2c",
        "order": 1,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "ad633f3f.37b43",
        "type": "ui_group",
        "name": "Producción de Clúster",
        "tab": "6a3fd4b.86cdb2c",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "8a018e42.06fde",
        "type": "ui_group",
        "name": "SCP 1",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "f1a1813a.84784",
        "type": "ui_group",
        "name": "SCP 2",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "854d4faa.123a8",
        "type": "ui_group",
        "name": "SCP 3",
        "tab": "",
        "order": 4,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "786b9ce6.f34b34",
        "type": "ui_group",
        "name": "SCP 4",
        "tab": "",
        "order": 5,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "c4b29123.a4898",
        "type": "ui_group",
        "name": "POZOS CONFIGURADOS",
        "tab": "dfe3c396.db089",
        "order": 3,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "3b5d050c.51e49a",
        "type": "ui_group",
        "name": "Alarmas",
        "tab": "a156af3c.344ef",
        "order": 3,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "bc3b9c5.ac3f76",
        "type": "ui_group",
        "name": "Eventos",
        "tab": "a156af3c.344ef",
        "order": 2,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "6b1855e.396d6ac",
        "type": "ui_tab",
        "name": "Datos históricos",
        "icon": "fa-book",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "85d5763f.045ac8",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Escritura SCP1",
        "vartable": {
            "": {
                "CL1_HABILITACION": {
                    "type": "BOOL"
                },
                "CL2_HABILITACION": {
                    "type": "BOOL"
                },
                "CL3_HABILITACION": {
                    "type": "BOOL"
                },
                "CL4_HABILITACION": {
                    "type": "BOOL"
                },
                "CL5_HABILITACION": {
                    "type": "BOOL"
                },
                "CL6_HABILITACION": {
                    "type": "BOOL"
                },
                "CL7_HABILITACION": {
                    "type": "BOOL"
                },
                "CL8_HABILITACION": {
                    "type": "BOOL"
                },
                "CL9_HABILITACION": {
                    "type": "BOOL"
                },
                "POZO_01.VFD.Marca": {
                    "type": "INT"
                },
                "POZO_02.VFD.Marca": {
                    "type": "INT"
                },
                "POZO_03.VFD.Marca": {
                    "type": "INT"
                },
                "POZO_04.VFD.Marca": {
                    "type": "INT"
                },
                "POZO_05.VFD.Marca": {
                    "type": "INT"
                },
                "POZO_06.VFD.Marca": {
                    "type": "INT"
                },
                "POZO_07.VFD.Marca": {
                    "type": "INT"
                },
                "POZO_08.VFD.Marca": {
                    "type": "INT"
                },
                "POZO_09.VFD.Marca": {
                    "type": "INT"
                },
                "POZO_01.SF.Marca": {
                    "type": "INT"
                },
                "POZO_02.SF.Marca": {
                    "type": "INT"
                },
                "POZO_03.SF.Marca": {
                    "type": "INT"
                },
                "POZO_04.SF.Marca": {
                    "type": "INT"
                },
                "POZO_05.SF.Marca": {
                    "type": "INT"
                },
                "POZO_06.SF.Marca": {
                    "type": "INT"
                },
                "POZO_07.SF.Marca": {
                    "type": "INT"
                },
                "POZO_08.SF.Marca": {
                    "type": "INT"
                },
                "POZO_09.SF.Marca": {
                    "type": "INT"
                }
            }
        }
    },
    {
        "id": "22187e2f.9cc252",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "Cluster6",
        "vartable": {
            "": {
                "CLUSTER.W06.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER.W06.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER.W06.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W06.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER.W06.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER.W06.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER.W06.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER.W06.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER.W06.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER.W06.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER.W06.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER.W06.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W06.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W06.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W06.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W06.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W06.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER.W06.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER.W06.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER.W06.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W06.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER.W06.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER.W06.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                },
                "CLUSTER.W06.DHOLE.Vibracion_Eje_X": {
                    "type": "REAL"
                },
                "CLUSTER.W06.DHOLE.Vibracion_Eje_Y": {
                    "type": "REAL"
                },
                "CLUSTER.W06.DHOLE.Vibracion_Eje_Z": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "c91ced06.36697",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "Cluster1",
        "vartable": {
            "": {
                "CLUSTER.W01.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER.W01.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER.W01.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W01.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER.W01.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER.W01.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER.W01.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER.W01.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER.W01.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER.W01.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER.W01.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER.W01.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W01.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W01.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W01.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W01.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W01.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W01.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER.W01.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER.W01.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER.W01.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W01.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER.W01.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER.W01.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                },
                "CLUSTER.W01.DHOLE.Vibracion_Eje_X": {
                    "type": "REAL"
                },
                "CLUSTER.W01.DHOLE.Vibracion_Eje_Y": {
                    "type": "REAL"
                },
                "CLUSTER.W01.DHOLE.Vibracion_Eje_Z": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "142e843a.d193dc",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "Cluster2",
        "vartable": {
            "": {
                "CLUSTER.W02.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER.W02.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER.W02.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W02.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER.W02.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER.W02.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER.W02.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER.W02.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER.W02.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER.W02.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER.W02.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER.W02.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W02.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W02.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W02.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W02.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W02.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER.W02.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER.W02.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER.W02.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W02.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER.W02.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER.W02.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                },
                "CLUSTER.W02.DHOLE.Vibracion_Eje_X": {
                    "type": "REAL"
                },
                "CLUSTER.W02.DHOLE.Vibracion_Eje_Y": {
                    "type": "REAL"
                },
                "CLUSTER.W02.DHOLE.Vibracion_Eje_Z": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "cf0ff6d3.44eb48",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "Cluster3",
        "vartable": {
            "": {
                "CLUSTER.W03.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER.W03.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER.W03.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W03.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER.W03.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER.W03.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER.W03.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER.W03.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER.W03.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER.W03.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER.W03.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER.W03.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W03.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W03.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W03.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W03.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W03.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER.W03.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER.W03.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER.W03.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W03.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER.W03.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER.W03.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                },
                "CLUSTER.W03.DHOLE.Vibracion_Eje_X": {
                    "type": "REAL"
                },
                "CLUSTER.W03.DHOLE.Vibracion_Eje_Y": {
                    "type": "REAL"
                },
                "CLUSTER.W03.DHOLE.Vibracion_Eje_Z": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "156aac7a.4ced64",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "Cluster4",
        "vartable": {
            "": {
                "CLUSTER.W04.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER.W04.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER.W04.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W04.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER.W04.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER.W04.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER.W04.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER.W04.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER.W04.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER.W04.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER.W04.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER.W04.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W04.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W04.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W04.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W04.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W04.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER.W04.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER.W04.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER.W04.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W04.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER.W04.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER.W04.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                },
                "CLUSTER.W04.DHOLE.Vibracion_Eje_X": {
                    "type": "REAL"
                },
                "CLUSTER.W04.DHOLE.Vibracion_Eje_Y": {
                    "type": "REAL"
                },
                "CLUSTER.W04.DHOLE.Vibracion_Eje_Z": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "10df86fc.ea6c49",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "Cluster5",
        "vartable": {
            "": {
                "CLUSTER.W05.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER.W05.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER.W05.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W05.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER.W05.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER.W05.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER.W05.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER.W05.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER.W05.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER.W05.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER.W05.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER.W05.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W05.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W05.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W05.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W05.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W05.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER.W05.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER.W05.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER.W05.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W05.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER.W05.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER.W05.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                },
                "CLUSTER.W05.DHOLE.Vibracion_Eje_X": {
                    "type": "REAL"
                },
                "CLUSTER.W05.DHOLE.Vibracion_Eje_Y": {
                    "type": "REAL"
                },
                "CLUSTER.W05.DHOLE.Vibracion_Eje_Z": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "13e2de8b.8b4d71",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "Cluster7",
        "vartable": {
            "": {
                "CLUSTER.W07.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER.W07.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER.W07.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W07.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER.W07.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER.W07.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER.W07.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER.W07.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER.W07.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER.W07.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER.W07.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER.W07.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W07.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W07.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W07.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W07.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W07.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER.W07.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER.W07.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER.W07.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W07.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER.W07.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER.W07.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                },
                "CLUSTER.W07.DHOLE.Vibracion_Eje_X": {
                    "type": "REAL"
                },
                "CLUSTER.W07.DHOLE.Vibracion_Eje_Y": {
                    "type": "REAL"
                },
                "CLUSTER.W07.DHOLE.Vibracion_Eje_Z": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "fc2fa41.df31058",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "Cluster8",
        "vartable": {
            "": {
                "CLUSTER.W08.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER.W08.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER.W08.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W08.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER.W08.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER.W08.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER.W08.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER.W08.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER.W08.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER.W08.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER.W08.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER.W08.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W08.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W08.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W08.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W08.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W08.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER.W08.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER.W08.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER.W08.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W08.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER.W08.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER.W08.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                },
                "CLUSTER.W08.DHOLE.Vibracion_Eje_X": {
                    "type": "REAL"
                },
                "CLUSTER.W08.DHOLE.Vibracion_Eje_Y": {
                    "type": "REAL"
                },
                "CLUSTER.W08.DHOLE.Vibracion_Eje_Z": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "1a87133f.85b96d",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "Cluster9",
        "vartable": {
            "": {
                "CLUSTER.W09.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER.W09.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER.W09.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W09.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER.W09.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER.W09.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER.W09.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER.W09.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER.W09.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER.W09.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER.W09.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER.W09.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER.W09.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER.W09.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W09.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER.W09.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER.W09.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER.W09.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER.W09.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER.W09.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER.W09.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER.W09.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER.W09.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                },
                "CLUSTER.W09.DHOLE.Vibracion_Eje_X": {
                    "type": "REAL"
                },
                "CLUSTER.W09.DHOLE.Vibracion_Eje_Y": {
                    "type": "REAL"
                },
                "CLUSTER.W09.DHOLE.Vibracion_Eje_Z": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "98638e25.bf675",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Comandos",
        "vartable": {
            "": {
                "CLUSTER.W01.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W01.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "64765732.d2c008",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Escritura Referencia",
        "vartable": {
            "": {
                "CLUSTER.W01.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "7ab6ab16.b6db44",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Elect_Cluster",
        "vartable": {
            "": {
                "CLUSTER.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER.INST_MNF.PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.INST_MNF.FIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER.INST_MNF.PIT_Presion": {
                    "type": "REAL"
                },
                "CLUSTER.INST_MNF.FIT_Flujo": {
                    "type": "REAL"
                },
                "CLUSTER.INST_MNF.FIT_Flujo_Total": {
                    "type": "REAL"
                },
                "CLUSTER.INST_MNF.FIT_Tempetatura": {
                    "type": "REAL"
                },
                "CLUSTER.INST_MNF.FIT_Densidad": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "1cc6e030.40038",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "CCP",
        "vartable": {
            "": {
                "CCP.UPS_Baterias_On_Off": {
                    "type": "BOOL"
                },
                "CCP.UPS_Falla": {
                    "type": "BOOL"
                },
                "CCP.UPS_Comunicando": {
                    "type": "BOOL"
                },
                "CCP.Prosoft_Comunicando": {
                    "type": "BOOL"
                },
                "CCP.UPS_Bateria_Tiempo_Reman": {
                    "type": "INT"
                },
                "CCP.UPS_Bateria_Porc_Carga": {
                    "type": "INT"
                },
                "CCP.UPS_Bateria_Voltaje": {
                    "type": "INT"
                }
            }
        }
    },
    {
        "id": "f70aaec9.581ea",
        "type": "ui_group",
        "name": "Configuración de alarmas presión manifold pit",
        "tab": "6a3fd4b.86cdb2c",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "817c8033.98df9",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "ANALOG INPUT",
        "vartable": {
            "": {
                "DATA_CL_hum_SCC": {
                    "type": "REAL"
                },
                "DATA_CL_temp_SCC": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "ab25613c47d557df",
        "type": "influxdb",
        "hostname": "192.168.2.8",
        "port": "8086",
        "protocol": "http",
        "database": "AIC",
        "name": "",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://aic.local:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "a00b93d2e424ac4e",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Eventos",
        "vartable": {
            "": {
                "EVENTOS_W01.Act_Ref_prol_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.Act_Ref_prol_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.Arranque_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.ArranqueRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.Cambio_Frecuencia_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.Cambio_TiempoRefProlong_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.Cambio_TiempoRefProlong_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.Cambio_TiempoRefProlong_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioBSW_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioBSW_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioFrecuencia_Remota": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioNivel_Fluido_Dinamico_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioNivel_Fluido_Dinamico_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioProtSobrecarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioProtSobrecarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioProtSobrecargaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioProtSubcarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioProtSubcarga_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioProtSubcarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioPWF_Prueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioQoPrueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.CambioQoPrueba_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.Fin_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.Inicio_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.Parada_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.ParadaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.Reset_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W01.ResetRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.Act_Ref_prol_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.Act_Ref_prol_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.Arranque_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.ArranqueRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.Cambio_Frecuencia_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.Cambio_TiempoRefProlong_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.Cambio_TiempoRefProlong_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.Cambio_TiempoRefProlong_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioBSW_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioBSW_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioFrecuencia_Remota": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioNivel_Fluido_Dinamico_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioNivel_Fluido_Dinamico_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioProtSobrecarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioProtSobrecarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioProtSobrecargaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioProtSubcarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioProtSubcarga_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioProtSubcarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioPWF_Prueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioQoPrueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.CambioQoPrueba_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.Fin_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.Inicio_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.Parada_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.ParadaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.Reset_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W02.ResetRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.Act_Ref_prol_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.Act_Ref_prol_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.Arranque_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.ArranqueRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.Cambio_Frecuencia_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.Cambio_TiempoRefProlong_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.Cambio_TiempoRefProlong_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.Cambio_TiempoRefProlong_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioBSW_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioBSW_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioFrecuencia_Remota": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioNivel_Fluido_Dinamico_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioNivel_Fluido_Dinamico_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioProtSobrecarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioProtSobrecarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioProtSobrecargaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioProtSubcarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioProtSubcarga_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioProtSubcarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioPWF_Prueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioQoPrueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.CambioQoPrueba_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.Fin_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.Inicio_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.Parada_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.ParadaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.Reset_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W03.ResetRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.Act_Ref_prol_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.Act_Ref_prol_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.Arranque_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.ArranqueRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.Cambio_Frecuencia_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.Cambio_TiempoRefProlong_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.Cambio_TiempoRefProlong_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.Cambio_TiempoRefProlong_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioBSW_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioBSW_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioFrecuencia_Remota": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioNivel_Fluido_Dinamico_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioNivel_Fluido_Dinamico_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioProtSobrecarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioProtSobrecarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioProtSobrecargaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioProtSubcarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioProtSubcarga_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioProtSubcarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioPWF_Prueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioQoPrueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.CambioQoPrueba_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.Fin_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.Inicio_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.Parada_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.ParadaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.Reset_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W04.ResetRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.Act_Ref_prol_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.Act_Ref_prol_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.Arranque_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.ArranqueRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.Cambio_Frecuencia_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.Cambio_TiempoRefProlong_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.Cambio_TiempoRefProlong_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.Cambio_TiempoRefProlong_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioBSW_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioBSW_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioFrecuencia_Remota": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioNivel_Fluido_Dinamico_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioNivel_Fluido_Dinamico_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioProtSobrecarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioProtSobrecarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioProtSobrecargaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioProtSubcarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioProtSubcarga_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioProtSubcarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioPWF_Prueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioQoPrueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.CambioQoPrueba_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.Fin_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.Inicio_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.Parada_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.ParadaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.Reset_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W05.ResetRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.Act_Ref_prol_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.Act_Ref_prol_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.Arranque_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.ArranqueRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.Cambio_Frecuencia_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.Cambio_TiempoRefProlong_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.Cambio_TiempoRefProlong_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.Cambio_TiempoRefProlong_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioBSW_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioBSW_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioFrecuencia_Remota": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioNivel_Fluido_Dinamico_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioNivel_Fluido_Dinamico_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioProtSobrecarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioProtSobrecarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioProtSobrecargaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioProtSubcarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioProtSubcarga_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioProtSubcarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioPWF_Prueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioQoPrueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.CambioQoPrueba_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.Fin_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.Inicio_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.Parada_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.ParadaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.Reset_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W06.ResetRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.Act_Ref_prol_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.Act_Ref_prol_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.Arranque_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.ArranqueRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.Cambio_Frecuencia_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.Cambio_TiempoRefProlong_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.Cambio_TiempoRefProlong_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.Cambio_TiempoRefProlong_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioBSW_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioBSW_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioFrecuencia_Remota": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioNivel_Fluido_Dinamico_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioNivel_Fluido_Dinamico_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioProtSobrecarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioProtSobrecarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioProtSobrecargaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioProtSubcarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioProtSubcarga_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioProtSubcarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioPWF_Prueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioQoPrueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.CambioQoPrueba_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.Fin_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.Inicio_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.Parada_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.ParadaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.Reset_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W07.ResetRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.Act_Ref_prol_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.Act_Ref_prol_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.Arranque_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.ArranqueRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.Cambio_Frecuencia_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.Cambio_TiempoRefProlong_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.Cambio_TiempoRefProlong_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.Cambio_TiempoRefProlong_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioBSW_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioBSW_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioFrecuencia_Remota": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioNivel_Fluido_Dinamico_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioNivel_Fluido_Dinamico_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioProtSobrecarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioProtSobrecarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioProtSobrecargaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioProtSubcarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioProtSubcarga_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioProtSubcarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioPWF_Prueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioQoPrueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.CambioQoPrueba_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.Fin_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.Inicio_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.Parada_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.ParadaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.Reset_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W08.ResetRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.Act_Ref_prol_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.Act_Ref_prol_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.Arranque_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.ArranqueRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.Cambio_Frecuencia_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.Cambio_TiempoRefProlong_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.Cambio_TiempoRefProlong_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.Cambio_TiempoRefProlong_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioBSW_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioBSW_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioFrecuencia_Remota": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioNivel_Fluido_Dinamico_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioNivel_Fluido_Dinamico_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioProtSobrecarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioProtSobrecarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioProtSobrecargaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioProtSubcarga_CIMA": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioProtSubcarga_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioProtSubcarga_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioPWF_Prueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioQoPrueba_Remoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.CambioQoPrueba_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.Fin_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.Inicio_Prueba_BuildUp": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.Parada_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.ParadaRemoto": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.Reset_VIEW": {
                    "type": "BOOL"
                },
                "EVENTOS_W09.ResetRemoto": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "15f69da2533413eb",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Alarmas",
        "vartable": {
            "": {
                "DATA_CL1_ALARMAS.Alarma_ArranqueCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Alarma_ArranqueLocal": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Alarma_ParadaCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Alarma_ParadaLocal": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Cambio_de_VelociReferen": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Cambio_de_VelociReferenCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Cambio_de_Usuario": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Cambio_de_Usuario_De": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Ejecucion_de_JOG": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Ejecutando_RearranqueA": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_del_PowerFlex": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Proteccion": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_SobreCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_SubCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.STOP_ESD": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Velo_Mayor_Al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Velo_Menor_al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.BIT_Cambio_Veloc_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Presion_PIP": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Presion_THP": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Temp_Motor": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Temp_Entrada": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Vibracion": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Corriente_Fuga": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Diferencial_Presion": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Nivel_Fluido": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.BIT_Cambio_T_RefProlong_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.BIT_Cambio_Prot_SobreCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.BIT_Cambio_Prot_SubCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Disparo_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Disparo_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Control_AltoTorq_Ejecutando": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Control_BajoTorq_Ejecutand": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Control_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Control_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Paro_ProtecTermicMotor": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Mantenimiento_Cabezal": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Proteccion_PIN": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Falla_Proteccion_PFLU": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Bit_Cambio_PwfP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL1_ALARMAS.Bit_Cambio_QoP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Alarma_ArranqueCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Alarma_ArranqueLocal": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Alarma_ParadaCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Alarma_ParadaLocal": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Cambio_de_VelociReferen": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Cambio_de_VelociReferenCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Cambio_de_Usuario": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Cambio_de_Usuario_De": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Ejecucion_de_JOG": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Ejecutando_RearranqueA": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_del_PowerFlex": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Proteccion": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_SobreCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_SubCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.STOP_ESD": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Velo_Mayor_Al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Velo_Menor_al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.BIT_Cambio_Veloc_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Presion_PIP": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Presion_THP": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Temp_Motor": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Temp_Entrada": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Vibracion": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Corriente_Fuga": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Diferencial_Presion": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Nivel_Fluido": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.BIT_Cambio_T_RefProlong_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.BIT_Cambio_Prot_SobreCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.BIT_Cambio_Prot_SubCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Disparo_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Disparo_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Control_AltoTorq_Ejecutando": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Control_BajoTorq_Ejecutand": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Control_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Control_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Paro_ProtecTermicMotor": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Mantenimiento_Cabezal": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Proteccion_PIN": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Falla_Proteccion_PFLU": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Bit_Cambio_PwfP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL2_ALARMAS.Bit_Cambio_QoP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Alarma_ArranqueCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Alarma_ArranqueLocal": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Alarma_ParadaCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Alarma_ParadaLocal": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Cambio_de_VelociReferen": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Cambio_de_VelociReferenCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Cambio_de_Usuario": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Cambio_de_Usuario_De": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Ejecucion_de_JOG": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Ejecutando_RearranqueA": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_del_PowerFlex": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Proteccion": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_SobreCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_SubCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.STOP_ESD": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Velo_Mayor_Al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Velo_Menor_al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.BIT_Cambio_Veloc_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Presion_PIP": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Presion_THP": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Temp_Motor": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Temp_Entrada": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Vibracion": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Corriente_Fuga": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Diferencial_Presion": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Nivel_Fluido": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.BIT_Cambio_T_RefProlong_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.BIT_Cambio_Prot_SobreCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.BIT_Cambio_Prot_SubCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Disparo_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Disparo_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Control_AltoTorq_Ejecutando": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Control_BajoTorq_Ejecutand": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Control_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Control_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Paro_ProtecTermicMotor": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Mantenimiento_Cabezal": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Proteccion_PIN": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Falla_Proteccion_PFLU": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Bit_Cambio_PwfP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL3_ALARMAS.Bit_Cambio_QoP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Alarma_ArranqueCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Alarma_ArranqueLocal": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Alarma_ParadaCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Alarma_ParadaLocal": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Cambio_de_VelociReferen": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Cambio_de_VelociReferenCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Cambio_de_Usuario": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Cambio_de_Usuario_De": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Ejecucion_de_JOG": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Ejecutando_RearranqueA": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_del_PowerFlex": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Proteccion": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_SobreCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_SubCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.STOP_ESD": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Velo_Mayor_Al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Velo_Menor_al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.BIT_Cambio_Veloc_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Presion_PIP": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Presion_THP": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Temp_Motor": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Temp_Entrada": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Vibracion": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Corriente_Fuga": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Diferencial_Presion": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Nivel_Fluido": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.BIT_Cambio_T_RefProlong_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.BIT_Cambio_Prot_SobreCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.BIT_Cambio_Prot_SubCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Disparo_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Disparo_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Control_AltoTorq_Ejecutando": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Control_BajoTorq_Ejecutand": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Control_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Control_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Paro_ProtecTermicMotor": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Mantenimiento_Cabezal": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Proteccion_PIN": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Falla_Proteccion_PFLU": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Bit_Cambio_PwfP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL4_ALARMAS.Bit_Cambio_QoP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Alarma_ArranqueCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Alarma_ArranqueLocal": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Alarma_ParadaCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Alarma_ParadaLocal": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Cambio_de_VelociReferen": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Cambio_de_VelociReferenCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Cambio_de_Usuario": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Cambio_de_Usuario_De": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Ejecucion_de_JOG": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Ejecutando_RearranqueA": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_del_PowerFlex": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Proteccion": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_SobreCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_SubCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.STOP_ESD": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Velo_Mayor_Al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Velo_Menor_al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.BIT_Cambio_Veloc_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Presion_PIP": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Presion_THP": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Temp_Motor": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Temp_Entrada": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Vibracion": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Corriente_Fuga": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Diferencial_Presion": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Nivel_Fluido": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.BIT_Cambio_T_RefProlong_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.BIT_Cambio_Prot_SobreCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.BIT_Cambio_Prot_SubCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Disparo_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Disparo_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Control_AltoTorq_Ejecutando": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Control_BajoTorq_Ejecutand": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Control_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Control_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Paro_ProtecTermicMotor": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Mantenimiento_Cabezal": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Proteccion_PIN": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Falla_Proteccion_PFLU": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Bit_Cambio_PwfP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL5_ALARMAS.Bit_Cambio_QoP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Alarma_ArranqueCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Alarma_ArranqueLocal": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Alarma_ParadaCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Alarma_ParadaLocal": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Cambio_de_VelociReferen": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Cambio_de_VelociReferenCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Cambio_de_Usuario": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Cambio_de_Usuario_De": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Ejecucion_de_JOG": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Ejecutando_RearranqueA": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_del_PowerFlex": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Proteccion": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_SobreCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_SubCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.STOP_ESD": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Velo_Mayor_Al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Velo_Menor_al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.BIT_Cambio_Veloc_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Presion_PIP": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Presion_THP": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Temp_Motor": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Temp_Entrada": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Vibracion": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Corriente_Fuga": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Diferencial_Presion": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Nivel_Fluido": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.BIT_Cambio_T_RefProlong_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.BIT_Cambio_Prot_SobreCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.BIT_Cambio_Prot_SubCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Disparo_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Disparo_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Control_AltoTorq_Ejecutando": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Control_BajoTorq_Ejecutand": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Control_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Control_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Paro_ProtecTermicMotor": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Mantenimiento_Cabezal": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Proteccion_PIN": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Falla_Proteccion_PFLU": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Bit_Cambio_PwfP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL6_ALARMAS.Bit_Cambio_QoP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Alarma_ArranqueCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Alarma_ArranqueLocal": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Alarma_ParadaCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Alarma_ParadaLocal": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Cambio_de_VelociReferen": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Cambio_de_VelociReferenCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Cambio_de_Usuario": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Cambio_de_Usuario_De": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Ejecucion_de_JOG": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Ejecutando_RearranqueA": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_del_PowerFlex": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Proteccion": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_SobreCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_SubCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.STOP_ESD": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Velo_Mayor_Al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Velo_Menor_al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.BIT_Cambio_Veloc_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Presion_PIP": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Presion_THP": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Temp_Motor": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Temp_Entrada": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Vibracion": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Corriente_Fuga": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Diferencial_Presion": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Nivel_Fluido": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.BIT_Cambio_T_RefProlong_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.BIT_Cambio_Prot_SobreCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.BIT_Cambio_Prot_SubCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Disparo_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Disparo_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Control_AltoTorq_Ejecutando": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Control_BajoTorq_Ejecutand": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Control_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Control_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Paro_ProtecTermicMotor": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Mantenimiento_Cabezal": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Proteccion_PIN": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Falla_Proteccion_PFLU": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Bit_Cambio_PwfP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL7_ALARMAS.Bit_Cambio_QoP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Alarma_ArranqueCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Alarma_ArranqueLocal": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Alarma_ParadaCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Alarma_ParadaLocal": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Cambio_de_VelociReferen": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Cambio_de_VelociReferenCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Cambio_de_Usuario": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Cambio_de_Usuario_De": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Ejecucion_de_JOG": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Ejecutando_RearranqueA": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_del_PowerFlex": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Proteccion": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_SobreCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_SubCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.STOP_ESD": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Velo_Mayor_Al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Velo_Menor_al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.BIT_Cambio_Veloc_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Presion_PIP": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Presion_THP": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Temp_Motor": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Temp_Entrada": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Vibracion": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Corriente_Fuga": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Diferencial_Presion": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Nivel_Fluido": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.BIT_Cambio_T_RefProlong_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.BIT_Cambio_Prot_SobreCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.BIT_Cambio_Prot_SubCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Disparo_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Disparo_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Control_AltoTorq_Ejecutando": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Control_BajoTorq_Ejecutand": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Control_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Control_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Paro_ProtecTermicMotor": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Mantenimiento_Cabezal": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Proteccion_PIN": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Falla_Proteccion_PFLU": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Bit_Cambio_PwfP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL8_ALARMAS.Bit_Cambio_QoP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Alarma_ArranqueCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Alarma_ArranqueLocal": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Alarma_ParadaCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Alarma_ParadaLocal": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Cambio_de_VelociReferen": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Cambio_de_VelociReferenCIMA": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Cambio_de_Usuario": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Cambio_de_Usuario_De": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Ejecucion_de_JOG": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Ejecutando_RearranqueA": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_del_PowerFlex": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Proteccion": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_SobreCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_SubCargaTX": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.STOP_ESD": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Velo_Mayor_Al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Velo_Menor_al_Lim": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.BIT_Cambio_Veloc_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Presion_PIP": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Presion_THP": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Temp_Motor": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Temp_Entrada": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Vibracion": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Corriente_Fuga": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Diferencial_Presion": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Nivel_Fluido": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.BIT_Cambio_T_RefProlong_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.BIT_Cambio_Prot_SobreCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.BIT_Cambio_Prot_SubCarga_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Disparo_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Disparo_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Control_AltoTorq_Ejecutando": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Control_BajoTorq_Ejecutand": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Control_Alto_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Control_Bajo_Torque": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Paro_ProtecTermicMotor": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Mantenimiento_Cabezal": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Proteccion_PIN": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Falla_Proteccion_PFLU": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Bit_Cambio_PwfP_CIMA": {
                    "type": "BOOL"
                },
                "DATA_CL9_ALARMAS.Bit_Cambio_QoP_CIMA": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "04c0fe5a58c91c22",
        "type": "ui_group",
        "name": "SCP1",
        "tab": "2907a051b5a9e44c",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8383e0d6be75437c",
        "type": "ui_group",
        "name": "SCP2",
        "tab": "2907a051b5a9e44c",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "7b3e660828c01ed0",
        "type": "ui_group",
        "name": "SCP3",
        "tab": "2907a051b5a9e44c",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "79da3138fb6677c1",
        "type": "ui_group",
        "name": "SCP4",
        "tab": "2907a051b5a9e44c",
        "order": 5,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2907a051b5a9e44c",
        "type": "ui_tab",
        "name": "Despliegue general",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0921035c8e83c6f3",
        "type": "ui_group",
        "name": "Navbar",
        "tab": "2907a051b5a9e44c",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "353dded804483831",
        "type": "ui_group",
        "name": "Status Bar",
        "tab": "47822c80.53da84",
        "order": 2,
        "disp": false,
        "width": "1",
        "collapse": false
    },
    {
        "id": "635d0425f87c74f8",
        "type": "ui_group",
        "name": "Status Bar",
        "tab": "ff9850b.e5094b",
        "order": 16,
        "disp": false,
        "width": 1,
        "collapse": false
    },
    {
        "id": "4bbd76540a4ed318",
        "type": "ui_group",
        "name": "Status Bar",
        "tab": "f0eab73b.7f1978",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "b02396bf4a639974",
        "type": "ui_group",
        "name": "Status Bar",
        "tab": "cdb8cc7.0f2ac3",
        "order": 5,
        "disp": false,
        "width": "1",
        "collapse": false
    },
    {
        "id": "71e771845bd3dfa2",
        "type": "ui_group",
        "name": "Navbar",
        "tab": "dfe3c396.db089",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "28451046104f9d34",
        "type": "ui_group",
        "name": "Status Bar",
        "tab": "6a3fd4b.86cdb2c",
        "order": 6,
        "disp": false,
        "width": "1",
        "collapse": false
    },
    {
        "id": "bd4ea8ac6f51f90c",
        "type": "ui_group",
        "name": "Status Bar",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "640751456ebda7f5",
        "type": "ui_group",
        "name": "Status Bar",
        "tab": "a156af3c.344ef",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "1f86dc09f5c3eb1f",
        "type": "ui_group",
        "name": "Status Bar",
        "tab": "6b1855e.396d6ac",
        "order": 3,
        "disp": false,
        "width": "1",
        "collapse": false
    },
    {
        "id": "1dd41781b5140b42",
        "type": "ui_group",
        "name": "Monitoreo SWC",
        "tab": "953a78ff8e0d9f81",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "953a78ff8e0d9f81",
        "type": "ui_tab",
        "name": "SWC",
        "icon": "fa-television",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cebdc84bd432b31c",
        "type": "ui_group",
        "name": "Selector variables AIC",
        "tab": "5c6e541a83ff7338",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "d2bb7f4981f2b1d7",
        "type": "ui_group",
        "name": "Selector de tiempo",
        "tab": "5c6e541a83ff7338",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "bc68efb8fdd132c4",
        "type": "ui_group",
        "name": "Gráfico",
        "tab": "5c6e541a83ff7338",
        "order": 4,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "5c6e541a83ff7338",
        "type": "ui_tab",
        "name": "Tendencias",
        "icon": "fa-area-chart",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "91d7af34548d7c49",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "f44449b952264214",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "a1eba59b45405057",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "f44449b952264214",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "2bb63445daaf052e",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "f44449b952264214",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "f5c09de245ccbbc9",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "f44449b952264214",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "685720c25101b016",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "c88a78ac91c87880",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "beed7829c465a664",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "c88a78ac91c87880",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "4e44027544359149",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "c88a78ac91c87880",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "468329bb969f3f8f",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "c88a78ac91c87880",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "b75c9d7627dfd1b4",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "45f961811da830f5",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "b5e702d75156d2ef",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "45f961811da830f5",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "a8e7c9110eee3d7c",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "45f961811da830f5",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "ab97810c72b7d110",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "2d31d65cb3154f18",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "d2fde32b78e6afc1",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "2d31d65cb3154f18",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "aed7b202cbfab026",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "2d31d65cb3154f18",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "74da4a253f50dcb2",
        "type": "ui_spacer",
        "z": "84636ba2ba4b8fea",
        "name": "spacer",
        "group": "7f71cf7415a9a522",
        "order": 16,
        "width": 6,
        "height": 1
    },
    {
        "id": "f9e5b87695844d17",
        "type": "ui_spacer",
        "z": "a409994f70cf4cc4",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "4a7398a82c2b9565",
        "type": "ui_spacer",
        "z": "a409994f70cf4cc4",
        "name": "spacer",
        "group": "",
        "order": 1,
        "width": 8,
        "height": 1
    },
    {
        "id": "1fc3adcf8e2b3ae0",
        "type": "ui_spacer",
        "z": "a409994f70cf4cc4",
        "name": "spacer",
        "group": "",
        "order": 2,
        "width": 10,
        "height": 1
    },
    {
        "id": "d0ef2f7ea9eb1856",
        "type": "ui_group",
        "name": "Datos VSD",
        "tab": "ff9850b.e5094b",
        "order": 3,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "a0a6adbcc6ab62b7",
        "type": "ui_group",
        "name": "Datos Electricos",
        "tab": "ff9850b.e5094b",
        "order": 4,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "a20d6c09c126296e",
        "type": "ui_group",
        "name": "Datos de Proceso",
        "tab": "ff9850b.e5094b",
        "order": 5,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "c769e17924b31c7a",
        "type": "ui_group",
        "name": "Tendencias",
        "tab": "ff9850b.e5094b",
        "order": 6,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "d2786796c53c5c34",
        "type": "ui_group",
        "name": "AVAS",
        "tab": "ff9850b.e5094b",
        "order": 7,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "8c8bf20c342c890a",
        "type": "ui_group",
        "name": "Carta Amperimetrica",
        "tab": "ff9850b.e5094b",
        "order": 8,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "93dbf0d057803e26",
        "type": "ui_group",
        "name": "Grafica IPR",
        "tab": "ff9850b.e5094b",
        "order": 9,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "5b6ea19cad9ae739",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "Cluster11",
        "vartable": {
            "": {
                "CLUSTER2.W01.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER2.W01.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER2.W01.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W01.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER2.W01.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER2.W01.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER2.W01.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER2.W01.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER2.W01.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER2.W01.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER2.W01.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER2.W01.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W01.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER2.W01.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "d3d35ba1ab4a64ef",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "SCP12",
        "vartable": {
            "": {
                "CLUSTER2.W02.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER2.W02.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER2.W02.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W02.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER2.W02.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER2.W02.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER2.W02.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER2.W02.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER2.W02.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER2.W02.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER2.W02.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER2.W02.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W02.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "fefb6112361aa785",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "SCP13",
        "vartable": {
            "": {
                "CLUSTER2.W03.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER2.W03.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER2.W03.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W03.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER2.W03.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER2.W03.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER2.W03.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER2.W03.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER2.W03.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER2.W03.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER2.W03.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER2.W03.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W03.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "ad34f7b393441a0e",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "SCP14",
        "vartable": {
            "": {
                "CLUSTER2.W04.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER2.W04.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER2.W04.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W04.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER2.W04.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER2.W04.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER2.W04.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER2.W04.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER2.W04.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER2.W04.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER2.W04.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER2.W04.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W04.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "da18e730fe442b60",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "SCP15",
        "vartable": {
            "": {
                "CLUSTER2.W05.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER2.W05.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER2.W05.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W05.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER2.W05.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER2.W05.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER2.W05.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER2.W05.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER2.W05.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER2.W05.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER2.W05.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER2.W05.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W05.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "f9b80009a7e932a4",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "SCP16",
        "vartable": {
            "": {
                "CLUSTER2.W06.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER2.W06.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER2.W06.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W06.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER2.W06.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER2.W06.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER2.W06.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER2.W06.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER2.W06.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER2.W06.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER2.W06.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER2.W06.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W06.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "2525cff1c1dc9074",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "SCP17",
        "vartable": {
            "": {
                "CLUSTER2.W07.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER2.W07.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER2.W07.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W07.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER2.W07.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER2.W07.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER2.W07.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER2.W07.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER2.W07.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER2.W07.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER2.W07.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER2.W07.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W07.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "97d45cc155f45f9b",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "2500",
        "name": "SCP18",
        "vartable": {
            "": {
                "CLUSTER2.W08.VSD.Disponible": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.VSD.Arranque_Esc_Ejec": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.VSD.Estado_RefProlongada": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.VSD.Activacion_RefProlongada_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.VSD.Estado_Prot_Sob_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.VSD.Estado_Prot_Sub_Carga": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.VSD.Selec_Parada_General": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.VSD.Estado": {
                    "type": "INT"
                },
                "CLUSTER2.W08.VSD.Tipo": {
                    "type": "INT"
                },
                "CLUSTER2.W08.VSD.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W08.VSD.Velocidad_Min": {
                    "type": "INT"
                },
                "CLUSTER2.W08.VSD.Velocidad_Max": {
                    "type": "INT"
                },
                "CLUSTER2.W08.VSD.Tiempo_Rearran_Resta_Seg": {
                    "type": "INT"
                },
                "CLUSTER2.W08.VSD.T_Disp_Subcarga": {
                    "type": "INT"
                },
                "CLUSTER2.W08.VSD.T_Disp_Sobrecarga": {
                    "type": "INT"
                },
                "CLUSTER2.W08.VSD.Torque_porcentual": {
                    "type": "INT"
                },
                "CLUSTER2.W08.VSD.Confirmaciones_Escritura": {
                    "type": "INT"
                },
                "CLUSTER2.W08.VSD.Numero_Pozo": {
                    "type": "DINT"
                },
                "CLUSTER2.W08.VSD.Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Referencia_Frecuencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Hz_Ini_Rampa_Escal": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Corriente_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Voltaje_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Voltaje_Bus_DC": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Temperatura": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Corriente_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Voltaje_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Potencia_Actual": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Factor_Potencia": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Relacion_TX": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Referencia_RPM": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Torque": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Torque_Nominal": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Valor_Prot_Subcarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Valor_Prot_Subcarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Valor_Prot_Sobrecarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Valor_Prot_Sobrecarga_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Prot_Subcarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Prot_Sobrecarga_VSD": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Valor_Step_Frecuencia_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.T_Porc_Ref_Prolong": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Valor_T_RefProlongada_HZ": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Valor_T_RefProlongada_HZ_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.Voltaje_L_L_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.Voltaje_L1_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.Voltaje_L2_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.Voltaje_L1_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.Voltaje_L_N_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.Voltaje_L1_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.Voltaje_L2_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.Voltaje_L3_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.Amp_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.Amp_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.Amp_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.Amp_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.Hz_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.KWATT_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.KWATT_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.KWATT_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.KWATT_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.KVA_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.KVA_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.KVA_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.KVA_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.KVAr_Act_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.KVAr_Act_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.KVAr_Act_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.KVAr_Act_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.FP_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.FP_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.FP_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.FP_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.THD_I_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.THD_V_Pro": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.THD_I_N": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.THD_I_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.THD_I_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.THD_I_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.THD_V_L1": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.THD_V_L2": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.PQM.THD_V_L3": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.INST.THP_PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.INST.THT_TIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.INST.THP_PIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.INST.THT_TIT_PV": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.DHOLE.Estado_Comm": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.DHOLE.Marca": {
                    "type": "INT"
                },
                "CLUSTER2.W08.DHOLE.PIP": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.DHOLE.PDP": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.DHOLE.Temperatura_Entrada": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.DHOLE.Temperatura_Motor": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.DHOLE.Temperatura_Descarga": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.DHOLE.Vibracion": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.DHOLE.Corriente_Fuga": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "ac5ed0dd7cb955b9",
        "type": "ui_group",
        "name": "Estado mecánico",
        "tab": "ff9850b.e5094b",
        "order": 11,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "a714dc549bfb0a23",
        "type": "ui_group",
        "name": "Propiedades de flujo",
        "tab": "ff9850b.e5094b",
        "order": 12,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "951118097450da17",
        "type": "ui_group",
        "name": "Pruebas de producción",
        "tab": "ff9850b.e5094b",
        "order": 13,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "0c75fbb95a827f65",
        "type": "ui_group",
        "name": "Datos de instalación",
        "tab": "ff9850b.e5094b",
        "order": 10,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "82879a916204025a",
        "type": "ui_group",
        "name": "Carta Nomografica",
        "tab": "ff9850b.e5094b",
        "order": 14,
        "disp": true,
        "width": 20,
        "collapse": false
    },
    {
        "id": "b2a7414da9868461",
        "type": "ui_spacer",
        "z": "827787d0.ede678",
        "name": "spacer",
        "group": "a706ea3d.b7fbc8",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "268c0c4d447aa4c7",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Escritura Referencia CLUSTER2",
        "vartable": {
            "": {
                "CLUSTER2.W01.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W09.VSD.Referencia_Frecuencia_Remota_PD": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "27b7293be00c4c3d",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Escritura Referencia Cluster ",
        "vartable": {
            "": {
                "CLUSTER.W01.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W02.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W03.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W04.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W05.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W06.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W07.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W08.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER.W09.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "335779cd65870ad7",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Referencia RPM",
        "vartable": {
            "": {
                "CLUSTER2.W01.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W02.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W03.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W04.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W05.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W06.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W07.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W08.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                },
                "CLUSTER2.W09.VSD.Referencia_RPM_Remota_PD": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "1d3f8552365f7228",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Comandos CLUSTER2",
        "vartable": {
            "": {
                "CLUSTER2.W01.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W01.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W02.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W03.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W04.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W05.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W06.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W07.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W08.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W09.VSD.Arranque_Remoto_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W09.VSD.Parada_Remota_PD": {
                    "type": "BOOL"
                },
                "CLUSTER2.W09.VSD.Reset_Remoto_PD": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "96f1a469e6be7df5",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Confirmacion escritura",
        "vartable": {
            "": {
                "CLUSTER.W01.VSD.Confirmaciones_Escritura.0": {
                    "type": "BOOL"
                },
                "CLUSTER.W02.VSD.Confirmaciones_Escritura.0": {
                    "type": "BOOL"
                },
                "CLUSTER.W03.VSD.Confirmaciones_Escritura.0": {
                    "type": "BOOL"
                },
                "CLUSTER.W04.VSD.Confirmaciones_Escritura.0": {
                    "type": "BOOL"
                },
                "CLUSTER.W05.VSD.Confirmaciones_Escritura.0": {
                    "type": "BOOL"
                },
                "CLUSTER.W06.VSD.Confirmaciones_Escritura.0": {
                    "type": "BOOL"
                },
                "CLUSTER.W07.VSD.Confirmaciones_Escritura.0": {
                    "type": "BOOL"
                },
                "CLUSTER.W08.VSD.Confirmaciones_Escritura.0": {
                    "type": "BOOL"
                },
                "CLUSTER.W09.VSD.Confirmaciones_Escritura.0": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "7d3dc82b6aad9166",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Habilitar disparo de pozo",
        "vartable": {
            "": {
                "Disparo_Breaker_Pozo1": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo2": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo3": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo4": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo5": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo6": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo7": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo8": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo9": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo10": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo11": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo12": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo13": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo14": {
                    "type": "BOOL"
                },
                "Disparo_Breaker_Pozo15": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "a947cc9457fcd9b0",
        "type": "ui_group",
        "name": "CONFIGURACIÓN DE SHUTDOWN GENERAL DE POZOS",
        "tab": "dfe3c396.db089",
        "order": 4,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "8786933fa91b0f68",
        "type": "ui_spacer",
        "z": "a70735f4.fb54d8",
        "name": "spacer",
        "group": "a947cc9457fcd9b0",
        "order": 14,
        "width": "6",
        "height": 1
    },
    {
        "id": "d3a6ac1024bb182d",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Shutdown",
        "vartable": {
            "": {
                "Tiempo_Disparo_YY": {
                    "type": "DINT"
                },
                "Tiempo_Disparo_YY_2": {
                    "type": "DINT"
                },
                "Tiempo_Disparo_YY_3": {
                    "type": "DINT"
                },
                "TON_RECUPERACION": {
                    "type": "DINT"
                },
                "RESET_DISPARO": {
                    "type": "BOOL"
                },
                "HABILITAR_PIT_HH": {
                    "type": "BOOL"
                },
                "HABILITAR_PIT_H": {
                    "type": "BOOL"
                },
                "HABILITAR_PIT_L": {
                    "type": "BOOL"
                },
                "HABILITAR_PIT_LL": {
                    "type": "BOOL"
                },
                "VALOR_INGRESADO_PIT_HH_HMI": {
                    "type": "REAL"
                },
                "VALOR_INGRESADO_PIT_H_HMI": {
                    "type": "REAL"
                },
                "VALOR_INGRESADO_PIT_L_HMI": {
                    "type": "REAL"
                },
                "VALOR_INGRESADO_PIT_LL_HMI": {
                    "type": "REAL"
                }
            }
        }
    },
    {
        "id": "2a41a00be7f37a48",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Estatus Shutdown",
        "vartable": {
            "": {
                "TON_1.DN": {
                    "type": "BOOL"
                },
                "TON_2.DN": {
                    "type": "BOOL"
                },
                "TON_3.DN": {
                    "type": "BOOL"
                },
                "RUB_CL001_110_HS_101.DI": {
                    "type": "BOOL"
                },
                "PERMISIVO.UPS_Comunicando": {
                    "type": "BOOL"
                },
                "RUB_CL001_110_PZIT_101.AlmLL": {
                    "type": "BOOL"
                },
                "PERMISIVO_COMUNICACIONES": {
                    "type": "BOOL"
                },
                "PERMISIVO.UPS_Bateria_Cargada": {
                    "type": "BOOL"
                },
                "RUB_CL001_110_PZIT_101.TimerAlarmHH.DN": {
                    "type": "BOOL"
                },
                "RUB_CL001_110_PZIT_101.TimerAlarmH.DN": {
                    "type": "BOOL"
                },
                "RUB_CL001_110_PZIT_101.TimerAlarmL.DN": {
                    "type": "BOOL"
                },
                "RUB_CL001_110_PZIT_101.TimerAlarmLL.DN": {
                    "type": "BOOL"
                },
                "RUB_CL001_110_PZIT_101.DeviceFail": {
                    "type": "BOOL"
                },
                "TON_1.ACC": {
                    "type": "DINT"
                },
                "TON_2.ACC": {
                    "type": "DINT"
                },
                "TON_3.ACC": {
                    "type": "DINT"
                },
                "CLUSTER.INST_MNF.PIT_Dev_Stat": {
                    "type": "BOOL"
                },
                "STATUS_INSTRUMENTO_CH.0": {
                    "type": "INT"
                },
                "STATUS_INSTRUMENTO_CH.1": {
                    "type": "INT"
                },
                "Activacion_Bit_Vigilante_de_Tension": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "12cee2ff021828a4",
        "type": "ui_group",
        "name": "ESTADO PERMISIVOS DE SHUTDOWN",
        "tab": "dfe3c396.db089",
        "order": 5,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "475ffd12568828cc",
        "type": "ui_group",
        "name": "Estado de presión en Manifold",
        "tab": "6a3fd4b.86cdb2c",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "45f9d764485f0eea",
        "type": "ui_spacer",
        "z": "a70735f4.fb54d8",
        "name": "spacer",
        "group": "c5f05af1.a4c158",
        "order": 9,
        "width": "7",
        "height": 1
    },
    {
        "id": "cfd625357d3b5bbc",
        "type": "ui_spacer",
        "z": "a409994f70cf4cc4",
        "name": "spacer",
        "group": "a947cc9457fcd9b0",
        "order": 10,
        "width": "24",
        "height": 1
    },
    {
        "id": "201b7e2b38326076",
        "type": "ui_spacer",
        "z": "a70735f4.fb54d8",
        "name": "spacer",
        "group": "a947cc9457fcd9b0",
        "order": 11,
        "width": "6",
        "height": 1
    },
    {
        "id": "c7cb175c441a10d6",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 1,
        "width": 20,
        "height": 1
    },
    {
        "id": "dce1552b7ba28b55",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "7078a4343666e6b1",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "4f1d198fac5bcae1",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "36233896a5ca38df",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 7,
        "width": 20,
        "height": 1
    },
    {
        "id": "bdc875e3686229e1",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 8,
        "width": 1,
        "height": 1
    },
    {
        "id": "d234aa52cf470e63",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "bf038f6e71714a93",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "ddaba090062a49be",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 13,
        "width": 20,
        "height": 1
    },
    {
        "id": "9a4210a8b24c9908",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 14,
        "width": 6,
        "height": 1
    },
    {
        "id": "e188d10838966414",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 16,
        "width": 6,
        "height": 1
    },
    {
        "id": "4090940d1dd7515b",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 18,
        "width": 6,
        "height": 1
    },
    {
        "id": "fd0ff95d9fc4b06a",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 20,
        "width": 6,
        "height": 1
    },
    {
        "id": "483b36ce6dfbaa8a",
        "type": "ui_spacer",
        "z": "85d78935bd11be27",
        "name": "spacer",
        "group": "6a2538cbc7b3b5fc",
        "order": 22,
        "width": 6,
        "height": 1
    },
    {
        "id": "6a2538cbc7b3b5fc",
        "type": "ui_group",
        "name": "Consulta ",
        "tab": "6b1855e.396d6ac",
        "order": 1,
        "disp": false,
        "width": "20",
        "collapse": false
    },
    {
        "id": "e3d7c8c1d1b0ce27",
        "type": "ui_group",
        "name": "Navbar",
        "tab": "55735b30.433a74",
        "order": 1,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "b8f5aab875cab5af",
        "type": "ui_group",
        "name": "Estado CCP",
        "tab": "55735b30.433a74",
        "order": 3,
        "disp": false,
        "width": "24",
        "collapse": false
    },
    {
        "id": "840b5464d21970fd",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Status_COM_HMI_PLC",
        "vartable": {
            "": {
                "Comunicacion_HMI_PLC": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "9672b85c4451585b",
        "type": "eth-ip endpoint",
        "address": "20.0.51.18",
        "slot": "0",
        "cycletime": "500",
        "name": "Status_COM_HMI_PLC",
        "vartable": {
            "": {
                "Status_Com_PLC_HMI_1.TT": {
                    "type": "BOOL"
                }
            }
        }
    },
    {
        "id": "29f4d8a3157bbd64",
        "type": "ui_tab",
        "name": "Instrumentación pozos",
        "icon": "fa-area-chart",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "489a7baf80e178f1",
        "type": "ui_group",
        "name": "SCP 5",
        "tab": "29f4d8a3157bbd64",
        "order": 5,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "47fd3d535dbc0b67",
        "type": "ui_group",
        "name": "SCP 6",
        "tab": "29f4d8a3157bbd64",
        "order": 6,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "ce04ff9503714276",
        "type": "ui_group",
        "name": "SCP 7",
        "tab": "29f4d8a3157bbd64",
        "order": 7,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "b87436fa5ffcfaff",
        "type": "ui_group",
        "name": "SCP 8",
        "tab": "29f4d8a3157bbd64",
        "order": 8,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "293ed8c46314aa68",
        "type": "ui_group",
        "name": "SCP 9",
        "tab": "29f4d8a3157bbd64",
        "order": 9,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "ce58b093f470f8dc",
        "type": "ui_group",
        "name": "SCP 1",
        "tab": "29f4d8a3157bbd64",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "26480ddee04313ab",
        "type": "ui_group",
        "name": "SCP 2",
        "tab": "29f4d8a3157bbd64",
        "order": 2,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "1da706f94581f20c",
        "type": "ui_group",
        "name": "SCP 3",
        "tab": "29f4d8a3157bbd64",
        "order": 3,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "e7646dae311fa50e",
        "type": "ui_group",
        "name": "SCP 4",
        "tab": "29f4d8a3157bbd64",
        "order": 4,
        "disp": false,
        "width": "8",
        "collapse": false
    },
    {
        "id": "3a8d48e9f6cc41d8",
        "type": "ui_spacer",
        "z": "f10e7ce.d57828",
        "name": "spacer",
        "group": "f70aaec9.581ea",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "1121e76fb8b4cae4",
        "type": "ui_spacer",
        "z": "f10e7ce.d57828",
        "name": "spacer",
        "group": "f70aaec9.581ea",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "11e1c62b3ff48406",
        "type": "ui_spacer",
        "z": "f10e7ce.d57828",
        "name": "spacer",
        "group": "ad633f3f.37b43",
        "order": 5,
        "width": "6",
        "height": "2"
    },
    {
        "id": "34190196f3c2b24f",
        "type": "ui_spacer",
        "z": "f10e7ce.d57828",
        "name": "spacer",
        "group": "ad633f3f.37b43",
        "order": 7,
        "width": "6",
        "height": "2"
    },
    {
        "id": "baba8ac36e7a5080",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "a0a6adbcc6ab62b7",
        "order": 16,
        "width": 12,
        "height": 1
    },
    {
        "id": "8e55cc71154d52bc",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "a0a6adbcc6ab62b7",
        "order": 17,
        "width": 12,
        "height": 1
    },
    {
        "id": "dcaee208a8777ada",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "8c8bf20c342c890a",
        "order": 5,
        "width": 6,
        "height": 1
    },
    {
        "id": "74fabda03a8e807e",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "8c8bf20c342c890a",
        "order": 6,
        "width": 6,
        "height": 1
    },
    {
        "id": "f5263c661206ef32",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "8c8bf20c342c890a",
        "order": 7,
        "width": 6,
        "height": 1
    },
    {
        "id": "e6c6c2324b701180",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "8c8bf20c342c890a",
        "order": 8,
        "width": 6,
        "height": 1
    },
    {
        "id": "d551dd0f4c83c12c",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "8c8bf20c342c890a",
        "order": 9,
        "width": 6,
        "height": 1
    },
    {
        "id": "280788f55edd6289",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "8c8bf20c342c890a",
        "order": 10,
        "width": 6,
        "height": 1
    },
    {
        "id": "f8de665ac828e090",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "8c8bf20c342c890a",
        "order": 11,
        "width": 6,
        "height": 1
    },
    {
        "id": "2e5bda9cee3a0547",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "8c8bf20c342c890a",
        "order": 12,
        "width": 6,
        "height": 1
    },
    {
        "id": "14feccd8bb5ac4ac",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "0c75fbb95a827f65",
        "order": 15,
        "width": 12,
        "height": 1
    },
    {
        "id": "549191eef95b81d4",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "a714dc549bfb0a23",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "ca02a86178f1ef90",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "82879a916204025a",
        "order": 2,
        "width": 14,
        "height": 1
    },
    {
        "id": "213468fc51c50252",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "82879a916204025a",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "ca8546a0797fcd61",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "82879a916204025a",
        "order": 6,
        "width": 14,
        "height": 1
    },
    {
        "id": "e91ce418e1b2cfe2",
        "type": "ui_spacer",
        "z": "e997ba3b.48cc18",
        "name": "spacer",
        "group": "82879a916204025a",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "e73d17ea.0c5538",
        "type": "template",
        "z": "18e29a89.99dbb5",
        "name": "Table",
        "field": "Table",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"table-responsive table-sm\">\n            <button class=\"btn\" \"btn-outline-primary\">  \n                <table class=\"table table-bordered table-striped\">\n                    <tbody>\n                        <tr>\n                            <td>{{Hz}}<strong> Hz</strong></td>\n                            <td>{{kW}}<strong> kW</strong></td>\n                        </tr>\n                        <tr>\n                            <td>{{A_VSD}}<strong> A [VSD]</strong></td>\n                            <td>{{V_VSD}}<strong> V [VSD]</strong></td>\n                        </tr>\n                        <tr>\n                            <td>{{A_Tx}}<strong> A [Tx]</strong></td>\n                            <td>{{V_Tx}}<strong> V [TX]</strong></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </button> \n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 140,
        "y": 30,
        "wires": [
            [
                "d9805c57.f5aa2"
            ]
        ]
    },
    {
        "id": "50aa357a.1187dc",
        "type": "template",
        "z": "18e29a89.99dbb5",
        "name": "Template Bootstrap",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n    <head>\n        <!-- Required meta tags -->\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    \n        <!-- Bootstrap CSS -->\n        <link rel=\"stylesheet\" href=\"http://aic.local:1880/bootstrap/dist/css/bootstrap.min.css\">\n    </head>\n    <body>\n        <div>\n            <div style=\"margin-top:5px;\" ng-bind-html=\"msg.ALS\"></div>\n            <div ng-bind-html=\"msg.Table\"></div>\n            <div ng-bind-html=\"msg.Alert\"></div>\n            <style>\n                td,h5 {text-align:center;}\n            </style>\n        </div>\n        <!-- Optional JavaScript -->\n        <!-- Option 1: jQuery and Bootstrap Bundle (includes Popper) -->\n        <script src=\"http://aic.local:1880/bootstrap/dist/js/bootstrap.bundle.min.js\"></script>\n    </body>\n</html>",
        "output": "str",
        "x": 540,
        "y": 30,
        "wires": [
            []
        ]
    },
    {
        "id": "b5e47c05.30261",
        "type": "template",
        "z": "18e29a89.99dbb5",
        "name": "Alert",
        "field": "Alert",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n        <div class=\"alert {{alert}}\" role=\"alert\">\n            <strong>{{alertMsg}}</strong>\n        </div>\n</div>",
        "output": "str",
        "x": 260,
        "y": 30,
        "wires": [
            []
        ]
    },
    {
        "id": "29e95d0.9ebdda4",
        "type": "template",
        "z": "18e29a89.99dbb5",
        "name": "ALS",
        "field": "ALS",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <h5>{{wellName}} <span class=\"badge badge-secondary\">{{type}}</span></h5>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 380,
        "y": 30,
        "wires": [
            [
                "50aa357a.1187dc"
            ]
        ]
    },
    {
        "id": "d9805c57.f5aa2",
        "type": "template",
        "z": "18e29a89.99dbb5",
        "name": "Alert",
        "field": "Alert",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"table-responsive table-sm\">\n    <table class=\"table table-bordered table-striped\">\n        <tbody>\n            <tr class=\"alert {{alert}}\">\n                <td id=\"Alert\"><strong>{{alertMsg}}</strong></td>\n            </tr>\n            <div align=\"center\"><strong>{{VSD}}</strong></div>\n        </tbody>\n    </table>\n</div>\n",
        "output": "str",
        "x": 260,
        "y": 70,
        "wires": [
            [
                "29e95d0.9ebdda4"
            ]
        ]
    },
    {
        "id": "8f64c5d0.2e2de8",
        "type": "function",
        "z": "2657da37.013b66",
        "name": "Login Autentication",
        "func": "//Get user data from flow context\nvar user            = flow.get(\"user\")|| \"null\";\nvar password        = flow.get(\"password\")||\"null\";\n\n//User status\nvar UserStatus = global.get(\"UserStatus\",\"memoryOnly\")||0;\n\n// Admin user\nvar AdminUser       = \"slacol\";\nvar AdminPassword   = \"1278\";\n\n// Operator user\nvar OperUser        = \"Oper\";\nvar OperPassword    = \"1234\";\n\nif(!UserStatus){\n    \n    // Acceso Nivel 1\n    if(user == AdminUser && password == AdminPassword){\n        global.set(\"UserStatus\", 1,\"memoryOnly\");\n        msg.name = \"Admin\";\n        msg.userstatus = \"Sesión iniciada\"\n    }\n    // Acceso Nivel 2\n    else if(user == OperUser && password == OperPassword){\n        global.set(\"UserStatus\", 2, \"memoryOnly\");\n        msg.name = \"Operator\";\n        msg.userstatus = \"Sesión iniciada\"\n    }\n    else{\n        msg.error = \"Usuario o contraseña incorrectos: Por favor llene los campos nuevamente\";\n    }\n}\nelse{\n    msg.error = \"Usuario activo, por favor cierre sesión primero\";\n}\n\nmsg.payload = global.get(\"UserStatus\",\"memoryOnly\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 110,
        "wires": [
            [
                "a516f6f7.9f9d28",
                "80a4c506.a81c78",
                "1c0ced5.0f93b13"
            ]
        ]
    },
    {
        "id": "51d00666.b504b8",
        "type": "ui_toast",
        "z": "2657da37.013b66",
        "position": "top right",
        "displayTime": "3",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 900,
        "y": 40,
        "wires": []
    },
    {
        "id": "a516f6f7.9f9d28",
        "type": "switch",
        "z": "2657da37.013b66",
        "name": "Error",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 560,
        "y": 40,
        "wires": [
            [
                "a6a652a5.1b0aa"
            ]
        ]
    },
    {
        "id": "a6a652a5.1b0aa",
        "type": "change",
        "z": "2657da37.013b66",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "error",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 40,
        "wires": [
            [
                "51d00666.b504b8"
            ]
        ]
    },
    {
        "id": "80a4c506.a81c78",
        "type": "switch",
        "z": "2657da37.013b66",
        "name": "Name",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 560,
        "y": 80,
        "wires": [
            [
                "2a0bc418.e8756c"
            ]
        ]
    },
    {
        "id": "2a0bc418.e8756c",
        "type": "change",
        "z": "2657da37.013b66",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "name: userstatus",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "name",
                "fromt": "str",
                "to": "name",
                "tot": "msg"
            },
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "userstatus",
                "fromt": "str",
                "to": "userstatus",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 80,
        "wires": [
            [
                "b7161c3b.bb7ad"
            ]
        ]
    },
    {
        "id": "b7161c3b.bb7ad",
        "type": "ui_toast",
        "z": "2657da37.013b66",
        "position": "top right",
        "displayTime": "3",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 900,
        "y": 80,
        "wires": []
    },
    {
        "id": "aa47304a.d40cf",
        "type": "ui_toast",
        "z": "2657da37.013b66",
        "position": "top right",
        "displayTime": "3",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 600,
        "y": 200,
        "wires": []
    },
    {
        "id": "1c0ced5.0f93b13",
        "type": "change",
        "z": "2657da37.013b66",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::UserStatus",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "7ac7e5a3.05d60c",
        "type": "change",
        "z": "2657da37.013b66",
        "name": "Logout",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "flow",
                "to": "null",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "password",
                "pt": "flow",
                "to": "null",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::UserStatus",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "userstatus",
                "pt": "msg",
                "to": "Sesión cerrada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sesión cerrada",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 150,
        "wires": [
            [
                "1c0ced5.0f93b13",
                "aa47304a.d40cf"
            ]
        ]
    },
    {
        "id": "f771788a.2843f8",
        "type": "switch",
        "z": "2657da37.013b66",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "user",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "password",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Iniciar sesión",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Cerrar sesión",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 130,
        "y": 90,
        "wires": [
            [
                "9804cbde.aea688"
            ],
            [
                "2ae89933.84dea6"
            ],
            [
                "8f64c5d0.2e2de8"
            ],
            [
                "7ac7e5a3.05d60c"
            ]
        ]
    },
    {
        "id": "9804cbde.aea688",
        "type": "change",
        "z": "2657da37.013b66",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "user",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 30,
        "wires": [
            []
        ]
    },
    {
        "id": "2ae89933.84dea6",
        "type": "change",
        "z": "2657da37.013b66",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "password",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 70,
        "wires": [
            []
        ]
    },
    {
        "id": "d42179e5.c93338",
        "type": "template",
        "z": "5df787f2.bf5f88",
        "name": "Template",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n    <head>\n        <!-- Required meta tags -->\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    \n        <!-- Bootstrap CSS -->\n        <link rel=\"stylesheet\" href=\"http://aic.local:1880/bootstrap/dist/css/bootstrap.min.css\">\n    </head>\n    <body>\n        <div class=\"container\">\n            <div class=\"row d-flex justify-content-center\">\n                <div class=\"col-lg-9 col-md-9 mt-3\">\n                    <svg width=\"92%\" height=\"100%\" viewBox=\"-0.5 -0.5 602 217\" preserveAspectRatio=\"xMidYMid meet\"> \n                        {{{svg}}}\n                    </svg>\n                </div>\n            </div>\n        </div>\n        \n        <!-- Optional JavaScript -->\n        <script src=\"http://aic.local:1880/bootstrap/dist/js/bootstrap.bundle.min.js\"></script>\n    </body>\n</html>",
        "output": "str",
        "x": 260,
        "y": 30,
        "wires": [
            []
        ]
    },
    {
        "id": "a2e52656.c45408",
        "type": "template",
        "z": "5df787f2.bf5f88",
        "name": "SVG",
        "field": "svg",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" content=\"&lt;mxfile host=&quot;Electron&quot; modified=&quot;2021-07-04T18:59:52.823Z&quot; agent=&quot;5.0 (Macintosh; Intel Mac OS X 10_16_0) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/12.9.13 Chrome/80.0.3987.163 Electron/8.2.1 Safari/537.36&quot; etag=&quot;1OluWO9qAZzVOdAMDwA4&quot; version=&quot;12.9.13&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;3OBx4FIYkCEcJKEvSmJ7&quot; name=&quot;Página-1&quot;&gt;7VxRc9o4EP41PObGkowxjwnt9WaO69w0M+2zagujVliuLAK5X38SlgFbTgipYxuiF2J2pZX87X6rlWwyQrPV9pPA2fIfHhM2gl68HaEPIwgnYag+teCxEASeXwgSQeNCBA6Ce/ofMULPSNc0JnmloeScSZpVhRFPUxLJigwLwTfVZgvOqqNmOCGW4D7CzJZ+o7FcFtIQTg7yvwhNluXIIJgWmhUuG5s7yZc45psjEfo4QjPBuSyuVtsZYRq7Epei359PaPcTEySVL+nw48ff4ScaJtk2+HJ/+ytK5ht2E4wLMw+Yrc0dm9nKxxKCRPB1ZpoRIcm2CXj8vWzu2RMD+9tVYUL4ikjxqJoYQ6HpYSJkbKa0OcAdeKbJ8ghqCExDbFyc7C0fUFAXBogzQAGT06CQNL7V4aW+RQznOY1G6C6XWEhbvJQrNf4HsGsh+M99JClQ7grLJLbC8ADfM56zQT2CbdyAWikThGFJH6qDNiFpRviXUzWdp3wGvZovcr4WETGdjoPyhJ2aGYVnQqRlZufV/T3/hqNDy9EPc/BZSb5aDlckSGOirXnKa5slleQ+w5HWblTmq7r5Sba82q3GjF/Fy7e5EjZRxXsjpsCpY8oJpgDUElXqhsJuuVKOXuEKHDJXplW8gNczWXy3rJwkS1vrSt0Q8Ltli9+0sqAhswXUlhYQ9EwXFJxFl5Sn5DlSoIslRVsLSL14sAy99Qpi57/PQyNDGfxTO/j9TtcKV1idokWdF/V66MW0qPOrW1aMm+oqMIdDXiqmw9qFjJEjyymywOkfk6C6wNdLohcTxrbV8V5kDBs4A+fogjjT+24EnMUZu7pSSnNaC9AVF1uv5Ijf78GWzY85GBoxSiL0XGmN7W3GTN2adzs0vMoAndQSSc955LxC9d3s0l5bjdYTR8crK7Cr0bnt0GFkjknfmcPez87gBWWOBvy6fXhw3nnou0kdry7M67mj60NPaB96ztHQyFBig/rOHv5Z0f8eN60ItkSMuqGuj3hsXlzUQtHElW4PeOy3VPQZ2ZD3+/U3G/o+Iwua9vsBkzpdZDitQBj8WuuXku4WPJU3C7yiTN2EClY1twCvsh1sCPkaScIeiKQRtjS69e5zZyTfnRRoEwBm25quGFcrUy5WmFXVG4OO1vv6PSCjZERKIm7U5COaJo39lU/lDWY0SQt1pDxKRFVNVaykxrx3NLWdUgqc5gtltDSvKpCywYaLuDr6cfcF41g29IppnjFs4KQpo1pX4q2uEv1X79W9n99K/yh/Fy4qtKX4u3BOa8lpdQc4ZgyaGV9vHTUcNa4I5Dap8eVJbgyyTvLL5yJHhREAz+wp2q+Mmp4euiAfZpBrR7nKyKX/qwK5PWa4yshR46pAbpMal1oZ7X8513eh1HRi7WJ+mDGvz0ZdoeRWg6sCuT1muELJUeOqQG6TGhdeKAH4dpWS+nr4xX7xfPjwbw/Qx/8B&lt;/diagram&gt;&lt;/mxfile&gt;\" style=\"background-color: rgb(255, 255, 255);\"><defs/><g><path d=\"M 80 196.76 L 80 33.24\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"stroke\"/><path d=\"M 80 202.76 L 76 194.76 L 80 196.76 L 84 194.76 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"all\"/><path d=\"M 80 27.24 L 84 35.24 L 80 33.24 L 76 35.24 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"all\"/><rect x=\"40\" y=\"45\" width=\"80\" height=\"20\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 55px; margin-left: 41px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \">{{VL1N}} V</div></div></div></foreignObject><text x=\"80\" y=\"59\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">{{VL1N}}V</text></switch></g><path d=\"M 130 196.76 L 130 93.24\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"stroke\"/><path d=\"M 130 202.76 L 126 194.76 L 130 196.76 L 134 194.76 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"all\"/><path d=\"M 130 87.24 L 134 95.24 L 130 93.24 L 126 95.24 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"all\"/><rect x=\"90\" y=\"105\" width=\"80\" height=\"20\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 115px; margin-left: 91px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \">{{VL2N}} V</div></div></div></foreignObject><text x=\"130\" y=\"119\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">{{VL2N}} V</text></switch></g><path d=\"M 180 196.76 L 180 153.24\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"stroke\"/><path d=\"M 180 202.76 L 176 194.76 L 180 196.76 L 184 194.76 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"all\"/><path d=\"M 180 147.24 L 184 155.24 L 180 153.24 L 176 155.24 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"all\"/><rect x=\"140\" y=\"165\" width=\"80\" height=\"20\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 175px; margin-left: 141px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \">{{VL3N}} V</div></div></div></foreignObject><text x=\"180\" y=\"179\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">{{VL3N}} V</text></switch></g><path d=\"M 30 205 L 240 205\" fill=\"none\" stroke=\"#000000\" stroke-width=\"3\" stroke-miterlimit=\"10\" pointer-events=\"stroke\"/><rect x=\"0\" y=\"195\" width=\"40\" height=\"20\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 205px; margin-left: 1px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \">N</div></div></div></foreignObject><text x=\"20\" y=\"209\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">N</text></switch></g><path d=\"M 230 76.76 L 230 33.24\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"stroke\"/><path d=\"M 230 82.76 L 226 74.76 L 230 76.76 L 234 74.76 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"all\"/><path d=\"M 230 27.24 L 234 35.24 L 230 33.24 L 226 35.24 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"all\"/><rect x=\"190\" y=\"45\" width=\"80\" height=\"20\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 55px; margin-left: 191px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \">{{VL1L2}} V</div></div></div></foreignObject><text x=\"230\" y=\"59\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">{{VL1L2}} V</text></switch></g><path d=\"M 229.76 136.76 L 229.76 93.24\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"stroke\"/><path d=\"M 229.76 142.76 L 225.76 134.76 L 229.76 136.76 L 233.76 134.76 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"all\"/><path d=\"M 229.76 87.24 L 233.76 95.24 L 229.76 93.24 L 225.76 95.24 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"all\"/><rect x=\"190\" y=\"105\" width=\"80\" height=\"20\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 115px; margin-left: 191px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \">{{VL2L3}} V</div></div></div></foreignObject><text x=\"230\" y=\"119\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">{{VL2L3}} V</text></switch></g><path d=\"M 30 25 L 480 25\" fill=\"none\" stroke=\"#000000\" stroke-width=\"3\" stroke-miterlimit=\"10\" pointer-events=\"stroke\"/><rect x=\"0\" y=\"15\" width=\"40\" height=\"20\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 25px; margin-left: 1px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \">L1</div></div></div></foreignObject><text x=\"20\" y=\"29\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">L1</text></switch></g><rect x=\"370\" y=\"15\" width=\"80\" height=\"20\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 25px; margin-left: 371px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \">{{CL1}} A</div></div></div></foreignObject><text x=\"410\" y=\"29\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">{{CL1}} A</text></switch></g><path d=\"M 30 85 L 480 85\" fill=\"none\" stroke=\"#000000\" stroke-width=\"3\" stroke-miterlimit=\"10\" pointer-events=\"stroke\"/><rect x=\"0\" y=\"75\" width=\"40\" height=\"20\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 85px; margin-left: 1px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \">L2</div></div></div></foreignObject><text x=\"20\" y=\"89\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">L2</text></switch></g><rect x=\"370\" y=\"75\" width=\"80\" height=\"20\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 85px; margin-left: 371px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \">{{CL2}} A</div></div></div></foreignObject><text x=\"410\" y=\"89\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">{{CL2}} A</text></switch></g><path d=\"M 30 145 L 480 145\" fill=\"none\" stroke=\"#000000\" stroke-width=\"3\" stroke-miterlimit=\"10\" pointer-events=\"stroke\"/><rect x=\"0\" y=\"135\" width=\"40\" height=\"20\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 38px; height: 1px; padding-top: 145px; margin-left: 1px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \">L3</div></div></div></foreignObject><text x=\"20\" y=\"149\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">L3</text></switch></g><path d=\"M 320 136.76 L 320 33.24\" fill=\"none\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"stroke\"/><path d=\"M 320 142.76 L 316 134.76 L 320 136.76 L 324 134.76 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"all\"/><path d=\"M 320 27.24 L 324 35.24 L 320 33.24 L 316 35.24 Z\" fill=\"#000000\" stroke=\"#000000\" stroke-width=\"2\" stroke-miterlimit=\"10\" pointer-events=\"all\"/><rect x=\"370\" y=\"135\" width=\"80\" height=\"20\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 145px; margin-left: 371px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \">{{CL3}} A</div></div></div></foreignObject><text x=\"410\" y=\"149\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">{{CL3}} A</text></switch></g><rect x=\"280\" y=\"45\" width=\"80\" height=\"20\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 78px; height: 1px; padding-top: 55px; margin-left: 281px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \">{{VL1L3}} V</div></div></div></foreignObject><text x=\"320\" y=\"59\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">{{VL1L3}} V</text></switch></g><rect x=\"490\" y=\"0\" width=\"110\" height=\"50\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 25px; margin-left: 491px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \"><span style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; float: none ; display: inline\">{{L1_kW}} kW</span><br style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px\" /><span style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; float: none ; display: inline\">{{L1_kVA}} kVA</span><br style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px\" /><span style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; float: none ; display: inline\">{{L1_kVAR}} kVAR</span></div></div></div></foreignObject><text x=\"545\" y=\"29\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">L1 kW...</text></switch></g><rect x=\"490\" y=\"60\" width=\"110\" height=\"50\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 85px; margin-left: 491px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \"><span style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; float: none ; display: inline\">{{L2_kW}} kW</span><br style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px\" /><span style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; float: none ; display: inline\">{{L2_kVA}} kVA</span><br style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px\" /><span style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; float: none ; display: inline\">{{L2_kVAR}} kVAR</span></div></div></div></foreignObject><text x=\"545\" y=\"89\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">L2 kW...</text></switch></g><rect x=\"490\" y=\"120\" width=\"110\" height=\"50\" fill=\"#ffffff\" stroke=\"#000000\" pointer-events=\"all\"/><g transform=\"translate(-0.5 -0.5)\"><switch><foreignObject style=\"overflow: visible; text-align: left;\" pointer-events=\"none\" width=\"100%\" height=\"100%\" requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"><div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"display: flex; align-items: unsafe center; justify-content: unsafe center; width: 108px; height: 1px; padding-top: 145px; margin-left: 491px;\"><div style=\"box-sizing: border-box; font-size: 0; text-align: center; \"><div style=\"display: inline-block; font-size: 12px; font-family: Helvetica; color: #000000; line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; \"><span style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; float: none ; display: inline\">L3 kW</span><br style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px\" /><span style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; float: none ; display: inline\">{{L3_kVA}} kVA</span><br style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px\" /><span style=\"font-family: &quot;helvetica&quot; ; font-size: 12px ; font-style: normal ; font-weight: 400 ; letter-spacing: normal ; text-align: center ; text-indent: 0px ; text-transform: none ; word-spacing: 0px ; float: none ; display: inline\">{{L3_kVAR}} kVAR</span></div></div></div></foreignObject><text x=\"545\" y=\"149\" fill=\"#000000\" font-family=\"Helvetica\" font-size=\"12px\" text-anchor=\"middle\">L3 kW...</text></switch></g></g><switch><g requiredFeatures=\"http://www.w3.org/TR/SVG11/feature#Extensibility\"/><a transform=\"translate(0,-5)\" xlink:href=\"https://desk.draw.io/support/solutions/articles/16000042487\" target=\"_blank\"><text text-anchor=\"middle\" font-size=\"10px\" x=\"50%\" y=\"100%\">Viewer does not support full SVG 1.1</text></a></switch></svg>",
        "output": "str",
        "x": 130,
        "y": 30,
        "wires": [
            [
                "d42179e5.c93338"
            ]
        ]
    },
    {
        "id": "1083899a.1b4716",
        "type": "exec",
        "z": "11d568a7.09a5c7",
        "command": "vcgencmd measure_temp | egrep -o '[0-9]*\\.[0-9]*'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 80,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "9cc3f117.42857",
        "type": "exec",
        "z": "11d568a7.09a5c7",
        "command": "vcgencmd measure_clock arm | egrep -o '[0-9]{0,10}' | sed -n '1!p'",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 440,
        "y": 140,
        "wires": [
            [
                "3228637d.9e937c"
            ],
            [],
            []
        ]
    },
    {
        "id": "3228637d.9e937c",
        "type": "function",
        "z": "11d568a7.09a5c7",
        "name": "MHz",
        "func": "msg.payload={payload: msg.payload/1000000};\nreturn msg.payload;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 130,
        "wires": [
            []
        ]
    },
    {
        "id": "deabf4e0.a1b7e8",
        "type": "comment",
        "z": "11d568a7.09a5c7",
        "name": "Solicitud de datos de temperatura y frecuencia de la CPU",
        "info": "",
        "x": 320,
        "y": 30,
        "wires": []
    },
    {
        "id": "7b72117c.cc31b",
        "type": "function",
        "z": "5c22c23.3efb43c",
        "name": "Data",
        "func": "var Cluster             = global.get(\"Cluster\",\"memoryOnly\")||[];\nvar ClusterData         = global.get(\"Cluster\")||[];\n\nvar SCP                 = env.get(\"SCP\")||0;\nvar estatus             = Cluster[\"SCP\" + (SCP + 1)].VSD.Estado;\n\nmsg.Hz                  = (Cluster[\"SCP\" + (SCP + 1)].VSD.Frecuencia).toFixed(1);\nmsg.kW                  = (Cluster[\"SCP\" + (SCP + 1)].VSD.Potencia_Actual).toFixed(1);\nmsg.A_VSD               = (Cluster[\"SCP\" + (SCP + 1)].VSD.Corriente_VSD).toFixed(1);\nmsg.V_VSD               = (Cluster[\"SCP\" + (SCP + 1)].VSD.Voltaje_VSD).toFixed(1);\nmsg.A_Tx                = (Cluster[\"SCP\" + (SCP + 1)].VSD.Corriente_Motor).toFixed(1);\nmsg.V_Tx                = (Cluster[\"SCP\" + (SCP + 1)].VSD.Voltaje_Motor).toFixed(1);\nmsg.PIP                 = (Cluster[\"SCP\"+(SCP+1)].DHOLE.PIP).toFixed(1);\nmsg.Temperatura_Motor   = (Cluster[\"SCP\"+(SCP+1)].DHOLE.Temperatura_Motor).toFixed(1);\nmsg.Temperatura_Entrada = (Cluster[\"SCP\"+(SCP+1)].DHOLE.Temperatura_Entrada).toFixed(1);\nmsg.Vibracion           = (Cluster[\"SCP\"+(SCP+1)].DHOLE.Vibracion).toFixed(1);\nmsg.Corriente_Fuga      = (Cluster[\"SCP\"+(SCP+1)].DHOLE.Corriente_Fuga).toFixed(1);\nmsg.PDP                 = (Cluster[\"SCP\"+(SCP+1)].DHOLE.PDP).toFixed(1);\nmsg.Temperatura_Descarga = (Cluster[\"SCP\" + (SCP + 1)].DHOLE.Temperatura_Descarga).toFixed(1);\n\n\nmsg.payload             = getAlert();\nmsg.alert               = msg.payload[1];\nmsg.alertMsg            = msg.payload[0];\n\nmsg.type                = getClusterData(\"ALS\");        //ClusterData[SCP][\"ALS\"]       ||\"ESP\";\nmsg.wellName            = getClusterData(\"Nombre\");     //ClusterData[SCP][\"Nombre\"]    ||\"--\";\nmsg.VSD                 = getClusterData(\"Variador\");   //ClusterData[SCP][\"Variador\"]  ||\"--\";\n\nfunction getAlert(){\n    var resp=\"\";\n    switch (estatus){\n        case 0:\n            resp = [\"Equipo operativo!\",\"alert-success\"];\n            break;\n    \n        case 1:\n            resp = [\"Equipo detenido!\",\"alert-danger\"];\n            break;\n        \n        case 2:\n            resp = [\"VSD Alarma\",\"alert-warning\"];\n            break;\n        \n        case 3:\n            resp = [\"VSD Falla!\",\"alert-danger\"];\n            break;\n            \n        case 4:\n            resp = [\"VSD Falla COMM\",\"alert-warning\"];\n            break;\n        \n        case 5:\n            resp = [\"Equipo Apagado\",\"alert-dark\"];\n            break;\n            \n        case 6:\n            resp = [\"VSD Sin Tension\",\"alert-warning\"];\n            break;\n    }\n    return resp\n}\n\nfunction getClusterData(field){\n    try {\n        return ClusterData[SCP][field];\n    } \n    catch (error) {\n        console.error(\"--\");\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 30,
        "wires": [
            []
        ]
    },
    {
        "id": "274668eb.fc5d78",
        "type": "template",
        "z": "adf77ef5.3ae39",
        "name": "Menu datos operativos",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n    <head>\n        <!-- Required meta tags -->\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    \n        <!-- Bootstrap CSS -->\n        <link rel=\"stylesheet\" href=\"http://aic.local:1880/bootstrap/dist/css/bootstrap.min.css\">\n    </head>\n    <body>\n        <div class=\"container mt-2\">\n            {{{menu}}}\n        </div>\n        \n        <!-- Optional JavaScript -->\n        <script src=\"http://aic.local:1880/bootstrap/dist/js/bootstrap.bundle.min.js\"></script>\n    </body>\n</html>",
        "output": "str",
        "x": 1400,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "634a0b76.f67824",
        "type": "template",
        "z": "adf77ef5.3ae39",
        "name": "Menu PCP",
        "field": "menu",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"row\">\n    <div class=\"col\">\n        <ul class=\"nav nav-pills nav-fill flex-column flex-sm-row mb-3\" id=\"pills-tab\" role=\"tablist\">\n            <li class=\"nav-item\" role=\"presentation\">\n                <a class=\"nav-link active\" id=\"pills-datosOperativos-tab\" data-toggle=\"pill\" href=\"#pills-datosOperativos\" role=\"tab\" aria-controls=\"pills-datosOperativos\" aria-selected=\"true\">Datos operativos</a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n                <a class=\"nav-link\" id=\"pills-datosCabezal-tab\" data-toggle=\"pill\" href=\"#pills-datosCabezal\" role=\"tab\" aria-controls=\"pills-datosCabezal\" aria-selected=\"false\">Datos de cabezal</a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n                <a class=\"nav-link\" id=\"pills-datosElectricos-tab\" data-toggle=\"pill\" href=\"#pills-datosElectricos\" role=\"tab\" aria-controls=\"pills-datosElectricos\" aria-selected=\"false\">Datos eléctricos</a>\n            </li>\n        </ul>\n            <div class=\"tab-content\" id=\"pills-tabContent\">\n            <div class=\"tab-pane fade show active\" id=\"pills-datosOperativos\" role=\"tabpanel\" aria-labelledby=\"pills-datosOperativos-tab\">{{{datosOperativosPCP}}}</div>\n            <div class=\"tab-pane fade\" id=\"pills-datosCabezal\" role=\"tabpanel\" aria-labelledby=\"pills-datosCabezal-tab\">{{{datosCabezal}}}</div>\n            <div class=\"tab-pane fade\" id=\"pills-datosElectricos\" role=\"tabpanel\" aria-labelledby=\"pills-datosElectricos-tab\">{{{datosElectricosPCP}}}</div>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 960,
        "y": 20,
        "wires": [
            [
                "274668eb.fc5d78"
            ]
        ]
    },
    {
        "id": "35a910e4.14f9b",
        "type": "template",
        "z": "adf77ef5.3ae39",
        "name": "Menu ESP",
        "field": "menu",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"row\">\n    <div class=\"col\">\n        <ul class=\"nav nav-pills nav-fill flex-column flex-sm-row mb-3\" id=\"pills-tab\" role=\"tablist\">\n            <li class=\"nav-item\" role=\"presentation\">\n            <a class=\"nav-link active\" id=\"pills-datosOperativos-tab\" data-toggle=\"pill\" href=\"#pills-datosOperativos\" role=\"tab\" aria-controls=\"pills-datosOperativos\" aria-selected=\"true\">Datos operativos</a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n            <a class=\"nav-link\" id=\"pills-datosFondo-tab\" data-toggle=\"pill\" href=\"#pills-datosFondo\" role=\"tab\" aria-controls=\"pills-datosFondo\" aria-selected=\"false\">Datos de fondo</a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n            <a class=\"nav-link\" id=\"pills-datosCabezal-tab\" data-toggle=\"pill\" href=\"#pills-datosCabezal\" role=\"tab\" aria-controls=\"pills-datosCabezal\" aria-selected=\"false\">Datos de cabezal</a>\n            </li>\n            <li class=\"nav-item\" role=\"presentation\">\n            <a class=\"nav-link\" id=\"pills-datosElectricos-tab\" data-toggle=\"pill\" href=\"#pills-datosElectricos\" role=\"tab\" aria-controls=\"pills-datosElectricos\" aria-selected=\"false\">Datos eléctricos</a>\n            </li>\n            \n        </ul>\n            <div class=\"tab-content\" id=\"pills-tabContent\">\n            <div class=\"tab-pane fade show active\" id=\"pills-datosOperativos\" role=\"tabpanel\" aria-labelledby=\"pills-datosOperativos-tab\">{{{datosOperativosESP}}}</div>\n            <div class=\"tab-pane fade\" id=\"pills-datosFondo\" role=\"tabpanel\" aria-labelledby=\"pills-datosFondo-tab\">{{{datosFondoESP}}}</div>\n            <div class=\"tab-pane fade\" id=\"pills-datosCabezal\" role=\"tabpanel\" aria-labelledby=\"pills-datosCabezal-tab\">{{{datosCabezal}}}</div>\n            <div class=\"tab-pane fade\" id=\"pills-datosElectricos\" role=\"tabpanel\" aria-labelledby=\"pills-datosElectricos-tab\">{{{datosElectricosESP}}}</div>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 1180,
        "y": 60,
        "wires": [
            [
                "274668eb.fc5d78"
            ]
        ]
    },
    {
        "id": "2cb958f5.8816d8",
        "type": "template",
        "z": "adf77ef5.3ae39",
        "name": "Datos de cabezal PCP",
        "field": "datosCabezal",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Presión de cabezal</td>\n                        <td>50</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 550,
        "y": 20,
        "wires": [
            [
                "6291a1.ff42be6"
            ]
        ]
    },
    {
        "id": "fca473cb.6bca4",
        "type": "template",
        "z": "adf77ef5.3ae39",
        "name": "Datos de cabezal ESP",
        "field": "datosCabezal",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <tbody>\n                    <tr>\n                        <td>Presión de cabezal</td>\n                        <td><div ng-bind-html=\"msg.THP_PIT_PV\"></div></td>\n                        <td><strong>psi</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Temperatura de cabezal</td>\n                        <td><div ng-bind-html=\"msg.THT_TIT_PV\"></div></td>\n                        <td><strong>ºF</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 770,
        "y": 60,
        "wires": [
            [
                "21c69fe.b3cf76"
            ]
        ]
    },
    {
        "id": "6291a1.ff42be6",
        "type": "template",
        "z": "adf77ef5.3ae39",
        "name": "Datos eléctricos PCP",
        "field": "datosElectricosPCP",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n    <div class=\"row\">\n        <!-- Primera columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Tensión L1-N</td>\n                        <td>500</td>\n                    </tr>\n                    <tr>\n                        <td>Tensión L2-N</td>\n                        <td>50</td>\n                    </tr>\n                    <tr>\n                        <td>Tensión L3-N</td>\n                        <td>150</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <!-- Segunda columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Tensión L1-L2</td>\n                        <td>500</td>\n                    </tr>\n                    <tr>\n                        <td>Tensión L2-L3</td>\n                        <td>50</td>\n                    </tr>\n                    <tr>\n                        <td>Tensión L1-L3</td>\n                        <td>150</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <!-- Tercera columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Corriente L1</td>\n                        <td>500</td>\n                    </tr>\n                    <tr>\n                        <td>Corriente L2</td>\n                        <td>50</td>\n                    </tr>\n                    <tr>\n                        <td>Corriente L3</td>\n                        <td>150</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <!-- Cuarta columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Potencia L1</td>\n                        <td>500</td>\n                    </tr>\n                    <tr>\n                        <td>Potencia L2</td>\n                        <td>50</td>\n                    </tr>\n                    <tr>\n                        <td>Potencia L3</td>\n                        <td>150</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <!-- Segunda fila -->\n    <div class=\"row\">\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Tensión L-N</td>\n                        <td>50</td>\n                        <td>Tensión L-L</td>\n                        <td>50</td>\n                        <td>Corriente</td>\n                        <td>50</td>\n                        <td>Frecuencia</td>\n                        <td>50</td>\n                        <td>THD-I</td>\n                        <td>50</td>\n                    </tr>\n                    <tr>\n                        <td>Potencia Real</td>\n                        <td>50</td>\n                        <td>Potencia Activa</td>\n                        <td>50</td>\n                        <td>Potencia Reactiva</td>\n                        <td>50</td>\n                        <td>Cos ⏀</td>\n                        <td>50</td>\n                        <td>THD-V</td>\n                        <td>50</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 770,
        "y": 20,
        "wires": [
            [
                "634a0b76.f67824"
            ]
        ]
    },
    {
        "id": "21c69fe.b3cf76",
        "type": "template",
        "z": "adf77ef5.3ae39",
        "name": "Datos eléctricos ESP",
        "field": "datosElectricosESP",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n    <div class=\"row\">\n        <!-- Primera columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <tbody>\n                    <tr>\n                        <td>Tensión L1-N:</td>\n                        <td><div ng-bind-html=\"msg.Voltaje_L1_N\"></div></td>\n                        <td><strong>V</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Tensión L2-N:</td>\n                        <td><div ng-bind-html=\"msg.Voltaje_L2_N\"></div></td>\n                        <td><strong>V</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Tensión L3-N:</td>\n                        <td><div ng-bind-html=\"msg.Voltaje_L2_N\"></div></td>\n                        <td><strong>V</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <!-- Segunda columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n\n                <tbody>\n                    <tr>\n                        <td>Tensión L1-L2:</td>\n                        <td><div ng-bind-html=\"msg.Voltaje_L1_L2\"></div></td>\n                        <td><strong>V</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Tensión L2-L3:</td>\n                        <td><div ng-bind-html=\"msg.Voltaje_L2_L3\"></div></td>\n                        <td><strong>V</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Tensión L1-L3:</td>\n                        <td><div ng-bind-html=\"msg.Voltaje_L1_L3\"></div></td>\n                        <td><strong>V</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <!-- Tercera columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <tbody>\n                    <tr>\n                        <td>Corriente L1:</td>\n                        <td><div ng-bind-html=\"msg.Amp_L1\"></div></td>\n                        <td><strong>A</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Corriente L2:</td>\n                        <td><div ng-bind-html=\"msg.Amp_L2\"></div></td>\n                        <td><strong>A</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Corriente L3:</td>\n                        <td><div ng-bind-html=\"msg.Amp_L3\"></div></td>\n                        <td><strong>A</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <!-- Cuarta columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <tbody>\n                    <tr>\n                        <td>Potencia L1:</td>\n                        <td><div ng-bind-html=\"msg.KWATT_Act_L1\"></div></td>\n                        <td><strong>Kw</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Potencia L2:</td>\n                        <td><div ng-bind-html=\"msg.KWATT_Act_L2\"></div></td>\n                        <td><strong>Kw</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Potencia L3:</td>\n                        <td><div ng-bind-html=\"msg.KWATT_Act_L3\"></div></td>\n                        <td><strong>Kw</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <!-- Segunda fila -->\n    <div class=\"row\">\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <tbody>\n                    <tr>\n                        <td>Tensión L-N:</td>\n                        <td><div ng-bind-html=\"msg.Voltaje_L_N_Pro\"></div></td>\n                        <td><strong>V</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Tensión L-L:</td>\n                        <td><div ng-bind-html=\"msg.Voltaje_L_L_Pro\"></div></td>\n                        <td><strong>V</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Corriente:</td>\n                        <td><div ng-bind-html=\"msg.Amp_Pro\"></div></td>\n                        <td><strong>A</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <tbody>\n                    <tr>\n                        <td>Frecuencia:</td>\n                        <td><div ng-bind-html=\"msg.Hz_Act_Pro\"></div></td>\n                        <td><strong>Hz</strong></td>\n                    </tr>\n                    <tr>\n                        <td>THD-I:</td>\n                        <td><div ng-bind-html=\"msg.THD_I_Pro\"></div></td>\n                        <td><strong>%</strong></td>\n                    </tr>\n                    <tr>\n                        <td>THD-V</td>\n                        <td><div ng-bind-html=\"msg.THD_V_Pro\"></div></td>\n                        <td><strong>%</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>    \n        <div class=\"col\">    \n            <table class=\"table table-sm table-striped\">\n                <tbody>\n                    <tr>\n                        <td>P. Real</td>\n                        <td><div ng-bind-html=\"msg.KWATT_Act_Pro\"></div></td>\n                        <td><strong>Kw</strong></td>\n                    </tr>\n                    <tr>\n                        <td>P. Activa</td>\n                        <td><div ng-bind-html=\"msg.KVA_Act_Pro\"></div></td>\n                        <td><strong>KVA</strong></td>\n                    </tr>    \n                    <tr>    \n                        <td>P. Reactiva</td>\n                        <td><div ng-bind-html=\"msg.KVAr_Act_Pro\"></div></td>\n                        <td><strong>KVAR</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"col\">    \n            <table class=\"table table-sm table-striped\">\n                <tbody>\n                    <tr>\n                        <td>Cos ⏀</td>\n                        <td><div ng-bind-html=\"msg.FP_Pro\"></div></td>\n                        <td><strong></strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 990,
        "y": 60,
        "wires": [
            [
                "35a910e4.14f9b"
            ]
        ]
    },
    {
        "id": "d72e4baa.ca3748",
        "type": "template",
        "z": "adf77ef5.3ae39",
        "name": "Datos de fondo ESP",
        "field": "datosFondoESP",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n    <div class=\"row\">\n        <!-- Primera columna-->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Tensión de motor:</td>\n                        <td><div ng-bind-html=\"msg.Voltaje_Motor\"></div></td>\n                        <td><strong>V</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Corriente de motor:</td>\n                        <td><div ng-bind-html=\"msg.Corriente_Motor\"></div></td>\n                        <td><strong>A</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <!-- Segunda columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Presión de descarga:</td>\n                        <td><div ng-bind-html=\"msg.PDP\"></div></td>\n                        <td><strong>psi</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Presión de entrada</td>\n                        <td><div ng-bind-html=\"msg.PIP\"></div></td>\n                        <td><strong>psi</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Vibración general:</td>\n                        <td><div ng-bind-html=\"msg.Vibracion\"></div></td>\n                        <td><strong>G</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <!-- Tercera columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Temperatura de entrada:</td>\n                        <td><div ng-bind-html=\"msg.Temperatura_Descarga\"></div></td>\n                        <td><strong>°F</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Temperatura de descarga:</td>\n                        <td><div ng-bind-html=\"msg.Temperatura_Entrada\"></div></td>\n                        <td><strong>°F</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Temperatura de motor:</td>\n                        <td><div ng-bind-html=\"msg.Temperatura_Motor\"></div></td>\n                        <td><strong>°F</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 550,
        "y": 60,
        "wires": [
            [
                "fca473cb.6bca4"
            ]
        ]
    },
    {
        "id": "f3bbf84d.1fa568",
        "type": "template",
        "z": "adf77ef5.3ae39",
        "name": "Datos operativos PCP",
        "field": "datosOperativosPCP",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n    <div class=\"row\">\n        <!-- Primera columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Bus DC</td>\n                        <td>500</td>\n                    </tr>\n                    <tr>\n                        <td>Corriente</td>\n                        <td>50</td>\n                    </tr>\n                    <tr>\n                        <td>Potencia activa</td>\n                        <td>150</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <!-- Segunda columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>RPM motor</td>\n                        <td>500</td>\n                    </tr>\n                    <tr>\n                        <td>Tensión motor</td>\n                        <td>50</td>\n                    </tr>\n                    <tr>\n                        <td>Relación de reducción</td>\n                        <td>150</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <!-- Tercera columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>RPM bomba</td>\n                        <td>500</td>\n                    </tr>\n                    <tr>\n                        <td>Torque actual</td>\n                        <td>50</td>\n                    </tr>\n                    <tr>\n                        <td>Torque nominal</td>\n                        <td>150</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <!-- Segunda fila -->\n    <div class=\"row\">\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Temperatura del equipo</td>\n                        <td>50</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 330,
        "y": 20,
        "wires": [
            [
                "2cb958f5.8816d8"
            ]
        ]
    },
    {
        "id": "6678b886.73b968",
        "type": "template",
        "z": "adf77ef5.3ae39",
        "name": "Datos operativos ESP",
        "field": "datosOperativosESP",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n    <div class=\"row\">\n        <!-- Primera columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <tbody>\n                    <tr>\n                        <td>Bus DC:</td>\n                        <td><div ng-bind-html=\"msg.Voltaje_Bus_DC\"></div></td>\n                        <td><strong>V</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Frecuencia de salida:</td>\n                        <td><div ng-bind-html=\"msg.Frecuencia\"></div></td>\n                        <td><strong>Hz</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Potencia activa:</td>\n                        <td><div ng-bind-html=\"msg.KVA_Act_Pro\"></div></td>\n                        <td><strong>Kw</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <!-- Segunda columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Corriente primario:</td>\n                        <td><div ng-bind-html=\"msg.Corriente_VSD\"></div></td>\n                        <td><strong>A</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Tensión primario:</td>\n                        <td><div ng-bind-html=\"msg.Voltaje_VSD\"></div></td>\n                        <td><strong>V</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Ángulo:</td>\n                        <td><div ng-bind-html=\"msg.Factor_Potencia\"></div></td>\n                        <td><strong>V</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <!-- Tercera columna -->\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Corriente secundario:</td>\n                        <td><div ng-bind-html=\"msg.Corriente_Motor\"></div></td>\n                        <td><strong>A</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Tensión secundario:</td>\n                        <td><div ng-bind-html=\"msg.Voltaje_Motor\"></div></td>\n                        <td><strong>V</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Relación de transformación:</td>\n                        <td><div ng-bind-html=\"msg.Relacion_TX\"></div><strong></strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <!-- Segunda fila -->\n    <div class=\"row\">\n        <div class=\"col\">\n            <table class=\"table table-sm table-striped\">\n                <!--<thead>\n                    <tr>\n                        <th scope=\"col\">Parámetro</th>\n                        <th scope=\"col\">Valor</th>\n                    </tr>\n                </thead>-->\n                <tbody>\n                    <tr>\n                        <td>Temperatura del equipo:</td>\n                        <td><div ng-bind-html=\"msg.Voltaje_Motor\"></div></td>\n                        <td><strong>ºF</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 330,
        "y": 60,
        "wires": [
            [
                "d72e4baa.ca3748"
            ]
        ]
    },
    {
        "id": "6feadb49.4ff014",
        "type": "switch",
        "z": "adf77ef5.3ae39",
        "name": "",
        "property": "type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 150,
        "y": 40,
        "wires": [
            [
                "f3bbf84d.1fa568"
            ],
            [
                "6678b886.73b968"
            ]
        ]
    },
    {
        "id": "9ac00374.6d803",
        "type": "template",
        "z": "a3841896.e21cd8",
        "name": "Table",
        "field": "Table",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"table-responsive table-sm\">\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <td>THP: {{THP}}</td>\n                        <td><strong> psi</strong></td>\n                    </tr>\n                    <tr>\n                        <td>THT: {{THT}}</td>\n                        <td><strong> ºF</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "601160f3.c2785"
            ]
        ]
    },
    {
        "id": "601160f3.c2785",
        "type": "template",
        "z": "a3841896.e21cd8",
        "name": "ALS",
        "field": "ALS",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <h5>{{wellName}} <span class=\"badge badge-secondary\">{{type}}</span></h5>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 240,
        "y": 40,
        "wires": [
            [
                "1aecebc1.60fd74"
            ]
        ]
    },
    {
        "id": "1aecebc1.60fd74",
        "type": "template",
        "z": "a3841896.e21cd8",
        "name": "Template Bootstrap",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n    <head>\n        <!-- Required meta tags -->\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    \n        <!-- Bootstrap CSS -->\n        <link rel=\"stylesheet\" href=\"http://aic.local:1880/bootstrap/dist/css/bootstrap.min.css\">\n    </head>\n    <body>\n        <div class=\"mt-3\">\n            <div ng-bind-html=\"msg.ALS\"></div>\n            <div class=\"mt-2\" ng-bind-html=\"msg.Table\"></div>\n            <style>\n                td,h5 {text-align:center;}\n                #Alert{background-color: coral;}\n            </style>\n        </div>\n        <!-- Optional JavaScript -->\n        <!-- Option 1: jQuery and Bootstrap Bundle (includes Popper) -->\n        <script src=\"http://aic.local:1880/bootstrap/dist/js/bootstrap.bundle.min.js\"></script>\n    </body>\n</html>",
        "output": "str",
        "x": 400,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "8b151441.413e58",
        "type": "template",
        "z": "f0c3da0c.524418",
        "name": "Table",
        "field": "Table",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"table-responsive table-sm\">\n            <table class=\"table table-bordered table-striped\">\n                <tbody>\n                    <tr>\n                        <td>P. Entrada</td>\n                        <td>{{PIP}}<strong> psi</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Temp. Motor</td>\n                        <td>{{Temperatura_Motor}}<strong> ºF</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Temp. Entrada</td>\n                        <td>{{Temperatura_Entrada}}<strong> ºF</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Vib. General</td>\n                        <td>{{Vibracion}}<strong> G</strong></td>\n                    </tr>\n                    <tr>\n                        <td>Corr. Fuga</td>\n                        <td>{{Corriente_Fuga}}<strong> A</strong></td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 110,
        "y": 20,
        "wires": [
            [
                "f48dc8d9.4c4ea8"
            ]
        ]
    },
    {
        "id": "f48dc8d9.4c4ea8",
        "type": "template",
        "z": "f0c3da0c.524418",
        "name": "ALS",
        "field": "ALS",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <h5>{{wellName}} <span class=\"badge badge-secondary\">{{type}}</span></h5>\n        </div>\n    </div>\n</div>",
        "output": "str",
        "x": 240,
        "y": 40,
        "wires": [
            [
                "9dc007c5.140948"
            ]
        ]
    },
    {
        "id": "9dc007c5.140948",
        "type": "template",
        "z": "f0c3da0c.524418",
        "name": "Template Bootstrap",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n    <head>\n        <!-- Required meta tags -->\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    \n        <!-- Bootstrap CSS -->\n        <link rel=\"stylesheet\" href=\"http://aic.local:1880/bootstrap/dist/css/bootstrap.min.css\">\n    </head>\n    <body>\n        <div>\n            <div ng-bind-html=\"msg.ALS\"></div>\n            <div ng-bind-html=\"msg.Table\"></div>\n            <div ng-bind-html=\"msg.Alert\"></div>\n            <style>td,h5 {text-align:center;}</style>\n        </div>\n        \n        <!-- Optional JavaScript -->\n        <!-- Option 1: jQuery and Bootstrap Bundle (includes Popper) -->\n        <script src=\"http://aic.local:1880/bootstrap/dist/js/bootstrap.bundle.min.js\"></script>\n\n    \n    </body>\n</html>",
        "output": "str",
        "x": 400,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "dbfc0363.54898",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "POZO_02.VFD.Marca",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 120,
        "wires": []
    },
    {
        "id": "dc10ae36.9891c",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "POZO_03.VFD.Marca",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 180,
        "wires": []
    },
    {
        "id": "d3328da9.e913e",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "POZO_05.VFD.Marca",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 300,
        "wires": []
    },
    {
        "id": "8849090f.4e1158",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "POZO_09.VFD.Marca",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 540,
        "wires": []
    },
    {
        "id": "46ed483b.e6d4b8",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "POZO_07.VFD.Marca",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 420,
        "wires": []
    },
    {
        "id": "a7e19ed2.e38fa",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "POZO_06.VFD.Marca",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 360,
        "wires": []
    },
    {
        "id": "3d30ddb9.3bc712",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "POZO_04.VFD.Marca",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 240,
        "wires": []
    },
    {
        "id": "4d8ad5af.6a2c6c",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "POZO_08.VFD.Marca",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 480,
        "wires": []
    },
    {
        "id": "5c6293f5.b173ac",
        "type": "function",
        "z": "c8989d0a.49ea8",
        "g": "a0798509.56f3c8",
        "name": "Organizar datos por SCPx",
        "func": "var keys    = Object.keys(msg.payload);\nvar values  = Object.values(msg.payload);\n\nfor(var i=0; i<keys.length; i+=1){\n    keys[i] = keys[i].replace(\"CLUSTER2\",\"SCP1\");\n    keys[i] = keys[i].replace(\"CLUSTER\",\"SCP\");\n    \n    for(var j=0; j<=9; j+=1){\n        keys[i] = keys[i].replace(\".W0\"+j,j.toString());\n    }\n    global.set(\"Cluster.\"+keys[i],values[i],\"memoryOnly\");\n}\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 60,
        "wires": []
    },
    {
        "id": "b895bd39.5c6f9",
        "type": "inject",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 2620,
        "y": 520,
        "wires": [
            [
                "639ae60a.32c788",
                "d1bcaebfeab23d41"
            ]
        ]
    },
    {
        "id": "639ae60a.32c788",
        "type": "function",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "var Cluster     = global.get(\"Cluster\")||[];\nvar VSD         = [];\nvar Disponible  = [];\n\nfor(var i=0; i<Cluster.length; i+=1){\n    if (Cluster[i].Variador==\"ABB\"){\n        VSD[i]  = 1;\n    }\n    else if(Cluster[i].Variador==\"ABB_221\"){\n        VSD[i]  = 2;\n    } \n    else if(Cluster[i].Variador==\"SIEMENS\"){\n        VSD[i]  = 3;\n    }\n    else if (Cluster[i].Variador ==\"YASKAWA_APC\"){\n        VSD[i]  = 4;\n    }\n    else if (Cluster[i].Variador ==\"YASKAWA_QUANTUM\"){\n        VSD[i]  = 5;\n    }\n    else if(Cluster[i].Variador==\"CILA2S\"){\n        VSD[i]  = 8;\n    }\n    else if(Cluster[i].Variador==\"--\"){\n        VSD[i]  = 0;\n    }\n    \n/*Cluster disponible*/\n    \n    if (Cluster[i].Disponible==\"Si\"){\n        Disponible[i]  = true;\n    }\n    else if(Cluster[i].Disponible==\"No\"){\n        Disponible[i]  = false;\n    }\n}\n\nvar msg0 = { payload: VSD[0]};\nvar msg1 = { payload: VSD[1]};\nvar msg2 = { payload: VSD[2]};\nvar msg3 = { payload: VSD[3]};\nvar msg4 = { payload: VSD[4]};\nvar msg5 = { payload: VSD[5]};\nvar msg6 = { payload: VSD[6]};\nvar msg7 = { payload: VSD[7]};\nvar msg8 = { payload: VSD[8]};\n\nvar msg9 = { payload: Disponible[0]};\nvar msg10 = { payload: Disponible[1]};\nvar msg11 = { payload: Disponible[2]};\nvar msg12 = { payload: Disponible[3]};\nvar msg13 = { payload: Disponible[4]};\nvar msg14 = { payload: Disponible[5]};\nvar msg15 = { payload: Disponible[6]};\nvar msg16 = { payload: Disponible[7]};\nvar msg17 = { payload: Disponible[8]};\n\nreturn [msg0,msg1,msg2,msg3,msg4,msg5,msg6,msg7,msg8,msg9,msg10,msg11,msg12,msg13,msg14,msg15,msg16,msg17];",
        "outputs": 18,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2790,
        "y": 520,
        "wires": [
            [
                "7d30cf12da4436ae"
            ],
            [
                "a3304fe189ac5534"
            ],
            [
                "c8f7db8c090f487c"
            ],
            [
                "a34fdb46713774aa"
            ],
            [
                "b31bc1f6c1ac996b"
            ],
            [
                "944cb70486524c6c"
            ],
            [
                "3a1f59d6576c97d9"
            ],
            [
                "a820e0e50879eefa"
            ],
            [
                "e968026a22538edc"
            ],
            [
                "975d349f2b8645a6"
            ],
            [
                "6abc52547c500390"
            ],
            [
                "3e7b1927799ca742"
            ],
            [
                "a2b9177e0046d09a"
            ],
            [
                "deab7d13a291b654"
            ],
            [
                "2b8253bcf666b1eb"
            ],
            [
                "e75a1ed3ba54436f"
            ],
            [
                "90a983b6aa59a476"
            ],
            [
                "dcb5846eac15639a"
            ]
        ]
    },
    {
        "id": "89a2b1bf.899c3",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "CL1_HABILITACION",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 600,
        "wires": []
    },
    {
        "id": "55c142b4.be600c",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "CL2_HABILITACION",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 660,
        "wires": []
    },
    {
        "id": "7a2317bb.99f188",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "CL3_HABILITACION",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 720,
        "wires": []
    },
    {
        "id": "4cb842c7.6747fc",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "CL7_HABILITACION",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 960,
        "wires": []
    },
    {
        "id": "574c44c4.56c97c",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "CL6_HABILITACION",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 900,
        "wires": []
    },
    {
        "id": "987bf307.8775e",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "CL5_HABILITACION",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 840,
        "wires": []
    },
    {
        "id": "edab0245.4bf97",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "CL4_HABILITACION",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 780,
        "wires": []
    },
    {
        "id": "d4eaa542.9ff2f8",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "CL9_HABILITACION",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 1080,
        "wires": []
    },
    {
        "id": "86e1777f.bab858",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "CL8_HABILITACION",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 1020,
        "wires": []
    },
    {
        "id": "1b58a441.d2605c",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "g": "a0798509.56f3c8",
        "endpoint": "22187e2f.9cc252",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP6",
        "x": 110,
        "y": 310,
        "wires": [
            [
                "5c6293f5.b173ac"
            ]
        ]
    },
    {
        "id": "21ef4bd1.6191c4",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "g": "a0798509.56f3c8",
        "endpoint": "c91ced06.36697",
        "mode": "all",
        "variable": "CLUSTER.W01.VSD.Voltaje_VSD",
        "program": "",
        "name": "SCP1",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "5c6293f5.b173ac"
            ]
        ]
    },
    {
        "id": "bb4e5774.d8b198",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "g": "a0798509.56f3c8",
        "endpoint": "142e843a.d193dc",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP2",
        "x": 110,
        "y": 110,
        "wires": [
            [
                "5c6293f5.b173ac"
            ]
        ]
    },
    {
        "id": "7f0e3b9d.d38d24",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "g": "a0798509.56f3c8",
        "endpoint": "cf0ff6d3.44eb48",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP3",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "5c6293f5.b173ac"
            ]
        ]
    },
    {
        "id": "db07dff4.23755",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "g": "a0798509.56f3c8",
        "endpoint": "156aac7a.4ced64",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP4",
        "x": 110,
        "y": 210,
        "wires": [
            [
                "5c6293f5.b173ac"
            ]
        ]
    },
    {
        "id": "7f00280b.114ba8",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "g": "a0798509.56f3c8",
        "endpoint": "10df86fc.ea6c49",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP5",
        "x": 110,
        "y": 260,
        "wires": [
            [
                "5c6293f5.b173ac"
            ]
        ]
    },
    {
        "id": "7ecb5f7a.538eb",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "g": "a0798509.56f3c8",
        "endpoint": "13e2de8b.8b4d71",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP7",
        "x": 110,
        "y": 360,
        "wires": [
            [
                "5c6293f5.b173ac"
            ]
        ]
    },
    {
        "id": "e173641d.7e7c38",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a0798509.56f3c8",
        "endpoint": "fc2fa41.df31058",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP8",
        "x": 110,
        "y": 410,
        "wires": [
            []
        ]
    },
    {
        "id": "b34b9630.1b9f88",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a0798509.56f3c8",
        "endpoint": "1a87133f.85b96d",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP9",
        "x": 110,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "96bc7a3e.788358",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "endpoint": "85d5763f.045ac8",
        "variable": "POZO_01.VFD.Marca",
        "program": "",
        "name": "",
        "x": 3130,
        "y": 60,
        "wires": []
    },
    {
        "id": "9a082d5b.6a6e5",
        "type": "link in",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "name": "",
        "links": [
            "43030a29.bfdeb4"
        ],
        "x": 1045,
        "y": 520,
        "wires": [
            [
                "91831b1b.df61b8"
            ]
        ]
    },
    {
        "id": "91831b1b.df61b8",
        "type": "function",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "name": "Escritura referencia Remota",
        "func": "var Comandos    = global.get(\"Comandos\",\"memoryOnly\")||[];\nvar SCP    = global.get(\"SCP\",\"memoryOnly\")||[];\n\nvar Referencia=[];\n\nReferencia[SCP] = Comandos[SCP].Referencia;\n\nswitch (SCP) {\n  case 0:\n        var day = \"--\";\n        break;\n        \n  case 1:      \n        var msg0 =  { payload:Referencia[1]};\n        break;\n  case 2:      \n        var msg1 =  { payload:Referencia[2]};\n        break;   \n  case 3:      \n        var msg2 =  { payload:Referencia[3]};\n        break;       \n  case 4:            \n        var msg3 =  { payload:Referencia[4]};\n        break;        \n  case 5:     \n        var msg4 = { payload:Referencia[5]};\n        break;\n  case  6:\n        var msg5 = { payload:Referencia[6]};\n        break;\n  case  7:\n        var msg6 = { payload:Referencia[7]};\n        break;\n  case  8:\n        var msg7 = { payload:Referencia[8]};\n        break;\n  case  9:\n        var msg8 = { payload:Referencia[9]};\n}\n\nreturn [msg0,msg1,msg2,msg3,msg4,msg5,msg6,msg7,msg8];",
        "outputs": 9,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 520,
        "wires": [
            [
                "1ce6bb769779860f"
            ],
            [
                "cc3c6cfc2014303e"
            ],
            [
                "bce025532ac40c58"
            ],
            [
                "ce852a763d5dde26"
            ],
            [
                "c1b43ca09582f068"
            ],
            [
                "548b4b348cc28e92"
            ],
            [
                "9e1c66fb61c5314e"
            ],
            [
                "5a6d0e3e76ebce43"
            ],
            [
                "d5fbc2d84c809926"
            ]
        ]
    },
    {
        "id": "bb351043.dc5c7",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "endpoint": "64765732.d2c008",
        "variable": "CLUSTER.W01.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP1",
        "x": 1610,
        "y": 60,
        "wires": []
    },
    {
        "id": "491e3ffd.9afc5",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "endpoint": "64765732.d2c008",
        "variable": "CLUSTER.W06.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP6",
        "x": 1610,
        "y": 660,
        "wires": []
    },
    {
        "id": "e9a5670b.de2478",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "endpoint": "64765732.d2c008",
        "variable": "CLUSTER.W02.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP2",
        "x": 1610,
        "y": 180,
        "wires": []
    },
    {
        "id": "5e1fe9fd.eba2e8",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "endpoint": "64765732.d2c008",
        "variable": "CLUSTER.W03.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP3",
        "x": 1610,
        "y": 300,
        "wires": []
    },
    {
        "id": "f60c2283.77e35",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "endpoint": "64765732.d2c008",
        "variable": "CLUSTER.W07.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP7",
        "x": 1610,
        "y": 780,
        "wires": []
    },
    {
        "id": "145df53.ab3a50b",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "endpoint": "64765732.d2c008",
        "variable": "CLUSTER.W04.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP4",
        "x": 1610,
        "y": 420,
        "wires": []
    },
    {
        "id": "414bd76c.c35658",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "endpoint": "64765732.d2c008",
        "variable": "CLUSTER.W05.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP5",
        "x": 1610,
        "y": 540,
        "wires": []
    },
    {
        "id": "311fb58b.d4c35a",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a17f12b7.aff7a",
        "endpoint": "64765732.d2c008",
        "variable": "CLUSTER.W08.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP8",
        "x": 1610,
        "y": 900,
        "wires": []
    },
    {
        "id": "c738a47b.f465d8",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a17f12b7.aff7a",
        "endpoint": "64765732.d2c008",
        "variable": "CLUSTER.W09.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP9",
        "x": 1610,
        "y": 1020,
        "wires": []
    },
    {
        "id": "4f1eb978.d72c38",
        "type": "comment",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "Escritura/ lectura",
        "info": "rojo escritura\nverde lectura",
        "x": 2920,
        "y": 2110,
        "wires": []
    },
    {
        "id": "9719911b.6db09",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "endpoint": "7ab6ab16.b6db44",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "Lectura cluster",
        "x": 2820,
        "y": 2170,
        "wires": [
            [
                "4174382c.717b18"
            ]
        ]
    },
    {
        "id": "4174382c.717b18",
        "type": "function",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "Organizar datos por SCPx",
        "func": "var keys    = Object.keys(msg.payload);\nvar values  = Object.values(msg.payload);\n\n\nfor(var i=0; i<keys.length; i+=1){\n    keys[i] = keys[i].replace(\"CLUSTER.PQM\",\"PQM\");\n    keys[i] = keys[i].replace(\"CLUSTER.INST_MNF\",\"INST_MNF\");\n    global.set(\"Cluster.\"+keys[i],values[i],\"memoryOnly\");\n}\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3040,
        "y": 2170,
        "wires": []
    },
    {
        "id": "9b6b8f5a.816b1",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "endpoint": "1cc6e030.40038",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "UPS",
        "x": 2790,
        "y": 2220,
        "wires": [
            [
                "e4076c43.555c2"
            ]
        ]
    },
    {
        "id": "e4076c43.555c2",
        "type": "function",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "Organizar datos por SCPx",
        "func": "var keys    = Object.keys(msg.payload);\nvar values  = Object.values(msg.payload);\n\n\nfor(var i=0; i<keys.length; i+=1){\n    \n    global.set(keys[i],values[i],\"memoryOnly\");\n}\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 2220,
        "wires": []
    },
    {
        "id": "4dc72525.256e3c",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "endpoint": "817c8033.98df9",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "TEMP & HUMIDITY",
        "x": 2830,
        "y": 2270,
        "wires": [
            [
                "34ccd504.f1f4fa"
            ]
        ]
    },
    {
        "id": "34ccd504.f1f4fa",
        "type": "function",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "Organizar datos por SCPx",
        "func": "var keys    = Object.keys(msg.payload);\nvar values  = Object.values(msg.payload);\n\n\nfor(var i=0; i<keys.length; i+=1){\n    \n    global.set(keys[i],values[i],\"memoryOnly\");\n}\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3060,
        "y": 2270,
        "wires": []
    },
    {
        "id": "7d30cf12da4436ae",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 60,
        "wires": [
            [
                "96bc7a3e.788358"
            ]
        ]
    },
    {
        "id": "a3304fe189ac5534",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 120,
        "wires": [
            [
                "dbfc0363.54898"
            ]
        ]
    },
    {
        "id": "c8f7db8c090f487c",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 180,
        "wires": [
            [
                "dc10ae36.9891c"
            ]
        ]
    },
    {
        "id": "a34fdb46713774aa",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 240,
        "wires": [
            [
                "3d30ddb9.3bc712"
            ]
        ]
    },
    {
        "id": "b31bc1f6c1ac996b",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 300,
        "wires": [
            [
                "d3328da9.e913e"
            ]
        ]
    },
    {
        "id": "944cb70486524c6c",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 360,
        "wires": [
            [
                "a7e19ed2.e38fa"
            ]
        ]
    },
    {
        "id": "3a1f59d6576c97d9",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 420,
        "wires": [
            [
                "46ed483b.e6d4b8"
            ]
        ]
    },
    {
        "id": "a820e0e50879eefa",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 480,
        "wires": [
            [
                "4d8ad5af.6a2c6c"
            ]
        ]
    },
    {
        "id": "e968026a22538edc",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 540,
        "wires": [
            [
                "8849090f.4e1158"
            ]
        ]
    },
    {
        "id": "975d349f2b8645a6",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 600,
        "wires": [
            [
                "89a2b1bf.899c3"
            ]
        ]
    },
    {
        "id": "6abc52547c500390",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 660,
        "wires": [
            [
                "55c142b4.be600c"
            ]
        ]
    },
    {
        "id": "3e7b1927799ca742",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 720,
        "wires": [
            [
                "7a2317bb.99f188"
            ]
        ]
    },
    {
        "id": "a2b9177e0046d09a",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 780,
        "wires": [
            [
                "edab0245.4bf97"
            ]
        ]
    },
    {
        "id": "deab7d13a291b654",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 840,
        "wires": [
            [
                "987bf307.8775e"
            ]
        ]
    },
    {
        "id": "2b8253bcf666b1eb",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 900,
        "wires": [
            [
                "574c44c4.56c97c"
            ]
        ]
    },
    {
        "id": "e75a1ed3ba54436f",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 960,
        "wires": [
            [
                "4cb842c7.6747fc"
            ]
        ]
    },
    {
        "id": "90a983b6aa59a476",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 1020,
        "wires": [
            [
                "86e1777f.bab858"
            ]
        ]
    },
    {
        "id": "dcb5846eac15639a",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2960,
        "y": 1080,
        "wires": [
            [
                "d4eaa542.9ff2f8"
            ]
        ]
    },
    {
        "id": "ccec833d56700325",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Despliegue general",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Usuarios",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Datos eléctricos clúster",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Datos operativos pozos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Datos de fondo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Estado CCP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Configuración clúster",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Instrumentación manifold",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Instrumentación pozos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Alarmas/Eventos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Temperatura/Humedad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Datos históricos",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 12,
        "x": 2930,
        "y": 2470,
        "wires": [
            [],
            [],
            [
                "bc99cf40ab6d6e51"
            ],
            [
                "d0b26cc2905c02ad"
            ],
            [],
            [
                "0c2335585731858a"
            ],
            [
                "8a42d6f60daba191"
            ],
            [
                "186f2a0e0cf031bd"
            ],
            [
                "0bea077dd52f0325"
            ],
            [
                "504e4ed2c3e0f61e"
            ],
            [],
            [
                "0af77ddbb1ce4317"
            ]
        ]
    },
    {
        "id": "1b6860221d0e8472",
        "type": "inject",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 2810,
        "y": 2470,
        "wires": [
            [
                "ccec833d56700325"
            ]
        ]
    },
    {
        "id": "d0b26cc2905c02ad",
        "type": "link out",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "Datos operativos pozos",
        "links": [
            "0f5035d1683b4be8",
            "d0d07b3b44df6fbe",
            "7eb552f4b7c7276f",
            "cb7f821f59453b77"
        ],
        "x": 3055,
        "y": 2410,
        "wires": []
    },
    {
        "id": "0c2335585731858a",
        "type": "link out",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "Estado CCP",
        "links": [
            "75ecea147bcb6293"
        ],
        "x": 3055,
        "y": 2470,
        "wires": []
    },
    {
        "id": "8a42d6f60daba191",
        "type": "link out",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "Configuración clúster",
        "links": [
            "3895844e0bbc0b79",
            "f286bd61e36aa07c"
        ],
        "x": 3055,
        "y": 2500,
        "wires": []
    },
    {
        "id": "186f2a0e0cf031bd",
        "type": "link out",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "Instrumentación manifold",
        "links": [
            "06263b94b182144c",
            "5ac373589c1d1849"
        ],
        "x": 3055,
        "y": 2530,
        "wires": []
    },
    {
        "id": "0bea077dd52f0325",
        "type": "link out",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "Instrumentación pozos",
        "links": [
            "5d580a3ade09bc2a",
            "408b847974effc74",
            "9bbaaaf14cd2e211",
            "1f94a93f9b25df68",
            "2f16c5fcf44160ec",
            "c411321771563269",
            "ebe92afe76c0b8c8",
            "a66e253dce27542b",
            "05c48de9e9d01ab7",
            "2d1213d1163d4032",
            "c4565ad754d0f4c3",
            "26a9745e1f3e45b0",
            "5ff8f6fd095d3a75",
            "4f17e0a837dc2cb6",
            "de9b8fbc3328aaf7",
            "38ad3e8bccd327c7",
            "a31e69978282b64f",
            "0efb9c5c5c7c953d",
            "4b3b50bb613a9469",
            "0da3acae9991df6f",
            "f3b5306c182960ea",
            "255c44b3107444bb",
            "903035cbb62e1679",
            "c7c3131373019f89",
            "d9c782e01b1604d5",
            "b03bf45a81a446a7",
            "01defc5a1be24223",
            "dc1d1314fad17603",
            "f5cf404dada6e5ee",
            "802e4976284f333a",
            "8e13e54f55b0ed45",
            "2f435708805bb83f",
            "ce702b071cc16687",
            "8f391655a55a6da4",
            "8fa40a9e1b39f2e7",
            "04c428a21d0a9cb1",
            "488136a750afd448",
            "824de92f059ea88f",
            "38f6482655d72263",
            "60866fb9b9b39155",
            "7975142fb5a73f7d",
            "e9194e7d3d869d61",
            "b25f21c072a89d76",
            "f9e738f8a1629bbc",
            "79fb845d5e01a13b",
            "8d32439056797752",
            "3640b09426630830",
            "a998910bbff4676e",
            "63439e39cc0fdc8c",
            "2a661f24233a555f",
            "8f5a32b3ebe6f9a8"
        ],
        "x": 3055,
        "y": 2560,
        "wires": []
    },
    {
        "id": "504e4ed2c3e0f61e",
        "type": "link out",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "Alarmas/Eventos",
        "links": [
            "938193ac.02d98"
        ],
        "x": 3055,
        "y": 2590,
        "wires": []
    },
    {
        "id": "bc99cf40ab6d6e51",
        "type": "link out",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "Datos eléctricos clúster",
        "links": [
            "8531d637ba42e7a9",
            "d4e4552a6e429ca2"
        ],
        "x": 3055,
        "y": 2380,
        "wires": []
    },
    {
        "id": "0af77ddbb1ce4317",
        "type": "link out",
        "z": "c8989d0a.49ea8",
        "g": "2fc820d53f174088",
        "name": "Datos históricos",
        "links": [
            "1d7786b655969182"
        ],
        "x": 3055,
        "y": 2650,
        "wires": []
    },
    {
        "id": "2679c3cd140bc8c2",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a0798509.56f3c8",
        "endpoint": "5b6ea19cad9ae739",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP11",
        "x": 110,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "fe6bf172581b9587",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a0798509.56f3c8",
        "endpoint": "d3d35ba1ab4a64ef",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP12",
        "x": 110,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "819e68e2c0cd8ee0",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a0798509.56f3c8",
        "endpoint": "fefb6112361aa785",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP13",
        "x": 110,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "6620f9a944803e2b",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a0798509.56f3c8",
        "endpoint": "ad34f7b393441a0e",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP14",
        "x": 110,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "2db92c65aacef0e5",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a0798509.56f3c8",
        "endpoint": "da18e730fe442b60",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP15",
        "x": 110,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "75f9fd6db8f3d35d",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a0798509.56f3c8",
        "endpoint": "f9b80009a7e932a4",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP16",
        "x": 110,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "678e40a940ceb830",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a0798509.56f3c8",
        "endpoint": "2525cff1c1dc9074",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP17",
        "x": 110,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "6fb595d3bba0fc4b",
        "type": "eth-ip in",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a0798509.56f3c8",
        "endpoint": "97d45cc155f45f9b",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "SCP18",
        "x": 110,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "4e26bbb4682ceba1",
        "type": "function",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "name": "Escritura referencia Remota",
        "func": "var Comandos    = global.get(\"Comandos\",\"memoryOnly\")||[];\nvar SCP    = global.get(\"SCP\",\"memoryOnly\")||[];\n\nvar Referencia=[];\n\nReferencia[SCP] = Comandos[SCP].Referencia;\n\nswitch (SCP) {\n       \n  case 10:      \n        var msg0 =  { payload:Referencia[10]};\n        break;\n  case 11:      \n        var msg1 =  { payload:Referencia[11]};\n        break;   \n  case 12:      \n        var msg2 =  { payload:Referencia[12]};\n        break;       \n  case 13:            \n        var msg3 =  { payload:Referencia[13]};\n        break;        \n  case 14:     \n        var msg4 = { payload:Referencia[14]};\n        break;\n  case 15:\n        var msg5 = { payload:Referencia[15]};\n        break;\n  case 16:\n        var msg6 = { payload:Referencia[16]};\n        break;\n  case 17:\n        var msg7 = { payload:Referencia[17]};\n        break;\n  case 18:\n        var msg8 = { payload:Referencia[18]};\n}\n\nreturn [msg0,msg1,msg2,msg3,msg4,msg5,msg6,msg7,msg8];",
        "outputs": 9,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1950,
        "y": 580,
        "wires": [
            [
                "fb299f5201ca31fa"
            ],
            [
                "ab5b06edf70977f5"
            ],
            [
                "9909797e495c5780"
            ],
            [
                "51764cd14fdcccfc"
            ],
            [
                "c39bc057ca34ac0e"
            ],
            [
                "0a1b0a785255b165"
            ],
            [
                "3629c8a0eec56449"
            ],
            [
                "f22dc9c6cc41bdf9"
            ],
            [
                "6fb4d7510fdd7772"
            ]
        ]
    },
    {
        "id": "646db08f6aef9d05",
        "type": "link in",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "name": "",
        "links": [
            "43030a29.bfdeb4"
        ],
        "x": 1785,
        "y": 580,
        "wires": [
            [
                "4e26bbb4682ceba1"
            ]
        ]
    },
    {
        "id": "89f94a280c4565d8",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "268c0c4d447aa4c7",
        "variable": "CLUSTER2.W01.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP10",
        "x": 2350,
        "y": 60,
        "wires": []
    },
    {
        "id": "4f9754b8282a283f",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "268c0c4d447aa4c7",
        "variable": "CLUSTER2.W02.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP11",
        "x": 2350,
        "y": 180,
        "wires": []
    },
    {
        "id": "d3c70566c294ff1f",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "268c0c4d447aa4c7",
        "variable": "CLUSTER2.W03.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP12",
        "x": 2350,
        "y": 300,
        "wires": []
    },
    {
        "id": "a0ca496d8ddd7e2b",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "268c0c4d447aa4c7",
        "variable": "CLUSTER2.W04.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP13",
        "x": 2350,
        "y": 420,
        "wires": []
    },
    {
        "id": "fdec607ce457f3fd",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "268c0c4d447aa4c7",
        "variable": "CLUSTER2.W05.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP14",
        "x": 2350,
        "y": 540,
        "wires": []
    },
    {
        "id": "3eaa576b37bec2d9",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "268c0c4d447aa4c7",
        "variable": "CLUSTER2.W06.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP15",
        "x": 2350,
        "y": 660,
        "wires": []
    },
    {
        "id": "d719b128430d4ee0",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "268c0c4d447aa4c7",
        "variable": "CLUSTER2.W07.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP16",
        "x": 2350,
        "y": 780,
        "wires": []
    },
    {
        "id": "3d7ecf03c361b3bd",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "268c0c4d447aa4c7",
        "variable": "CLUSTER2.W08.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP17",
        "x": 2350,
        "y": 900,
        "wires": []
    },
    {
        "id": "41e6b940856df6ea",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "268c0c4d447aa4c7",
        "variable": "CLUSTER2.W09.VSD.Referencia_Frecuencia_Remota_PD",
        "program": "",
        "name": "Referencia Hz SCP18",
        "x": 2350,
        "y": 1020,
        "wires": []
    },
    {
        "id": "6690f43247bfb0fe",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a17f12b7.aff7a",
        "endpoint": "27b7293be00c4c3d",
        "variable": "CLUSTER.W01.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP1",
        "x": 1610,
        "y": 120,
        "wires": []
    },
    {
        "id": "1ce6bb769779860f",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 100,
        "wires": [
            [
                "bb351043.dc5c7"
            ],
            [
                "6690f43247bfb0fe"
            ]
        ]
    },
    {
        "id": "cc3c6cfc2014303e",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 200,
        "wires": [
            [
                "e9a5670b.de2478"
            ],
            [
                "97bfa9befbc1cb70"
            ]
        ]
    },
    {
        "id": "bce025532ac40c58",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 340,
        "wires": [
            [
                "5e1fe9fd.eba2e8"
            ],
            [
                "338284669a1adc2c"
            ]
        ]
    },
    {
        "id": "ce852a763d5dde26",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 460,
        "wires": [
            [
                "145df53.ab3a50b"
            ],
            [
                "66e0dc253ce77376"
            ]
        ]
    },
    {
        "id": "c1b43ca09582f068",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 580,
        "wires": [
            [
                "414bd76c.c35658"
            ],
            [
                "62df9b0c0f62744f"
            ]
        ]
    },
    {
        "id": "548b4b348cc28e92",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 700,
        "wires": [
            [
                "491e3ffd.9afc5"
            ],
            [
                "1f6d6ff689324e69"
            ]
        ]
    },
    {
        "id": "97bfa9befbc1cb70",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a17f12b7.aff7a",
        "endpoint": "27b7293be00c4c3d",
        "variable": "CLUSTER.W02.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP2",
        "x": 1610,
        "y": 240,
        "wires": []
    },
    {
        "id": "338284669a1adc2c",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a17f12b7.aff7a",
        "endpoint": "27b7293be00c4c3d",
        "variable": "CLUSTER.W03.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP3",
        "x": 1610,
        "y": 360,
        "wires": []
    },
    {
        "id": "66e0dc253ce77376",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a17f12b7.aff7a",
        "endpoint": "27b7293be00c4c3d",
        "variable": "CLUSTER.W04.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP4",
        "x": 1610,
        "y": 480,
        "wires": []
    },
    {
        "id": "62df9b0c0f62744f",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a17f12b7.aff7a",
        "endpoint": "27b7293be00c4c3d",
        "variable": "CLUSTER.W05.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP5",
        "x": 1610,
        "y": 600,
        "wires": []
    },
    {
        "id": "9e1c66fb61c5314e",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 820,
        "wires": [
            [
                "f60c2283.77e35"
            ],
            [
                "81e5d397116c488c"
            ]
        ]
    },
    {
        "id": "5a6d0e3e76ebce43",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 940,
        "wires": [
            [
                "311fb58b.d4c35a"
            ],
            [
                "38c838ee9ea436f4"
            ]
        ]
    },
    {
        "id": "d5fbc2d84c809926",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "g": "a17f12b7.aff7a",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1440,
        "y": 1060,
        "wires": [
            [
                "c738a47b.f465d8"
            ],
            [
                "b2b70770f04451e4"
            ]
        ]
    },
    {
        "id": "1f6d6ff689324e69",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a17f12b7.aff7a",
        "endpoint": "27b7293be00c4c3d",
        "variable": "CLUSTER.W06.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP6",
        "x": 1610,
        "y": 720,
        "wires": []
    },
    {
        "id": "81e5d397116c488c",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a17f12b7.aff7a",
        "endpoint": "27b7293be00c4c3d",
        "variable": "CLUSTER.W07.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP7",
        "x": 1610,
        "y": 840,
        "wires": []
    },
    {
        "id": "38c838ee9ea436f4",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a17f12b7.aff7a",
        "endpoint": "27b7293be00c4c3d",
        "variable": "CLUSTER.W08.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP8",
        "x": 1610,
        "y": 960,
        "wires": []
    },
    {
        "id": "b2b70770f04451e4",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "a17f12b7.aff7a",
        "endpoint": "27b7293be00c4c3d",
        "variable": "CLUSTER.W09.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP9",
        "x": 1610,
        "y": 1080,
        "wires": []
    },
    {
        "id": "e8462dbd11876545",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "335779cd65870ad7",
        "variable": "CLUSTER2.W01.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP10",
        "x": 2360,
        "y": 120,
        "wires": []
    },
    {
        "id": "fb299f5201ca31fa",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2180,
        "y": 100,
        "wires": [
            [
                "89f94a280c4565d8"
            ],
            [
                "e8462dbd11876545"
            ]
        ]
    },
    {
        "id": "ab5b06edf70977f5",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2180,
        "y": 220,
        "wires": [
            [
                "4f9754b8282a283f"
            ],
            [
                "90496b9ae32c6bff"
            ]
        ]
    },
    {
        "id": "9909797e495c5780",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2180,
        "y": 340,
        "wires": [
            [
                "d3c70566c294ff1f"
            ],
            [
                "8b2b3511f0a68746"
            ]
        ]
    },
    {
        "id": "51764cd14fdcccfc",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2180,
        "y": 460,
        "wires": [
            [
                "a0ca496d8ddd7e2b"
            ],
            [
                "2646a2bfce4db9ab"
            ]
        ]
    },
    {
        "id": "c39bc057ca34ac0e",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2180,
        "y": 580,
        "wires": [
            [
                "fdec607ce457f3fd"
            ],
            [
                "b279cfc55a956edd"
            ]
        ]
    },
    {
        "id": "0a1b0a785255b165",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2180,
        "y": 700,
        "wires": [
            [
                "3eaa576b37bec2d9"
            ],
            [
                "b6596892246bf7b8"
            ]
        ]
    },
    {
        "id": "3629c8a0eec56449",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2180,
        "y": 820,
        "wires": [
            [
                "d719b128430d4ee0"
            ],
            [
                "e324cf6f4c85ac9d"
            ]
        ]
    },
    {
        "id": "f22dc9c6cc41bdf9",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2180,
        "y": 940,
        "wires": [
            [
                "3d7ecf03c361b3bd"
            ],
            [
                "b49198595a35acf8"
            ]
        ]
    },
    {
        "id": "6fb4d7510fdd7772",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "name": "if",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2180,
        "y": 1060,
        "wires": [
            [
                "41e6b940856df6ea"
            ],
            [
                "169ccd626662ee4c"
            ]
        ]
    },
    {
        "id": "90496b9ae32c6bff",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "335779cd65870ad7",
        "variable": "CLUSTER2.W02.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP11",
        "x": 2360,
        "y": 240,
        "wires": []
    },
    {
        "id": "8b2b3511f0a68746",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "335779cd65870ad7",
        "variable": "CLUSTER2.W03.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP12",
        "x": 2360,
        "y": 360,
        "wires": []
    },
    {
        "id": "2646a2bfce4db9ab",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "335779cd65870ad7",
        "variable": "CLUSTER2.W04.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP13",
        "x": 2360,
        "y": 480,
        "wires": []
    },
    {
        "id": "b279cfc55a956edd",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "335779cd65870ad7",
        "variable": "CLUSTER2.W05.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP14",
        "x": 2360,
        "y": 600,
        "wires": []
    },
    {
        "id": "b6596892246bf7b8",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "335779cd65870ad7",
        "variable": "CLUSTER2.W06.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP15",
        "x": 2360,
        "y": 720,
        "wires": []
    },
    {
        "id": "e324cf6f4c85ac9d",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "335779cd65870ad7",
        "variable": "CLUSTER2.W07.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP16",
        "x": 2360,
        "y": 840,
        "wires": []
    },
    {
        "id": "b49198595a35acf8",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "335779cd65870ad7",
        "variable": "CLUSTER2.W08.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP17",
        "x": 2360,
        "y": 960,
        "wires": []
    },
    {
        "id": "169ccd626662ee4c",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "27d017f01b6dc239",
        "endpoint": "335779cd65870ad7",
        "variable": "CLUSTER2.W09.VSD.Referencia_RPM_Remota_PD",
        "program": "",
        "name": "Referencia RPM SCP18",
        "x": 2360,
        "y": 1080,
        "wires": []
    },
    {
        "id": "969dcdc8d4df3e95",
        "type": "function",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "var Cluster     = global.get(\"Cluster\")||[];\nvar VSD         = [];\nvar Disponible  = [];\n\nfor(var i=0; i<Cluster.length; i+=1){\n    if (Cluster[i].Variador==\"ABB\"){\n        VSD[i]  = 1;\n    }\n    else if(Cluster[i].Variador==\"ABB_221\"){\n        VSD[i]  = 2;\n    } \n    else if(Cluster[i].Variador==\"SIEMENS\"){\n        VSD[i]  = 3;\n    }\n    else if(Cluster[i].Variador==\"YASKAWA\"){\n        VSD[i]  = 4;\n    }\n    else if(Cluster[i].Variador==\"YASKAWA_HMS\"){\n        VSD[i]  = 5;\n    }\n    else if(Cluster[i].Variador==\"CILA2S\"){\n        VSD[i]  = 8;\n    }\n    else if(Cluster[i].Variador==\"--\"){\n        VSD[i]  = 0;\n    }\n    \n/*Cluster disponible*/\n    \n    if (Cluster[i].Disponible==\"Si\"){\n        Disponible[i]  = true;\n    }\n    else if(Cluster[i].Disponible==\"No\"){\n        Disponible[i]  = false;\n    }\n}\n\nvar msg0 = { payload: VSD[0]};\nvar msg1 = { payload: VSD[1]};\nvar msg2 = { payload: VSD[2]};\nvar msg3 = { payload: VSD[3]};\nvar msg4 = { payload: VSD[4]};\nvar msg5 = { payload: VSD[5]};\nvar msg6 = { payload: VSD[6]};\nvar msg7 = { payload: VSD[7]};\nvar msg8 = { payload: VSD[8]};\n\nvar msg9 = { payload: Disponible[0]};\nvar msg10 = { payload: Disponible[1]};\nvar msg11 = { payload: Disponible[2]};\nvar msg12 = { payload: Disponible[3]};\nvar msg13 = { payload: Disponible[4]};\nvar msg14 = { payload: Disponible[5]};\nvar msg15 = { payload: Disponible[6]};\nvar msg16 = { payload: Disponible[7]};\nvar msg17 = { payload: Disponible[8]};\n\nreturn [msg0,msg1,msg2,msg3,msg4,msg5,msg6,msg7,msg8,msg9,msg10,msg12,msg13,msg14,msg15,msg16,msg17];",
        "outputs": 18,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4220,
        "y": 1720,
        "wires": [
            [
                "4ae52fba8e4ef399"
            ],
            [
                "e8a1b6fb4743216f"
            ],
            [
                "8e29588553f9ab59"
            ],
            [
                "4a6e921484a8012b"
            ],
            [
                "27f4ca9f8bcfef48"
            ],
            [
                "9e7462750b704d08"
            ],
            [
                "f13addfa93f8dddf"
            ],
            [
                "5f7c49e270e63ec4"
            ],
            [
                "420857a62e57ac55"
            ],
            [
                "2a7819295daf7508"
            ],
            [
                "94516c143b1756d4"
            ],
            [
                "01432127a467b4ad"
            ],
            [
                "a18c1613045a5ba3"
            ],
            [
                "6689da9589d5bb96"
            ],
            [
                "b5f036bac90e6719"
            ],
            [
                "229288102c981a20"
            ],
            [
                "1a26ef87616a45a3"
            ],
            [
                "24d47cbaa527b749"
            ]
        ]
    },
    {
        "id": "6689da9589d5bb96",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "a18c1613045a5ba3",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "01432127a467b4ad",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "94516c143b1756d4",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "2a7819295daf7508",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "420857a62e57ac55",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 1740,
        "wires": [
            []
        ]
    },
    {
        "id": "5f7c49e270e63ec4",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "f13addfa93f8dddf",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 1620,
        "wires": [
            []
        ]
    },
    {
        "id": "9e7462750b704d08",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "27f4ca9f8bcfef48",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "4a6e921484a8012b",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 1440,
        "wires": [
            []
        ]
    },
    {
        "id": "8e29588553f9ab59",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "e8a1b6fb4743216f",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "4ae52fba8e4ef399",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "b5f036bac90e6719",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 2100,
        "wires": [
            []
        ]
    },
    {
        "id": "229288102c981a20",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "1a26ef87616a45a3",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 2220,
        "wires": [
            []
        ]
    },
    {
        "id": "24d47cbaa527b749",
        "type": "rbe",
        "z": "c8989d0a.49ea8",
        "d": true,
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 4430,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "bedb727ca2a00ae1",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W01.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP10",
        "x": 850,
        "y": 1470,
        "wires": []
    },
    {
        "id": "d37c8999d8b00446",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W01.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP10",
        "x": 840,
        "y": 1530,
        "wires": []
    },
    {
        "id": "117b2d16a22542dc",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W01.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP10",
        "x": 840,
        "y": 1590,
        "wires": []
    },
    {
        "id": "88b734cb0fbff356",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W02.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP11",
        "x": 850,
        "y": 1650,
        "wires": []
    },
    {
        "id": "a462c4d3cc2a50fd",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W02.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP11",
        "x": 840,
        "y": 1710,
        "wires": []
    },
    {
        "id": "6cbfa5a34a8d61d0",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W02.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP11",
        "x": 840,
        "y": 1770,
        "wires": []
    },
    {
        "id": "d676f49d0a30741b",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W03.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP12",
        "x": 850,
        "y": 1830,
        "wires": []
    },
    {
        "id": "1a429df1f63a07e2",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W03.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP12",
        "x": 840,
        "y": 1890,
        "wires": []
    },
    {
        "id": "6d3c0574bfbf1cde",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W03.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP12",
        "x": 840,
        "y": 1950,
        "wires": []
    },
    {
        "id": "da6db9c966711ee2",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W04.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP13",
        "x": 850,
        "y": 2010,
        "wires": []
    },
    {
        "id": "38e5656bae83accb",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W04.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP13",
        "x": 840,
        "y": 2070,
        "wires": []
    },
    {
        "id": "9b1577395789147b",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W04.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP13",
        "x": 840,
        "y": 2130,
        "wires": []
    },
    {
        "id": "64423d49df658e62",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W05.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP14",
        "x": 850,
        "y": 2190,
        "wires": []
    },
    {
        "id": "a72c5b72790fbb58",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W05.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP14",
        "x": 840,
        "y": 2250,
        "wires": []
    },
    {
        "id": "b611829c3bad191b",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W05.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP14",
        "x": 840,
        "y": 2310,
        "wires": []
    },
    {
        "id": "d8e3e070354c7b4b",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W06.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP15",
        "x": 850,
        "y": 2370,
        "wires": []
    },
    {
        "id": "a06b2881689cc149",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W06.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP15",
        "x": 840,
        "y": 2430,
        "wires": []
    },
    {
        "id": "4d2f3d5046f3626a",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W06.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP15",
        "x": 840,
        "y": 2490,
        "wires": []
    },
    {
        "id": "61c2774ee6d1439c",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W07.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP16",
        "x": 850,
        "y": 2550,
        "wires": []
    },
    {
        "id": "81f316e8b3fa5eb4",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W07.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP16",
        "x": 840,
        "y": 2610,
        "wires": []
    },
    {
        "id": "85dbe3d0ad9248a9",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W07.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP16",
        "x": 840,
        "y": 2670,
        "wires": []
    },
    {
        "id": "6b14186e8981e3d4",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W08.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP17",
        "x": 850,
        "y": 2730,
        "wires": []
    },
    {
        "id": "b51d033889299e0d",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W08.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP17",
        "x": 840,
        "y": 2790,
        "wires": []
    },
    {
        "id": "6a21b4294dd246d8",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W08.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP17",
        "x": 840,
        "y": 2850,
        "wires": []
    },
    {
        "id": "c8dc3593783f3e72",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W09.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP18",
        "x": 850,
        "y": 2910,
        "wires": []
    },
    {
        "id": "8476a517c62c3d6b",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W09.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP18",
        "x": 840,
        "y": 2970,
        "wires": []
    },
    {
        "id": "a962f52b93954b8d",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "endpoint": "1d3f8552365f7228",
        "variable": "CLUSTER2.W09.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP18",
        "x": 840,
        "y": 3030,
        "wires": []
    },
    {
        "id": "66e21be155c91fee",
        "type": "function",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "name": "",
        "func": "var Comandos = global.get(\"Comandos\", \"memoryOnly\") || [];\nvar SCP = global.get(\"SCP\", \"memoryOnly\") || [];\n\nvar Arranque = [], Parada = [], Reset = [];\n\nArranque[SCP] = Comandos[SCP].Arranque_Remoto_PD;\nParada[SCP] = Comandos[SCP].Parada_Remota_PD;\nReset[SCP] = Comandos[SCP].Reset_Remoto_PD;\nswitch (SCP) {\n      case 10:\n            var msg0 = { payload: Arranque[10] };\n            var msg1 = { payload: Parada[10] };\n            var msg2 = { payload: Reset[10] };\n            break;\n      case 11:\n            var msg3 = { payload: Arranque[11] };\n            var msg4 = { payload: Parada[11] };\n            var msg5 = { payload: Reset[11] };\n            break;\n      case 12:\n            var msg6 = { payload: Arranque[12] };\n            var msg7 = { payload: Parada[12] };\n            var msg8 = { payload: Reset[12] };\n            break;\n      case 13:\n            var msg9 = { payload: Arranque[13] };\n            var msg10 = { payload: Parada[13] };\n            var msg11 = { payload: Reset[13] };\n            break;\n      case 14:\n            var msg12 = { payload: Reset[14] };\n            var msg13 = { payload: Arranque[14] };\n            var msg14 = { payload: Parada[14] };\n            break;\n      case 15:\n            var msg15 = { payload: Reset[15] };\n            var msg16 = { payload: Arranque[15] };\n            var msg17 = { payload: Parada[15] };\n            break;\n      case 16:\n            var msg18 = { payload: Reset[16] };\n            var msg19 = { payload: Arranque[16] };\n            var msg20 = { payload: Parada[16] };\n            break;\n      case 17:\n            var msg21 = { payload: Reset[17] };\n            var msg22 = { payload: Arranque[17] };\n            var msg23 = { payload: Parada[17] };\n            break;\n      case 18:\n            var msg24 = { payload: Reset[18] };\n            var msg25 = { payload: Arranque[18] };\n            var msg26 = { payload: Parada[18] };\n            break;\n      //case 9:\n}\nreturn [msg0, msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10, msg12, msg13, msg14, msg15, msg16, msg17, msg18, msg19, msg20, msg21, msg22, msg23, msg24, msg25, msg26];",
        "outputs": 27,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 2290,
        "wires": [
            [
                "bedb727ca2a00ae1"
            ],
            [
                "d37c8999d8b00446"
            ],
            [
                "117b2d16a22542dc"
            ],
            [
                "88b734cb0fbff356"
            ],
            [
                "a462c4d3cc2a50fd"
            ],
            [
                "6cbfa5a34a8d61d0"
            ],
            [
                "d676f49d0a30741b"
            ],
            [
                "1a429df1f63a07e2"
            ],
            [
                "6d3c0574bfbf1cde"
            ],
            [
                "da6db9c966711ee2"
            ],
            [
                "38e5656bae83accb"
            ],
            [
                "9b1577395789147b"
            ],
            [
                "64423d49df658e62"
            ],
            [
                "a72c5b72790fbb58"
            ],
            [
                "b611829c3bad191b"
            ],
            [
                "d8e3e070354c7b4b"
            ],
            [
                "a06b2881689cc149"
            ],
            [
                "4d2f3d5046f3626a"
            ],
            [
                "61c2774ee6d1439c"
            ],
            [
                "81f316e8b3fa5eb4"
            ],
            [
                "85dbe3d0ad9248a9"
            ],
            [
                "6b14186e8981e3d4"
            ],
            [
                "b51d033889299e0d"
            ],
            [
                "6a21b4294dd246d8"
            ],
            [
                "c8dc3593783f3e72"
            ],
            [
                "8476a517c62c3d6b"
            ],
            [
                "a962f52b93954b8d"
            ]
        ]
    },
    {
        "id": "dc662dbf83f0e930",
        "type": "link in",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "1f826a1bd0d089b5",
        "name": "Arranque/ Paro com",
        "links": [
            "35e356e7.8ebc5a"
        ],
        "x": 515,
        "y": 2290,
        "wires": [
            [
                "66e21be155c91fee"
            ]
        ]
    },
    {
        "id": "a8c3e91727052407",
        "type": "function",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "name": "Confirmacion de referencia Remota",
        "func": "var Comandos    = global.get(\"Comandos\",\"memoryOnly\")||[];\nvar SCP    = global.get(\"SCP\",\"memoryOnly\")||[];\n\nvar Confirmacion_Escritura=[];\n\nConfirmacion_Escritura[SCP] = Comandos[SCP].Confirmacion_Escritura;\n\nswitch (SCP) {\n  case 0:\n        var day = \"--\";\n        break;\n        \n  case 1:      \n            var msg0 = { payload: Confirmacion_Escritura[1]};\n        break;\n  case 2:      \n            var msg1 = { payload: Confirmacion_Escritura[2]};\n        break;   \n  case 3:      \n            var msg2 = { payload: Confirmacion_Escritura[3]};\n        break;       \n  case 4:            \n            var msg3 = { payload: Confirmacion_Escritura[4]};\n        break;        \n  case 5:     \n            var msg4 = { payload: Confirmacion_Escritura[5]};\n        break;\n  case  6:\n            var msg5 = { payload: Confirmacion_Escritura[6]};\n        break;\n  case  7:\n            var msg6 = { payload: Confirmacion_Escritura[7]};\n        break;\n  case  8:\n            var msg7 = { payload: Confirmacion_Escritura[8]};\n        break;\n  case  9:\n            var msg8 = { payload: Confirmacion_Escritura[9]};\n}\n\nreturn [msg0,msg1,msg2,msg3,msg4,msg5,msg6,msg7,msg8];",
        "outputs": 9,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 1430,
        "wires": [
            [
                "61e1182e7379ccd6"
            ],
            [
                "08c39f4da8904fa8"
            ],
            [
                "421d5502a1e46122"
            ],
            [
                "0d3d5d1379399657"
            ],
            [
                "c3c891d37ebb8b90"
            ],
            [
                "bd0559265dc9da95"
            ],
            [
                "7ee3f52a899f17bb"
            ],
            [
                "a031eb47b70f5b16"
            ],
            [
                "571503a1551ddd48"
            ]
        ]
    },
    {
        "id": "ec404e5efb3b7976",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "endpoint": "96f1a469e6be7df5",
        "variable": "CLUSTER.W01.VSD.Confirmaciones_Escritura.0",
        "program": "",
        "name": "Confirmar Ref. SCP1",
        "x": 1940,
        "y": 1190,
        "wires": []
    },
    {
        "id": "d06936f1429bc8b0",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "endpoint": "96f1a469e6be7df5",
        "variable": "CLUSTER.W02.VSD.Confirmaciones_Escritura.0",
        "program": "",
        "name": "Confirmar Ref. SCP2",
        "x": 1940,
        "y": 1250,
        "wires": []
    },
    {
        "id": "95cc5c3331f17c1e",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "endpoint": "96f1a469e6be7df5",
        "variable": "CLUSTER.W03.VSD.Confirmaciones_Escritura.0",
        "program": "",
        "name": "Confirmar Ref. SCP3",
        "x": 1940,
        "y": 1310,
        "wires": []
    },
    {
        "id": "326666b2535769c5",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "endpoint": "96f1a469e6be7df5",
        "variable": "CLUSTER.W04.VSD.Confirmaciones_Escritura.0",
        "program": "",
        "name": "Confirmar Ref. SCP4",
        "x": 1940,
        "y": 1370,
        "wires": []
    },
    {
        "id": "64ab56dee92d0c71",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "endpoint": "96f1a469e6be7df5",
        "variable": "CLUSTER.W05.VSD.Confirmaciones_Escritura.0",
        "program": "",
        "name": "Confirmar Ref. SCP5",
        "x": 1940,
        "y": 1430,
        "wires": []
    },
    {
        "id": "991feede4d37d07c",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "endpoint": "96f1a469e6be7df5",
        "variable": "CLUSTER.W06.VSD.Confirmaciones_Escritura.0",
        "program": "",
        "name": "Confirmar Ref. SCP6",
        "x": 1940,
        "y": 1490,
        "wires": []
    },
    {
        "id": "a754e32d257261b2",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "endpoint": "96f1a469e6be7df5",
        "variable": "CLUSTER.W07.VSD.Confirmaciones_Escritura.0",
        "program": "",
        "name": "Confirmar Ref. SCP7",
        "x": 1940,
        "y": 1550,
        "wires": []
    },
    {
        "id": "a3d00ff25f9f6097",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "7d0f955071a4055a",
        "endpoint": "96f1a469e6be7df5",
        "variable": "CLUSTER.W08.VSD.Confirmaciones_Escritura.0",
        "program": "",
        "name": "Confirmar Ref. SCP8",
        "x": 1940,
        "y": 1610,
        "wires": []
    },
    {
        "id": "56f7f39a6e609305",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "7d0f955071a4055a",
        "endpoint": "96f1a469e6be7df5",
        "variable": "CLUSTER.W09.VSD.Confirmaciones_Escritura.0",
        "program": "",
        "name": "Confirmar Ref. SCP9",
        "x": 1940,
        "y": 1670,
        "wires": []
    },
    {
        "id": "5e6577b46be39f1a",
        "type": "link in",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "name": "",
        "links": [
            "487f7f8226176ed0"
        ],
        "x": 1275,
        "y": 1430,
        "wires": [
            [
                "a8c3e91727052407"
            ]
        ]
    },
    {
        "id": "61e1182e7379ccd6",
        "type": "trigger",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1740,
        "y": 1190,
        "wires": [
            [
                "ec404e5efb3b7976"
            ]
        ]
    },
    {
        "id": "08c39f4da8904fa8",
        "type": "trigger",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1740,
        "y": 1250,
        "wires": [
            [
                "d06936f1429bc8b0"
            ]
        ]
    },
    {
        "id": "421d5502a1e46122",
        "type": "trigger",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1740,
        "y": 1310,
        "wires": [
            [
                "95cc5c3331f17c1e"
            ]
        ]
    },
    {
        "id": "0d3d5d1379399657",
        "type": "trigger",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1740,
        "y": 1370,
        "wires": [
            [
                "326666b2535769c5"
            ]
        ]
    },
    {
        "id": "c3c891d37ebb8b90",
        "type": "trigger",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1740,
        "y": 1430,
        "wires": [
            [
                "64ab56dee92d0c71"
            ]
        ]
    },
    {
        "id": "bd0559265dc9da95",
        "type": "trigger",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1740,
        "y": 1490,
        "wires": [
            [
                "991feede4d37d07c"
            ]
        ]
    },
    {
        "id": "7ee3f52a899f17bb",
        "type": "trigger",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1740,
        "y": 1550,
        "wires": [
            [
                "a754e32d257261b2"
            ]
        ]
    },
    {
        "id": "a031eb47b70f5b16",
        "type": "trigger",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1740,
        "y": 1610,
        "wires": [
            [
                "a3d00ff25f9f6097"
            ]
        ]
    },
    {
        "id": "571503a1551ddd48",
        "type": "trigger",
        "z": "c8989d0a.49ea8",
        "g": "7d0f955071a4055a",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1740,
        "y": 1670,
        "wires": [
            [
                "56f7f39a6e609305"
            ]
        ]
    },
    {
        "id": "26acffc61224be5e",
        "type": "function",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "name": "Habilitar Shutdown SCC",
        "func": "var Cluster     = global.get(\"Cluster\")||[];\nvar Activacion_Breaker = [];\n\nfor(var i=0; i<Cluster.length; i+=1){\n// Disparo de breaker configurable\n  \n    if (Cluster[i].Disparo == \"Si\"){\n        Activacion_Breaker[i]  = true;\n    }\n    else if (Cluster[i].Disparo == \"No\"){\n        Activacion_Breaker[i]  = false;\n    }\n}\nvar msg0 = { payload: Activacion_Breaker[0]};\nvar msg1 = { payload: Activacion_Breaker[1]};\nvar msg2 = { payload: Activacion_Breaker[2]};\nvar msg3 = { payload: Activacion_Breaker[3]};\nvar msg4 = { payload: Activacion_Breaker[4]};\nvar msg5 = { payload: Activacion_Breaker[5]};\nvar msg6 = { payload: Activacion_Breaker[6]};\nvar msg7 = { payload: Activacion_Breaker[7]};\nvar msg8 = { payload: Activacion_Breaker[8]};\nvar msg9 = { payload: Activacion_Breaker[9]};\nvar msg10 = { payload: Activacion_Breaker[10]};\nvar msg11 = { payload: Activacion_Breaker[11]};\nvar msg12 = { payload: Activacion_Breaker[12]};\nvar msg13 = { payload: Activacion_Breaker[13]};\nvar msg14 = { payload: Activacion_Breaker[14]};\nvar msg15 = { payload: Activacion_Breaker[15]};\nreturn [msg0,msg1,msg2,msg3,msg4,msg5,msg6,msg7,msg8,msg9,msg10,msg11,msg12,msg13,msg14,msg15];",
        "outputs": 15,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3460,
        "y": 480,
        "wires": [
            [
                "a412ecedd9fde959"
            ],
            [
                "366a984ba5d5668d"
            ],
            [
                "7e48cb39fb231efd"
            ],
            [
                "ceaa3df6f90e7f39"
            ],
            [
                "02c00989d29b68b9"
            ],
            [
                "25168f9e0d704448"
            ],
            [
                "eca4f2afe08318d1"
            ],
            [
                "d633a123f2d5b992"
            ],
            [
                "12152ca18f22b934"
            ],
            [
                "6b40cda1ce4a407f"
            ],
            [
                "98e2da6305063e1f"
            ],
            [
                "96406948bd2fb030"
            ],
            [
                "8cf5b649e331ce15"
            ],
            [
                "136f03e2229f030a"
            ],
            [
                "75b2e87e6760a38b"
            ]
        ]
    },
    {
        "id": "53af2f4329cd7e74",
        "type": "link in",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "name": "",
        "links": [
            "3b8100c135a688e5",
            "d1bcaebfeab23d41"
        ],
        "x": 3305,
        "y": 480,
        "wires": [
            [
                "26acffc61224be5e"
            ]
        ]
    },
    {
        "id": "a412ecedd9fde959",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo1",
        "program": "",
        "name": "Disparo_Breaker_SCP1",
        "x": 3760,
        "y": 60,
        "wires": []
    },
    {
        "id": "366a984ba5d5668d",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo2",
        "program": "",
        "name": "Disparo_Breaker_SCP2",
        "x": 3760,
        "y": 120,
        "wires": []
    },
    {
        "id": "7e48cb39fb231efd",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo3",
        "program": "",
        "name": "Disparo_Breaker_SCP3",
        "x": 3760,
        "y": 180,
        "wires": []
    },
    {
        "id": "ceaa3df6f90e7f39",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo4",
        "program": "",
        "name": "Disparo_Breaker_SCP4",
        "x": 3760,
        "y": 240,
        "wires": []
    },
    {
        "id": "02c00989d29b68b9",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo5",
        "program": "",
        "name": "Disparo_Breaker_SCP5",
        "x": 3760,
        "y": 300,
        "wires": []
    },
    {
        "id": "25168f9e0d704448",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo6",
        "program": "",
        "name": "Disparo_Breaker_SCP6",
        "x": 3760,
        "y": 360,
        "wires": []
    },
    {
        "id": "eca4f2afe08318d1",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo7",
        "program": "",
        "name": "Disparo_Breaker_SCP7",
        "x": 3760,
        "y": 420,
        "wires": []
    },
    {
        "id": "d633a123f2d5b992",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo8",
        "program": "",
        "name": "Disparo_Breaker_SCP8",
        "x": 3760,
        "y": 480,
        "wires": []
    },
    {
        "id": "12152ca18f22b934",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo9",
        "program": "",
        "name": "Disparo_Breaker_SCP9",
        "x": 3760,
        "y": 540,
        "wires": []
    },
    {
        "id": "6b40cda1ce4a407f",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo10",
        "program": "",
        "name": "Disparo_Breaker_SCP10",
        "x": 3760,
        "y": 600,
        "wires": []
    },
    {
        "id": "98e2da6305063e1f",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo11",
        "program": "",
        "name": "Disparo_Breaker_SCP11",
        "x": 3760,
        "y": 660,
        "wires": []
    },
    {
        "id": "96406948bd2fb030",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo12",
        "program": "",
        "name": "Disparo_Breaker_SCP12",
        "x": 3760,
        "y": 720,
        "wires": []
    },
    {
        "id": "8cf5b649e331ce15",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo13",
        "program": "",
        "name": "Disparo_Breaker_SCP13",
        "x": 3760,
        "y": 780,
        "wires": []
    },
    {
        "id": "136f03e2229f030a",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo14",
        "program": "",
        "name": "Disparo_Breaker_SCP14",
        "x": 3760,
        "y": 840,
        "wires": []
    },
    {
        "id": "75b2e87e6760a38b",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "cff3928797d25d39",
        "endpoint": "7d3dc82b6aad9166",
        "variable": "Disparo_Breaker_Pozo15",
        "program": "",
        "name": "Disparo_Breaker_SCP15",
        "x": 3760,
        "y": 900,
        "wires": []
    },
    {
        "id": "d1bcaebfeab23d41",
        "type": "link out",
        "z": "c8989d0a.49ea8",
        "g": "1a392c2d1fb561f8",
        "name": "",
        "links": [
            "53af2f4329cd7e74"
        ],
        "x": 2685,
        "y": 480,
        "wires": []
    },
    {
        "id": "28cd79fb.3dcae6",
        "type": "ui_button",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "group": "a706ea3d.b7fbc8",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Cerrar sesión",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "Cerrar sesión",
        "topicType": "str",
        "x": 980,
        "y": 160,
        "wires": [
            [
                "df6fb5ca.5f8af8"
            ]
        ]
    },
    {
        "id": "2066be8e.5c6832",
        "type": "ui_text_input",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "label": "Nombre de usuario",
        "tooltip": "",
        "group": "a706ea3d.b7fbc8",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "1",
        "topic": "user",
        "topicType": "str",
        "x": 1150,
        "y": 280,
        "wires": [
            [
                "df6fb5ca.5f8af8"
            ]
        ]
    },
    {
        "id": "e04fbd1c.98ffe",
        "type": "ui_button",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "group": "a706ea3d.b7fbc8",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Iniciar sesión",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "Iniciar sesión",
        "x": 1130,
        "y": 320,
        "wires": [
            [
                "df6fb5ca.5f8af8"
            ]
        ]
    },
    {
        "id": "2ffa7be0.763644",
        "type": "ui_text_input",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "label": "Contraseña",
        "tooltip": "",
        "group": "a706ea3d.b7fbc8",
        "order": 5,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "password",
        "delay": "1",
        "topic": "password",
        "topicType": "str",
        "x": 1130,
        "y": 240,
        "wires": [
            [
                "df6fb5ca.5f8af8"
            ]
        ]
    },
    {
        "id": "1595def7.d11251",
        "type": "trigger",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "op1": "0",
        "op2": "Close",
        "op1type": "num",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 540,
        "y": 160,
        "wires": [
            [
                "affdacff.6646c"
            ]
        ]
    },
    {
        "id": "6e26c35e.a97f8c",
        "type": "delay",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 350,
        "y": 200,
        "wires": [
            [
                "1595def7.d11251"
            ]
        ]
    },
    {
        "id": "be50258c.07bb98",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 160,
        "wires": [
            [
                "1595def7.d11251"
            ]
        ]
    },
    {
        "id": "affdacff.6646c",
        "type": "switch",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Close",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 680,
        "y": 160,
        "wires": [
            [
                "3a348318.fe982c"
            ]
        ]
    },
    {
        "id": "51d66341.8ee0fc",
        "type": "link in",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "b56aa71999519568",
            "dc640e015754eebd"
        ],
        "x": 235,
        "y": 180,
        "wires": [
            [
                "be50258c.07bb98",
                "6e26c35e.a97f8c"
            ]
        ]
    },
    {
        "id": "3a348318.fe982c",
        "type": "switch",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 810,
        "y": 160,
        "wires": [
            [
                "4fc0a59f776062eb"
            ]
        ]
    },
    {
        "id": "cf6714f4.9f00d8",
        "type": "switch",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "nivel usuario",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1450,
        "y": 160,
        "wires": [
            [
                "0ecd6b8cb5e996f3",
                "165652a19afcc091",
                "e7122851149fed97",
                "e18db47d963ed714",
                "23b5193babb35890"
            ],
            [
                "0ecd6b8cb5e996f3",
                "22b30717ba45ab3c",
                "e7122851149fed97",
                "e18db47d963ed714",
                "23b5193babb35890"
            ],
            [
                "d84c6818bdd3b4c9",
                "e7122851149fed97",
                "0cd1b5329a82816d"
            ]
        ]
    },
    {
        "id": "fe313f3f60b02976",
        "type": "link out",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "Nivel Usuario",
        "links": [
            "82aa836a1d0ebabd",
            "8e53c477b66d3a99"
        ],
        "x": 1795,
        "y": 170,
        "wires": []
    },
    {
        "id": "9226d68a.21c148",
        "type": "switch",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "Usuario",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Usuarios",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 300,
        "wires": [
            [
                "ea3b2578.9471a8"
            ]
        ]
    },
    {
        "id": "ea3b2578.9471a8",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "delete",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 300,
        "wires": [
            [
                "93b28ffa.83d6a"
            ]
        ]
    },
    {
        "id": "93b28ffa.83d6a",
        "type": "switch",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "login?",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "gte",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 300,
        "wires": [
            [
                "d13ee029.db027",
                "ea307c20.921bb"
            ],
            [
                "1aeb057.5ff60fb",
                "9ec2fc99.b8d92"
            ]
        ]
    },
    {
        "id": "d13ee029.db027",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 240,
        "wires": [
            [
                "c42260f.7383fa"
            ]
        ]
    },
    {
        "id": "ea307c20.921bb",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 280,
        "wires": [
            [
                "28cd79fb.3dcae6"
            ]
        ]
    },
    {
        "id": "1aeb057.5ff60fb",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 320,
        "wires": [
            [
                "28cd79fb.3dcae6"
            ]
        ]
    },
    {
        "id": "9ec2fc99.b8d92",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 360,
        "wires": [
            [
                "7b0bc601.5d8048"
            ]
        ]
    },
    {
        "id": "7b0bc601.5d8048",
        "type": "delay",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 910,
        "y": 360,
        "wires": [
            [
                "2ffa7be0.763644",
                "2066be8e.5c6832",
                "e04fbd1c.98ffe"
            ]
        ]
    },
    {
        "id": "c42260f.7383fa",
        "type": "delay",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 910,
        "y": 240,
        "wires": [
            [
                "2ffa7be0.763644",
                "2066be8e.5c6832",
                "e04fbd1c.98ffe"
            ]
        ]
    },
    {
        "id": "6ddd2f34.2b638",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "delete",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::deleting",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 300,
        "wires": [
            [
                "2ffa7be0.763644",
                "2066be8e.5c6832"
            ]
        ]
    },
    {
        "id": "423ba16e.29911",
        "type": "link in",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "449b37406b29dc93",
            "901c6735c8cd4585"
        ],
        "x": 835,
        "y": 300,
        "wires": [
            [
                "6ddd2f34.2b638"
            ]
        ]
    },
    {
        "id": "9f98dbaaa1dfbd1c",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "a0f89b10a58f3dbb",
        "name": "User Status",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::UserStatus",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 780,
        "wires": [
            [
                "bfabaff171ee7d62"
            ]
        ]
    },
    {
        "id": "cacc926a9dec9c16",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "ba9b3d7a41b195a8",
        "name": "Admin",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Admin Loged",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1100,
        "wires": [
            [
                "268a70d127375de5"
            ]
        ]
    },
    {
        "id": "33c74e4bb2fdac2e",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "ba9b3d7a41b195a8",
        "name": "Operator",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Operator Loged",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1060,
        "wires": [
            [
                "268a70d127375de5"
            ]
        ]
    },
    {
        "id": "fc19b94b0e22c56a",
        "type": "link out",
        "z": "827787d0.ede678",
        "g": "ba9b3d7a41b195a8",
        "name": "Usuario",
        "links": [
            "59e817c2.295b38",
            "40c12bb3.ead9f4"
        ],
        "x": 935,
        "y": 1020,
        "wires": []
    },
    {
        "id": "79a2e777f2c2f926",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "ba9b3d7a41b195a8",
        "name": "root",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Admin Loged",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 1140,
        "wires": [
            [
                "268a70d127375de5"
            ]
        ]
    },
    {
        "id": "2672c65f65d99463",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "ba9b3d7a41b195a8",
        "name": "Ninguno",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sesión cerrada",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1020,
        "wires": [
            [
                "268a70d127375de5"
            ]
        ]
    },
    {
        "id": "bfabaff171ee7d62",
        "type": "switch",
        "z": "827787d0.ede678",
        "g": "a0f89b10a58f3dbb",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 430,
        "y": 780,
        "wires": [
            [
                "e7aeb6df91329b32",
                "33c74e4bb2fdac2e",
                "fd031b5f60e0bb6b",
                "bc609eb97c915f70"
            ],
            [
                "e01f356525ba5066",
                "cacc926a9dec9c16",
                "fd031b5f60e0bb6b",
                "e7c14bc9d21f11dc"
            ],
            [
                "0172896cb5a6aa3a",
                "2672c65f65d99463"
            ]
        ]
    },
    {
        "id": "599aba5c2ae29a06",
        "type": "link out",
        "z": "827787d0.ede678",
        "g": "8217afa77c53c8c4",
        "name": "No user Out",
        "links": [
            "dd807959.9e5a08",
            "bf656c1e.ff84",
            "40b58948.5d5a48"
        ],
        "x": 685,
        "y": 510,
        "wires": []
    },
    {
        "id": "e7aeb6df91329b32",
        "type": "link out",
        "z": "827787d0.ede678",
        "g": "8217afa77c53c8c4",
        "name": "Admin Out",
        "links": [
            "5cc2d788.18b678",
            "ba3ec3f7.7f116",
            "b87d8378.fe2aa",
            "6f2053fa.77020c"
        ],
        "x": 685,
        "y": 550,
        "wires": []
    },
    {
        "id": "e01f356525ba5066",
        "type": "link out",
        "z": "827787d0.ede678",
        "g": "8217afa77c53c8c4",
        "name": "Oper Out",
        "links": [
            "30e13f64.16c0d",
            "ba3ec3f7.7f116",
            "b87d8378.fe2aa",
            "6f2053fa.77020c"
        ],
        "x": 685,
        "y": 590,
        "wires": []
    },
    {
        "id": "287db0c4cf9142ef",
        "type": "link in",
        "z": "827787d0.ede678",
        "g": "a0f89b10a58f3dbb",
        "name": "Acciones de usuario",
        "links": [
            "d771570222095b31",
            "449b37406b29dc93"
        ],
        "x": 615,
        "y": 700,
        "wires": [
            [
                "0172896cb5a6aa3a"
            ]
        ]
    },
    {
        "id": "8e53c477b66d3a99",
        "type": "link in",
        "z": "827787d0.ede678",
        "g": "a0f89b10a58f3dbb",
        "name": "",
        "links": [
            "c0c1c5d8.339158",
            "60b48860b9b73443",
            "fe313f3f60b02976"
        ],
        "x": 185,
        "y": 780,
        "wires": [
            [
                "9f98dbaaa1dfbd1c"
            ]
        ]
    },
    {
        "id": "268a70d127375de5",
        "type": "rbe",
        "z": "827787d0.ede678",
        "g": "a0f89b10a58f3dbb",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "payload",
        "x": 850,
        "y": 1020,
        "wires": [
            [
                "fc19b94b0e22c56a"
            ]
        ]
    },
    {
        "id": "fd031b5f60e0bb6b",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "a0f89b10a58f3dbb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::sesion",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "0172896cb5a6aa3a",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "fc7ac26950eab4f6",
        "name": "No user",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No user",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 720,
        "wires": [
            [
                "9cdf0df54a5993a1",
                "27e5b49204d6a1d6"
            ]
        ]
    },
    {
        "id": "e7c14bc9d21f11dc",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "fc7ac26950eab4f6",
        "name": "Oper",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Oper",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 760,
        "wires": [
            [
                "9cdf0df54a5993a1",
                "27e5b49204d6a1d6"
            ]
        ]
    },
    {
        "id": "bc609eb97c915f70",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "fc7ac26950eab4f6",
        "name": "Admin",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Admin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 800,
        "wires": [
            [
                "9cdf0df54a5993a1",
                "27e5b49204d6a1d6"
            ]
        ]
    },
    {
        "id": "9cdf0df54a5993a1",
        "type": "ui_text",
        "z": "827787d0.ede678",
        "g": "fc7ac26950eab4f6",
        "group": "a706ea3d.b7fbc8",
        "order": 2,
        "width": 10,
        "height": 1,
        "name": "",
        "label": "Usuario actual:",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 950,
        "y": 760,
        "wires": []
    },
    {
        "id": "901c6735c8cd4585",
        "type": "link out",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "1abe9aa78aaec393",
            "423ba16e.29911",
            "82aa836a1d0ebabd",
            "bbf1761d949d69e9"
        ],
        "x": 1935,
        "y": 250,
        "wires": []
    },
    {
        "id": "1abe9aa78aaec393",
        "type": "link in",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "901c6735c8cd4585",
            "b56aa71999519568"
        ],
        "x": 215,
        "y": 300,
        "wires": [
            [
                "9226d68a.21c148"
            ]
        ]
    },
    {
        "id": "d84c6818bdd3b4c9",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "No user",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":\t    {\"hide\":\t        [\t        \"Datos_operativos_pozos\",\t        \"Tendencias\",\t        \"Datos_de_fondo\",\t        \"Estado_CCP\",\t        \"Configuración_clúster\",\t        \"Instrumentación_manifold\",\t        \"Instrumentación_pozos\",\t        \"Datos_históricos\"\t        ],\t    \"show\":\t        [\t        \"Usuarios\",\t        \"Despliegue_general\",\t        \"Datos_eléctricos_clúster\",\t        \"Alarmas/Eventos\"\t        ]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 250,
        "wires": [
            [
                "fe313f3f60b02976",
                "ad1cd38b848d5ff7"
            ]
        ]
    },
    {
        "id": "22b30717ba45ab3c",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "Admin",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":\t    {\"hide\":\t        [],\t    \"show\":\t        [\"Usuarios\",\t        \"Despliegue_general\",\t        \"Datos_eléctricos_clúster\",\t        \"Datos_operativos_pozos\",\t        \"Datos_de_fondo\",\t        \"Estado_CCP\",\t        \"Configuración_clúster\",\t        \"Instrumentación_manifold\",\t        \"Instrumentación_pozos\",\t        \"Alarmas/Eventos\",\t        \"Datos_históricos\",\t        \"Tendencias\",\t        \"SWC\"]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 160,
        "wires": [
            [
                "fe313f3f60b02976"
            ]
        ]
    },
    {
        "id": "ee0ae928d7535b2a",
        "type": "link in",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "b56aa71999519568"
        ],
        "x": 1285,
        "y": 250,
        "wires": [
            [
                "e0246175d5eaa3d1"
            ]
        ]
    },
    {
        "id": "e0246175d5eaa3d1",
        "type": "switch",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "inicio",
        "property": "#:(memoryOnly)::InitOper",
        "propertyType": "flow",
        "rules": [
            {
                "t": "neq",
                "v": "started",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1380,
        "y": 250,
        "wires": [
            [
                "354d51fb8e5d63b7"
            ]
        ]
    },
    {
        "id": "354d51fb8e5d63b7",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "set inicio",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::InitOper",
                "pt": "flow",
                "to": "started",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1510,
        "y": 250,
        "wires": [
            [
                "d84c6818bdd3b4c9"
            ]
        ]
    },
    {
        "id": "0ecd6b8cb5e996f3",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "otra pantalla",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1650,
        "y": 120,
        "wires": [
            [
                "fe313f3f60b02976"
            ]
        ]
    },
    {
        "id": "4fc0a59f776062eb",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "Cerrar Sesión",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Cerrar sesión",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 120,
        "wires": [
            [
                "df6fb5ca.5f8af8"
            ]
        ]
    },
    {
        "id": "30a12ffe865f6085",
        "type": "link in",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "links": [
            "449b37406b29dc93"
        ],
        "x": 845,
        "y": 120,
        "wires": [
            [
                "4fc0a59f776062eb"
            ]
        ]
    },
    {
        "id": "165652a19afcc091",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "Oper",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":\t    {\"hide\":\t        [\"SWC\",\t        \"Datos_de_fondo\",\t        \"Estado_CCP\",\t        \"Configuración_clúster\",\t        \"Instrumentación_manifold\",\t        \"Instrumentación_pozos\"],\t    \"show\":\t        [\"Usuarios\",\t        \"Despliegue_general\",\t        \"Datos_eléctricos_clúster\",\t        \"Datos_operativos_pozos\",\t        \"Datos_históricos\",\t        \"Alarmas/Eventos\"]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 200,
        "wires": [
            [
                "fe313f3f60b02976"
            ]
        ]
    },
    {
        "id": "9593c7d40a0a823b",
        "type": "inject",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "Arranque de sistema",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "8",
        "topic": "Cerrar sesión",
        "payloadType": "str",
        "x": 1300,
        "y": 100,
        "wires": [
            [
                "df6fb5ca.5f8af8"
            ]
        ]
    },
    {
        "id": "df6fb5ca.5f8af8",
        "type": "subflow:2657da37.013b66",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "Usuario",
        "env": [],
        "x": 1300,
        "y": 160,
        "wires": [
            [
                "cf6714f4.9f00d8"
            ]
        ],
        "inputLabels": [
            "Input msg"
        ],
        "outputLabels": [
            "Output msg"
        ]
    },
    {
        "id": "e1b7d609d7454478",
        "type": "switch",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "nivel usuario",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1480,
        "y": 210,
        "wires": [
            [
                "d84c6818bdd3b4c9"
            ]
        ]
    },
    {
        "id": "befd7b0d594b7754",
        "type": "inject",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 1320,
        "y": 210,
        "wires": [
            [
                "e1b7d609d7454478"
            ]
        ]
    },
    {
        "id": "e7122851149fed97",
        "type": "link out",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "DeshabilitarSelección",
        "links": [
            "30c097a0f84ba44d"
        ],
        "x": 1525,
        "y": 90,
        "wires": []
    },
    {
        "id": "0cd1b5329a82816d",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "Sesión Close",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sesión Cerrada",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 360,
        "wires": [
            [
                "1249cb6a5060fda8"
            ]
        ]
    },
    {
        "id": "e18db47d963ed714",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "Sesión log",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Operator Loged",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1670,
        "y": 320,
        "wires": [
            [
                "1249cb6a5060fda8"
            ]
        ]
    },
    {
        "id": "1249cb6a5060fda8",
        "type": "link out",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "Event/Sesión",
        "links": [
            "59e817c2.295b38"
        ],
        "x": 1795,
        "y": 340,
        "wires": []
    },
    {
        "id": "6c9ed5d3.e7799c",
        "type": "function",
        "z": "aa547d69.9cb8e",
        "g": "aafad2ba.dcc8b",
        "name": "Harmonics chart generation",
        "func": "var chart = [{\n    \"series\": [\"THD-V\", \"THD-I\"],\n    \"data\": msg.payload,\n    \"labels\": [ \"1o\", \"3o\",\"5o\",\"7o\",\"9o\",\"11o\",\"13o\"]\n}];\nmsg.payload = chart;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 110,
        "wires": [
            []
        ]
    },
    {
        "id": "3ea5879e.bf0588",
        "type": "function",
        "z": "aa547d69.9cb8e",
        "g": "aafad2ba.dcc8b",
        "name": "Data Handle harmonics chart",
        "func": "var PQA_Data                = global.get(\"PQA.Harmonics\", \"memoryOnly\") || \"[]\";\nvar Chart_Selection         = flow.get(\"Harmonics_Chart.Selection\", \"memoryOnly\") || \"\";\n\nvar Linea1_V = Object.values(PQA_Data.V1_V12);\nvar Linea1_I = Object.values(PQA_Data.I1);\n\nvar Linea2_V = Object.values(PQA_Data.V2_V31);\nvar Linea2_I = Object.values(PQA_Data.I2);\n\n\nvar Linea3_V = Object.values(PQA_Data.V3_V23);\nvar Linea3_I = Object.values(PQA_Data.I3);\n\nvar LineaP_V = [\n    ((Linea1_V[0]+Linea2_V[0]+Linea3_V[0])/3).toFixed(2),\n    ((Linea1_V[1]+Linea2_V[1]+Linea3_V[1])/3).toFixed(2),\n    ((Linea1_V[2]+Linea2_V[0]+Linea3_V[2])/3).toFixed(2),\n    ((Linea1_V[3]+Linea2_V[0]+Linea3_V[3])/3).toFixed(2),\n    ((Linea1_V[4]+Linea2_V[0]+Linea3_V[4])/3).toFixed(2),\n    ((Linea1_V[5]+Linea2_V[0]+Linea3_V[5])/3).toFixed(2)\n];\nvar LineaP_I = [\n    ((Linea1_I[0]+Linea2_I[0]+Linea3_I[0])/3).toFixed(2),\n    ((Linea1_I[1]+Linea2_I[1]+Linea3_I[1])/3).toFixed(2),\n    ((Linea1_I[2]+Linea2_I[0]+Linea3_I[2])/3).toFixed(2),\n    ((Linea1_I[3]+Linea2_I[0]+Linea3_I[3])/3).toFixed(2),\n    ((Linea1_I[4]+Linea2_I[0]+Linea3_I[4])/3).toFixed(2),\n    ((Linea1_I[5]+Linea2_I[0]+Linea3_I[5])/3).toFixed(2),\n];\n\nif(Chart_Selection == \"Linea1\")\n    {\n        msg.payload =  [ Linea1_V , Linea1_I];\n        msg.label   = \"Porcentaje Armónico Línea 1\";\n    }\nelse if(Chart_Selection == \"Linea2\")\n    {\n        msg.payload =  [ Linea2_V , Linea2_I];\n        msg.label   = \"Porcentaje Armónico Línea 2\";\n    }\nelse if(Chart_Selection == \"Linea3\")\n    {\n        msg.payload =  [ Linea3_V , Linea3_I];\n        msg.label   = \"Porcentaje Armónico Línea 3\";\n    }\nelse if(Chart_Selection == \"LineaP\")\n    {\n        {\n        msg.payload =  [ LineaP_V , LineaP_I];\n        msg.label   = \"Porcentaje Armónico Promedio\";\n    }\n    }\nreturn msg; \n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 110,
        "wires": [
            [
                "6c9ed5d3.e7799c"
            ]
        ]
    },
    {
        "id": "c8aa3a95.12b518",
        "type": "switch",
        "z": "aa547d69.9cb8e",
        "g": "aafad2ba.dcc8b",
        "name": "Harmonics Chart Prompted? ",
        "property": "#:(memoryOnly)::Harmonics_Chart.Prompt",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 110,
        "wires": [
            [
                "3ea5879e.bf0588"
            ]
        ]
    },
    {
        "id": "20b8681c.81fd48",
        "type": "change",
        "z": "aa547d69.9cb8e",
        "g": "aafad2ba.dcc8b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Harmonics_Chart.Selection",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "8c73338.8deb8d",
        "type": "link in",
        "z": "aa547d69.9cb8e",
        "g": "aafad2ba.dcc8b",
        "name": "",
        "links": [
            "ad87cee4.7dbb5",
            "449b37406b29dc93"
        ],
        "x": 215,
        "y": 60,
        "wires": [
            [
                "3ccbaa0b.2db096"
            ]
        ]
    },
    {
        "id": "3ccbaa0b.2db096",
        "type": "change",
        "z": "aa547d69.9cb8e",
        "g": "aafad2ba.dcc8b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "LineaP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "cd3f340c.1706c8",
        "type": "function",
        "z": "aa547d69.9cb8e",
        "name": "Datos Eléctricos",
        "func": "var PQM_Cluster = global.get(\"Cluster.PQM\",\"memoryOnly\")||[];\n        \nmsg.VL1N    = PQM_Cluster.Voltaje_L1_N;\nmsg.VL2N    = PQM_Cluster.Voltaje_L2_N;\nmsg.VL3N    = PQM_Cluster.Voltaje_L3_N;\n\nmsg.VL1L2   = PQM_Cluster.Voltaje_L1_L2;\nmsg.VL2L3   = PQM_Cluster.Voltaje_L2_L3;\nmsg.VL1L3   = PQM_Cluster.Voltaje_L1_L3;\n\nmsg.CL1     = PQM_Cluster.Amp_L1;\nmsg.CL2     = PQM_Cluster.Amp_L2;\nmsg.CL3     = PQM_Cluster.Amp_L3;\n\nmsg.L1_kW   = PQM_Cluster.KWATT_Act_L1;\nmsg.L2_kW   = PQM_Cluster.KWATT_Act_L2;\nmsg.L3_kW   = PQM_Cluster.KWATT_Act_L3;\n\nmsg.L1_kVA  = PQM_Cluster.KVA_Act_L1;\nmsg.L2_kVA  = PQM_Cluster.KVA_Act_L2;\nmsg.L3_kVA  = PQM_Cluster.KVA_Act_L3;\n\nmsg.L1_kVAR = PQM_Cluster.KVAr_Act_L1;\nmsg.L2_kVAR = PQM_Cluster.KVAr_Act_L2;\nmsg.L3_kVAR = PQM_Cluster.KVAr_Act_L3;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 220,
        "wires": [
            [
                "9a5e2769197ec091",
                "1e198fdd729abbe4",
                "74b5b171e69e432f",
                "8c85a2863fa5d796",
                "fb327ab1ca42c55c",
                "d7e7d882e120bbac",
                "d7424337f0afdb1e",
                "33fbc077863bf214",
                "92879f0db2d33c77",
                "a022b1638c40e2d4",
                "c499dcb5ef5697b0",
                "762a782f6f35ebe6",
                "61956eafcbc929ed",
                "685b153041347c40",
                "ddf34afe525e8000",
                "ce2acc58edb02677",
                "7617e107945bf319",
                "7c6447ff989f473e"
            ]
        ]
    },
    {
        "id": "be5b89ed.6c6bf8",
        "type": "subflow:5df787f2.bf5f88",
        "z": "aa547d69.9cb8e",
        "name": "",
        "env": [],
        "x": 150,
        "y": 330,
        "wires": [
            []
        ]
    },
    {
        "id": "8531d637ba42e7a9",
        "type": "link in",
        "z": "aa547d69.9cb8e",
        "name": "",
        "links": [
            "bc99cf40ab6d6e51"
        ],
        "x": 105,
        "y": 160,
        "wires": [
            [
                "c8aa3a95.12b518"
            ]
        ]
    },
    {
        "id": "5dcc4d5b.20caf4",
        "type": "ui_dropdown",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Seleccione un pozo",
        "group": "7360f8fc.f7b758",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "str",
        "x": 530,
        "y": 110,
        "wires": [
            [
                "9959ff.cbb026",
                "59adc93d8528121c",
                "c06799051fae3330"
            ]
        ]
    },
    {
        "id": "4c3a9b2b.9e2814",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "",
        "func": "var Cluster = global.get(\"Cluster\")||[];\n// Extraer información sobre SCP Disponibles\nmsg.disponible  = [];\nmsg.options     = [];\nfor(var i=0; i<Cluster.length; i+=1){\n    msg.disponible.push(Cluster[i].Disponible);\n    msg.disponible[i]= msg.disponible[i]== \"No\" ? false:true;\n    \n    if(msg.disponible[i]){\n        msg.options.push(Cluster[i].Nombre);\n    }\n}\nmsg.payload = Cluster;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 110,
        "wires": [
            [
                "5dcc4d5b.20caf4"
            ]
        ]
    },
    {
        "id": "3cc764fd.7e58cc",
        "type": "ui_text_input",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "name": "",
        "label": "Referencia [ Hz ]",
        "tooltip": "",
        "group": "3b7087bd.454fe8",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "100",
        "topic": "Ref",
        "topicType": "str",
        "x": 270,
        "y": 360,
        "wires": [
            [
                "6f296e4d.6b03a",
                "e36d20a829331d71"
            ]
        ]
    },
    {
        "id": "1acb0c29.0ddee4",
        "type": "ui_button",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "name": "",
        "group": "3b7087bd.454fe8",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "Send",
        "topicType": "str",
        "x": 240,
        "y": 460,
        "wires": [
            [
                "8da77a70.699258",
                "528f3613fd9dc550",
                "fb0788f42bc54f91",
                "f6c4b6bdd7d87649"
            ]
        ]
    },
    {
        "id": "64748d27.b27004",
        "type": "ui_button",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "",
        "group": "3b7087bd.454fe8",
        "order": 3,
        "width": 5,
        "height": 1,
        "passthru": true,
        "label": "Arranque",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "Basic",
        "topicType": "str",
        "x": 190,
        "y": 670,
        "wires": [
            [
                "90ac36c9c645d371"
            ]
        ]
    },
    {
        "id": "26c5e6f4.5cc1fa",
        "type": "ui_button",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "",
        "group": "3b7087bd.454fe8",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Parada",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "Basic",
        "topicType": "str",
        "x": 190,
        "y": 710,
        "wires": [
            [
                "8f37636c700844c8"
            ]
        ]
    },
    {
        "id": "2526682.c405998",
        "type": "ui_button",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "",
        "group": "3b7087bd.454fe8",
        "order": 5,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Reinicio",
        "tooltip": "",
        "color": "",
        "bgcolor": "grey",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "Basic",
        "topicType": "str",
        "x": 190,
        "y": 750,
        "wires": [
            [
                "dba80e92.0a13d"
            ]
        ]
    },
    {
        "id": "24e0f6e3.56cf0a",
        "type": "ui_chart",
        "z": "e997ba3b.48cc18",
        "g": "89dd768a.673f58",
        "name": "",
        "group": "3b7087bd.454fe8",
        "order": 6,
        "width": 24,
        "height": 7,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No Data",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "5",
        "removeOlderPoints": "100",
        "removeOlderUnit": "60",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#f51919",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1490,
        "y": 110,
        "wires": [
            []
        ]
    },
    {
        "id": "bcf4fff3.6451c",
        "type": "link in",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "Datos Operativos pozos Dropdown",
        "links": [
            "c308cca6.9801f",
            "4904603f92adf9ef"
        ],
        "x": 195,
        "y": 110,
        "wires": [
            [
                "4c3a9b2b.9e2814"
            ]
        ]
    },
    {
        "id": "9959ff.cbb026",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Pozo",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 70,
        "wires": [
            [
                "e2dddcc8.8c593"
            ]
        ]
    },
    {
        "id": "a98b506e.03e03",
        "type": "inject",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 150,
        "y": 70,
        "wires": [
            [
                "4c3a9b2b.9e2814"
            ]
        ]
    },
    {
        "id": "e2dddcc8.8c593",
        "type": "link out",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "Pozo Escritura",
        "links": [
            "3bd487eb.ca4f88",
            "dfa4869f829aa22a",
            "b0454546cc691fa4"
        ],
        "x": 825,
        "y": 90,
        "wires": []
    },
    {
        "id": "6f296e4d.6b03a",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Pozo.Referencia",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "267fdbe0.520b94",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "Arranque",
        "rules": [
            {
                "t": "set",
                "p": "Pozo.Arranque",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "Pozo.Parada",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "Pozo.Reinicio",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 670,
        "wires": [
            [
                "ede56ecd.3a66e",
                "75cd742c0d026972"
            ]
        ]
    },
    {
        "id": "76ade389.49748c",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "Parada",
        "rules": [
            {
                "t": "set",
                "p": "Pozo.Parada",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "Pozo.Arranque",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "Pozo.Reinicio",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 710,
        "wires": [
            [
                "ede56ecd.3a66e",
                "5c6c269da4720bd1"
            ]
        ]
    },
    {
        "id": "dba80e92.0a13d",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "Reinicio",
        "rules": [
            {
                "t": "set",
                "p": "Pozo.Reinicio",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "Pozo.Arranque",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "Pozo.Parada",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 750,
        "wires": [
            [
                "ede56ecd.3a66e"
            ]
        ]
    },
    {
        "id": "ede56ecd.3a66e",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "Configurar Clúster",
        "func": "// Leer datos del contexto\nvar Arranque    = flow.get(\"Pozo.Arranque\")||\"--\";\nvar Parada      = flow.get(\"Pozo.Parada\")||\"--\";\nvar Reinicio    = flow.get(\"Pozo.Reinicio\")||\"--\";\nvar SCP         = global.get(\"SCP\",\"memoryOnly\")||\"0\";\n\n// Acomodar la información\n\n/*node.status({fill:\"green\",shape:\"dot\",text:Parada});*/\n/*global.set(\"Cluster\",Cluster);\n\n// Retornar\nflow.set(\"SCP\",SCP,\"memoryOnly\");*/\n\nif(Arranque==true){\n    \n    Parada=false;\n    Reinicio=false;\n    \n    flow.set(\"Pozo.Parada\",Parada);\n    flow.set(\"Pozo.Reinicio\",Reinicio);\n}\nif(Parada==true){\n    \n    Arranque=false;\n    Reinicio=false;\n   \n    flow.set(\"Pozo.Arranque\",Arranque);\n    flow.set(\"Pozo.Reinicio\",Reinicio);\n}\nif(Reinicio==true){\n    \n    Arranque=false;\n    Parada=false;\n   \n    flow.set(\"Pozo.Arranque\",Arranque);\n    flow.set(\"Pozo.Reinicio\",Reinicio);\n}\nnode.status({fill:\"green\",shape:\"dot\",text:Parada});\nglobal.set(\"Comandos.\"+SCP+\".Arranque_Remoto_PD\",Arranque,\"memoryOnly\");\nglobal.set(\"Comandos.\"+SCP+\".Parada_Remota_PD\",Parada,\"memoryOnly\");\nglobal.set(\"Comandos.\"+SCP+\".Reset_Remoto_PD\",Reinicio,\"memoryOnly\");\nmsg.arranque=Parada;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nvar Cluster = global.get(\"Cluster\")||[null];\nif(Cluster[0] == null ){\n    for(var i=0; i<12; i+=1){\n        Cluster[i] = {\n            SCP:i+1,\n            Disponible:\"No\",\n            Nombre:\" -- \",\n            ALS:\" -- \",\n            Variador:\" -- \",\n            Sensor:\" -- \"\n        }\n    }\n    global.set(\"Cluster\",Cluster);\n}\n",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 710,
        "wires": [
            [
                "35e356e7.8ebc5a"
            ]
        ]
    },
    {
        "id": "35e356e7.8ebc5a",
        "type": "link out",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "Arranque/Paro",
        "links": [
            "c5614143.9411",
            "dc662dbf83f0e930"
        ],
        "x": 1245,
        "y": 710,
        "wires": []
    },
    {
        "id": "35696a34.d09d86",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "89dd768a.673f58",
        "name": "Informacion Corriente Frecuencia",
        "func": "var Cluster         = global.get(\"Cluster\",\"memoryOnly\")||[];\nvar ClusterData     = global.get(\"Cluster\")||[];\nvar SCP             = global.get(\"SCP\",\"memoryOnly\")||0;\nvar antSCP = context.get(\"ant\",\"memoryOnly\")||SCP;\nvar time = msg.payload;\n\nvar Corriente_VSD   = Cluster[\"SCP\"+(SCP)].VSD.Corriente_VSD;\nvar Frecuencia      = Cluster[\"SCP\"+(SCP)].VSD.Frecuencia;\n////\nvar data = context.get(\"data\",\"memoryOnly\")||null;\nif (antSCP!=SCP) data = null;\n\nif (data == null) {\n    data = {\n        'Corriente_VSD': [{ \"x\": time, \"y\": Corriente_VSD }],\n        'Frecuencia': [{ \"x\": time, \"y\": Frecuencia }]\n    };\n}\nelse {\n    if (data.Corriente_VSD.length > 15) {\n        data.Corriente_VSD.shift();\n        data.Frecuencia.shift();\n    }\n    data.Corriente_VSD.push({ \"x\": time, \"y\": Corriente_VSD });\n    data.Frecuencia.push({ \"x\": time, \"y\": Frecuencia });\n}\n\ncontext.set(\"data\", data, \"memoryOnly\");\ncontext.set(\"ant\", SCP,\"memoryOnly\");\n\nvar series = [];\n\nseries.push(\"Corriente Actual \" + Corriente_VSD.toFixed(1) + \" (A)\");\nseries.push(\"Frec. Actual \" + Frecuencia.toFixed(1) + \" (Hz)\");\n\nvar datan = [];\n\ndatan.push(data.Corriente_VSD);\ndatan.push(data.Frecuencia);\n\nvar chart = [{\n    \"series\": series,\n    \"data\": datan,\n    \"labels\": [\"\"]\n}];\n\nmsg.payload = chart;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 110,
        "wires": [
            [
                "82f44a0478397706"
            ]
        ]
    },
    {
        "id": "8da77a70.699258",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "name": "Conf. Referencia",
        "func": "// Leer datos del contexto\nvar Referencia  = flow.get(\"Pozo.Referencia\")||\"--\";\nvar SCP         = flow.get(\"SCP\",\"memoryOnly\")||\"0\";\n\nnode.status({fill:\"green\",shape:\"dot\",text:Referencia});\nglobal.set(\"Comandos.\"+SCP+\".Referencia\",Referencia,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nvar Cluster = global.get(\"Cluster\")||[null];\nif(Cluster[0] == null ){\n    for(var i=0; i<12; i+=1){\n        Cluster[i] = {\n            SCP:i+1,\n            Disponible:\"No\",\n            Nombre:\" -- \",\n            ALS:\" -- \",\n            Variador:\" -- \",\n            Sensor:\" -- \"\n        }\n    }\n    global.set(\"Cluster\",Cluster);\n}\n",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 500,
        "wires": [
            [
                "43030a29.bfdeb4"
            ]
        ]
    },
    {
        "id": "43030a29.bfdeb4",
        "type": "link out",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "name": "Conf reff",
        "links": [
            "9a082d5b.6a6e5",
            "646db08f6aef9d05",
            "0c1a890b47e1f65d",
            "4ed767761ad43b23",
            "a12f93e52bf912c0"
        ],
        "x": 555,
        "y": 500,
        "wires": []
    },
    {
        "id": "1e1e27dfa1f3561e",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "ad1eed9908ed5e2a",
        "name": "getting data",
        "func": "// Variables de control de animación de tendencias\nvar time = msg.payload;\nvar realtime = flow.get(\"trends.realtime\", \"memoryOnly\") || null;\nvar lasthour = flow.get(\"trends.lasthour\") || null;\nvar lastday = flow.get(\"trends.lastday\") || null;\nvar counth = context.get(\"counth\",\"memoryOnly\")||0;\nvar countd = context.get(\"countd\", \"memoryOnly\") || 0;\n\n\n// Variables de CILA2S\nvar Cluster = global.get(\"Cluster\", \"memoryOnly\") || [];\nvar ClusterData = global.get(\"Cluster\") || [];\nvar NombrePozo = flow.get(\"Pozo\", \"memoryOnly\") || \"\";\n\n// Extraer nombres del objeto Clúster\nvar Nombres = [];\nfor (var i = 0; i < ClusterData.length; i += 1) {\n    Nombres.push(ClusterData[i][\"Nombre\"]);\n}\nvar index = Nombres.indexOf(NombrePozo);\n\nnode.status({ fill: \"green\", shape: \"dot\", text: index });\nif (index < 0) { index = 1; }\nif (index != -1) { msg.type = ClusterData[index][\"ALS\"] || \"ESP\"; }\n\nvar SCP = ClusterData[index][\"SCP\"];\nglobal.set(\"SCP\", SCP, \"memoryOnly\");\n\nmsg.Frecuencia = (Cluster[\"SCP\" + (SCP)].VSD.Frecuencia).toFixed(2)\nmsg.Voltaje_L1_N = (Cluster[\"SCP\" + (SCP)].PQM.Voltaje_L1_N).toFixed(2);\nmsg.Voltaje_L2_N = (Cluster[\"SCP\" + (SCP)].PQM.Voltaje_L2_N).toFixed(2);\nmsg.Voltaje_L3_N = (Cluster[\"SCP\" + (SCP)].PQM.Voltaje_L3_N).toFixed(2);\n//msg.Voltaje_L1_L2       = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L1_L2).toFixed(2);\nmsg.Amp_L1 = (Cluster[\"SCP\" + (SCP)].PQM.Amp_L1).toFixed(2);\nmsg.Amp_L2 = (Cluster[\"SCP\" + (SCP)].PQM.Amp_L2).toFixed(2);\nmsg.Amp_L3 = (Cluster[\"SCP\" + (SCP)].PQM.Amp_L3).toFixed(2);\nmsg.Voltaje_L1_L2 = (Cluster[\"SCP\" + (SCP)].PQM.Voltaje_L1_L2).toFixed(2);\nmsg.Voltaje_L2_L3 = (Cluster[\"SCP\" + (SCP)].PQM.Voltaje_L2_L3).toFixed(2);\nmsg.Voltaje_L1_L3 = (Cluster[\"SCP\" + (SCP)].PQM.Voltaje_L1_L3).toFixed(2);\nmsg.Voltaje_L1_N = (Cluster[\"SCP\" + (SCP)].PQM.Voltaje_L1_N).toFixed(2);\nmsg.Voltaje_L2_N = (Cluster[\"SCP\" + (SCP)].PQM.Voltaje_L2_N).toFixed(2);\nmsg.Voltaje_L3_N = (Cluster[\"SCP\" + (SCP)].PQM.Voltaje_L3_N).toFixed(2);\nmsg.KWATT_Act_L1 = (Cluster[\"SCP\" + (SCP)].PQM.KWATT_Act_L1).toFixed(2);\nmsg.KWATT_Act_L2 = (Cluster[\"SCP\" + (SCP)].PQM.KWATT_Act_L2).toFixed(2);\nmsg.KWATT_Act_L3 = (Cluster[\"SCP\" + (SCP)].PQM.KWATT_Act_L3).toFixed(2);\nmsg.Voltaje_L_N_Pro = (Cluster[\"SCP\" + (SCP)].PQM.Voltaje_L_N_Pro).toFixed(2);\nmsg.Voltaje_L_L_Pro = (Cluster[\"SCP\" + (SCP)].PQM.Voltaje_L_L_Pro).toFixed(2);\nmsg.Amp_Pro = (Cluster[\"SCP\" + (SCP)].PQM.Amp_Pro).toFixed(2);\nmsg.Hz_Act_Pro = (Cluster[\"SCP\" + (SCP)].PQM.Hz_Act_Pro).toFixed(2);\nmsg.KWATT_Act_Pro = (Cluster[\"SCP\" + (SCP)].PQM.KWATT_Act_Pro).toFixed(2);\nmsg.KVA_Act_Pro = (Cluster[\"SCP\" + (SCP)].PQM.KVA_Act_Pro).toFixed(2);\nmsg.KVAr_Act_Pro = (Cluster[\"SCP\" + (SCP)].PQM.KVAr_Act_Pro).toFixed(2);\nmsg.FP_Pro = (Cluster[\"SCP\" + (SCP)].PQM.FP_Pro).toFixed(2);\nmsg.Voltaje_Motor = (Cluster[\"SCP\" + (SCP)].VSD.Voltaje_Motor).toFixed(2);\nmsg.Corriente_Motor = (Cluster[\"SCP\" + (SCP)].VSD.Corriente_Motor).toFixed(2);\nmsg.PDP = (Cluster[\"SCP\" + (SCP)].DHOLE.PDP).toFixed(2);\nmsg.PIP = (Cluster[\"SCP\" + (SCP)].DHOLE.PIP).toFixed(2);\nmsg.Vibracion = (Cluster[\"SCP\" + (SCP)].DHOLE.Vibracion).toFixed(2);\nmsg.Temperatura_Descarga = (Cluster[\"SCP\" + (SCP)].DHOLE.Temperatura_Descarga).toFixed(2);\nmsg.Temperatura_Entrada = (Cluster[\"SCP\" + (SCP)].DHOLE.Temperatura_Entrada).toFixed(2);\nmsg.Temperatura_Motor = (Cluster[\"SCP\" + (SCP)].DHOLE.Temperatura_Motor).toFixed(2);\nmsg.Voltaje_Bus_DC = (Cluster[\"SCP\" + (SCP)].VSD.Voltaje_Bus_DC).toFixed(2);\nmsg.Corriente_VSD = (Cluster[\"SCP\" + (SCP)].VSD.Corriente_VSD).toFixed(2);\nmsg.Voltaje_VSD = (Cluster[\"SCP\" + (SCP)].VSD.Voltaje_VSD).toFixed(2);\nmsg.Factor_Potencia = (Cluster[\"SCP\" + (SCP)].VSD.Factor_Potencia).toFixed(2);\nmsg.Relacion_TX = (Cluster[\"SCP\" + (SCP)].VSD.Relacion_TX).toFixed(2);\nmsg.THP_PIT_PV = (Cluster[\"SCP\" + (SCP)].INST.THP_PIT_PV).toFixed(2);\nmsg.THT_TIT_PV = (Cluster[\"SCP\" + (SCP)].INST.THT_TIT_PV).toFixed(2);\nmsg.THD_I_Pro = (Cluster[\"SCP\" + (SCP)].PQM.THD_I_Pro).toFixed(2);\nmsg.THD_V_Pro = (Cluster[\"SCP\" + (SCP)].PQM.THD_V_Pro).toFixed(2);\n\nmsg.Vibracion_Eje_X = (Cluster[\"SCP\" + (SCP)].DHOLE.Vibracion_Eje_X).toFixed(2);\nmsg.Vibracion_Eje_Y = (Cluster[\"SCP\" + (SCP)].DHOLE.Vibracion_Eje_Y).toFixed(2);\nmsg.Vibracion_Eje_Z = (Cluster[\"SCP\" + (SCP)].DHOLE.Vibracion_Eje_Z).toFixed(2);\n/*<td>{{A_Tx}}<strong> A [Tx]</strong></td>*/\n\n\nif (realtime == null) {\n    realtime = {\n        'Output_Frequency': [{ \"x\": time, \"y\": msg.Frecuencia || 0 }],\n        'Output_Current': [{ \"x\": time, \"y\": msg.Corriente_VSD || 0 }],\n        'Motor_Current': [{ \"x\": time, \"y\": msg.Corriente_Motor|| 0 }],\n        'LNVoltage': [{ \"x\": time, \"y\": msg.Voltaje_L_N_Pro}],\n        'LLVoltage': [{ \"x\": time, \"y\": msg.Voltaje_L_L_Pro}],\n        'Output_Power': [{ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }],\n        'PIP': [{ \"x\": time, \"y\": msg.PIP }],\n        'PDP': [{ \"x\": time, \"y\": msg.PDP }],\n        'Input_Temp': [{ \"x\": time, \"y\": msg.Temperatura_Entrada }],\n        'Motor_Temp': [{ \"x\": time, \"y\": msg.Temperatura_Motor }],\n        'Voltaje_Bus_DC': [{ \"x\": time, \"y\": msg.Voltaje_Bus_DC }],\n        'Voltaje_VSD': [{ \"x\": time, \"y\": msg.Voltaje_VSD }],\n        'Vibracion': [{ \"x\": time, \"y\": msg.Vibracion }],\n        'Amp_Pro': [{ \"x\": time, \"y\": msg.Amp_Pro }],\n        'Vibracion_X': [{ \"x\": time, \"y\": msg.Vibracion_Eje_X }],\n        'Vibracion_Y': [{ \"x\": time, \"y\": msg.Vibracion_Eje_Y }],\n        'Vibracion_Z': [{ \"x\": time, \"y\": msg.Vibracion_Eje_Z }]\n        \n    };\n}\nelse {\n    if (realtime.Output_Frequency.length > 30) {\n        realtime.Output_Frequency.shift();\n        realtime.Output_Current.shift();\n        realtime.Motor_Current.shift();\n        realtime.LNVoltage.shift();\n        realtime.LLVoltage.shift();\n        realtime.Output_Power.shift();\n        realtime.PIP.shift();\n        realtime.PDP.shift();\n        realtime.Input_Temp.shift();\n        realtime.Motor_Temp.shift();\n        realtime.Voltaje_Bus_DC.shift();\n        realtime.Voltaje_VSD.shift();\n        realtime.Vibracion.shift();\n        realtime.Amp_Pro.shift();\n        realtime.Vibracion_X.shift();\n        realtime.Vibracion_Y.shift();\n        realtime.Vibracion_Z.shift();\n    }\n    \n    realtime.Output_Frequency.push({ \"x\": time, \"y\": msg.Frecuencia || 0 }),\n    realtime.Output_Current.push({ \"x\": time, \"y\": msg.Corriente_VSD || 0 }),\n    realtime.Motor_Current.push({ \"x\": time, \"y\": msg.Corriente_Motor || 0 }),\n    realtime.LNVoltage.push({ \"x\": time, \"y\": msg.Voltaje_L_N_Pro}),\n    realtime.LLVoltage.push({ \"x\": time, \"y\": msg.Voltaje_L_L_Pro }),\n    realtime.Output_Power.push({ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }),\n    realtime.PIP.push({ \"x\": time, \"y\": msg.PIP }),\n    realtime.PDP.push({ \"x\": time, \"y\": msg.PDP }),\n    realtime.Input_Temp.push({ \"x\": time, \"y\": msg.Temperatura_Entrada  }),\n    realtime.Motor_Temp.push({ \"x\": time, \"y\": msg.Temperatura_Motor }),\n    realtime.Voltaje_Bus_DC.push({ \"x\": time, \"y\": msg.Voltaje_Bus_DC }),\n    realtime.Voltaje_VSD.push({ \"x\": time, \"y\": msg.Voltaje_VSD }),\n    realtime.Vibracion.push({ \"x\": time, \"y\": msg.Vibracion }),\n    realtime.Amp_Pro.push({ \"x\": time, \"y\": msg.Amp_Pro }),\n    realtime.Vibracion_X.push({ \"x\": time, \"y\": msg.Vibracion_Eje_X }),\n    realtime.Vibracion_Y.push({ \"x\": time, \"y\": msg.Vibracion_Eje_Y }),\n    realtime.Vibracion_Z.push({ \"x\": time, \"y\": msg.Vibracion_Eje_Z })\n\n}\n\nif (lasthour == null) {\n    lasthour = {\n        'Output_Frequency': [{ \"x\": time, \"y\": msg.Frecuencia || 0 }],\n        'Output_Current': [{ \"x\": time, \"y\": msg.Corriente_VSD || 0 }],\n        'Motor_Current': [{ \"x\": time, \"y\": msg.Corriente_Motor || 0 }],\n        'LNVoltage': [{ \"x\": time, \"y\": msg.Voltaje_L_N_Pro }],\n        'LLVoltage': [{ \"x\": time, \"y\": msg.Voltaje_L_L_Pro }],\n        'Output_Power': [{ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }],\n        'PIP': [{ \"x\": time, \"y\": msg.PIP }],\n        'PDP': [{ \"x\": time, \"y\": msg.PDP }],\n        'Input_Temp': [{ \"x\": time, \"y\": msg.Temperatura_Entrada }],\n        'Motor_Temp': [{ \"x\": time, \"y\": msg.Temperatura_Motor }],\n        'Voltaje_Bus_DC': [{ \"x\": time, \"y\": msg.Voltaje_Bus_DC }],\n        'Voltaje_VSD': [{ \"x\": time, \"y\": msg.Voltaje_VSD }],\n        'Vibracion': [{ \"x\": time, \"y\": msg.Vibracion }],\n        'Amp_Pro': [{ \"x\": time, \"y\": msg.Amp_Pro }],\n        'Vibracion_X': [{ \"x\": time, \"y\": msg.Vibracion_Eje_X }],\n        'Vibracion_Y': [{ \"x\": time, \"y\": msg.Vibracion_Eje_Y }],\n        'Vibracion_Z': [{ \"x\": time, \"y\": msg.Vibracion_Eje_Z }]\n    };\n}\nelse {\n    if (counth==15){\n        if (lasthour.Output_Frequency.length > 240) {\n            lasthour.Output_Frequency.shift();\n            lasthour.Output_Current.shift();\n            lasthour.Motor_Current.shift();\n            lasthour.LNVoltage.shift();\n            lasthour.LLVoltage.shift();\n            lasthour.Output_Power.shift();\n            lasthour.PIP.shift();\n            lasthour.PDP.shift();\n            lasthour.Input_Temp.shift();\n            lasthour.Motor_Temp.shift();\n            lasthour.Voltaje_Bus_DC.shift();\n            lasthour.Voltaje_VSD.shift();\n            lasthour.Vibracion.shift();\n            lasthour.Amp_Pro.shift();\n            lasthour.Vibracion_X.shift();\n            lasthour.Vibracion_Y.shift();\n            lasthour.Vibracion_Z.shift();\n        }\n\n        lasthour.Output_Frequency.push({ \"x\": time, \"y\": msg.Frecuencia || 0 }),\n        lasthour.Output_Current.push({ \"x\": time, \"y\": msg.Corriente_VSD || 0 }),\n        lasthour.Motor_Current.push({ \"x\": time, \"y\": msg.Corriente_Motor || 0 }),\n        lasthour.LNVoltage.push({ \"x\": time, \"y\": msg.Voltaje_L_N_Pro }),\n        lasthour.LLVoltage.push({ \"x\": time, \"y\": msg.Voltaje_L_L_Pro }),\n        lasthour.Output_Power.push({ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }),\n        lasthour.PIP.push({ \"x\": time, \"y\": msg.PIP }),\n        lasthour.PDP.push({ \"x\": time, \"y\": msg.PDP }),\n        lasthour.Input_Temp.push({ \"x\": time, \"y\": msg.Temperatura_Entrada }),\n        lasthour.Motor_Temp.push({ \"x\": time, \"y\": msg.Temperatura_Motor }),\n        lasthour.Voltaje_Bus_DC.push({ \"x\": time, \"y\": msg.Voltaje_Bus_DC }),\n        lasthour.Voltaje_VSD.push({ \"x\": time, \"y\": msg.Voltaje_VSD }),\n        lasthour.Vibracion.push({ \"x\": time, \"y\": msg.Vibracion }),\n        lasthour.Amp_Pro.push({ \"x\": time, \"y\": msg.Amp_Pro }),\n        lasthour.Vibracion_X.push({ \"x\": time, \"y\": msg.Vibracion_Eje_X }),\n        lasthour.Vibracion_Y.push({ \"x\": time, \"y\": msg.Vibracion_Eje_Y }),\n        lasthour.Vibracion_Z.push({ \"x\": time, \"y\": msg.Vibracion_Eje_Z })\n\n        countd > 24 ? countd = 1 : countd = countd + 1;\n        context.set(\"countd\", countd, \"memoryOnly\");\n    }\n\n}\n\nif (lastday == null) {\n    lastday = {\n        'Output_Frequency': [{ \"x\": time, \"y\": msg.Frecuencia || 0 }],\n        'Output_Current': [{ \"x\": time, \"y\": msg.Corriente_VSD || 0 }],\n        'Motor_Current': [{ \"x\": time, \"y\": msg.Corriente_Motor || 0 }],\n        'LNVoltage': [{ \"x\": time, \"y\": msg.Voltaje_L_N_Pro }],\n        'LLVoltage': [{ \"x\": time, \"y\": msg.Voltaje_L_L_Pro }],\n        'Output_Power': [{ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }],\n        'PIP': [{ \"x\": time, \"y\": msg.PIP }],\n        'PDP': [{ \"x\": time, \"y\": msg.PDP }],\n        'Input_Temp': [{ \"x\": time, \"y\": msg.Temperatura_Entrada }],\n        'Motor_Temp': [{ \"x\": time, \"y\": msg.Temperatura_Motor }],\n        'Voltaje_Bus_DC': [{ \"x\": time, \"y\": msg.Voltaje_Bus_DC }],\n        'Voltaje_VSD': [{ \"x\": time, \"y\": msg.Voltaje_VSD }],\n        'Vibracion': [{ \"x\": time, \"y\": msg.Vibracion }],\n        'Amp_Pro': [{ \"x\": time, \"y\": msg.Amp_Pro }],\n        'Vibracion_X': [{ \"x\": time, \"y\": msg.Vibracion_Eje_X }],\n        'Vibracion_Y': [{ \"x\": time, \"y\": msg.Vibracion_Eje_Y }],\n        'Vibracion_Z': [{ \"x\": time, \"y\": msg.Vibracion_Eje_Z }]\n    };\n}\nelse {\n    if (countd==24){\n        context.set(\"countd\", 0, \"memoryOnly\");\n        if (lastday.Output_Frequency.length > 240) {\n            lastday.Output_Frequency.shift();\n            lastday.Output_Current.shift();\n            lastday.Motor_Current.shift();\n            lastday.LNVoltage.shift();\n            lastday.LLVoltage.shift();\n            lastday.Output_Power.shift();\n            lastday.PIP.shift();\n            lastday.PDP.shift();\n            lastday.Input_Temp.shift();\n            lastday.Motor_Temp.shift();\n            lastday.Voltaje_Bus_DC.shift();\n            lastday.Voltaje_VSD.shift();\n            lastday.Vibracion.shift();\n            lastday.Amp_Pro.shift();\n            lastday.Vibracion_X.shift();\n            lastday.Vibracion_Y.shift();\n            lastday.Vibracion_Z.shift();\n        }\n\n        lastday.Output_Frequency.push({ \"x\": time, \"y\": msg.Frecuencia || 0 }),\n        lastday.Output_Current.push({ \"x\": time, \"y\": msg.Corriente_VSD || 0 }),\n        lastday.Motor_Current.push({ \"x\": time, \"y\": msg.Corriente_Motor || 0 }),\n        lastday.LNVoltage.push({ \"x\": time, \"y\": msg.Voltaje_L_N_Pro }),\n        lastday.LLVoltage.push({ \"x\": time, \"y\": msg.Voltaje_L_L_Pro }),\n        lastday.Output_Power.push({ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }),\n        lastday.PIP.push({ \"x\": time, \"y\": msg.PIP }),\n        lastday.PDP.push({ \"x\": time, \"y\": msg.PDP }),\n        lastday.Input_Temp.push({ \"x\": time, \"y\": msg.Temperatura_Entrada }),\n        lastday.Motor_Temp.push({ \"x\": time, \"y\": msg.Temperatura_Motor }),\n        lastday.Voltaje_Bus_DC.push({ \"x\": time, \"y\": msg.Voltaje_Bus_DC }),\n        lastday.Voltaje_VSD.push({ \"x\": time, \"y\": msg.Voltaje_VSD }),\n        lastday.Vibracion.push({ \"x\": time, \"y\": msg.Vibracion }),\n        lastday.Amp_Pro.push({ \"x\": time, \"y\": msg.Amp_Pro }),\n        lastday.Vibracion_X.push({ \"x\": time, \"y\": msg.Vibracion_Eje_X }),\n        lastday.Vibracion_Y.push({ \"x\": time, \"y\": msg.Vibracion_Eje_Y }),\n        lastday.Vibracion_Z.push({ \"x\": time, \"y\": msg.Vibracion_Eje_Z })\n    }\n\n}\n\ncounth > 14 ? counth=1 : counth = counth + 1;\ncontext.set(\"counth\", counth, \"memoryOnly\");\n\nflow.set(\"trends.realtime\", realtime, \"memoryOnly\");\nflow.set(\"trends.lasthour\", lasthour);\nflow.set(\"trends.lastday\", lastday);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 930,
        "wires": [
            [
                "a56654764ab75307"
            ]
        ]
    },
    {
        "id": "1889382ff553feb8",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "ad1eed9908ed5e2a",
        "name": "request",
        "func": "var i,request={};\nfor (i = 0; i < msg.payload.length ;i++){\n    if (msg.payload[i] ==\"Output_Frequency\") request.Output_Frequency=true;\n    if (msg.payload[i] == \"Output_Current\") request.Output_Current=true;\n    if (msg.payload[i] == \"Motor_Current\") request.Motor_Current = true;\n    if (msg.payload[i] == \"LNVoltage\") request.LNVoltage = true;\n    if (msg.payload[i] == \"LLVoltage\") request.LLVoltage = true;\n    if (msg.payload[i] == \"Output_Power\") request.Output_Power = true;\n    if (msg.payload[i] == \"PIP\") request.PIP = true;\n    if (msg.payload[i] == \"PDP\") request.PDP = true;\n    if (msg.payload[i] == \"Input_Temp\") request.Input_Temp = true;\n    if (msg.payload[i] == \"Motor_Temp\") request.Motor_Temp = true;\n    if (msg.payload[i] == \"Voltaje_Bus_DC \") request.Voltaje_Bus_DC  = true;\n    if (msg.payload[i] == \"Voltaje_VSD \") request.Voltaje_VSD  = true;\n    if (msg.payload[i] == \"Vibracion\") request.Vibracion = true;\n    if (msg.payload[i] == \"Amp_Pro\") request.Amp_Pro = true;\n    if (msg.payload[i] == \"Vibracion_X\") request.Vibracion_X = true;\n    if (msg.payload[i] == \"Vibracion_Y\") request.Vibracion_Y= true;\n    if (msg.payload[i] == \"Vibracion_Z\") request.Vibracion_Z = true;\n}\nmsg.payload = request;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 870,
        "wires": [
            [
                "0c268e6506789671"
            ]
        ]
    },
    {
        "id": "0c268e6506789671",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "ad1eed9908ed5e2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::trends.request",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 870,
        "wires": [
            []
        ]
    },
    {
        "id": "5f05e290fd561209",
        "type": "ui_dropdown",
        "z": "e997ba3b.48cc18",
        "g": "ad1eed9908ed5e2a",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Seleccionar una o mas variables",
        "group": "c769e17924b31c7a",
        "order": 1,
        "width": 12,
        "height": 1,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Voltaje de Salida VSD",
                "value": "Voltaje_VSD ",
                "type": "str"
            },
            {
                "label": "Corriente salida drive del VSD",
                "value": "Output_Current",
                "type": "str"
            },
            {
                "label": "Potencia de salida",
                "value": "Output_Power",
                "type": "str"
            },
            {
                "label": "Frecuencia de salida del VSD",
                "value": "Output_Frequency",
                "type": "str"
            },
            {
                "label": "Bus DC",
                "value": "Voltaje_Bus_DC ",
                "type": "str"
            },
            {
                "label": "Corriente de motor del pozo",
                "value": "Motor_Current",
                "type": "str"
            },
            {
                "label": "Voltaje de fase promedio",
                "value": "LNVoltage",
                "type": "str"
            },
            {
                "label": "Voltaje de línea a línea promedio",
                "value": "LLVoltage",
                "type": "str"
            },
            {
                "label": "Corriente Promedio",
                "value": "Amp_Pro",
                "type": "str"
            },
            {
                "label": "Presión de entrada",
                "value": "PIP",
                "type": "str"
            },
            {
                "label": "Presión de descarga",
                "value": "PDP",
                "type": "str"
            },
            {
                "label": "Temperatura de entrada",
                "value": "Input_Temp",
                "type": "str"
            },
            {
                "label": "Temperatura de motor",
                "value": "Motor_Temp",
                "type": "str"
            },
            {
                "label": "Vibración",
                "value": "Vibracion",
                "type": "str"
            },
            {
                "label": "Vibración eje X",
                "value": "Vibracion_X",
                "type": "str"
            },
            {
                "label": "Vibración eje Y",
                "value": "Vibracion_Y",
                "type": "str"
            },
            {
                "label": "Vibración eje Z",
                "value": "Vibracion_Z",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 870,
        "wires": [
            [
                "1889382ff553feb8"
            ]
        ]
    },
    {
        "id": "59905feec00f5c7f",
        "type": "ui_dropdown",
        "z": "e997ba3b.48cc18",
        "g": "ad1eed9908ed5e2a",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Seleccionar tiempo",
        "group": "c769e17924b31c7a",
        "order": 2,
        "width": 12,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Tiempo real",
                "value": "realtime",
                "type": "str"
            },
            {
                "label": "Última hora",
                "value": "lasthour",
                "type": "str"
            },
            {
                "label": "24 horas anteriores",
                "value": "lastday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 800,
        "y": 950,
        "wires": [
            [
                "3a50b8e2f7d2c694"
            ]
        ]
    },
    {
        "id": "3a50b8e2f7d2c694",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "ad1eed9908ed5e2a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::trends.selec_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 950,
        "wires": [
            []
        ]
    },
    {
        "id": "a90b9db5a15e0d3e",
        "type": "ui_chart",
        "z": "e997ba3b.48cc18",
        "g": "ad1eed9908ed5e2a",
        "name": "",
        "group": "c769e17924b31c7a",
        "order": 3,
        "width": 24,
        "height": 12,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "No data",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#073a5f",
            "#791b93",
            "#ff7f0e",
            "#2ca02c",
            "#453d4d",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#e1c823"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 970,
        "y": 910,
        "wires": [
            []
        ]
    },
    {
        "id": "7586fea4c3b6312c",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "ad1eed9908ed5e2a",
        "name": "Preparing to chart",
        "func": "var select_Trend = flow.get(\"trends.request\",\"memoryOnly\")||{};\nvar select_Time = flow.get(\"trends.selec_time\", \"memoryOnly\") || \"realtime\";\n\n\nvar data = [];\n\nif (select_Trend.Output_Frequency == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Output_Frequency\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Output_Frequency\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Output_Frequency\") || []);\n}\nif (select_Trend.Output_Current == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Output_Current\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Output_Current\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Output_Current\") || []);\n}\nif (select_Trend.Motor_Current == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Motor_Current\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Motor_Current\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Motor_Current\") || []);\n}\nif (select_Trend.LNVoltage == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.LNVoltage\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.LNVoltage\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.LNVoltage\") || []);\n}\nif (select_Trend.LLVoltage == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.LLVoltage\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.LLVoltage\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.LLVoltage\") || []);\n}\nif (select_Trend.Output_Power == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Output_Power\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Output_Power\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Output_Power\") || []);\n}\nif (select_Trend.PIP == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.PIP\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.PIP\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.PIP\") || []);\n}\nif (select_Trend.PDP == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.PDP\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.PDP\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.PDP\") || []);\n}\nif (select_Trend.Input_Temp == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Input_Temp\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Input_Temp\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Input_Temp\") || []);\n}\nif (select_Trend.Motor_Temp == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Motor_Temp\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Motor_Temp\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Motor_Temp\") || []);\n}\nif (select_Trend.Voltaje_Bus_DC  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_Bus_DC\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_Bus_DC\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_Bus_DC\") || []);\n}\nif (select_Trend.Voltaje_VSD  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_VSD\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_VSD\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_VSD\") || []);\n}\nif (select_Trend.Vibracion == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Vibracion\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Vibracion\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Vibracion\") || []);\n}\nif (select_Trend.Amp_Pro == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Amp_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Amp_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Amp_Pro\") || []);\n}\nif (select_Trend.Vibracion_X == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Vibracion_X\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Vibracion_X\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Vibracion_X\") || []);\n}\nif (select_Trend.Vibracion_Y == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Vibracion_Y\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Vibracion_Y\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Vibracion_Y\") || []);\n}\nif (select_Trend.Vibracion_Z == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Vibracion_Z\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Vibracion_Z\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Vibracion_Z\") || []);\n}\nvar series = [];\n\nif (select_Trend.Output_Frequency == true) select_Time != \"realtime\" ? series.push(\"Frecuencia salida (Hz)\") : series.push(\"Frecuencia salida \" + msg.Frecuencia + \" Hz\");\nif (select_Trend.Output_Current == true) select_Time != \"realtime\" ? series.push(\"Corriente salida drive (A)\") : series.push(\"Corriente salida drive \" + msg.Corriente_VSD  +\" A\");\nif (select_Trend.Motor_Current == true) select_Time != \"realtime\" ? series.push(\"Corriente motor (A)\") : series.push(\"Corriente motor \" + msg.Corriente_Motor  +\" A\");\nif (select_Trend.LNVoltage == true) select_Time != \"realtime\" ? series.push(\"Tensión LN promedio (V)\") : series.push(\"Tensión LN promedio \" + msg.Voltaje_L_N_Pro + \" V\");\nif (select_Trend.LLVoltage == true) select_Time != \"realtime\" ? series.push(\"Tensión LL promedio (V)\") : series.push(\"Tensión LL promedio \" + msg.Voltaje_L_L_Pro +\" V\");\nif (select_Trend.Output_Power == true) select_Time != \"realtime\" ? series.push(\"Potencia salida (KW)\") : series.push(\"Potencia salida \" + msg.KWATT_Act_Pro +\" KW\");\nif (select_Trend.PIP == true) select_Time != \"realtime\" ? series.push(\"Presión entrada (psi)\") : series.push(\"Presión entrada \"+msg.PIP +\" psi\");\nif (select_Trend.PDP == true) select_Time != \"realtime\" ? series.push(\"Presión descarga (psi)\") : series.push(\"Presión descarga \"+msg.PDP +\" psi\");\nif (select_Trend.Input_Temp == true) select_Time != \"realtime\" ? series.push(\"Temperatura entrada (ºF)\") : series.push(\"Temperatura entrada \" + msg.Temperatura_Entrada +\" ºF\");\nif (select_Trend.Motor_Temp == true) select_Time != \"realtime\" ? series.push(\"Temperatura motor (ºF)\") : series.push(\"Temperatura motor \" + msg.Temperatura_Motor +\" ºF\");\nif (select_Trend.Voltaje_Bus_DC == true) select_Time != \"realtime\" ? series.push(\"Bus DC (V)\") : series.push(\"Bus DC \" + msg.Voltaje_Bus_DC  + \" V\");\nif (select_Trend.Voltaje_VSD  == true) select_Time != \"realtime\" ? series.push(\"Voltaje de Salida (V)\") : series.push(\"Voltaje de Salida \" + msg.Voltaje_VSD  + \" V\");\nif (select_Trend.Vibracion == true) select_Time != \"realtime\" ? series.push(\"Vibración (Hz)\") : series.push(\"Vibración \" + msg.Vibracion + \" Hz\");\nif (select_Trend.Amp_Pro == true) select_Time != \"realtime\" ? series.push(\"Corriente Promedio (A)\") : series.push(\"Corriente Promedio \" + msg.Amp_Pro + \" A\");\nif (select_Trend.Vibracion_X == true) select_Time != \"realtime\" ? series.push(\"Vibración (G)\") : series.push(\"Vibración X \" + msg.Vibracion + \" G\");\nif (select_Trend.Vibracion_Y == true) select_Time != \"realtime\" ? series.push(\"Vibración (G)\") : series.push(\"Vibración Y \" + msg.Vibracion + \" G\");\nif (select_Trend.Vibracion_Z == true) select_Time != \"realtime\" ? series.push(\"Vibración (G)\") : series.push(\"Vibración Z \" + msg.Vibracion + \" G\");\nvar chart = [{\n    \"series\": series,\n    \"data\": data,\n    \"labels\": [\"\"]\n}];\n\nif (data.length != 0)\n    msg.payload = chart;\nelse\n    msg.payload = [];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 910,
        "wires": [
            [
                "bcc1d02a80a0c9a9"
            ]
        ]
    },
    {
        "id": "a56654764ab75307",
        "type": "switch",
        "z": "e997ba3b.48cc18",
        "g": "ad1eed9908ed5e2a",
        "name": "pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Datos operativos pozos",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 930,
        "wires": [
            [
                "7586fea4c3b6312c"
            ],
            [
                "48a0d2f81f738c9f"
            ]
        ]
    },
    {
        "id": "753de0dd4495c539",
        "type": "link in",
        "z": "e997ba3b.48cc18",
        "g": "ad1eed9908ed5e2a",
        "name": "",
        "links": [
            "eedbe64de6e6f65c",
            "a9485b4128f8af1c",
            "d59a7910a658d9dc"
        ],
        "x": 535,
        "y": 970,
        "wires": [
            [
                "48a0d2f81f738c9f"
            ]
        ]
    },
    {
        "id": "48a0d2f81f738c9f",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "ad1eed9908ed5e2a",
        "name": "realtime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "realtime",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 950,
        "wires": [
            [
                "59905feec00f5c7f"
            ]
        ]
    },
    {
        "id": "bcc1d02a80a0c9a9",
        "type": "rbe",
        "z": "e997ba3b.48cc18",
        "g": "ad1eed9908ed5e2a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 850,
        "y": 910,
        "wires": [
            [
                "a90b9db5a15e0d3e"
            ]
        ]
    },
    {
        "id": "1ee8792a8ad49dce",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "d0ef2f7ea9eb1856",
        "order": 5,
        "width": 6,
        "height": 3,
        "name": "Corriente VSD",
        "label": "Corriente VSD",
        "format": "<font size =4px>{{msg.Corriente_VSD}} A",
        "layout": "col-center",
        "x": 580,
        "y": 1060,
        "wires": []
    },
    {
        "id": "45c48590d88443c0",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "d0ef2f7ea9eb1856",
        "order": 6,
        "width": 6,
        "height": 3,
        "name": "Voltaje Bus DC",
        "label": "Voltaje Bus DC",
        "format": "<font size =4px>{{msg.Voltaje_Bus_DC}} VDC",
        "layout": "col-center",
        "x": 580,
        "y": 1100,
        "wires": []
    },
    {
        "id": "7231aaa203bbccc4",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "d0ef2f7ea9eb1856",
        "order": 2,
        "width": 6,
        "height": 3,
        "name": "Velocidad VSD",
        "label": "Velocidad VSD",
        "format": "<font size =4px>{{msg.Frecuencia}}",
        "layout": "col-center",
        "x": 580,
        "y": 1140,
        "wires": []
    },
    {
        "id": "73e282a538116778",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "d0ef2f7ea9eb1856",
        "order": 1,
        "width": 6,
        "height": 3,
        "name": "Voltaje VSD",
        "label": "Voltaje VSD",
        "format": "<font size =4px>{{msg.Voltaje_VSD}} VAC",
        "layout": "col-center",
        "x": 570,
        "y": 1180,
        "wires": []
    },
    {
        "id": "6c5e62d7bc0ac203",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "d0ef2f7ea9eb1856",
        "order": 3,
        "width": 6,
        "height": 3,
        "name": "Factor de potencia",
        "label": "Factor de Potencia",
        "format": "<font size =4px>{{msg.Factor_Potencia}}",
        "layout": "col-center",
        "x": 590,
        "y": 1220,
        "wires": []
    },
    {
        "id": "64855de1103423e9",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "d0ef2f7ea9eb1856",
        "order": 7,
        "width": 6,
        "height": 3,
        "name": "RTX",
        "label": "RTX",
        "format": "<font size =4px>{{msg.Relacion_TX}}",
        "layout": "col-center",
        "x": 550,
        "y": 1260,
        "wires": []
    },
    {
        "id": "3ce4bf81cd27db77",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "d0ef2f7ea9eb1856",
        "order": 8,
        "width": 6,
        "height": 3,
        "name": "Voltaje de Motor",
        "label": "Voltaje de Motor",
        "format": "<font size =4px>{{msg.Voltaje_Motor}} VAC",
        "layout": "col-center",
        "x": 580,
        "y": 1300,
        "wires": []
    },
    {
        "id": "2bc659acfb95281c",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "d0ef2f7ea9eb1856",
        "order": 4,
        "width": 6,
        "height": 3,
        "name": "Corriente de Motor",
        "label": "Corriente de Motor",
        "format": "<font size =4px>{{msg.Corriente_Motor}} A",
        "layout": "col-center",
        "x": 590,
        "y": 1340,
        "wires": []
    },
    {
        "id": "d8a985a0d6b5b523",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "a20d6c09c126296e",
        "order": 1,
        "width": 8,
        "height": 2,
        "name": "Temperatura Descarga",
        "label": "Temperatura Descarga",
        "format": "<font size =4px>{{msg.Temperatura_Descarga}} °F",
        "layout": "col-center",
        "x": 800,
        "y": 1060,
        "wires": []
    },
    {
        "id": "44b57d4de10c36e9",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "a20d6c09c126296e",
        "order": 3,
        "width": 8,
        "height": 2,
        "name": "Temperatura de Motor",
        "label": "Temperatura de Motor",
        "format": "<font size =4px>{{msg.Temperatura_Motor}} °F",
        "layout": "col-center",
        "x": 800,
        "y": 1100,
        "wires": []
    },
    {
        "id": "16f17bf1cfad084a",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "a20d6c09c126296e",
        "order": 2,
        "width": 8,
        "height": 2,
        "name": "Temperatura de Entrada",
        "label": "Temperatura de Entrada",
        "format": "<font size =4px>{{msg.Temperatura_Entrada}} °F",
        "layout": "col-center",
        "x": 810,
        "y": 1140,
        "wires": []
    },
    {
        "id": "9d7f859a97e62a5e",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "a20d6c09c126296e",
        "order": 4,
        "width": 8,
        "height": 2,
        "name": "Presión de entrada",
        "label": "Presión de entrada",
        "format": "<font size =4px>{{msg.PIP}} PSI",
        "layout": "col-center",
        "x": 790,
        "y": 1180,
        "wires": []
    },
    {
        "id": "41f1cfc8b28a9379",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "a20d6c09c126296e",
        "order": 5,
        "width": 8,
        "height": 2,
        "name": "Presión de descarga",
        "label": "Presión de Descarga",
        "format": "<font size =4px>{{msg.PDP}} PSI",
        "layout": "col-center",
        "x": 800,
        "y": 1220,
        "wires": []
    },
    {
        "id": "bb3a1503056c9d7b",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "a20d6c09c126296e",
        "order": 6,
        "width": 8,
        "height": 2,
        "name": "Corriente de fuga",
        "label": "Corriente de fuga",
        "format": "<font size =4px>{{msg.Vibracion}} mA",
        "layout": "col-center",
        "x": 790,
        "y": 1260,
        "wires": []
    },
    {
        "id": "d0d07b3b44df6fbe",
        "type": "link in",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "name": "",
        "links": [
            "d0b26cc2905c02ad"
        ],
        "x": 115,
        "y": 1140,
        "wires": [
            [
                "c4b00d9d.c758e"
            ]
        ]
    },
    {
        "id": "59adc93d8528121c",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "NameClus",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::NameClus",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 110,
        "wires": [
            [
                "e2dddcc8.8c593"
            ]
        ]
    },
    {
        "id": "c06799051fae3330",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "Tipo L",
        "func": "var Cluster =global.get(\"Cluster\")||[];\nvar pozo = flow.get(\"Pozo\",\"memoryOnly\")||\"\";\n\nfor (let i = 0; i < Cluster.length; i++) {\n    if(Cluster[i].Nombre == pozo){\n        node.status({fill:\"red\",shape:\"ring\",text:\"Ingreso\"});\n        msg.payload = Cluster[i].ALS;\n    }\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 150,
        "wires": [
            [
                "b6cdbd2497da75f7"
            ]
        ]
    },
    {
        "id": "b6cdbd2497da75f7",
        "type": "link out",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "TipoL",
        "links": [
            "fb5172f3d8de2409",
            "d68ad3a6d864284c",
            "cfab7ec4904c7fb9"
        ],
        "x": 825,
        "y": 150,
        "wires": []
    },
    {
        "id": "90ac36c9c645d371",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "conf",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "¿ Desea Arrancar el Equipo ?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 670,
        "wires": [
            [
                "7f4725cd539a6195"
            ]
        ]
    },
    {
        "id": "7f4725cd539a6195",
        "type": "ui_toast",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Aceptar",
        "cancel": "Cancelar",
        "raw": false,
        "topic": "Arranque",
        "name": "Confirm",
        "x": 470,
        "y": 670,
        "wires": [
            [
                "b9ce5171b5be1d5c"
            ]
        ]
    },
    {
        "id": "b9ce5171b5be1d5c",
        "type": "switch",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "Acep",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Aceptar",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 670,
        "wires": [
            [
                "e9a83abb606dc1a9"
            ]
        ]
    },
    {
        "id": "8f37636c700844c8",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "conf",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "¿ Desea Detener el Equipo ?",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 710,
        "wires": [
            [
                "96d979476eb1b054"
            ]
        ]
    },
    {
        "id": "96d979476eb1b054",
        "type": "ui_toast",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Aceptar",
        "cancel": "Cancelar",
        "raw": false,
        "topic": "Detener",
        "name": "Confirm",
        "x": 470,
        "y": 710,
        "wires": [
            [
                "b1f01e0593bbc7e2"
            ]
        ]
    },
    {
        "id": "b1f01e0593bbc7e2",
        "type": "switch",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "Acep",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Aceptar",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 610,
        "y": 710,
        "wires": [
            [
                "9f111f5f0cdb7b23"
            ]
        ]
    },
    {
        "id": "4c25ebc9a7274f4f",
        "type": "link in",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "name": "RPMreference",
        "links": [
            "828938fc392c967c"
        ],
        "x": 135,
        "y": 360,
        "wires": [
            [
                "3cc764fd.7e58cc"
            ]
        ]
    },
    {
        "id": "8f8700d32def862c",
        "type": "link in",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "name": "RPMconfirm",
        "links": [
            "464f310713eff7a8"
        ],
        "x": 135,
        "y": 460,
        "wires": [
            [
                "1acb0c29.0ddee4"
            ]
        ]
    },
    {
        "id": "e36d20a829331d71",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "name": "set reference",
        "func": "var SCP = global.get(\"SCP\",\"memoryOnly\")||0;\nglobal.set(\"Comandos[\"+SCP+\"].Referencia\",msg.payload,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "c4b00d9d.c758e",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "name": "Extraer información pozos activos",
        "func": "var Cluster     = global.get(\"Cluster\",\"memoryOnly\")||[];\nvar ClusterData = global.get(\"Cluster\")||[];\nvar TipoL       = global.get(\"TipoL\",\"memoryOnly\")||\"--\";\nvar NombrePozo  = flow.get(\"Pozo\",\"memoryOnly\")||\"\";\n\n// Extraer nombres del objeto Clúster\nvar Nombres = [];\nfor(var i=0; i<ClusterData.length; i+=1){\n    Nombres.push(ClusterData[i][\"Nombre\"]);\n}\nvar index   = Nombres.indexOf(NombrePozo);\n\nnode.status({fill:\"green\",shape:\"dot\",text:index});\nif(index <0){index=1;}\nif(index != -1){msg.type = ClusterData[index][\"ALS\"]||\"ESP\";} \n\nvar SCP                 = ClusterData[index][\"SCP\"];\nglobal.set(\"SCP\",SCP,\"memoryOnly\");\n\n//msg.Voltaje_L1_N        = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L1_N).toFixed(2)||\"-----\";\n//msg.Voltaje_L2_N        = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L2_N).toFixed(2);\n//msg.Voltaje_L3_N        = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L3_N).toFixed(2);\n//msg.Voltaje_L1_L2       = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L1_L2).toFixed(2);\n//msg.Amp_L1              = (Cluster[\"SCP\"+(SCP)].PQM.Amp_L1).toFixed(2);\n//msg.Amp_L2              = (Cluster[\"SCP\"+(SCP)].PQM.Amp_L2).toFixed(2);\n//msg.Amp_L3              = (Cluster[\"SCP\"+(SCP)].PQM.Amp_L3).toFixed(2);\n//msg.Voltaje_L1_L2       = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L1_L2).toFixed(2);\n//msg.Voltaje_L2_L3       = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L2_L3).toFixed(2);\n//msg.Voltaje_L1_L3       = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L1_L3).toFixed(2);\n//msg.Voltaje_L1_N        = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L1_N).toFixed(2);\n//msg.Voltaje_L2_N        = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L2_N).toFixed(2);\n//msg.Voltaje_L3_N        = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L3_N).toFixed(2);\n//msg.KWATT_Act_L1        = (Cluster[\"SCP\"+(SCP)].PQM.KWATT_Act_L1).toFixed(2);\n//msg.KWATT_Act_L2        = (Cluster[\"SCP\"+(SCP)].PQM.KWATT_Act_L2).toFixed(2);\n//msg.KWATT_Act_L3        = (Cluster[\"SCP\"+(SCP)].PQM.KWATT_Act_L3).toFixed(2);\n//msg.Voltaje_L_N_Pro     = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L_N_Pro).toFixed(2);\n//msg.Voltaje_L_L_Pro     = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L_L_Pro).toFixed(2);\n//msg.Amp_Pro             = (Cluster[\"SCP\"+(SCP)].PQM.Amp_Pro).toFixed(2);\n// msg.Hz_Act_Pro          = (Cluster[\"SCP\"+(SCP)].PQM.Hz_Act_Pro).toFixed(2);\n// msg.KWATT_Act_Pro       = (Cluster[\"SCP\"+(SCP)].PQM.KWATT_Act_Pro).toFixed(2);\n// msg.KVA_Act_Pro         = (Cluster[\"SCP\"+(SCP)].PQM.KVA_Act_Pro).toFixed(2);\n// msg.KVAr_Act_Pro        = (Cluster[\"SCP\"+(SCP)].PQM.KVAr_Act_Pro).toFixed(2);\n// msg.FP_Pro              = (Cluster[\"SCP\"+(SCP)].PQM.FP_Pro).toFixed(2);\nmsg.Voltaje_Motor       = (Cluster[\"SCP\"+(SCP)].VSD.Voltaje_Motor).toFixed(2);\nmsg.Corriente_Motor     = (Cluster[\"SCP\"+(SCP)].VSD.Corriente_Motor).toFixed(2);\nmsg.PDP                 = (Cluster[\"SCP\"+(SCP)].DHOLE.PDP).toFixed(2);\nmsg.PIP                 = (Cluster[\"SCP\"+(SCP)].DHOLE.PIP).toFixed(2);\n// msg.Vibracion           = (Cluster[\"SCP\"+(SCP)].DHOLE.Vibracion).toFixed(2);\nmsg.Vibracion_X         = (Cluster[\"SCP\" + (SCP)].DHOLE.Vibracion_Eje_X).toFixed(2);\nmsg.Vibracion_Y         = (Cluster[\"SCP\" + (SCP)].DHOLE.Vibracion_Eje_Y).toFixed(2);\nmsg.Vibracion_Z         = (Cluster[\"SCP\" + (SCP)].DHOLE.Vibracion_Eje_Z).toFixed(2);\nmsg.Temperatura_Descarga= (Cluster[\"SCP\"+(SCP)].DHOLE.Temperatura_Descarga).toFixed(2);\nmsg.Temperatura_Entrada = (Cluster[\"SCP\"+(SCP)].DHOLE.Temperatura_Entrada).toFixed(2);\nmsg.Temperatura_Motor   = (Cluster[\"SCP\"+(SCP)].DHOLE.Temperatura_Motor).toFixed(2);\nmsg.Voltaje_Bus_DC      = (Cluster[\"SCP\"+(SCP)].VSD.Voltaje_Bus_DC).toFixed(2);\nmsg.Corriente_VSD       = (Cluster[\"SCP\"+(SCP)].VSD.Corriente_VSD).toFixed(2);\nmsg.Voltaje_VSD         = (Cluster[\"SCP\"+(SCP)].VSD.Voltaje_VSD).toFixed(2);\nmsg.Factor_Potencia     = (Cluster[\"SCP\"+(SCP)].VSD.Factor_Potencia).toFixed(2);\nmsg.Relacion_TX         = (Cluster[\"SCP\"+(SCP)].VSD.Relacion_TX).toFixed(2);\nmsg.THP_PIT_PV          = (Cluster[\"SCP\"+(SCP)].INST.THP_PIT_PV).toFixed(2);  \nmsg.THT_TIT_PV          = (Cluster[\"SCP\"+(SCP)].INST.THT_TIT_PV).toFixed(2);\n//msg.THD_I_Pro           = (Cluster[\"SCP\"+(SCP)].PQM.THD_I_Pro).toFixed(2);\n//msg.THD_V_Pro           = (Cluster[\"SCP\"+(SCP)].PQM.THD_V_Pro).toFixed(2);\n\nif(TipoL == \"ESP\"){\n    msg.Frecuencia = (Cluster[\"SCP\" + (SCP)].VSD.Frecuencia).toFixed(2) +\" \" + \"Hz\";\n\n}\nif(TipoL == \"PCP\"){\n    msg.Frecuencia = (Cluster[\"SCP\" + (SCP)].VSD.Frecuencia).toFixed(2) +\" \" + \"RPM\";\n\n}\n/*<td>{{A_Tx}}<strong> A [Tx]</strong></td>*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1140,
        "wires": [
            [
                "1ee8792a8ad49dce",
                "45c48590d88443c0",
                "7231aaa203bbccc4",
                "73e282a538116778",
                "6c5e62d7bc0ac203",
                "64855de1103423e9",
                "3ce4bf81cd27db77",
                "2bc659acfb95281c",
                "d8a985a0d6b5b523",
                "44b57d4de10c36e9",
                "16f17bf1cfad084a",
                "9d7f859a97e62a5e",
                "41f1cfc8b28a9379",
                "bb3a1503056c9d7b",
                "5f369438a30f131e",
                "53147a8c96b2f39c",
                "933dd1c21cde4459"
            ]
        ]
    },
    {
        "id": "30c097a0f84ba44d",
        "type": "link in",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "Deshabilitar/Habilitar_Selección",
        "links": [
            "e7122851149fed97"
        ],
        "x": 95,
        "y": 180,
        "wires": [
            [
                "a6190fbddb2eef1b"
            ]
        ]
    },
    {
        "id": "6bb5e2dd8061c102",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 190,
        "wires": [
            [
                "5dcc4d5b.20caf4"
            ]
        ]
    },
    {
        "id": "acbd750f0fa40ceb",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 150,
        "wires": [
            [
                "5dcc4d5b.20caf4"
            ]
        ]
    },
    {
        "id": "a6190fbddb2eef1b",
        "type": "switch",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "login?",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "gte",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 180,
        "wires": [
            [
                "acbd750f0fa40ceb"
            ],
            [
                "6bb5e2dd8061c102"
            ]
        ]
    },
    {
        "id": "e9a83abb606dc1a9",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 670,
        "wires": [
            [
                "267fdbe0.520b94"
            ]
        ]
    },
    {
        "id": "9f111f5f0cdb7b23",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 710,
        "wires": [
            [
                "76ade389.49748c"
            ]
        ]
    },
    {
        "id": "528f3613fd9dc550",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Pozo.Confirmacion_Escritura",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "c34783412377811f",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "name": "Extraer información pozos activos",
        "func": "var Cluster     = global.get(\"Cluster\",\"memoryOnly\")||[];\nvar ClusterData = global.get(\"Cluster\")||[];\nvar TipoL       = global.get(\"TipoL\",\"memoryOnly\")||\"--\";\nvar NombrePozo  = flow.get(\"Pozo\",\"memoryOnly\")||\"\";\n\n// Extraer nombres del objeto Clúster\nvar Nombres = [];\nfor(var i=0; i<ClusterData.length; i+=1){\n    Nombres.push(ClusterData[i][\"Nombre\"]);\n}\nvar index   = Nombres.indexOf(NombrePozo);\n\nnode.status({fill:\"green\",shape:\"dot\",text:index});\nif(index <0){index=1;}\nif(index != -1){msg.type = ClusterData[index][\"ALS\"]||\"ESP\";} \n\nvar SCP                 = ClusterData[index][\"SCP\"];\nglobal.set(\"SCP\",SCP,\"memoryOnly\");\n\n//msg.Voltaje_L1_N        = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L1_N).toFixed(2);\n//msg.Voltaje_L2_N        = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L2_N).toFixed(2);\n//msg.Voltaje_L3_N        = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L3_N).toFixed(2);\n//msg.Voltaje_L1_L2       = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L1_L2).toFixed(2);\nmsg.Amp_L1              = (Cluster[\"SCP\"+(SCP)].PQM.Amp_L1).toFixed(2);\nmsg.Amp_L2              = (Cluster[\"SCP\"+(SCP)].PQM.Amp_L2).toFixed(2);\nmsg.Amp_L3              = (Cluster[\"SCP\"+(SCP)].PQM.Amp_L3).toFixed(2);\nmsg.Voltaje_L1_L2       = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L1_L2).toFixed(2);\nmsg.Voltaje_L2_L3       = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L2_L3).toFixed(2);\nmsg.Voltaje_L1_L3       = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L1_L3).toFixed(2);\nmsg.Voltaje_L1_N        = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L1_N).toFixed(2);\nmsg.Voltaje_L2_N        = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L2_N).toFixed(2);\nmsg.Voltaje_L3_N        = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L3_N).toFixed(2);\nmsg.KWATT_Act_L1        = (Cluster[\"SCP\"+(SCP)].PQM.KWATT_Act_L1).toFixed(2);\nmsg.KWATT_Act_L2        = (Cluster[\"SCP\"+(SCP)].PQM.KWATT_Act_L2).toFixed(2);\nmsg.KWATT_Act_L3        = (Cluster[\"SCP\"+(SCP)].PQM.KWATT_Act_L3).toFixed(2);\nmsg.Voltaje_L_N_Pro     = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L_N_Pro).toFixed(2);\nmsg.Voltaje_L_L_Pro     = (Cluster[\"SCP\"+(SCP)].PQM.Voltaje_L_L_Pro).toFixed(2);\nmsg.Amp_Pro             = (Cluster[\"SCP\"+(SCP)].PQM.Amp_Pro).toFixed(2);\nmsg.Hz_Act_Pro          = (Cluster[\"SCP\"+(SCP)].PQM.Hz_Act_Pro).toFixed(2);\nmsg.KWATT_Act_Pro       = (Cluster[\"SCP\"+(SCP)].PQM.KWATT_Act_Pro).toFixed(2);\nmsg.KVA_Act_Pro         = (Cluster[\"SCP\"+(SCP)].PQM.KVA_Act_Pro).toFixed(2);\nmsg.KVAr_Act_Pro        = (Cluster[\"SCP\"+(SCP)].PQM.KVAr_Act_Pro).toFixed(2);\nmsg.FP_Pro              = (Cluster[\"SCP\"+(SCP)].PQM.FP_Pro).toFixed(2);\n// msg.Voltaje_Motor       = (Cluster[\"SCP\"+(SCP)].VSD.Voltaje_Motor).toFixed(2);\n// msg.Corriente_Motor     = (Cluster[\"SCP\"+(SCP)].VSD.Corriente_Motor).toFixed(2);\n// msg.PDP                 = (Cluster[\"SCP\"+(SCP)].DHOLE.PDP).toFixed(2);\n// msg.PIP                 = (Cluster[\"SCP\"+(SCP)].DHOLE.PIP).toFixed(2);\n// msg.Vibracion           = (Cluster[\"SCP\"+(SCP)].DHOLE.Vibracion).toFixed(2);\n// msg.Temperatura_Descarga= (Cluster[\"SCP\"+(SCP)].DHOLE.Temperatura_Descarga).toFixed(2);\n// msg.Temperatura_Entrada = (Cluster[\"SCP\"+(SCP)].DHOLE.Temperatura_Entrada).toFixed(2);\n// msg.Temperatura_Motor   = (Cluster[\"SCP\"+(SCP)].DHOLE.Temperatura_Motor).toFixed(2);\n// msg.Voltaje_Bus_DC      = (Cluster[\"SCP\"+(SCP)].VSD.Voltaje_Bus_DC).toFixed(2);\n// msg.Corriente_VSD       = (Cluster[\"SCP\"+(SCP)].VSD.Corriente_VSD).toFixed(2);\n// msg.Voltaje_VSD         = (Cluster[\"SCP\"+(SCP)].VSD.Voltaje_VSD).toFixed(2);\n// msg.Factor_Potencia     = (Cluster[\"SCP\"+(SCP)].VSD.Factor_Potencia).toFixed(2);\n// msg.Relacion_TX         = (Cluster[\"SCP\"+(SCP)].VSD.Relacion_TX).toFixed(2);\n// msg.THP_PIT_PV          = (Cluster[\"SCP\"+(SCP)].INST.THP_PIT_PV).toFixed(2);  \n// msg.THT_TIT_PV          = (Cluster[\"SCP\"+(SCP)].INST.THT_TIT_PV).toFixed(2);\nmsg.THD_I_Pro           = (Cluster[\"SCP\"+(SCP)].PQM.THD_I_Pro).toFixed(2);\nmsg.THD_V_Pro           = (Cluster[\"SCP\"+(SCP)].PQM.THD_V_Pro).toFixed(2);\n\nif(TipoL == \"ESP\"){\n    msg.Frecuencia = (Cluster[\"SCP\" + (SCP)].VSD.Frecuencia).toFixed(2) +\" \" + \"Hz\";\n\n}\nif(TipoL == \"PCP\"){\n    msg.Frecuencia = (Cluster[\"SCP\" + (SCP)].VSD.Frecuencia).toFixed(2) +\" \" + \"RPM\";\n\n}\n/*<td>{{A_Tx}}<strong> A [Tx]</strong></td>*/\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 1020,
        "wires": [
            [
                "b589e64f56e21ac7",
                "62efcf2f2e6fc20d",
                "26f7633454cb7b7b",
                "27fbe89162252d87",
                "fef1de918a0383c5",
                "696da4552d0aa3f3",
                "33a2a97f98148ea9",
                "622bf3d96f99a836",
                "c4a98d774ec39f19",
                "27bd0126aacfcdf9",
                "66a2dcde565e0f7b",
                "b70c9c5996e62a1b",
                "b106c2418d7dcedc",
                "f30aafc49351a97d",
                "51a95fddfc307309"
            ]
        ]
    },
    {
        "id": "cb7f821f59453b77",
        "type": "link in",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "name": "",
        "links": [
            "d0b26cc2905c02ad"
        ],
        "x": 1015,
        "y": 1020,
        "wires": [
            [
                "c34783412377811f"
            ]
        ]
    },
    {
        "id": "b589e64f56e21ac7",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 1,
        "width": 4,
        "height": 2,
        "name": "Voltaje_L1_L2",
        "label": "Voltaje L1-L2",
        "format": "<font size =4px>{{msg.Voltaje_L1_L2}} VAC",
        "layout": "col-center",
        "x": 1460,
        "y": 1020,
        "wires": []
    },
    {
        "id": "62efcf2f2e6fc20d",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "Voltaje_L2_L3",
        "label": "Voltaje L2-L3",
        "format": "<font size =4px>{{msg.Voltaje_L2_L3}} VAC",
        "layout": "col-center",
        "x": 1460,
        "y": 1060,
        "wires": []
    },
    {
        "id": "27fbe89162252d87",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 7,
        "width": 4,
        "height": 2,
        "name": "Voltaje_L1_N",
        "label": "Voltaje L1-N",
        "format": "<font size =4px>{{msg.Voltaje_L1_N}} VAC",
        "layout": "col-center",
        "x": 1450,
        "y": 1140,
        "wires": []
    },
    {
        "id": "26f7633454cb7b7b",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "Voltaje_L1_L3",
        "label": "Voltaje L1-L3",
        "format": "<font size =4px>{{msg.Voltaje_L1_L3}} VAC",
        "layout": "col-center",
        "x": 1460,
        "y": 1100,
        "wires": []
    },
    {
        "id": "fef1de918a0383c5",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 8,
        "width": 4,
        "height": 2,
        "name": "Voltaje_L2_N",
        "label": "Voltaje L2-N",
        "format": "<font size =4px>{{msg.Voltaje_L2_N}} VAC",
        "layout": "col-center",
        "x": 1450,
        "y": 1180,
        "wires": []
    },
    {
        "id": "696da4552d0aa3f3",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 9,
        "width": 4,
        "height": 2,
        "name": "Voltaje_L3_N",
        "label": "Voltaje L3-N",
        "format": "<font size =4px>{{msg.Voltaje_L3_N}} VAC",
        "layout": "col-center",
        "x": 1450,
        "y": 1220,
        "wires": []
    },
    {
        "id": "33a2a97f98148ea9",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 13,
        "width": 4,
        "height": 2,
        "name": "Corriente_L1",
        "label": "Corriente L1",
        "format": "<font size =4px>{{msg.Amp_L1}} A",
        "layout": "col-center",
        "x": 1630,
        "y": 1020,
        "wires": []
    },
    {
        "id": "622bf3d96f99a836",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 14,
        "width": 4,
        "height": 2,
        "name": "Corriente_L2",
        "label": "Corriente L2",
        "format": "<font size =4px>{{msg.Amp_L2}} A",
        "layout": "col-center",
        "x": 1630,
        "y": 1060,
        "wires": []
    },
    {
        "id": "c4a98d774ec39f19",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 15,
        "width": 4,
        "height": 2,
        "name": "Corriente_L3",
        "label": "Corriente L3",
        "format": "<font size =4px>{{msg.Amp_L3}} A",
        "layout": "col-center",
        "x": 1630,
        "y": 1100,
        "wires": []
    },
    {
        "id": "27bd0126aacfcdf9",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "KWATT_Act_Pro",
        "label": "P. Activa Pro.",
        "format": "<font size =4px>{{msg.KWATT_Act_Pro}} KW",
        "layout": "col-center",
        "x": 1810,
        "y": 1020,
        "wires": []
    },
    {
        "id": "66a2dcde565e0f7b",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "KVA_Act_Pro",
        "label": "P. Aparente Pro.",
        "format": "<font size =4px>{{msg.KVA_Act_Pro}} KVA",
        "layout": "col-center",
        "x": 1800,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b70c9c5996e62a1b",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "KVAr_Act_Pro",
        "label": "P. Reactiva Pro.",
        "format": "<font size =4px>{{msg.KVAr_Act_Pro}} KVAR",
        "layout": "col-center",
        "x": 1800,
        "y": 1100,
        "wires": []
    },
    {
        "id": "b106c2418d7dcedc",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 10,
        "width": 4,
        "height": 2,
        "name": "Voltaje_L_L_Pro",
        "label": "Voltaje Pro.",
        "format": "<font size =4px>{{msg.Voltaje_L_L_Pro}} VAC",
        "layout": "col-center",
        "x": 2000,
        "y": 1020,
        "wires": []
    },
    {
        "id": "f30aafc49351a97d",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 11,
        "width": 4,
        "height": 2,
        "name": "Amp_Pro",
        "label": "Corriente Pro.",
        "format": "<font size =4px>{{msg.Amp_Pro}} A",
        "layout": "col-center",
        "x": 1980,
        "y": 1060,
        "wires": []
    },
    {
        "id": "51a95fddfc307309",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "bf3daf7cc69dc1e0",
        "group": "a0a6adbcc6ab62b7",
        "order": 12,
        "width": 4,
        "height": 2,
        "name": "FP_Pro",
        "label": "Factor Potencia",
        "format": "<font size =4px>{{msg.FP_Pro}} ",
        "layout": "col-center",
        "x": 1980,
        "y": 1100,
        "wires": []
    },
    {
        "id": "fb0788f42bc54f91",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "name": "Set confirmación",
        "func": "var SCP = global.get(\"SCP\",\"memoryOnly\")||0;\nglobal.set(\"Comandos[\"+SCP+\"].Confirmacion_Escritura\",msg.payload,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 460,
        "wires": [
            [
                "487f7f8226176ed0"
            ]
        ]
    },
    {
        "id": "487f7f8226176ed0",
        "type": "link out",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "name": "Confirmar referencia",
        "links": [
            "5e6577b46be39f1a"
        ],
        "x": 555,
        "y": 460,
        "wires": []
    },
    {
        "id": "e83ec346916a6a44",
        "type": "link out",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "Arranque/Parada",
        "links": [
            "59e817c2.295b38",
            "6c2bad5b885f74fd"
        ],
        "x": 1205,
        "y": 650,
        "wires": []
    },
    {
        "id": "75cd742c0d026972",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "Arranque",
        "func": "var NameClus = global.get(\"NameClus\",\"memoryOnly\")||\" \";\nmsg.payload = \"Arranque Pozo\" + \" \" + NameClus;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 630,
        "wires": [
            [
                "e83ec346916a6a44"
            ]
        ]
    },
    {
        "id": "5c6c269da4720bd1",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "dbdbcfdd.62eb8",
        "name": "Parada",
        "func": "var NameClus = global.get(\"NameClus\",\"memoryOnly\")||\" \";\nmsg.payload = \"Parada Pozo\" + \" \" + NameClus;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 670,
        "wires": [
            [
                "e83ec346916a6a44"
            ]
        ]
    },
    {
        "id": "b6f70184864aada5",
        "type": "switch",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "",
        "property": "#:(memoryOnly)::Navegación",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "Datos operativos pozos",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 200,
        "y": 240,
        "wires": [
            [
                "5f70b9fdf661ebc1"
            ]
        ]
    },
    {
        "id": "f155df4497b141e5",
        "type": "link in",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "",
        "links": [
            "b56aa71999519568"
        ],
        "x": 115,
        "y": 240,
        "wires": [
            [
                "b6f70184864aada5"
            ]
        ]
    },
    {
        "id": "5f70b9fdf661ebc1",
        "type": "change",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "ResetSelección",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 240,
        "wires": [
            [
                "4904603f92adf9ef"
            ]
        ]
    },
    {
        "id": "4904603f92adf9ef",
        "type": "link out",
        "z": "e997ba3b.48cc18",
        "g": "73a228cd.9d45d8",
        "name": "OutResetSelection",
        "links": [
            "bcf4fff3.6451c"
        ],
        "x": 485,
        "y": 240,
        "wires": []
    },
    {
        "id": "038ecc84a8e8e72c",
        "type": "link in",
        "z": "e997ba3b.48cc18",
        "g": "ad1eed9908ed5e2a",
        "name": "",
        "links": [
            "f65144617635e766"
        ],
        "x": 215,
        "y": 930,
        "wires": [
            [
                "1e1e27dfa1f3561e"
            ]
        ]
    },
    {
        "id": "224439b7.e88da6",
        "type": "ui_led",
        "z": "93634831.aed548",
        "group": "ee226df1.9537a",
        "order": 1,
        "width": "6",
        "height": "1",
        "label": "Nivel",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "yellow",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "red",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 630,
        "y": 110,
        "wires": []
    },
    {
        "id": "241dfec3.4e5d22",
        "type": "inject",
        "z": "93634831.aed548",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 370,
        "y": 110,
        "wires": [
            [
                "f548ad80.65f03"
            ]
        ]
    },
    {
        "id": "7688fc6a.4a83a4",
        "type": "ui_led",
        "z": "93634831.aed548",
        "group": "ee226df1.9537a",
        "order": 2,
        "width": "6",
        "height": "1",
        "label": "Red primaria",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "yellow",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "red",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 630,
        "y": 150,
        "wires": []
    },
    {
        "id": "2a6e31cf.58775e",
        "type": "ui_led",
        "z": "93634831.aed548",
        "group": "ee226df1.9537a",
        "order": 3,
        "width": "6",
        "height": "1",
        "label": "Temperatura",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "yellow",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "red",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 630,
        "y": 190,
        "wires": []
    },
    {
        "id": "dde54578.48ff28",
        "type": "random",
        "z": "93634831.aed548",
        "name": "Completo",
        "low": "0",
        "high": "2",
        "inte": "true",
        "property": "payload",
        "x": 500,
        "y": 150,
        "wires": [
            [
                "7688fc6a.4a83a4"
            ]
        ]
    },
    {
        "id": "cdfc8184.a456f",
        "type": "inject",
        "z": "93634831.aed548",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 370,
        "y": 150,
        "wires": [
            [
                "dde54578.48ff28"
            ]
        ]
    },
    {
        "id": "4be1b6ac.d8bb08",
        "type": "inject",
        "z": "93634831.aed548",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 370,
        "y": 190,
        "wires": [
            [
                "286b2c14.3c8264"
            ]
        ]
    },
    {
        "id": "32fad925.551816",
        "type": "ui_led",
        "z": "93634831.aed548",
        "group": "ee226df1.9537a",
        "order": 4,
        "width": "6",
        "height": "1",
        "label": "Presión",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "red",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "yellow",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 630,
        "y": 230,
        "wires": []
    },
    {
        "id": "6d7d3735.c53d38",
        "type": "random",
        "z": "93634831.aed548",
        "name": "Disparo",
        "low": "0",
        "high": "1",
        "inte": "true",
        "property": "payload",
        "x": 500,
        "y": 230,
        "wires": [
            [
                "32fad925.551816"
            ]
        ]
    },
    {
        "id": "93611897.3f7328",
        "type": "inject",
        "z": "93634831.aed548",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 370,
        "y": 230,
        "wires": [
            [
                "6d7d3735.c53d38"
            ]
        ]
    },
    {
        "id": "f548ad80.65f03",
        "type": "random",
        "z": "93634831.aed548",
        "name": "Completo",
        "low": "0",
        "high": "2",
        "inte": "true",
        "property": "payload",
        "x": 500,
        "y": 110,
        "wires": [
            [
                "224439b7.e88da6"
            ]
        ]
    },
    {
        "id": "286b2c14.3c8264",
        "type": "random",
        "z": "93634831.aed548",
        "name": "Completo",
        "low": "0",
        "high": "2",
        "inte": "true",
        "property": "payload",
        "x": 500,
        "y": 190,
        "wires": [
            [
                "2a6e31cf.58775e"
            ]
        ]
    },
    {
        "id": "cfe72ee3.ef8ad",
        "type": "ui_led",
        "z": "93634831.aed548",
        "group": "9ad8c1e8.7c9",
        "order": 1,
        "width": "6",
        "height": "1",
        "label": "Nivel",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "red",
                "value": "1",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 1040,
        "y": 110,
        "wires": []
    },
    {
        "id": "af662aac.5acf38",
        "type": "inject",
        "z": "93634831.aed548",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 780,
        "y": 110,
        "wires": [
            [
                "48c1dd0f.161304"
            ]
        ]
    },
    {
        "id": "9f8a1bfe.76d598",
        "type": "ui_led",
        "z": "93634831.aed548",
        "group": "9ad8c1e8.7c9",
        "order": 1,
        "width": "6",
        "height": "1",
        "label": "Red secundaria",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "yellow",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "red",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 1040,
        "y": 150,
        "wires": []
    },
    {
        "id": "11c83a9a.542825",
        "type": "ui_led",
        "z": "93634831.aed548",
        "group": "9ad8c1e8.7c9",
        "order": 1,
        "width": "6",
        "height": "1",
        "label": "Temperatura",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "red",
                "value": "1",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 1040,
        "y": 190,
        "wires": []
    },
    {
        "id": "ac57f282.c5c05",
        "type": "random",
        "z": "93634831.aed548",
        "name": "Completo",
        "low": "0",
        "high": "2",
        "inte": "true",
        "property": "payload",
        "x": 910,
        "y": 150,
        "wires": [
            [
                "9f8a1bfe.76d598"
            ]
        ]
    },
    {
        "id": "198e6349.0a5cfd",
        "type": "inject",
        "z": "93634831.aed548",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 780,
        "y": 150,
        "wires": [
            [
                "ac57f282.c5c05"
            ]
        ]
    },
    {
        "id": "c1e936e8.a01258",
        "type": "inject",
        "z": "93634831.aed548",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 780,
        "y": 190,
        "wires": [
            [
                "e532f39.e05601"
            ]
        ]
    },
    {
        "id": "2c0cbfe9.aaffd",
        "type": "ui_led",
        "z": "93634831.aed548",
        "group": "9ad8c1e8.7c9",
        "order": 1,
        "width": "6",
        "height": "1",
        "label": "Presión",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "red",
                "value": "1",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 1040,
        "y": 230,
        "wires": []
    },
    {
        "id": "76bedd6.14b8624",
        "type": "random",
        "z": "93634831.aed548",
        "name": "Disparo",
        "low": "0",
        "high": "1",
        "inte": "true",
        "property": "payload",
        "x": 910,
        "y": 230,
        "wires": [
            [
                "2c0cbfe9.aaffd"
            ]
        ]
    },
    {
        "id": "f43fcdbe.bcd49",
        "type": "inject",
        "z": "93634831.aed548",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 780,
        "y": 230,
        "wires": [
            [
                "76bedd6.14b8624"
            ]
        ]
    },
    {
        "id": "48c1dd0f.161304",
        "type": "random",
        "z": "93634831.aed548",
        "name": "Disparo",
        "low": "0",
        "high": "1",
        "inte": "true",
        "property": "payload",
        "x": 910,
        "y": 110,
        "wires": [
            [
                "cfe72ee3.ef8ad"
            ]
        ]
    },
    {
        "id": "e532f39.e05601",
        "type": "random",
        "z": "93634831.aed548",
        "name": "Disparo",
        "low": "0",
        "high": "1",
        "inte": "true",
        "property": "payload",
        "x": 910,
        "y": 190,
        "wires": [
            [
                "11c83a9a.542825"
            ]
        ]
    },
    {
        "id": "da544bac.502c68",
        "type": "ui_led",
        "z": "93634831.aed548",
        "group": "4c82d8af.0c5498",
        "order": 1,
        "width": "6",
        "height": "1",
        "label": "Qo1",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "yellow",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "red",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 780,
        "y": 310,
        "wires": []
    },
    {
        "id": "bc23d64a.d52ae8",
        "type": "random",
        "z": "93634831.aed548",
        "name": "Completo",
        "low": "0",
        "high": "2",
        "inte": "true",
        "property": "payload",
        "x": 490,
        "y": 310,
        "wires": [
            [
                "da544bac.502c68"
            ]
        ]
    },
    {
        "id": "a908cf9f.55ba",
        "type": "inject",
        "z": "93634831.aed548",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 360,
        "y": 310,
        "wires": [
            [
                "bc23d64a.d52ae8"
            ]
        ]
    },
    {
        "id": "2c30ffb2.e51b7",
        "type": "ui_led",
        "z": "93634831.aed548",
        "group": "4c82d8af.0c5498",
        "order": 1,
        "width": "6",
        "height": "1",
        "label": "Qo2",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "0",
                "valueType": "num"
            },
            {
                "color": "yellow",
                "value": "1",
                "valueType": "num"
            },
            {
                "color": "red",
                "value": "2",
                "valueType": "num"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 780,
        "y": 350,
        "wires": []
    },
    {
        "id": "61393079.f8bd2",
        "type": "random",
        "z": "93634831.aed548",
        "name": "Completo",
        "low": "0",
        "high": "2",
        "inte": "true",
        "property": "payload",
        "x": 490,
        "y": 350,
        "wires": [
            [
                "2c30ffb2.e51b7"
            ]
        ]
    },
    {
        "id": "972dc7b4.b12ff8",
        "type": "inject",
        "z": "93634831.aed548",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 360,
        "y": 350,
        "wires": [
            [
                "61393079.f8bd2"
            ]
        ]
    },
    {
        "id": "5a491702.341148",
        "type": "ui_led",
        "z": "93634831.aed548",
        "group": "9f770546.c22c38",
        "order": 1,
        "width": "6",
        "height": "1",
        "label": "Baterias",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 670,
        "y": 610,
        "wires": []
    },
    {
        "id": "afcd8980.ed7248",
        "type": "ui_led",
        "z": "93634831.aed548",
        "group": "9f770546.c22c38",
        "order": 1,
        "width": "6",
        "height": "1",
        "label": "Estado UPS",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            },
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "",
        "x": 670,
        "y": 570,
        "wires": []
    },
    {
        "id": "eb96acfb.471f8",
        "type": "ui_text",
        "z": "93634831.aed548",
        "group": "9f770546.c22c38",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Tensión",
        "format": "{{msg.Tension}} V",
        "layout": "col-center",
        "x": 680,
        "y": 450,
        "wires": []
    },
    {
        "id": "99f639e.7c0d5c8",
        "type": "ui_text",
        "z": "93634831.aed548",
        "group": "9f770546.c22c38",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Carga",
        "format": "{{msg.Carga}} %",
        "layout": "col-center",
        "x": 670,
        "y": 490,
        "wires": []
    },
    {
        "id": "847222bb.baf97",
        "type": "ui_text",
        "z": "93634831.aed548",
        "group": "9f770546.c22c38",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Tiempo remanente",
        "format": "{{msg.TReman}} min",
        "layout": "col-center",
        "x": 710,
        "y": 530,
        "wires": []
    },
    {
        "id": "a8c657a3.ea77b8",
        "type": "function",
        "z": "93634831.aed548",
        "name": "",
        "func": "var CCP         = global.get(\"CCP\",\"memoryOnly\")||[];\nmsg.Tension     = CCP.UPS_Bateria_Voltaje; \nmsg.Carga       = CCP.UPS_Bateria_Porc_Carga; \nmsg.TReman      = CCP.UPS_Bateria_Tiempo_Reman; \nvar on_off          = CCP.UPS_Bateria_Tiempo_Reman; \nvar UPS_Falla       = CCP.UPS_Falla; \n\nvar msg1        = { payload: on_off};\nvar msg2        = { payload: UPS_Falla};\nreturn [msg,msg1,msg2];",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 480,
        "wires": [
            [
                "eb96acfb.471f8",
                "99f639e.7c0d5c8",
                "847222bb.baf97"
            ],
            [
                "afcd8980.ed7248"
            ],
            [
                "5a491702.341148"
            ]
        ]
    },
    {
        "id": "76f6d47190d67f95",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 360,
        "y": 690,
        "wires": [
            [
                "224439b7.e88da6"
            ]
        ]
    },
    {
        "id": "97ed45b8b8dab0c5",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 360,
        "y": 730,
        "wires": [
            [
                "224439b7.e88da6"
            ]
        ]
    },
    {
        "id": "53f72ad97fea8ef5",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 360,
        "y": 770,
        "wires": [
            [
                "224439b7.e88da6"
            ]
        ]
    },
    {
        "id": "3f6a3b162d8e1c1a",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 360,
        "y": 820,
        "wires": [
            [
                "7688fc6a.4a83a4"
            ]
        ]
    },
    {
        "id": "d25618b5f240648d",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 360,
        "y": 860,
        "wires": [
            [
                "7688fc6a.4a83a4"
            ]
        ]
    },
    {
        "id": "4c3d7e952177bc4d",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 360,
        "y": 900,
        "wires": [
            [
                "7688fc6a.4a83a4"
            ]
        ]
    },
    {
        "id": "aaa8d3fac9b306e9",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 360,
        "y": 950,
        "wires": [
            [
                "2a6e31cf.58775e"
            ]
        ]
    },
    {
        "id": "a6c7bd64bf55a365",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 360,
        "y": 990,
        "wires": [
            [
                "2a6e31cf.58775e"
            ]
        ]
    },
    {
        "id": "c3c3a99a013fd062",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 360,
        "y": 1030,
        "wires": [
            [
                "2a6e31cf.58775e"
            ]
        ]
    },
    {
        "id": "a906b474293a0927",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 780,
        "y": 690,
        "wires": [
            [
                "cfe72ee3.ef8ad"
            ]
        ]
    },
    {
        "id": "6b9c315d1ac8e819",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 780,
        "y": 730,
        "wires": [
            [
                "cfe72ee3.ef8ad"
            ]
        ]
    },
    {
        "id": "fcf4047119c4a62a",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 780,
        "y": 770,
        "wires": [
            [
                "cfe72ee3.ef8ad"
            ]
        ]
    },
    {
        "id": "68b084c43ebcc1de",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 780,
        "y": 820,
        "wires": [
            [
                "9f8a1bfe.76d598"
            ]
        ]
    },
    {
        "id": "b15cdb3f2deea15b",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 780,
        "y": 860,
        "wires": [
            [
                "9f8a1bfe.76d598"
            ]
        ]
    },
    {
        "id": "b92923e9f05cb1dd",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 780,
        "y": 900,
        "wires": [
            [
                "9f8a1bfe.76d598"
            ]
        ]
    },
    {
        "id": "fab7d5841aa9d7ff",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 780,
        "y": 950,
        "wires": [
            [
                "11c83a9a.542825"
            ]
        ]
    },
    {
        "id": "43a78bfd6d18e4c6",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 780,
        "y": 990,
        "wires": [
            [
                "11c83a9a.542825"
            ]
        ]
    },
    {
        "id": "80b20777f9d4b8b7",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 780,
        "y": 1030,
        "wires": [
            [
                "11c83a9a.542825"
            ]
        ]
    },
    {
        "id": "50fe4ece36333a63",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 360,
        "y": 1080,
        "wires": [
            [
                "32fad925.551816"
            ]
        ]
    },
    {
        "id": "d481432fd5de2622",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 360,
        "y": 1120,
        "wires": [
            [
                "32fad925.551816"
            ]
        ]
    },
    {
        "id": "1acd6c4f42c33a71",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 360,
        "y": 1160,
        "wires": [
            [
                "32fad925.551816"
            ]
        ]
    },
    {
        "id": "a722a1e49aa924b3",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 590,
        "y": 690,
        "wires": [
            [
                "da544bac.502c68"
            ]
        ]
    },
    {
        "id": "329f35f8c860073b",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 590,
        "y": 730,
        "wires": [
            [
                "da544bac.502c68"
            ]
        ]
    },
    {
        "id": "f81028b43a05a653",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 590,
        "y": 770,
        "wires": [
            [
                "da544bac.502c68"
            ]
        ]
    },
    {
        "id": "814cc0b5bae30113",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 590,
        "y": 820,
        "wires": [
            [
                "2c30ffb2.e51b7"
            ]
        ]
    },
    {
        "id": "c02538097520e867",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 590,
        "y": 860,
        "wires": [
            [
                "2c30ffb2.e51b7"
            ]
        ]
    },
    {
        "id": "591716298bf2aa1b",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 590,
        "y": 900,
        "wires": [
            [
                "2c30ffb2.e51b7"
            ]
        ]
    },
    {
        "id": "e7fa387471427bb1",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 590,
        "y": 950,
        "wires": [
            []
        ]
    },
    {
        "id": "0228e74eb588531a",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 590,
        "y": 990,
        "wires": [
            []
        ]
    },
    {
        "id": "8108c75c337c0259",
        "type": "inject",
        "z": "93634831.aed548",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 590,
        "y": 1030,
        "wires": [
            []
        ]
    },
    {
        "id": "75ecea147bcb6293",
        "type": "link in",
        "z": "93634831.aed548",
        "name": "",
        "links": [
            "0c2335585731858a"
        ],
        "x": 375,
        "y": 480,
        "wires": [
            [
                "a8c657a3.ea77b8"
            ]
        ]
    },
    {
        "id": "bdac1cda867bdcab",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "group": "9699862a.4679e8",
        "order": 2,
        "width": "6",
        "height": "2",
        "name": "Presión de entrada",
        "label": "Presión de entrada",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 600,
        "y": 120,
        "wires": []
    },
    {
        "id": "e5640f06a750ebcb",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "group": "9699862a.4679e8",
        "order": 6,
        "width": "6",
        "height": 2,
        "name": "Temperatura Motor",
        "label": "Temperatura de Motor",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 600,
        "y": 160,
        "wires": []
    },
    {
        "id": "37163e74bd4b85e7",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "group": "9699862a.4679e8",
        "order": 4,
        "width": "6",
        "height": 2,
        "name": "Temperatura de entrada",
        "label": "Temperatura de entrada",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 620,
        "y": 200,
        "wires": []
    },
    {
        "id": "cf36016a415e7a37",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "group": "9699862a.4679e8",
        "order": 8,
        "width": "3",
        "height": 2,
        "name": "Corriente de fuga",
        "label": "C. fuga",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 600,
        "y": 240,
        "wires": []
    },
    {
        "id": "6843cf06f4648e4b",
        "type": "ui_template",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "group": "9699862a.4679e8",
        "name": "SCP 1",
        "order": 1,
        "width": "6",
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload| trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 680,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "731f78948e165ee4",
        "type": "template",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "name": "SCP 1",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{payload}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 560,
        "y": 80,
        "wires": [
            [
                "6843cf06f4648e4b"
            ]
        ]
    },
    {
        "id": "936b723c7ae7807e",
        "type": "link out",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "name": "",
        "links": [
            "a908951142dcc258"
        ],
        "x": 435,
        "y": 450,
        "wires": []
    },
    {
        "id": "5e64a142de84ac39",
        "type": "change",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "name": "Si",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[\"Datos_de_fondo_SCP_1\"],\t       \"hide\":[]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 450,
        "wires": [
            [
                "936b723c7ae7807e"
            ]
        ]
    },
    {
        "id": "2195733359b0c0ff",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "group": "40cbe96.5ec1618",
        "order": 2,
        "width": "6",
        "height": 2,
        "name": "Presión de entrada",
        "label": "Presión de entrada",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1310,
        "y": 120,
        "wires": []
    },
    {
        "id": "695d5c290ba4a321",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "group": "40cbe96.5ec1618",
        "order": 6,
        "width": "6",
        "height": 2,
        "name": "Temperatura Motor",
        "label": "Temperatura de Motor",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1310,
        "y": 160,
        "wires": []
    },
    {
        "id": "9c1c13f0850b6142",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "group": "40cbe96.5ec1618",
        "order": 4,
        "width": "6",
        "height": 2,
        "name": "Temperatura de entrada",
        "label": "Temperatura de entrada",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1330,
        "y": 200,
        "wires": []
    },
    {
        "id": "a6b7268ff5be11dc",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "group": "40cbe96.5ec1618",
        "order": 7,
        "width": "3",
        "height": 2,
        "name": "Vibracion eje X",
        "label": "Vibración X",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1300,
        "y": 360,
        "wires": []
    },
    {
        "id": "cb712cd4a0c9a16a",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "group": "40cbe96.5ec1618",
        "order": 8,
        "width": "3",
        "height": 2,
        "name": "Corriente de fuga",
        "label": "C. fuga",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1310,
        "y": 240,
        "wires": []
    },
    {
        "id": "b87e4fc268121d93",
        "type": "ui_template",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "group": "40cbe96.5ec1618",
        "name": "SCP 2",
        "order": 1,
        "width": "6",
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload| trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1390,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "393452c83811ec62",
        "type": "template",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "name": "SCP 2",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{payload}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 1270,
        "y": 80,
        "wires": [
            [
                "b87e4fc268121d93"
            ]
        ]
    },
    {
        "id": "fba119f4cedc1546",
        "type": "change",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "name": "Si",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[\"Datos_de_fondo_SCP_2\"],\t       \"hide\":[]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 450,
        "wires": [
            [
                "acbd54f5d39424b5"
            ]
        ]
    },
    {
        "id": "acbd54f5d39424b5",
        "type": "link out",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "name": "",
        "links": [
            "a908951142dcc258"
        ],
        "x": 1105,
        "y": 450,
        "wires": []
    },
    {
        "id": "25d6918b6db7b666",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "group": "12be7692.1a93f9",
        "order": 2,
        "width": "6",
        "height": 2,
        "name": "Presión de entrada",
        "label": "Presión de entrada",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2010,
        "y": 120,
        "wires": []
    },
    {
        "id": "d628812c7bd251e5",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "group": "12be7692.1a93f9",
        "order": 6,
        "width": "6",
        "height": 2,
        "name": "Temperatura Motor",
        "label": "Temperatura de Motor",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2010,
        "y": 160,
        "wires": []
    },
    {
        "id": "17590db1c0418c14",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "group": "12be7692.1a93f9",
        "order": 4,
        "width": "6",
        "height": 2,
        "name": "Temperatura de entrada",
        "label": "Temperatura de entrada",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2030,
        "y": 200,
        "wires": []
    },
    {
        "id": "94dee28cfda89e7a",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "group": "12be7692.1a93f9",
        "order": 8,
        "width": "3",
        "height": 2,
        "name": "Corriente de fuga",
        "label": "C. fuga",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2010,
        "y": 240,
        "wires": []
    },
    {
        "id": "7308563c128fd127",
        "type": "ui_template",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "group": "12be7692.1a93f9",
        "name": "SCP 3",
        "order": 1,
        "width": "6",
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload| trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2090,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "cade0b57011f86d9",
        "type": "template",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "name": "SCP 3",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{payload}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 1970,
        "y": 80,
        "wires": [
            [
                "7308563c128fd127"
            ]
        ]
    },
    {
        "id": "14e5c966f0ac7a55",
        "type": "change",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "name": "Si",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[\"Datos_de_fondo_SCP_3\"],\t       \"hide\":[]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 480,
        "wires": [
            [
                "6ae987f442317d17"
            ]
        ]
    },
    {
        "id": "7eeaa59705bca2d0",
        "type": "change",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "name": "No",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[],\t       \"hide\":[\"Datos_de_fondo_SCP_3\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 520,
        "wires": [
            [
                "7bf005f81169b7f3"
            ]
        ]
    },
    {
        "id": "1a320b572504fdef",
        "type": "link out",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "name": "",
        "links": [
            "a908951142dcc258"
        ],
        "x": 2065,
        "y": 480,
        "wires": []
    },
    {
        "id": "7bf005f81169b7f3",
        "type": "link out",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "name": "",
        "links": [
            "a908951142dcc258"
        ],
        "x": 1925,
        "y": 520,
        "wires": []
    },
    {
        "id": "d1eef4f9ee9a3a95",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "group": "54c5820f.3a1ccc",
        "order": 2,
        "width": "6",
        "height": 2,
        "name": "Presión de entrada",
        "label": "Presión de entrada",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2740,
        "y": 120,
        "wires": []
    },
    {
        "id": "f1205c6a282f6189",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "group": "54c5820f.3a1ccc",
        "order": 6,
        "width": "6",
        "height": 2,
        "name": "Temperatura Motor",
        "label": "Temperatura de Motor",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2740,
        "y": 160,
        "wires": []
    },
    {
        "id": "58b3f4a929359d92",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "group": "54c5820f.3a1ccc",
        "order": 4,
        "width": "6",
        "height": 2,
        "name": "Temperatura de entrada",
        "label": "Temperatura de entrada",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2760,
        "y": 200,
        "wires": []
    },
    {
        "id": "f1618da6aa38eca9",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "group": "54c5820f.3a1ccc",
        "order": 8,
        "width": "3",
        "height": 2,
        "name": "Corriente de fuga",
        "label": "C. fuga",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2740,
        "y": 240,
        "wires": []
    },
    {
        "id": "625f070aa4d112b5",
        "type": "ui_template",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "group": "54c5820f.3a1ccc",
        "name": "SCP 4",
        "order": 1,
        "width": "6",
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload| trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2820,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "3e156f1b4a291e52",
        "type": "template",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "name": "SCP 4",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{payload}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 2700,
        "y": 80,
        "wires": [
            [
                "625f070aa4d112b5"
            ]
        ]
    },
    {
        "id": "bffe69dd0beff361",
        "type": "change",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "name": "Si",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[\"Datos_de_fondo_SCP_4\"],\t       \"hide\":[]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 480,
        "wires": [
            [
                "c2142d4e72432c49"
            ]
        ]
    },
    {
        "id": "ad844df1387fbd1a",
        "type": "change",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "name": "No",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[],\t       \"hide\":[\"Datos_de_fondo_SCP_4\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 520,
        "wires": [
            [
                "95f83ed13bca6350"
            ]
        ]
    },
    {
        "id": "0183201e685f5f8f",
        "type": "link out",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "name": "",
        "links": [
            "a908951142dcc258"
        ],
        "x": 2765,
        "y": 480,
        "wires": []
    },
    {
        "id": "95f83ed13bca6350",
        "type": "link out",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "name": "",
        "links": [
            "a908951142dcc258"
        ],
        "x": 2605,
        "y": 520,
        "wires": []
    },
    {
        "id": "a16ce9d88bfe2b25",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "group": "9699862a.4679e8",
        "order": 5,
        "width": "6",
        "height": 2,
        "name": "Temperatura de descarga",
        "label": "Temperatura de descarga",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 620,
        "y": 280,
        "wires": []
    },
    {
        "id": "140d811fb12cab05",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "group": "9699862a.4679e8",
        "order": 3,
        "width": "6",
        "height": 2,
        "name": "Presión de descarga",
        "label": "Presión de descarga",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 610,
        "y": 320,
        "wires": []
    },
    {
        "id": "f1bfe8f2f2eb0f62",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "group": "40cbe96.5ec1618",
        "order": 5,
        "width": "6",
        "height": 2,
        "name": "Temperatura de descarga",
        "label": "Temperatura de descarga",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1330,
        "y": 280,
        "wires": []
    },
    {
        "id": "d72d7c062d4d29c7",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "group": "40cbe96.5ec1618",
        "order": 3,
        "width": "6",
        "height": 2,
        "name": "Presión de descarga",
        "label": "Presión de descarga",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1320,
        "y": 320,
        "wires": []
    },
    {
        "id": "11e471a9e2260188",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "group": "12be7692.1a93f9",
        "order": 5,
        "width": "6",
        "height": 2,
        "name": "Temperatura de descarga",
        "label": "Temperatura de descarga",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2030,
        "y": 280,
        "wires": []
    },
    {
        "id": "841b81a75dbd3795",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "group": "12be7692.1a93f9",
        "order": 3,
        "width": "6",
        "height": 2,
        "name": "Presión de descarga",
        "label": "Presión de descarga",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2020,
        "y": 320,
        "wires": []
    },
    {
        "id": "be78e364b61dd1fe",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "group": "54c5820f.3a1ccc",
        "order": 5,
        "width": "6",
        "height": 2,
        "name": "Temperatura de descarga",
        "label": "Temperatura de descarga",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2760,
        "y": 280,
        "wires": []
    },
    {
        "id": "8e67b3b175edf584",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "group": "54c5820f.3a1ccc",
        "order": 3,
        "width": "6",
        "height": 2,
        "name": "Presión de descarga",
        "label": "Presión de descarga",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2750,
        "y": 320,
        "wires": []
    },
    {
        "id": "34e66c29.ca92a4",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "c58d9126.1869c",
        "name": "Cluster",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Cluster",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 660,
        "wires": [
            [
                "55d5f923.1289d8"
            ]
        ]
    },
    {
        "id": "2f6dd56b.2afc3a",
        "type": "ui_table",
        "z": "a70735f4.fb54d8",
        "g": "c58d9126.1869c",
        "group": "c4b29123.a4898",
        "name": "Pozos configurados",
        "order": 1,
        "width": "24",
        "height": "7",
        "columns": [
            {
                "field": "SCP",
                "title": "SCP",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Nombre",
                "title": "Nombre",
                "width": "25%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Variador",
                "title": "Variador",
                "width": "20%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "ALS",
                "title": "ALS",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Sensor",
                "title": "Sensor",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Disponible",
                "title": "Disp.",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Disparo",
                "title": "Disparar breaker",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 660,
        "y": 660,
        "wires": []
    },
    {
        "id": "55d5f923.1289d8",
        "type": "delay",
        "z": "a70735f4.fb54d8",
        "g": "c58d9126.1869c",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 470,
        "y": 660,
        "wires": [
            [
                "2f6dd56b.2afc3a",
                "8bde71428f106aa5"
            ]
        ]
    },
    {
        "id": "d17b6cd1.dd167",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "c58d9126.1869c",
        "name": "Clear",
        "func": "msg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 700,
        "wires": [
            [
                "2f6dd56b.2afc3a"
            ]
        ]
    },
    {
        "id": "31bedd83.c1a8a2",
        "type": "complete",
        "z": "a70735f4.fb54d8",
        "g": "c58d9126.1869c",
        "name": "",
        "scope": [
            "bbcf7cf4.41f79",
            "e2c69396.80d27"
        ],
        "uncaught": false,
        "x": 170,
        "y": 700,
        "wires": [
            [
                "34e66c29.ca92a4",
                "d17b6cd1.dd167"
            ]
        ]
    },
    {
        "id": "7ce5179f.e149d8",
        "type": "inject",
        "z": "a70735f4.fb54d8",
        "g": "c58d9126.1869c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 340,
        "y": 730,
        "wires": [
            [
                "d17b6cd1.dd167"
            ]
        ]
    },
    {
        "id": "5657a4b8.0747bc",
        "type": "inject",
        "z": "a70735f4.fb54d8",
        "g": "c58d9126.1869c",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 150,
        "y": 660,
        "wires": [
            [
                "34e66c29.ca92a4"
            ]
        ]
    },
    {
        "id": "5d3a6d1e.f36e64",
        "type": "ui_switch",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "label": "Disponible",
        "tooltip": "",
        "group": "c5f05af1.a4c158",
        "order": 3,
        "width": "12",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 470,
        "y": 320,
        "wires": [
            [
                "ca8542a4.5ca1d"
            ]
        ]
    },
    {
        "id": "a5204587.b883d8",
        "type": "ui_text_input",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "label": "Nombre del pozo",
        "tooltip": "",
        "group": "c5f05af1.a4c158",
        "order": 4,
        "width": "12",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "str",
        "x": 490,
        "y": 160,
        "wires": [
            [
                "f4be3cec.c935f",
                "f076a6093ffd53e0"
            ]
        ]
    },
    {
        "id": "120f2cfa.456e63",
        "type": "ui_dropdown",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "Posición cluster",
        "label": "Posición:",
        "tooltip": "",
        "place": "Seleccione SCP",
        "group": "c5f05af1.a4c158",
        "order": 2,
        "width": "12",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "SCP 1",
                "value": 0,
                "type": "num"
            },
            {
                "label": "SCP 2",
                "value": 1,
                "type": "num"
            },
            {
                "label": "SCP 3",
                "value": 2,
                "type": "num"
            },
            {
                "label": "SCP 4",
                "value": 3,
                "type": "num"
            },
            {
                "label": "SCP 5",
                "value": 4,
                "type": "num"
            },
            {
                "label": "SCP 6",
                "value": 5,
                "type": "num"
            },
            {
                "label": "SCP 7",
                "value": 6,
                "type": "num"
            },
            {
                "label": "SCP 8",
                "value": 7,
                "type": "num"
            },
            {
                "label": "SCP 9",
                "value": 8,
                "type": "num"
            },
            {
                "label": "SCP10",
                "value": 9,
                "type": "num"
            },
            {
                "label": "SCP11",
                "value": 10,
                "type": "num"
            },
            {
                "label": "SCP12",
                "value": 11,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 480,
        "y": 100,
        "wires": [
            [
                "4c365ddf.1dae34"
            ]
        ]
    },
    {
        "id": "7522f5b8.a4638c",
        "type": "ui_dropdown",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "Levantamiento",
        "label": "Tipo de levantamiento:",
        "tooltip": "",
        "place": "Tipo ALS",
        "group": "c5f05af1.a4c158",
        "order": 5,
        "width": "12",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ESP",
                "value": "ESP",
                "type": "str"
            },
            {
                "label": "PCP",
                "value": "PCP",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 480,
        "y": 200,
        "wires": [
            [
                "43505e5f.1b221",
                "8d4ee20ff8081d73"
            ]
        ]
    },
    {
        "id": "dd9f6ceb.ddbe7",
        "type": "ui_dropdown",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "Marca Variador",
        "label": "Variador:",
        "tooltip": "",
        "place": "Marca de variador",
        "group": "c5f05af1.a4c158",
        "order": 6,
        "width": "12",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "ABB",
                "value": "ABB",
                "type": "str"
            },
            {
                "label": "CILA2S®",
                "value": "CILA2S",
                "type": "str"
            },
            {
                "label": "SIEMENS",
                "value": "SIEMENS",
                "type": "str"
            },
            {
                "label": "ABB_221",
                "value": "ABB_221",
                "type": "str"
            },
            {
                "label": "YASKAWA APC",
                "value": "YASKAWA_APC",
                "type": "str"
            },
            {
                "label": "YASKAWA QUANTUM",
                "value": "YASKAWA_QUANTUM",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 480,
        "y": 240,
        "wires": [
            [
                "cfa9bf86.2a8a3"
            ]
        ]
    },
    {
        "id": "f8ac9870.c119d8",
        "type": "ui_dropdown",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "Marca Sensor de fondo",
        "label": "Sensor de Fondo:",
        "tooltip": "",
        "place": "Marca",
        "group": "c5f05af1.a4c158",
        "order": 7,
        "width": "12",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Ninguno",
                "value": "Ninguno",
                "type": "str"
            },
            {
                "label": "SSU",
                "value": "SSU",
                "type": "str"
            },
            {
                "label": "Zenith",
                "value": "Zenith",
                "type": "str"
            },
            {
                "label": "Centinel",
                "value": "Centinel",
                "type": "str"
            },
            {
                "label": "Phoenix",
                "value": "Phoenix",
                "type": "str"
            },
            {
                "label": "Scout",
                "value": "Scout",
                "type": "str"
            },
            {
                "label": "Baker",
                "value": "Baker",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 510,
        "y": 280,
        "wires": [
            [
                "3a0224.13cb4ddc"
            ]
        ]
    },
    {
        "id": "22860dee.e67e42",
        "type": "ui_button",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "group": "c5f05af1.a4c158",
        "order": 10,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 460,
        "y": 400,
        "wires": [
            [
                "bbcf7cf4.41f79"
            ]
        ]
    },
    {
        "id": "5517b73.bd02348",
        "type": "ui_button",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "group": "c5f05af1.a4c158",
        "order": 11,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Borrar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 450,
        "y": 440,
        "wires": [
            [
                "e2c69396.80d27"
            ]
        ]
    },
    {
        "id": "f4be3cec.c935f",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Pozo.Nombre",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "43505e5f.1b221",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Pozo.ALS",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "cfa9bf86.2a8a3",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Pozo.Variador",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "3a0224.13cb4ddc",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Pozo.Sensor",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "ca8542a4.5ca1d",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Pozo.Disponible",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "bbcf7cf4.41f79",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "Configurar Clúster",
        "func": "// Leer datos del contexto\nvar Data        = flow.get(\"Pozo\")||[];\nvar Pozo        = {...Data}\nvar Cluster     = global.get(\"Cluster\")||[];\nvar nombre = Pozo.Nombre;\nvar nom=[];\nvar len = nombre.length;\nfor (let k = 0; k < len; k++) {\n    nombre[k] = msg.payload.charCodeAt(k);\n}\ncontext.set(\"Pozo.Nombre\", Pozo.Nombre);\n\n// Acomodar la información\nvar Pos         = Pozo.Posicion;\nPozo.SCP        = Pozo.Posicion+1;\nPozo.Disponible = Pozo.Disponible == true ? \"Si\":\"No\";\nPozo.Disparo    = Pozo.Disparo    == true ? \"Si\" : \"No\";\n\ndelete Pozo.Posicion;\n\n// Asignar información de pozo configurado al objeto Clúster\nCluster[Pos] = {...Pozo}\nglobal.set(\"Cluster\",Cluster);\n\n// Retornar\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nvar Cluster = global.get(\"Cluster\")||[null];\nif(Cluster[0] == null ){\n    for(var i=0; i<18; i+=1){\n        Cluster[i] = {\n            SCP:i+1,\n            Disponible:\"No\",\n            Nombre:\" -- \",\n            ALS:\" -- \",\n            Variador:\" -- \",\n            Sensor:\" -- \",\n            Disparo:\"No\"\n        }\n    }\n    global.set(\"Cluster\",Cluster);\n}\n\n",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 400,
        "wires": [
            [
                "c308cca6.9801f"
            ]
        ]
    },
    {
        "id": "e2c69396.80d27",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "Borrar Posición",
        "func": "var Pozo        = flow.get(\"Pozo\")||[]\nvar Cluster     = global.get(\"Cluster\")||[];\n\nCluster[Pozo.Posicion] = {\n            SCP:Pozo.Posicion+1,\n            Disponible:\"No\",\n            Nombre:\" -- \",\n            ALS:\" -- \",\n            Variador:\" -- \",\n            Sensor:\" -- \",\n            Disparo:\"No\"\n        }\nglobal.set(\"Cluster\",Cluster);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 440,
        "wires": [
            [
                "c308cca6.9801f"
            ]
        ]
    },
    {
        "id": "4c43476f.e5a758",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "Leer",
        "func": "var Cluster = global.get(\"Cluster\")||[];\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nvar ALS,Variador,Sensor\n// Nombre\ntry{Nombre = MSG(Cluster[msg.payload].Nombre);}\ncatch(error){Nombre = MSG(\"\");}\n\n// Tipo levantamiento\ntry{ALS = MSG(Cluster[msg.payload].ALS);}\ncatch(error){ALS = MSG(0);}\n\n// Variador\ntry{Variador = MSG(Cluster[msg.payload].Variador);}\ncatch(error){Variador = MSG(0);}\n\n// Sendor de fondo\ntry{Sensor = MSG(Cluster[msg.payload].Sensor);}\ncatch(error){Sensor = MSG(0);}\n\n// Disponible\ntry{Disponible = MSG(Cluster[msg.payload].Disponible);}\ncatch(error){Disponible = MSG(false);}\n\n// Disparo del breaker\ntry{Disparo = MSG(Cluster[msg.payload].Disparo);}\ncatch(error){Disparo = MSG(false);}\n\n// Ajuste de la información leida para cargar en los cajetines\nNombre.payload      = Nombre.payload == \" -- \" ? \"\":Nombre.payload;\nDisponible.payload  = Disponible.payload == \"No\" ? false:true;\nDisparo.payload     = Disparo.payload == \"No\" ? false:true;\n\nnode.status({fill:\"green\",shape:\"dot\",text:Nombre.payload});\n\nreturn [Nombre,ALS,Variador,Sensor,Disponible,Disparo];\n\nfunction MSG(message){\n    return {payload: message}\n}\n\n",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 260,
        "wires": [
            [
                "a5204587.b883d8"
            ],
            [
                "7522f5b8.a4638c"
            ],
            [
                "dd9f6ceb.ddbe7"
            ],
            [
                "f8ac9870.c119d8"
            ],
            [
                "5d3a6d1e.f36e64"
            ],
            [
                "c0c394e33b69e476"
            ]
        ]
    },
    {
        "id": "4c365ddf.1dae34",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "set Pozo.Posicion",
        "func": "if (msg.payload==0){flow.set(\"Pozo.Posicion\",0);}\nnode.status({fill:\"green\",shape:\"dot\",text:msg.payload});\nflow.set(\"Pozo.Posicion\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "d84a013f.273ce",
        "type": "complete",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "scope": [
            "4c365ddf.1dae34"
        ],
        "uncaught": false,
        "x": 150,
        "y": 240,
        "wires": [
            [
                "4c43476f.e5a758"
            ]
        ]
    },
    {
        "id": "c308cca6.9801f",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "Configurar/Borrar pozo",
        "links": [
            "bcf4fff3.6451c"
        ],
        "x": 855,
        "y": 420,
        "wires": []
    },
    {
        "id": "1fefef6a.bb0941",
        "type": "inject",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "4c43476f.e5a758"
            ]
        ]
    },
    {
        "id": "cceedd5a9a2ea195",
        "type": "ui_text_input",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "label": "Nombre del cluster",
        "tooltip": "",
        "group": "c5f05af1.a4c158",
        "order": 1,
        "width": "12",
        "height": "1",
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "topicType": "str",
        "x": 490,
        "y": 500,
        "wires": [
            [
                "5586ffc8b161d4a4",
                "130d6c7b4ed4e80a"
            ]
        ]
    },
    {
        "id": "5586ffc8b161d4a4",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Input.Clustername",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "130d6c7b4ed4e80a",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "Nombre Clúster",
        "links": [
            "147e251c2338e1b0",
            "56fe9074a632b997"
        ],
        "x": 635,
        "y": 520,
        "wires": []
    },
    {
        "id": "8d4ee20ff8081d73",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "TipoLevantamiento",
        "links": [],
        "x": 615,
        "y": 220,
        "wires": []
    },
    {
        "id": "8bde71428f106aa5",
        "type": "debug",
        "z": "a70735f4.fb54d8",
        "g": "c58d9126.1869c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 700,
        "wires": []
    },
    {
        "id": "3895844e0bbc0b79",
        "type": "link in",
        "z": "a70735f4.fb54d8",
        "g": "c58d9126.1869c",
        "name": "",
        "links": [
            "8a42d6f60daba191"
        ],
        "x": 185,
        "y": 620,
        "wires": [
            [
                "34e66c29.ca92a4"
            ]
        ]
    },
    {
        "id": "f076a6093ffd53e0",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "namePozoC",
        "links": [
            "dfa4869f829aa22a",
            "b0454546cc691fa4"
        ],
        "x": 615,
        "y": 140,
        "wires": []
    },
    {
        "id": "c0c394e33b69e476",
        "type": "ui_switch",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "label": "Habilitar Disparo del Breaker Principal de VSD",
        "tooltip": "",
        "group": "c5f05af1.a4c158",
        "order": 8,
        "width": "12",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 580,
        "y": 360,
        "wires": [
            [
                "c6b3588ed674f55a"
            ]
        ]
    },
    {
        "id": "c6b3588ed674f55a",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Pozo.Disparo",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "91653a058df27012",
        "type": "ui_text_input",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "label": "Ton-1 [Min]",
        "tooltip": "",
        "group": "a947cc9457fcd9b0",
        "order": 2,
        "width": "6",
        "height": "1",
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1370,
        "y": 1370,
        "wires": [
            [
                "5081568a090a2ddd"
            ]
        ]
    },
    {
        "id": "697d48af184dd5a3",
        "type": "ui_text_input",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "label": "Ton-2 [Min]",
        "tooltip": "",
        "group": "a947cc9457fcd9b0",
        "order": 3,
        "width": "6",
        "height": "1",
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1370,
        "y": 1410,
        "wires": [
            [
                "383a5a17c45b733d"
            ]
        ]
    },
    {
        "id": "7c62d4bf6cec9b0c",
        "type": "ui_text_input",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "label": "Ton-3 [Min]",
        "tooltip": "",
        "group": "a947cc9457fcd9b0",
        "order": 4,
        "width": "6",
        "height": "1",
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1370,
        "y": 1450,
        "wires": [
            [
                "7968d778e91e162e",
                "8487caef487fba55"
            ]
        ]
    },
    {
        "id": "e159b3a7f456d64f",
        "type": "ui_button",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "group": "a947cc9457fcd9b0",
        "order": 12,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Confirmar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1260,
        "y": 1630,
        "wires": [
            [
                "11c677718561cad0"
            ]
        ]
    },
    {
        "id": "11c677718561cad0",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "func": "var Timer=flow.get(\"Timer\");\n\nvar msg0 = { payload: Timer[1] };\nvar msg1 = { payload: Timer[2] };\nvar msg2 = { payload: Timer[3] };\n\nreturn [msg0, msg1, msg2];\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 1630,
        "wires": [
            [
                "7a836e8c1d7959ac"
            ],
            [
                "ed6697f8d8ed5fb2"
            ],
            [
                "504b7f70b919a050",
                "3ab2a67ab6d5d1b6"
            ]
        ]
    },
    {
        "id": "7a836e8c1d7959ac",
        "type": "eth-ip out",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "endpoint": "d3a6ac1024bb182d",
        "variable": "Tiempo_Disparo_YY",
        "program": "",
        "name": "",
        "x": 1620,
        "y": 1530,
        "wires": []
    },
    {
        "id": "ed6697f8d8ed5fb2",
        "type": "eth-ip out",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "endpoint": "d3a6ac1024bb182d",
        "variable": "Tiempo_Disparo_YY_2",
        "program": "",
        "name": "",
        "x": 1630,
        "y": 1590,
        "wires": []
    },
    {
        "id": "504b7f70b919a050",
        "type": "eth-ip out",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "endpoint": "d3a6ac1024bb182d",
        "variable": "Tiempo_Disparo_YY_3",
        "program": "",
        "name": "",
        "x": 1630,
        "y": 1650,
        "wires": []
    },
    {
        "id": "7968d778e91e162e",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Timer.3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 1450,
        "wires": [
            []
        ]
    },
    {
        "id": "383a5a17c45b733d",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Timer.2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 1410,
        "wires": [
            []
        ]
    },
    {
        "id": "5081568a090a2ddd",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Timer.1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 1370,
        "wires": [
            []
        ]
    },
    {
        "id": "a1d43b891c79081b",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Timer.1",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1370,
        "wires": [
            [
                "91653a058df27012"
            ]
        ]
    },
    {
        "id": "44c1b3682fbfd0fa",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Timer.2",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1410,
        "wires": [
            [
                "697d48af184dd5a3"
            ]
        ]
    },
    {
        "id": "1537d2b28d115d3e",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Timer.3",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1450,
        "wires": [
            [
                "7c62d4bf6cec9b0c"
            ]
        ]
    },
    {
        "id": "7d44207f069c346e",
        "type": "eth-ip in",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "TON_1.DN",
        "program": "",
        "name": "Temporizador TON_1",
        "x": 1240,
        "y": 140,
        "wires": [
            [
                "a46e4cae2208b7fd",
                "8839df8f695615a8"
            ]
        ]
    },
    {
        "id": "c437ef1085f2fe23",
        "type": "eth-ip in",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "TON_2.DN",
        "program": "",
        "name": "Temporizador TON_2",
        "x": 1240,
        "y": 220,
        "wires": [
            [
                "61a854cd30eb946c",
                "4915e8965987f3d3"
            ]
        ]
    },
    {
        "id": "09d955ed4ea7f5d6",
        "type": "eth-ip in",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "TON_3.DN",
        "program": "",
        "name": "Temporizador TON_3",
        "x": 1240,
        "y": 280,
        "wires": [
            [
                "710175bff5ca19f9"
            ]
        ]
    },
    {
        "id": "d279d710e6a93bf2",
        "type": "ui_led",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "group": "12cee2ff021828a4",
        "order": 1,
        "width": "12",
        "height": "1",
        "label": "Estado Actual Temporizador 1 [TON-1]",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Estado Temporizador 1",
        "x": 1650,
        "y": 140,
        "wires": []
    },
    {
        "id": "18073bcdc1cd89a1",
        "type": "ui_led",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "group": "12cee2ff021828a4",
        "order": 3,
        "width": "12",
        "height": "1",
        "label": "Estado Actual Temporizador 2 [TON-2]",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Estado Temporizador 2",
        "x": 1650,
        "y": 220,
        "wires": []
    },
    {
        "id": "78614746ee98ea10",
        "type": "ui_led",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "group": "12cee2ff021828a4",
        "order": 5,
        "width": "12",
        "height": "1",
        "label": "Estado Actual Temporizador 3 [TON-3]",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Estado Temporizador 3",
        "x": 1650,
        "y": 280,
        "wires": []
    },
    {
        "id": "8048575fdf075eeb",
        "type": "ui_led",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "group": "12cee2ff021828a4",
        "order": 2,
        "width": "12",
        "height": "1",
        "label": "Estado Activación de parada de emergencia",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "gray",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Estado Activación de parada de emergencia",
        "x": 1550,
        "y": 750,
        "wires": []
    },
    {
        "id": "1b99925f7b3656a6",
        "type": "ui_led",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "group": "12cee2ff021828a4",
        "order": 4,
        "width": "12",
        "height": "1",
        "label": "Estado Comunicación UPS",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Estado Comunicación UPS",
        "x": 1660,
        "y": 340,
        "wires": []
    },
    {
        "id": "4b2533ec2a7805fd",
        "type": "ui_led",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "group": "12cee2ff021828a4",
        "order": 6,
        "width": "12",
        "height": "1",
        "label": "Baja presión",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Baja presión",
        "x": 1610,
        "y": 400,
        "wires": []
    },
    {
        "id": "a302041e2b10c209",
        "type": "eth-ip in",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "RUB_CL001_110_HS_101.DI",
        "program": "",
        "name": "Disparo parada de emergencia",
        "x": 1210,
        "y": 750,
        "wires": [
            [
                "8048575fdf075eeb",
                "d06c1749b53ec2ce"
            ]
        ]
    },
    {
        "id": "3e6b7b9cdd3eeaac",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "Mensaje ESD",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Apagado de pozos por parada de emergencia",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ACCIONAMIENTO ESD",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 810,
        "wires": [
            [
                "be16c486fa3219ab",
                "7120175d95ea4497",
                "e3ba296a8df6d553"
            ]
        ]
    },
    {
        "id": "be16c486fa3219ab",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "Disparo ESD",
        "links": [
            "59e817c2.295b38"
        ],
        "x": 1955,
        "y": 810,
        "wires": []
    },
    {
        "id": "d06c1749b53ec2ce",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "if",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1430,
        "y": 830,
        "wires": [
            [
                "3e6b7b9cdd3eeaac"
            ],
            [
                "6046b92dc6b28de5"
            ]
        ]
    },
    {
        "id": "7120175d95ea4497",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "position": "top right",
        "displayTime": "10",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1790,
        "y": 870,
        "wires": []
    },
    {
        "id": "ab701d55f9d71291",
        "type": "eth-ip in",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "PERMISIVO.UPS_Comunicando",
        "program": "",
        "name": "Comunicación UPS",
        "x": 1250,
        "y": 340,
        "wires": [
            [
                "23bdf7d9e5f1808b"
            ]
        ]
    },
    {
        "id": "506562ef40deaf6c",
        "type": "eth-ip in",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "RUB_CL001_110_PZIT_101.AlmLL",
        "program": "",
        "name": "Baja presión en Manifold",
        "x": 1230,
        "y": 400,
        "wires": [
            [
                "751a55696f673ab9"
            ]
        ]
    },
    {
        "id": "24392d4b372f640e",
        "type": "ui_led",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "group": "12cee2ff021828a4",
        "order": 7,
        "width": "12",
        "height": "1",
        "label": "Estado de comunicación",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Estado de comunicación",
        "x": 1650,
        "y": 460,
        "wires": []
    },
    {
        "id": "a382e97b67995892",
        "type": "eth-ip in",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "PERMISIVO_COMUNICACIONES",
        "program": "",
        "name": "Status comunicación",
        "x": 1250,
        "y": 460,
        "wires": [
            [
                "c039d0a6c34d0aef"
            ]
        ]
    },
    {
        "id": "0c5d99103c6ddc57",
        "type": "ui_led",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "group": "12cee2ff021828a4",
        "order": 8,
        "width": "12",
        "height": "1",
        "label": "Estado de batería UPS",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "red",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "green",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Estado de comunicación",
        "x": 1650,
        "y": 560,
        "wires": []
    },
    {
        "id": "34755ff7143dca8a",
        "type": "eth-ip in",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "PERMISIVO.UPS_Bateria_Cargada",
        "program": "",
        "name": "Estado de la batería UPS",
        "x": 1230,
        "y": 560,
        "wires": [
            [
                "0c5d99103c6ddc57",
                "2a562cb01f0f89bb"
            ]
        ]
    },
    {
        "id": "a46e4cae2208b7fd",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración clúster",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 140,
        "wires": [
            [
                "d279d710e6a93bf2"
            ]
        ]
    },
    {
        "id": "61a854cd30eb946c",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración clúster",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 220,
        "wires": [
            [
                "18073bcdc1cd89a1"
            ]
        ]
    },
    {
        "id": "710175bff5ca19f9",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración clúster",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 280,
        "wires": [
            [
                "78614746ee98ea10"
            ]
        ]
    },
    {
        "id": "23bdf7d9e5f1808b",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración clúster",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 340,
        "wires": [
            [
                "1b99925f7b3656a6"
            ]
        ]
    },
    {
        "id": "751a55696f673ab9",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración clúster",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 400,
        "wires": [
            [
                "4b2533ec2a7805fd"
            ]
        ]
    },
    {
        "id": "c039d0a6c34d0aef",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración clúster",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 460,
        "wires": [
            [
                "24392d4b372f640e"
            ]
        ]
    },
    {
        "id": "21f3f9db7a8f3ae0",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Configuración clúster",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6046b92dc6b28de5",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "Mensaje ESD",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Estado de pozos normalizado por desenclavamiento de parada de emergencia",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ACCIONAMIENTO ESD",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1580,
        "y": 850,
        "wires": [
            [
                "7120175d95ea4497",
                "be16c486fa3219ab"
            ]
        ]
    },
    {
        "id": "e3ba296a8df6d553",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "position": "dialog",
        "displayTime": "10",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "ACEPTAR",
        "x": 1770,
        "y": 790,
        "wires": [
            []
        ]
    },
    {
        "id": "1802b7d423c0faa4",
        "type": "link in",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "links": [
            "4de1359539a41ebc",
            "55320ba00209c396",
            "71f4b56e55aa1086",
            "5f1933d64e536f9a",
            "c4c37d386f70ef81",
            "bc98b9781770f02b",
            "ce0380ed7b829fd0",
            "b649e1a2dfa4555b",
            "b02315cba2e3a576",
            "d4fec8f5350c181f",
            "a499a2e033a29ca8",
            "b80012ae1e8aaac0",
            "5d5767109263df02",
            "a009825b9c3ac27e",
            "92d91b2b89ea133a"
        ],
        "x": 1645,
        "y": 890,
        "wires": [
            [
                "7120175d95ea4497",
                "be16c486fa3219ab"
            ]
        ]
    },
    {
        "id": "8839df8f695615a8",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 100,
        "wires": [
            [
                "62979ce016bc2301"
            ]
        ]
    },
    {
        "id": "28bcad571c1e238b",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1830,
        "y": 100,
        "wires": [
            [
                "e99315a4faf95dc3"
            ]
        ]
    },
    {
        "id": "62979ce016bc2301",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "Mensaje TON-1 ON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Apagado controlado de pozos por baja presión en el Manifold",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 100,
        "wires": [
            [
                "28bcad571c1e238b"
            ]
        ]
    },
    {
        "id": "e99315a4faf95dc3",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1990,
        "y": 100,
        "wires": [
            [
                "0cf831d2bd5b087d"
            ]
        ]
    },
    {
        "id": "0cf831d2bd5b087d",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "Evento SHUTDOWN ON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Apagado de pozos de manera controlada por baja presión en el Manifold",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "APAGADO DE POZOS",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2190,
        "y": 100,
        "wires": [
            [
                "71f4b56e55aa1086"
            ]
        ]
    },
    {
        "id": "71f4b56e55aa1086",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "links": [
            "1802b7d423c0faa4"
        ],
        "x": 2335,
        "y": 100,
        "wires": []
    },
    {
        "id": "4915e8965987f3d3",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 180,
        "wires": [
            [
                "967a7138b014c9a3"
            ]
        ]
    },
    {
        "id": "bf67a0be631c553b",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1830,
        "y": 180,
        "wires": [
            [
                "0236ec64157e550a"
            ]
        ]
    },
    {
        "id": "967a7138b014c9a3",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "Mensaje TON-2 ON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Disparo de breakers principal VSD por baja presión en el manifold",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 180,
        "wires": [
            [
                "bf67a0be631c553b"
            ]
        ]
    },
    {
        "id": "0236ec64157e550a",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1990,
        "y": 180,
        "wires": [
            [
                "cd924282eae38d95"
            ]
        ]
    },
    {
        "id": "cd924282eae38d95",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "Evento SHUTDOWN ON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Disparo de breakers principal VSD por baja presión en el manifold",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "APAGADO DE POZOS",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2190,
        "y": 180,
        "wires": [
            [
                "5f1933d64e536f9a"
            ]
        ]
    },
    {
        "id": "5f1933d64e536f9a",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "links": [
            "1802b7d423c0faa4"
        ],
        "x": 2335,
        "y": 180,
        "wires": []
    },
    {
        "id": "01d3ec8eebc233f0",
        "type": "ui_text_input",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "label": "Tiempo de recuperación [Min]",
        "tooltip": "",
        "group": "a947cc9457fcd9b0",
        "order": 5,
        "width": "6",
        "height": "1",
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "topicType": "msg",
        "x": 1430,
        "y": 1490,
        "wires": [
            []
        ]
    },
    {
        "id": "3ab2a67ab6d5d1b6",
        "type": "eth-ip out",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "endpoint": "d3a6ac1024bb182d",
        "variable": "TON_RECUPERACION",
        "program": "",
        "name": "",
        "x": 1630,
        "y": 1710,
        "wires": []
    },
    {
        "id": "2a562cb01f0f89bb",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1430,
        "y": 520,
        "wires": [
            [
                "91e916a1a9e90896"
            ]
        ]
    },
    {
        "id": "4547f36d1b88478d",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1870,
        "y": 520,
        "wires": [
            [
                "752e5b0a0ea98446"
            ]
        ]
    },
    {
        "id": "91e916a1a9e90896",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "Mensaje UPS descargando",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Falla alimentación 120 VAC UPS - DESCARGANDO",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1660,
        "y": 520,
        "wires": [
            [
                "4547f36d1b88478d"
            ]
        ]
    },
    {
        "id": "752e5b0a0ea98446",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2030,
        "y": 520,
        "wires": [
            [
                "b40ae16852e864fc"
            ]
        ]
    },
    {
        "id": "b40ae16852e864fc",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "Evento UPS descargando",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Falla alimentación 120 VAC UPS - DESCARGANDO",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ESTADO UPS",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2230,
        "y": 520,
        "wires": [
            [
                "bc98b9781770f02b"
            ]
        ]
    },
    {
        "id": "bc98b9781770f02b",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "links": [
            "1802b7d423c0faa4"
        ],
        "x": 2375,
        "y": 520,
        "wires": []
    },
    {
        "id": "724941ca68a4438d",
        "type": "ui_button",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "group": "a947cc9457fcd9b0",
        "order": 13,
        "width": "6",
        "height": "1",
        "passthru": false,
        "label": "Funcionamiento",
        "tooltip": "",
        "color": "",
        "bgcolor": "grey",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1190,
        "y": 1770,
        "wires": [
            [
                "f9ca00220700b726"
            ]
        ]
    },
    {
        "id": "f9ca00220700b726",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "Explicación TON-1",
        "func": "msg.topic = \"Explicación Temporizador TON-1\";\nmsg.payload = \"Este temporizador se activará cuando la presión de la bajante de pozo sea menor a 10 PSI. Una vez termine el TON-1, se enviará comando de parada por comunicaciones hacia cada uno de los pozos.\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1770,
        "wires": [
            [
                "bb62d5cddc382647"
            ]
        ]
    },
    {
        "id": "bb62d5cddc382647",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "SIGUIENTE",
        "cancel": "SALIR",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1670,
        "y": 1770,
        "wires": [
            [
                "9387d42b81a56fbd"
            ]
        ]
    },
    {
        "id": "4f8dfc6ffb03860e",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "Explicación TON-2",
        "func": "msg.topic = \"Explicación Temporizador TON-2\";\nmsg.payload = \"Una vez termine el temporizador TON-1, se habilitará el temporizador TON-2. Este tiempo es el necesario para que los equipos VSD detengan de manera controlada las bombas BES. Pasado el temporizador TON-2, se activará la señal digital YY hacia la bobina de disparo del interruptor de entrada a cada skid SUT+VSD para generar su apertura.\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1810,
        "wires": [
            [
                "b06a9c2fd40e2160"
            ]
        ]
    },
    {
        "id": "b06a9c2fd40e2160",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "SIGUIENTE",
        "cancel": "SALIR",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1670,
        "y": 1810,
        "wires": [
            [
                "c3ba83a27feb12cb"
            ]
        ]
    },
    {
        "id": "9387d42b81a56fbd",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SIGUIENTE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1810,
        "y": 1770,
        "wires": [
            [
                "4f8dfc6ffb03860e"
            ]
        ]
    },
    {
        "id": "c3ba83a27feb12cb",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SIGUIENTE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1810,
        "y": 1810,
        "wires": [
            [
                "e35fff6de80cfbfc"
            ]
        ]
    },
    {
        "id": "e35fff6de80cfbfc",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "Explicación Boton Reset",
        "func": "msg.topic = \"Explicación y funcionamiento de botón **Reset-Deshabilitar shutdown general**\";\nmsg.payload = \"La acción de activar el botón de reset en la HMI o en el SCADA tendrá los siguientes efectos: Inhibir los comandos de parada enviados por comunicación a los VSD de los pozos nuevos, desactivar las señales de parada YY, detener el efecto de parada del cluster durante la ejecución del TON-1, esto para evitar que ante una manipulación del instrumento sin el debido aislamiento (Inhibit) de control, se genere “shutdown”.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 1850,
        "wires": [
            [
                "70f8eebd2a442aeb"
            ]
        ]
    },
    {
        "id": "70f8eebd2a442aeb",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "SIGUIENTE",
        "cancel": "SALIR",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1670,
        "y": 1850,
        "wires": [
            [
                "265f30bbe9814685"
            ]
        ]
    },
    {
        "id": "265f30bbe9814685",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SIGUIENTE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1810,
        "y": 1850,
        "wires": [
            [
                "8a7f2982843784cd"
            ]
        ]
    },
    {
        "id": "8a7f2982843784cd",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "Explicación TON-3",
        "func": "msg.topic = \"Explicación Temporizador TON-3\";\nmsg.payload = \"Una vez se haya habilitado el boton de 'Reset', se habilita el temporizador TON-3 ya que este tiempo es el necesario para arrancar los VSD que se vieron afectados por un efecto de “shutdown” o por tratarse del primer arranque del cluster\"\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 1890,
        "wires": [
            [
                "5097e77127557559"
            ]
        ]
    },
    {
        "id": "5097e77127557559",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "SIGUIENTE",
        "cancel": "SALIR",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1670,
        "y": 1890,
        "wires": [
            [
                "6cca05203a26a55a"
            ]
        ]
    },
    {
        "id": "6cca05203a26a55a",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SIGUIENTE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1810,
        "y": 1890,
        "wires": [
            [
                "a2cb3710e30beb80"
            ]
        ]
    },
    {
        "id": "a2cb3710e30beb80",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "Explicación TON-Recuperacion",
        "func": "msg.topic = \"Explicación Temporizador de recuperación\";\nmsg.payload = \"El temporizador TON-3 y el temporizador Tiempo de recuperación deberan estar en el mismo valor ya que es el tiempo necesario para normalizar el sistema\"\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 1930,
        "wires": [
            [
                "3b5dc031fdbe978b"
            ]
        ]
    },
    {
        "id": "3b5dc031fdbe978b",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "SIGUIENTE",
        "cancel": "SALIR",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1670,
        "y": 1930,
        "wires": [
            []
        ]
    },
    {
        "id": "31158286d5c2ff36",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "func": "var Valor_Temporizador_3 = msg.payload;\nvar Resultado_Division;\n\nResultado_Division = Math.trunc((Valor_Temporizador_3/1000));\nmsg.payload = Resultado_Division;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 2110,
        "wires": [
            [
                "5207c63538353eb2",
                "29774f3181a12d95",
                "ee5f740a9ca9c51c"
            ]
        ]
    },
    {
        "id": "1198769cc60c5b27",
        "type": "eth-ip in",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "TON_3.ACC",
        "program": "",
        "name": "Tiempo Actual TON-3",
        "x": 1210,
        "y": 2110,
        "wires": [
            [
                "31158286d5c2ff36"
            ]
        ]
    },
    {
        "id": "5207c63538353eb2",
        "type": "ui_text",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "group": "a947cc9457fcd9b0",
        "order": 8,
        "width": "6",
        "height": "2",
        "name": "",
        "label": "Tiempo actual TON-3",
        "format": "<font size =4px>{{msg.payload}} s",
        "layout": "col-center",
        "x": 1580,
        "y": 2110,
        "wires": []
    },
    {
        "id": "9a4ede3716f06915",
        "type": "ui_text",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "group": "a947cc9457fcd9b0",
        "order": 7,
        "width": "6",
        "height": "2",
        "name": "",
        "label": "Tiempo actual TON-2",
        "format": "<font size =4px>{{msg.payload}} s",
        "layout": "col-center",
        "x": 1580,
        "y": 2050,
        "wires": []
    },
    {
        "id": "bd0ec4baf7eb8815",
        "type": "ui_text",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "group": "a947cc9457fcd9b0",
        "order": 6,
        "width": "6",
        "height": "2",
        "name": "",
        "label": "Tiempo actual TON-1",
        "format": "<font size =4px>{{msg.payload}} s",
        "layout": "col-center",
        "x": 1580,
        "y": 1990,
        "wires": []
    },
    {
        "id": "29774f3181a12d95",
        "type": "ui_text",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "group": "a947cc9457fcd9b0",
        "order": 9,
        "width": "6",
        "height": "2",
        "name": "",
        "label": "Tiempo de Recuperación",
        "format": "<font size =4px>{{msg.payload}} s",
        "layout": "col-center",
        "x": 1590,
        "y": 2150,
        "wires": []
    },
    {
        "id": "9ea15e95bd5f4957",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "func": "var Valor_Temporizador_2 = msg.payload;\nvar Resultado_Division;\n\nResultado_Division = Math.trunc((Valor_Temporizador_2/1000));\nmsg.payload = Resultado_Division;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 2050,
        "wires": [
            [
                "9a4ede3716f06915"
            ]
        ]
    },
    {
        "id": "8a91df4d2bde4359",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "func": "var Valor_Temporizador_1 = msg.payload;\nvar Resultado_Division;\n\nResultado_Division = Math.trunc((Valor_Temporizador_1/1000));\nmsg.payload = Resultado_Division;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1400,
        "y": 1990,
        "wires": [
            [
                "bd0ec4baf7eb8815"
            ]
        ]
    },
    {
        "id": "63507111515e94ef",
        "type": "eth-ip in",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "TON_2.ACC",
        "program": "",
        "name": "Tiempo Actual TON-2",
        "x": 1210,
        "y": 2050,
        "wires": [
            [
                "9ea15e95bd5f4957"
            ]
        ]
    },
    {
        "id": "793d1bb05b8d4b11",
        "type": "eth-ip in",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "TON_1.ACC",
        "program": "",
        "name": "Tiempo Actual TON-1",
        "x": 1210,
        "y": 1990,
        "wires": [
            [
                "8a91df4d2bde4359"
            ]
        ]
    },
    {
        "id": "c493f6297cabf4bf",
        "type": "eth-ip out",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "endpoint": "d3a6ac1024bb182d",
        "variable": "RESET_DISPARO",
        "program": "",
        "name": "",
        "x": 2650,
        "y": 1130,
        "wires": []
    },
    {
        "id": "0c5a418898f63516",
        "type": "ui_switch",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "Inhibir logica de shutdown",
        "label": "<font size =4px><strong>Reset - Deshabilitar shutdown general<strong>",
        "tooltip": "",
        "group": "a947cc9457fcd9b0",
        "order": 1,
        "width": "24",
        "height": "1",
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 1550,
        "y": 1090,
        "wires": [
            [
                "694b9eb48edc1905",
                "e54602648111948c"
            ]
        ]
    },
    {
        "id": "e59133e07a54054e",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "CANCELAR",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2150,
        "y": 1110,
        "wires": [
            [
                "e399668f23dd11ac"
            ]
        ]
    },
    {
        "id": "e54602648111948c",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "if",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1730,
        "y": 1130,
        "wires": [
            [
                "aebe67545135d8e1"
            ],
            [
                "c18d47c50a3f46cf"
            ]
        ]
    },
    {
        "id": "aebe67545135d8e1",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "Mensaje SHUTDOWN ON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "¿Esta seguro de habilitar el sistema de apagado shutdown?",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "HABILITAR SHUTDOWN",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 1110,
        "wires": [
            [
                "e59133e07a54054e"
            ]
        ]
    },
    {
        "id": "c18d47c50a3f46cf",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "Mensaje SHUTDOWN OFF",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "¿Esta seguro de deshabilitar y restablecer el sistema de apagado shutdown?",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "DESHABILITAR DE SHUTDOWN",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 1150,
        "wires": [
            [
                "682e787b06d3aaa7"
            ]
        ]
    },
    {
        "id": "682e787b06d3aaa7",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "CANCELAR",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2150,
        "y": 1150,
        "wires": [
            [
                "d502aaa8c3de9297"
            ]
        ]
    },
    {
        "id": "e399668f23dd11ac",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2310,
        "y": 1110,
        "wires": [
            [
                "ada745a8b159b348",
                "69591c2347f38b1e",
                "c97826ab146fbc15",
                "56bae0fb22d96fb4"
            ],
            [
                "4cdd038148a62cfd"
            ]
        ]
    },
    {
        "id": "d502aaa8c3de9297",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2310,
        "y": 1150,
        "wires": [
            [
                "b75a21ec8088ac93",
                "73210af5f256011a",
                "74b97cf9360de41e"
            ],
            [
                "4cdd038148a62cfd"
            ]
        ]
    },
    {
        "id": "ada745a8b159b348",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "Cambio",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ACEPTAR",
                "fromt": "str",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2460,
        "y": 1110,
        "wires": [
            [
                "c493f6297cabf4bf"
            ]
        ]
    },
    {
        "id": "b75a21ec8088ac93",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "Cambio",
        "rules": [
            {
                "t": "change",
                "p": "payload",
                "pt": "msg",
                "from": "ACEPTAR",
                "fromt": "str",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2460,
        "y": 1150,
        "wires": [
            [
                "c493f6297cabf4bf"
            ]
        ]
    },
    {
        "id": "4de1359539a41ebc",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "",
        "links": [
            "1802b7d423c0faa4"
        ],
        "x": 2655,
        "y": 1070,
        "wires": []
    },
    {
        "id": "55320ba00209c396",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "",
        "links": [
            "1802b7d423c0faa4"
        ],
        "x": 2655,
        "y": 1190,
        "wires": []
    },
    {
        "id": "69591c2347f38b1e",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "Evento SHUTDOWN ON",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Apagado Shutdown activado",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "HABILITACION DE SHUTDOWN",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 1070,
        "wires": [
            [
                "4de1359539a41ebc"
            ]
        ]
    },
    {
        "id": "73210af5f256011a",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "Evento SHUTDOWN OFF",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Apagado Shutdown desactivado",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "HABILITACION DE SHUTDOWN",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 1190,
        "wires": [
            [
                "55320ba00209c396"
            ]
        ]
    },
    {
        "id": "c97826ab146fbc15",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "true",
        "rules": [
            {
                "t": "set",
                "p": "Switch.Habilitacion",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2450,
        "y": 1030,
        "wires": [
            []
        ]
    },
    {
        "id": "205d43a37d57d526",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Switch.Habilitacion",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1350,
        "y": 1000,
        "wires": [
            [
                "0c5a418898f63516"
            ]
        ]
    },
    {
        "id": "25c5df2a.68262",
        "type": "function",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "Data estado PIT",
        "func": "// Estado de instrumento PIT ubicado en Manifold\nvar Status_Instrumento_PIT = global.get(\"Status_Instrumento_PIT\",\"memoryOnly\")||false;\n\n// Traer variables de lectura de Manifold\nvar INST_MNF     = global.get(\"Cluster.INST_MNF\", \"memoryOnly\") || [];\n\n// Distribución de variables de Manifold\nvar Presion_PIT     = (INST_MNF.PIT_Presion).toFixed(1)\n\nif (Status_Instrumento_PIT == false){\n    msg.PIT             = Presion_PIT + \" psi\";\n\n} else if (Status_Instrumento_PIT == true){\n    msg.PIT             = \"- - - - - -\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 60,
        "wires": [
            [
                "1acd74b8f94c62c5"
            ]
        ]
    },
    {
        "id": "df7e51cb.20a61",
        "type": "ui_text_input",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "label": "HH",
        "tooltip": "",
        "group": "f70aaec9.581ea",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 380,
        "y": 350,
        "wires": [
            [
                "1388e106.75d21f"
            ]
        ]
    },
    {
        "id": "78ddc0d7.477c7",
        "type": "ui_text_input",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "label": "H",
        "tooltip": "",
        "group": "f70aaec9.581ea",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 380,
        "y": 390,
        "wires": [
            [
                "dc26c04555c849e9"
            ]
        ]
    },
    {
        "id": "a5be34b4.80c1d8",
        "type": "ui_text_input",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "label": "L",
        "tooltip": "",
        "group": "f70aaec9.581ea",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 380,
        "y": 430,
        "wires": [
            [
                "ec32e13194609ef9"
            ]
        ]
    },
    {
        "id": "289c0fec.d68e1",
        "type": "ui_text_input",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "label": "LL",
        "tooltip": "",
        "group": "f70aaec9.581ea",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 380,
        "y": 470,
        "wires": [
            [
                "41deb6b1c279c3b9"
            ]
        ]
    },
    {
        "id": "5893c294.3213dc",
        "type": "ui_switch",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "Habilitar HH",
        "label": "<font size =2px>Habilitar HH",
        "tooltip": "",
        "group": "f70aaec9.581ea",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 400,
        "y": 510,
        "wires": [
            [
                "24d9e3e264824528"
            ]
        ]
    },
    {
        "id": "468ce789.d74268",
        "type": "ui_switch",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "Habilitar H",
        "label": "<font size =2px>Habilitar H",
        "tooltip": "",
        "group": "f70aaec9.581ea",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 400,
        "y": 560,
        "wires": [
            [
                "2e4ab688aee27693"
            ]
        ]
    },
    {
        "id": "8b190b36.c8b5b8",
        "type": "ui_switch",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "Habilitar L",
        "label": "<font size =2px>Habilitar L",
        "tooltip": "",
        "group": "f70aaec9.581ea",
        "order": 7,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 390,
        "y": 610,
        "wires": [
            [
                "63eec3feebb8bcb6"
            ]
        ]
    },
    {
        "id": "3361a564.d48dfa",
        "type": "ui_switch",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "Habilitar LL",
        "label": "<font size =2px>Habilitar LL",
        "tooltip": "",
        "group": "f70aaec9.581ea",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 400,
        "y": 660,
        "wires": [
            [
                "d290c31a9897c8de"
            ]
        ]
    },
    {
        "id": "375f9fac.9004f",
        "type": "ui_button",
        "z": "f10e7ce.d57828",
        "g": "8cbf8180d2c70f1a",
        "name": "",
        "group": "f70aaec9.581ea",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "ACEPTAR",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 900,
        "y": 260,
        "wires": [
            [
                "af917ed23cdcfc3e"
            ]
        ]
    },
    {
        "id": "2d9998c0f577bc0c",
        "type": "catch",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "scope": [
            "25c5df2a.68262"
        ],
        "uncaught": false,
        "x": 700,
        "y": 710,
        "wires": [
            []
        ]
    },
    {
        "id": "1388e106.75d21f",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Manifold.HH",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 350,
        "wires": [
            []
        ]
    },
    {
        "id": "dc26c04555c849e9",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Manifold.H",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 390,
        "wires": [
            []
        ]
    },
    {
        "id": "ec32e13194609ef9",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Manifold.L",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 430,
        "wires": [
            []
        ]
    },
    {
        "id": "41deb6b1c279c3b9",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Manifold.LL",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 550,
        "y": 470,
        "wires": [
            []
        ]
    },
    {
        "id": "24d9e3e264824528",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Manifold.Enable.HH",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 510,
        "wires": [
            []
        ]
    },
    {
        "id": "2e4ab688aee27693",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Manifold.Enable.H",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "63eec3feebb8bcb6",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Manifold.Enable.L",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 610,
        "wires": [
            []
        ]
    },
    {
        "id": "d290c31a9897c8de",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Manifold.Enable.LL",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "af7b84cbace278b1",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Manifold.HH",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 350,
        "wires": [
            [
                "df7e51cb.20a61"
            ]
        ]
    },
    {
        "id": "3e7176c02d57fe4b",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Manifold.H",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 390,
        "wires": [
            [
                "78ddc0d7.477c7"
            ]
        ]
    },
    {
        "id": "96ada6f2934db373",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Manifold.L",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 430,
        "wires": [
            [
                "a5be34b4.80c1d8"
            ]
        ]
    },
    {
        "id": "698edc58289bb46b",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Manifold.LL",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 470,
        "wires": [
            [
                "289c0fec.d68e1"
            ]
        ]
    },
    {
        "id": "ff105a49c624aed7",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Manifold.Enable.LL",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 660,
        "wires": [
            [
                "3361a564.d48dfa"
            ]
        ]
    },
    {
        "id": "1b0193143db63bd0",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Manifold.Enable.L",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 610,
        "wires": [
            [
                "8b190b36.c8b5b8"
            ]
        ]
    },
    {
        "id": "4fffcddd14dcf8ba",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Manifold.Enable.H",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 560,
        "wires": [
            [
                "468ce789.d74268"
            ]
        ]
    },
    {
        "id": "69711da5e2395d69",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Manifold.Enable.HH",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 510,
        "wires": [
            [
                "5893c294.3213dc"
            ]
        ]
    },
    {
        "id": "06263b94b182144c",
        "type": "link in",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "links": [
            "186f2a0e0cf031bd",
            "8ee8e5d0d0a0babb"
        ],
        "x": 135,
        "y": 180,
        "wires": [
            [
                "25c5df2a.68262",
                "df95654a91fb1023",
                "9a0b9216db14530e",
                "c18438482aa78cfc"
            ]
        ]
    },
    {
        "id": "cc874412dbfe50f6",
        "type": "template",
        "z": "f10e7ce.d57828",
        "d": true,
        "g": "9d8df5b4f6b8aaf2",
        "name": "Imagen Manifold",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n            <img src=\"http://aic.local:1880/swcpro-images/Manifold.png\" style=\"width:80%;\">\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 290,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5ac373589c1d1849",
        "type": "link in",
        "z": "f10e7ce.d57828",
        "d": true,
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "links": [
            "186f2a0e0cf031bd"
        ],
        "x": 165,
        "y": 300,
        "wires": [
            [
                "cc874412dbfe50f6"
            ]
        ]
    },
    {
        "id": "7026ba7070318c79",
        "type": "ui_text",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "group": "ad633f3f.37b43",
        "order": 4,
        "width": 6,
        "height": 2,
        "name": "FIT",
        "label": "FIT",
        "format": "<font size =4px>{{msg.FIT_FLUJO_TOTAL}} ",
        "layout": "col-center",
        "x": 450,
        "y": 180,
        "wires": []
    },
    {
        "id": "1acd74b8f94c62c5",
        "type": "ui_text",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "group": "ad633f3f.37b43",
        "order": 3,
        "width": 6,
        "height": 2,
        "name": "PIT",
        "label": "PIT",
        "format": "<font size =4px>{{msg.PIT}}",
        "layout": "col-center",
        "x": 450,
        "y": 60,
        "wires": []
    },
    {
        "id": "6d4ca22faacfb6a7",
        "type": "ui_text",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "group": "ad633f3f.37b43",
        "order": 6,
        "width": 6,
        "height": 2,
        "name": "Densidad",
        "label": "Densidad",
        "format": "<font size =4px>{{msg.FIT_DENSIDAD}} ",
        "layout": "col-center",
        "x": 460,
        "y": 140,
        "wires": []
    },
    {
        "id": "d6e9e6cb27b824f9",
        "type": "ui_text",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "group": "ad633f3f.37b43",
        "order": 8,
        "width": 6,
        "height": 2,
        "name": "Temperatura",
        "label": "Temperatura",
        "format": "<font size =4px>{{msg.FIT_TEMPERATURA}} ",
        "layout": "col-center",
        "x": 470,
        "y": 220,
        "wires": []
    },
    {
        "id": "af917ed23cdcfc3e",
        "type": "function",
        "z": "f10e7ce.d57828",
        "g": "8cbf8180d2c70f1a",
        "name": "",
        "func": "var Habilitar_PIT_HH    = flow.get(\"Manifold.Enable.HH\");\nvar Habilitar_PIT_H     = flow.get(\"Manifold.Enable.H\");\nvar Habilitar_PIT_L     = flow.get(\"Manifold.Enable.L\");\nvar Habilitar_PIT_LL    = flow.get(\"Manifold.Enable.LL\");\nvar Valor_PIT_HH        = flow.get(\"Manifold.HH\")||0;\nvar Valor_PIT_H         = flow.get(\"Manifold.H\")||0;\nvar Valor_PIT_L         = flow.get(\"Manifold.L\")||0;\nvar Valor_PIT_LL        = flow.get(\"Manifold.LL\")||0;\n\nvar msg0 = { payload: Habilitar_PIT_HH }\nvar msg1 = { payload: Habilitar_PIT_H }\nvar msg2 = { payload: Habilitar_PIT_L }\nvar msg3 = { payload: Habilitar_PIT_LL}\n\nvar msg4 = { payload: Valor_PIT_HH }\nvar msg5 = { payload: Valor_PIT_H }\nvar msg6 = { payload: Valor_PIT_L }\nvar msg7 = { payload: Valor_PIT_LL }\n\nreturn [msg0, msg1, msg2, msg3, msg4, msg5, msg6, msg7]\n\nreturn [msg0, msg1, msg2, msg3];",
        "outputs": 8,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 260,
        "wires": [
            [
                "23ffb5eda298bcff"
            ],
            [
                "5191c9f8b0883c24"
            ],
            [
                "52cb60edec8c3b2b"
            ],
            [
                "b7635da86a4660b3"
            ],
            [
                "a16a48384e3f38dd"
            ],
            [
                "44e6ef93f1a27458"
            ],
            [
                "79d7a71622c61ad5"
            ],
            [
                "db8a2cdc8a7c8fb0"
            ]
        ]
    },
    {
        "id": "23ffb5eda298bcff",
        "type": "eth-ip out",
        "z": "f10e7ce.d57828",
        "g": "8cbf8180d2c70f1a",
        "endpoint": "d3a6ac1024bb182d",
        "variable": "HABILITAR_PIT_HH",
        "program": "",
        "name": "",
        "x": 1290,
        "y": 60,
        "wires": []
    },
    {
        "id": "5191c9f8b0883c24",
        "type": "eth-ip out",
        "z": "f10e7ce.d57828",
        "g": "8cbf8180d2c70f1a",
        "endpoint": "d3a6ac1024bb182d",
        "variable": "HABILITAR_PIT_H",
        "program": "",
        "name": "",
        "x": 1280,
        "y": 120,
        "wires": []
    },
    {
        "id": "52cb60edec8c3b2b",
        "type": "eth-ip out",
        "z": "f10e7ce.d57828",
        "g": "8cbf8180d2c70f1a",
        "endpoint": "d3a6ac1024bb182d",
        "variable": "HABILITAR_PIT_L",
        "program": "",
        "name": "",
        "x": 1280,
        "y": 180,
        "wires": []
    },
    {
        "id": "b7635da86a4660b3",
        "type": "eth-ip out",
        "z": "f10e7ce.d57828",
        "g": "8cbf8180d2c70f1a",
        "endpoint": "d3a6ac1024bb182d",
        "variable": "HABILITAR_PIT_LL",
        "program": "",
        "name": "",
        "x": 1290,
        "y": 240,
        "wires": []
    },
    {
        "id": "a16a48384e3f38dd",
        "type": "eth-ip out",
        "z": "f10e7ce.d57828",
        "g": "8cbf8180d2c70f1a",
        "endpoint": "d3a6ac1024bb182d",
        "variable": "VALOR_INGRESADO_PIT_HH_HMI",
        "program": "",
        "name": "",
        "x": 1340,
        "y": 300,
        "wires": []
    },
    {
        "id": "44e6ef93f1a27458",
        "type": "eth-ip out",
        "z": "f10e7ce.d57828",
        "g": "8cbf8180d2c70f1a",
        "endpoint": "d3a6ac1024bb182d",
        "variable": "VALOR_INGRESADO_PIT_H_HMI",
        "program": "",
        "name": "",
        "x": 1330,
        "y": 360,
        "wires": []
    },
    {
        "id": "79d7a71622c61ad5",
        "type": "eth-ip out",
        "z": "f10e7ce.d57828",
        "g": "8cbf8180d2c70f1a",
        "endpoint": "d3a6ac1024bb182d",
        "variable": "VALOR_INGRESADO_PIT_L_HMI",
        "program": "",
        "name": "",
        "x": 1330,
        "y": 420,
        "wires": []
    },
    {
        "id": "db8a2cdc8a7c8fb0",
        "type": "eth-ip out",
        "z": "f10e7ce.d57828",
        "g": "8cbf8180d2c70f1a",
        "endpoint": "d3a6ac1024bb182d",
        "variable": "VALOR_INGRESADO_PIT_LL_HMI",
        "program": "",
        "name": "",
        "x": 1340,
        "y": 480,
        "wires": []
    },
    {
        "id": "556acbac0f5c323f",
        "type": "ui_led",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "group": "475ffd12568828cc",
        "order": 1,
        "width": 6,
        "height": 1,
        "label": "Estado HH en manifold",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "red",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Estado HH presión en manifold",
        "x": 2090,
        "y": 60,
        "wires": []
    },
    {
        "id": "35272683fcac056a",
        "type": "ui_led",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "group": "475ffd12568828cc",
        "order": 2,
        "width": 6,
        "height": 1,
        "label": "Estado H en manifold",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "yellow",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Estado H presión en manifold",
        "x": 2090,
        "y": 180,
        "wires": []
    },
    {
        "id": "8d4f6a690f61b1e3",
        "type": "ui_led",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "group": "475ffd12568828cc",
        "order": 4,
        "width": 6,
        "height": 1,
        "label": "Estado L en manifold",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "yellow",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Estado L presión en manifold",
        "x": 2080,
        "y": 300,
        "wires": []
    },
    {
        "id": "8a207cd355e76c5b",
        "type": "ui_led",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "group": "475ffd12568828cc",
        "order": 3,
        "width": 6,
        "height": 1,
        "label": "Estado LL en manifold",
        "labelPlacement": "left",
        "labelAlignment": "left",
        "colorForValue": [
            {
                "color": "green",
                "value": "false",
                "valueType": "bool"
            },
            {
                "color": "red",
                "value": "true",
                "valueType": "bool"
            }
        ],
        "allowColorForValueInMessage": false,
        "name": "Estado LL presión en manifold",
        "x": 2090,
        "y": 420,
        "wires": []
    },
    {
        "id": "82573011c3d3e5de",
        "type": "eth-ip in",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "RUB_CL001_110_PZIT_101.TimerAlarmHH.DN",
        "program": "",
        "name": "Activación HH Manifold",
        "x": 1680,
        "y": 80,
        "wires": [
            [
                "6c9128a9d6fb6b57",
                "ae3e996599f98f19"
            ]
        ]
    },
    {
        "id": "33ae545866baf33d",
        "type": "eth-ip in",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "RUB_CL001_110_PZIT_101.TimerAlarmH.DN",
        "program": "",
        "name": "Activación H Manifold",
        "x": 1680,
        "y": 200,
        "wires": [
            [
                "e569be207bb4dee7",
                "1c9bf6e628cd597a"
            ]
        ]
    },
    {
        "id": "75ce3814dab18217",
        "type": "eth-ip in",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "RUB_CL001_110_PZIT_101.TimerAlarmL.DN",
        "program": "",
        "name": "Activación L Manifold",
        "x": 1680,
        "y": 320,
        "wires": [
            [
                "ef551a8f254d4066",
                "eb2f3582baede96f"
            ]
        ]
    },
    {
        "id": "a01dadefb933ed94",
        "type": "eth-ip in",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "RUB_CL001_110_PZIT_101.TimerAlarmLL.DN",
        "program": "",
        "name": "Activación LL Manifold",
        "x": 1680,
        "y": 440,
        "wires": [
            [
                "983c60ca964401a6",
                "82d6dd4a3b819180"
            ]
        ]
    },
    {
        "id": "6c9128a9d6fb6b57",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "LED HH ON",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Instrumentación manifold",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1870,
        "y": 60,
        "wires": [
            [
                "556acbac0f5c323f"
            ]
        ]
    },
    {
        "id": "5c9bc43b0909a1af",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Mensaje PIT HH",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Presión en manifold HH es mayor a la configurada, por favor verificar el estado de la presión",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 100,
        "wires": [
            [
                "ca9c4c69846fc73a"
            ]
        ]
    },
    {
        "id": "ca9c4c69846fc73a",
        "type": "ui_toast",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2210,
        "y": 100,
        "wires": [
            [
                "00d891ce9452fb0a"
            ]
        ]
    },
    {
        "id": "00d891ce9452fb0a",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2370,
        "y": 100,
        "wires": [
            [
                "4e43e015f9dbf9e5"
            ]
        ]
    },
    {
        "id": "4e43e015f9dbf9e5",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Alarma por HH PIT manifold",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Alarma por alta-alta presión en manifold, supera el límite establecido",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ALARMA PRESION HH EN MANIFOLD!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2580,
        "y": 100,
        "wires": [
            [
                "b13f7069320f03ce"
            ]
        ]
    },
    {
        "id": "b13f7069320f03ce",
        "type": "link out",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "links": [
            "33f2aa3c.6c08f6",
            "8be5483005b96d16"
        ],
        "x": 2735,
        "y": 100,
        "wires": []
    },
    {
        "id": "e569be207bb4dee7",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "LED H ON",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Instrumentación manifold",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1870,
        "y": 180,
        "wires": [
            [
                "35272683fcac056a"
            ]
        ]
    },
    {
        "id": "ef551a8f254d4066",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "LED L ON",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Instrumentación manifold",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1860,
        "y": 300,
        "wires": [
            [
                "8d4f6a690f61b1e3"
            ]
        ]
    },
    {
        "id": "983c60ca964401a6",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "LED LL ON",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Instrumentación manifold",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1870,
        "y": 420,
        "wires": [
            [
                "8a207cd355e76c5b"
            ]
        ]
    },
    {
        "id": "544eae19e71ad351",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Mensaje PIT H",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Presión en manifold H es mayor a la configurada, por favor verificar el estado de la presión",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 220,
        "wires": [
            [
                "3bbebffd836baac9"
            ]
        ]
    },
    {
        "id": "3bbebffd836baac9",
        "type": "ui_toast",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2210,
        "y": 220,
        "wires": [
            [
                "4b7a3b4c589049e9"
            ]
        ]
    },
    {
        "id": "4b7a3b4c589049e9",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2370,
        "y": 220,
        "wires": [
            [
                "0afccc90735f2ad9"
            ]
        ]
    },
    {
        "id": "0afccc90735f2ad9",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Alarma por H PIT manifold",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Alarma por alta presión en manifold, supera el límite establecido",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ALARMA PRESION H EN MANIFOLD!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2580,
        "y": 220,
        "wires": [
            [
                "d27d1f89019d8a16"
            ]
        ]
    },
    {
        "id": "d27d1f89019d8a16",
        "type": "link out",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "links": [
            "33f2aa3c.6c08f6",
            "a63a7d4884a36264"
        ],
        "x": 2735,
        "y": 220,
        "wires": []
    },
    {
        "id": "218b6e39d134b2f9",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Mensaje PIT L",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Presión en manifold L es menor a la configurada, por favor verificar el estado de la presión",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 340,
        "wires": [
            [
                "de4f2677bfa1f22c"
            ]
        ]
    },
    {
        "id": "de4f2677bfa1f22c",
        "type": "ui_toast",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2210,
        "y": 340,
        "wires": [
            [
                "5759bf64452ea739"
            ]
        ]
    },
    {
        "id": "5759bf64452ea739",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2370,
        "y": 340,
        "wires": [
            [
                "05b39eeb2ddd4e7c"
            ]
        ]
    },
    {
        "id": "05b39eeb2ddd4e7c",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Alarma por L PIT manifold",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Alarma por baja presión en manifold, supera el límite establecido",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ALARMA PRESION L EN MANIFOLD!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2570,
        "y": 340,
        "wires": [
            [
                "2e04301f0ad2bc1c"
            ]
        ]
    },
    {
        "id": "2e04301f0ad2bc1c",
        "type": "link out",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "links": [
            "33f2aa3c.6c08f6",
            "a63a7d4884a36264"
        ],
        "x": 2735,
        "y": 340,
        "wires": []
    },
    {
        "id": "91daa3447803a463",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Mensaje PIT LL",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Presión en manifold LL es menor a la configurada, por favor verificar el estado de la presión",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 460,
        "wires": [
            [
                "adf7324d85f33536"
            ]
        ]
    },
    {
        "id": "adf7324d85f33536",
        "type": "ui_toast",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2210,
        "y": 460,
        "wires": [
            [
                "6084c8e393eeb2aa"
            ]
        ]
    },
    {
        "id": "6084c8e393eeb2aa",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2370,
        "y": 460,
        "wires": [
            [
                "07704cb1b87a2267"
            ]
        ]
    },
    {
        "id": "07704cb1b87a2267",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Alarma por LL PIT manifold",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Alarma por baja-baja presión en manifold, supera el límite establecido",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ALARMA PRESION LL EN MANIFOLD!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2580,
        "y": 460,
        "wires": [
            [
                "34e61f0acdfbe811"
            ]
        ]
    },
    {
        "id": "34e61f0acdfbe811",
        "type": "link out",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "links": [
            "33f2aa3c.6c08f6",
            "8be5483005b96d16"
        ],
        "x": 2735,
        "y": 460,
        "wires": []
    },
    {
        "id": "ae3e996599f98f19",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Evento HH",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1870,
        "y": 120,
        "wires": [
            [
                "5c9bc43b0909a1af"
            ],
            [
                "b1b9e0dbdb6ac8a1"
            ]
        ]
    },
    {
        "id": "1c9bf6e628cd597a",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Evento H",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1860,
        "y": 240,
        "wires": [
            [
                "544eae19e71ad351"
            ],
            [
                "1b65db34f94c180e"
            ]
        ]
    },
    {
        "id": "eb2f3582baede96f",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Evento L",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1860,
        "y": 360,
        "wires": [
            [
                "218b6e39d134b2f9"
            ],
            [
                "91fd618d59b7b4d6"
            ]
        ]
    },
    {
        "id": "82d6dd4a3b819180",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Evento LL",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1860,
        "y": 480,
        "wires": [
            [
                "91daa3447803a463"
            ],
            [
                "9d12763de310f322"
            ]
        ]
    },
    {
        "id": "b1b9e0dbdb6ac8a1",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Mensaje PIT HH",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Presión en manifold HH normalizada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 140,
        "wires": [
            [
                "d9fcfbb024051d73"
            ]
        ]
    },
    {
        "id": "d9fcfbb024051d73",
        "type": "ui_toast",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2210,
        "y": 140,
        "wires": [
            [
                "0fafeff37cb7fc21"
            ]
        ]
    },
    {
        "id": "0fafeff37cb7fc21",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2370,
        "y": 140,
        "wires": [
            [
                "993944f17e91f3a5"
            ]
        ]
    },
    {
        "id": "993944f17e91f3a5",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Evento por HH PIT manifold",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Alta-alta presión en manifold normalizada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": " PRESION HH EN MANIFOLD",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2580,
        "y": 140,
        "wires": [
            [
                "8c4ae2530865a4bc"
            ]
        ]
    },
    {
        "id": "8c4ae2530865a4bc",
        "type": "link out",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "links": [
            "59e817c2.295b38",
            "6c2bad5b885f74fd"
        ],
        "x": 2735,
        "y": 140,
        "wires": []
    },
    {
        "id": "1b65db34f94c180e",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Mensaje PIT H",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Presión en manifold H normalizada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 260,
        "wires": [
            [
                "1a12ecb2c3e94be0"
            ]
        ]
    },
    {
        "id": "1a12ecb2c3e94be0",
        "type": "ui_toast",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2210,
        "y": 260,
        "wires": [
            [
                "37c70e1233f54c9b"
            ]
        ]
    },
    {
        "id": "37c70e1233f54c9b",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2370,
        "y": 260,
        "wires": [
            [
                "f92397db74c2d99a"
            ]
        ]
    },
    {
        "id": "f92397db74c2d99a",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Evento por H PIT manifold",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Alta presión en manifold normalizada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "PRESION H EN MANIFOLD",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2580,
        "y": 260,
        "wires": [
            [
                "c98c6a0b37ce9501"
            ]
        ]
    },
    {
        "id": "91fd618d59b7b4d6",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Mensaje PIT L",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Presión en manifold L normalizada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 380,
        "wires": [
            [
                "3fefc6b64d914ae0"
            ]
        ]
    },
    {
        "id": "3fefc6b64d914ae0",
        "type": "ui_toast",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2210,
        "y": 380,
        "wires": [
            [
                "e636306ddfbe4e0f"
            ]
        ]
    },
    {
        "id": "e636306ddfbe4e0f",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2370,
        "y": 380,
        "wires": [
            [
                "7ebc8075c0935d45"
            ]
        ]
    },
    {
        "id": "7ebc8075c0935d45",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Evento por L PIT manifold",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Baja presión en manifold normalizada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "PRESION L EN MANIFOLD",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2570,
        "y": 380,
        "wires": [
            [
                "8cf04e500b246f90"
            ]
        ]
    },
    {
        "id": "9d12763de310f322",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Mensaje PIT LL",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Presión en manifold LL normalizada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 500,
        "wires": [
            [
                "f8da67ec1bf38fd6"
            ]
        ]
    },
    {
        "id": "f8da67ec1bf38fd6",
        "type": "ui_toast",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2210,
        "y": 500,
        "wires": [
            [
                "2859875b0ca465e8"
            ]
        ]
    },
    {
        "id": "2859875b0ca465e8",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2370,
        "y": 500,
        "wires": [
            [
                "8ad21047cdde05c5"
            ]
        ]
    },
    {
        "id": "8ad21047cdde05c5",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Evento por LL PIT manifold",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Baja-Baja presión en manifold normalizada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "PRESION LL EN MANIFOLD",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2580,
        "y": 500,
        "wires": [
            [
                "35cde5193b778c94"
            ]
        ]
    },
    {
        "id": "c98c6a0b37ce9501",
        "type": "link out",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "links": [
            "59e817c2.295b38",
            "6c2bad5b885f74fd"
        ],
        "x": 2735,
        "y": 260,
        "wires": []
    },
    {
        "id": "35cde5193b778c94",
        "type": "link out",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "links": [
            "59e817c2.295b38",
            "6c2bad5b885f74fd"
        ],
        "x": 2735,
        "y": 500,
        "wires": []
    },
    {
        "id": "8cf04e500b246f90",
        "type": "link out",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "links": [
            "59e817c2.295b38",
            "6c2bad5b885f74fd"
        ],
        "x": 2735,
        "y": 380,
        "wires": []
    },
    {
        "id": "22cd2fada9680a04",
        "type": "function",
        "z": "f10e7ce.d57828",
        "g": "26fe5463b2ea6acd",
        "name": "getting data",
        "func": "// Variables de control de animación de tendencias\nvar time = msg.payload;\nvar realtime = flow.get(\"trends.realtime\", \"memoryOnly\") || null;\nvar lasthour = flow.get(\"trends.lasthour\") || null;\nvar lastday = flow.get(\"trends.lastday\") || null;\nvar counth = context.get(\"counth\",\"memoryOnly\")||0;\nvar countd = context.get(\"countd\", \"memoryOnly\") || 0;\nvar Cluster = global.get(\"Cluster\", \"memoryOnly\") || [];\nvar CCP = global.get(\"CCP\", \"memoryOnly\") || [];\n\n// Variables de CILA2S\n\nmsg.UPS_Bateria_Tiempo_Reman = (CCP.UPS_Bateria_Tiempo_Reman).toFixed(2);\nmsg.UPS_Bateria_Porc_Carga = (CCP.UPS_Bateria_Porc_Carga).toFixed(2);\nmsg.UPS_Bateria_Voltaje = (CCP.UPS_Bateria_Voltaje).toFixed(1);\nmsg.Voltaje_L_L_Pro = (Cluster.PQM.Voltaje_L_L_Pro).toFixed(1);\nmsg.Voltaje_L1_L2 = (Cluster.PQM.Voltaje_L1_L2).toFixed(1);\nmsg.Voltaje_L2_L3 = (Cluster.PQM.Voltaje_L2_L3).toFixed(1);\nmsg.Voltaje_L1_L3 = (Cluster.PQM.Voltaje_L1_L3).toFixed(1);\nmsg.Voltaje_L_N_Pro = (Cluster.PQM.Voltaje_L_N_Pro).toFixed(1);\nmsg.Voltaje_L2_N = (Cluster.PQM.Voltaje_L2_N).toFixed(1);\nmsg.FIT_Flujo = (Cluster.INST_MNF.FIT_Flujo).toFixed(1);\nmsg.FIT_Flujo_Total = (Cluster.INST_MNF.FIT_Flujo_Total).toFixed(1);\nmsg.FIT_Densidad = (Cluster.INST_MNF.FIT_Densidad).toFixed(1);\nmsg.FIT_Tempetatura = (Cluster.INST_MNF.FIT_Tempetatura).toFixed(1);\nmsg.PIT_Presion = (Cluster.INST_MNF.PIT_Presion).toFixed(1);\nmsg.Amp_Pro = (Cluster.PQM.Amp_Pro).toFixed(1);\nmsg.KWATT_Act_Pro = (Cluster.PQM.KWATT_Act_Pro).toFixed(1);\nmsg.KVA_Act_Pro = (Cluster.PQM.KVA_Act_Pro).toFixed(1);\nmsg.KVAr_Act_Pro = (Cluster.PQM.KVAr_Act_Pro).toFixed(1);\nmsg.FP_Pro = (Cluster.PQM.FP_Pro).toFixed(1);\nmsg.THD_I_Pro = (Cluster.PQM.THD_I_Pro).toFixed(1);\nmsg.THD_V_Pro = (Cluster.PQM.THD_V_Pro).toFixed(1);\n\nif (realtime == null) {\n    realtime = {\n        'UPS_Bateria_Tiempo_Reman': [{ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }],\n        'UPS_Bateria_Porc_Carga': [{ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }],\n        'UPS_Bateria_Voltaje': [{ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }],\n        'Voltaje_L_L_Pro': [{ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0}],\n        'Voltaje_L1_L2': [{ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }],\n        'Voltaje_L2_L3': [{ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }],\n        'Voltaje_L1_L3': [{ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }],\n        'Voltaje_L_N_Pro': [{ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }],\n        'Voltaje_L2_N': [{ \"x\": time, \"y\": msg.Voltaje_L2_N }],\n        'FIT_Flujo': [{ \"x\": time, \"y\": msg.FIT_Flujo }],\n        'FIT_Flujo_Total': [{ \"x\": time, \"y\": msg.FIT_Flujo_Total }],\n        'FIT_Densidad': [{ \"x\": time, \"y\": msg.FIT_Densidad }],\n        'FIT_Tempetatura': [{ \"x\": time, \"y\": msg.FIT_Tempetatura }],\n        'PIT_Presion': [{ \"x\": time, \"y\": msg.PIT_Presion || 0 }],\n        'Amp_Pro': [{ \"x\": time, \"y\": msg.Amp_Pro || 0 }],\n        'KWATT_Act_Pro': [{ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0}],\n        'KVA_Act_Pro': [{ \"x\": time, \"y\": msg.KVA_Act_Pro|| 0 }],\n        'KVAr_Act_Pro': [{ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0}],\n        'FP_Pro': [{ \"x\": time, \"y\": msg.FP_Pro || 0}],\n        'THD_I_Pro': [{ \"x\": time, \"y\": msg.THD_I_Pro || 0}],\n        'THD_V_Pro': [{ \"x\": time, \"y\": msg.THD_V_Pro || 0}],\n    };\n}\nelse {\n    if (realtime.UPS_Bateria_Tiempo_Reman.length > 30) {\n        realtime.UPS_Bateria_Tiempo_Reman.shift();\n        realtime.UPS_Bateria_Porc_Carga.shift();\n        realtime.UPS_Bateria_Voltaje.shift();\n        realtime.Voltaje_L_L_Pro.shift();\n        realtime.Voltaje_L1_L2.shift();\n        realtime.Voltaje_L2_L3.shift();\n        realtime.Voltaje_L1_L3.shift();\n        realtime.Voltaje_L_N_Pro.shift();\n        realtime.Voltaje_L2_N.shift();\n        realtime.FIT_Flujo.shift();\n        realtime.FIT_Flujo_Total.shift();\n        realtime.FIT_Densidad.shift();\n        realtime.FIT_Tempetatura.shift();\n        realtime.PIT_Presion.shift();\n        realtime.Amp_Pro.shift();\n        realtime.KWATT_Act_Pro.shift();\n        realtime.KVA_Act_Pro.shift();\n        realtime.KVAr_Act_Pro.shift();\n        realtime.FP_Pro.shift();\n        realtime.THD_I_Pro.shift();\n        realtime.THD_V_Pro.shift();\n    }\n    \n    realtime.UPS_Bateria_Tiempo_Reman.push({ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }),\n    realtime.UPS_Bateria_Porc_Carga.push({ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }),\n    realtime.UPS_Bateria_Voltaje.push({ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }),\n    realtime.Voltaje_L_L_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0}),\n    realtime.Voltaje_L1_L2.push({ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }),\n    realtime.Voltaje_L2_L3.push({ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }),\n    realtime.Voltaje_L1_L3.push({ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }),\n    realtime.Voltaje_L_N_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }),\n    realtime.Voltaje_L2_N.push({ \"x\": time, \"y\": msg.Voltaje_L2_N || 0 }),\n    realtime.FIT_Flujo.push({ \"x\": time, \"y\": msg.FIT_Flujo || 0 }),\n    realtime.FIT_Flujo_Total.push({ \"x\": time, \"y\": msg.FIT_Flujo_Total || 0 }),\n    realtime.FIT_Densidad.push({ \"x\": time, \"y\": msg.FIT_Densidad || 0 }),\n    realtime.FIT_Tempetatura.push({ \"x\": time, \"y\": msg.FIT_Tempetatura || 0 }),\n    realtime.PIT_Presion.push({ \"x\": time, \"y\": msg.PIT_Presion || 0 }),\n    realtime.Amp_Pro.push({ \"x\": time, \"y\": msg.Amp_Pro || 0 }),\n    realtime.KWATT_Act_Pro.push({ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }),\n    realtime.KVA_Act_Pro.push({ \"x\": time, \"y\": msg.KVA_Act_Pro || 0 }),\n    realtime.KVAr_Act_Pro.push({ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0 }),\n    realtime.FP_Pro.push({ \"x\": time, \"y\": msg.FP_Pro || 0 }),\n    realtime.THD_I_Pro.push({ \"x\": time, \"y\": msg.THD_I_Pro || 0 }),\n    realtime.THD_V_Pro.push({ \"x\": time, \"y\": msg.THD_V_Pro || 0 })\n\n}\n\nif (lasthour == null) {\n    lasthour = {\n        'UPS_Bateria_Tiempo_Reman': [{ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }],\n        'UPS_Bateria_Porc_Carga': [{ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }],\n        'UPS_Bateria_Voltaje': [{ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }],\n        'Voltaje_L_L_Pro': [{ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0 }],\n        'Voltaje_L1_L2': [{ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }],\n        'Voltaje_L2_L3': [{ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }],\n        'Voltaje_L1_L3': [{ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }],\n        'Voltaje_L_N_Pro': [{ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }],\n        'Voltaje_L2_N': [{ \"x\": time, \"y\": msg.Voltaje_L2_N }],\n        'FIT_Flujo': [{ \"x\": time, \"y\": msg.FIT_Flujo }],\n        'FIT_Flujo_Total': [{ \"x\": time, \"y\": msg.FIT_Flujo_Total }],\n        'FIT_Densidad': [{ \"x\": time, \"y\": msg.FIT_Densidad }],\n        'FIT_Tempetatura': [{ \"x\": time, \"y\": msg.FIT_Tempetatura }],\n        'PIT_Presion': [{ \"x\": time, \"y\": msg.PIT_Presion || 0 }],\n        'Amp_Pro': [{ \"x\": time, \"y\": msg.Amp_Pro || 0 }],\n        'KWATT_Act_Pro': [{ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }],\n        'KVA_Act_Pro': [{ \"x\": time, \"y\": msg.KVA_Act_Pro || 0 }],\n        'KVAr_Act_Pro': [{ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0 }],\n        'FP_Pro': [{ \"x\": time, \"y\": msg.FP_Pro || 0 }],\n        'THD_I_Pro': [{ \"x\": time, \"y\": msg.THD_I_Pro || 0 }],\n        'THD_V_Pro': [{ \"x\": time, \"y\": msg.THD_V_Pro || 0 }],\n    };\n}\nelse {\n    if (counth == 15){\n        if (lasthour.UPS_Bateria_Tiempo_Reman.length > 240) {\n            lasthour.UPS_Bateria_Tiempo_Reman.shift();\n            lasthour.UPS_Bateria_Porc_Carga.shift();\n            lasthour.UPS_Bateria_Voltaje.shift();\n            lasthour.Voltaje_L_L_Pro.shift();\n            lasthour.Voltaje_L1_L2.shift();\n            lasthour.Voltaje_L2_L3.shift();\n            lasthour.Voltaje_L1_L3.shift();\n            lasthour.Voltaje_L_N_Pro.shift();\n            lasthour.Voltaje_L2_N.shift();\n            lasthour.FIT_Flujo.shift();\n            lasthour.FIT_Flujo_Total.shift();\n            lasthour.FIT_Densidad.shift();\n            lasthour.FIT_Tempetatura.shift();\n            lasthour.PIT_Presion.shift();\n            lasthour.Amp_Pro.shift();\n            lasthour.KWATT_Act_Pro.shift();\n            lasthour.KVA_Act_Pro.shift();\n            lasthour.KVAr_Act_Pro.shift();\n            lasthour.FP_Pro.shift();\n            lasthour.THD_I_Pro.shift();\n            lasthour.THD_V_Pro.shift();\n        }\n\n        lasthour.UPS_Bateria_Tiempo_Reman.push({ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }),\n        lasthour.UPS_Bateria_Porc_Carga.push({ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }),\n        lasthour.UPS_Bateria_Voltaje.push({ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }),\n        lasthour.Voltaje_L_L_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0 }),\n        lasthour.Voltaje_L1_L2.push({ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }),\n        lasthour.Voltaje_L2_L3.push({ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }),\n        lasthour.Voltaje_L1_L3.push({ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }),\n        lasthour.Voltaje_L_N_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }),\n        lasthour.Voltaje_L2_N.push({ \"x\": time, \"y\": msg.Voltaje_L2_N || 0 }),\n        lasthour.FIT_Flujo.push({ \"x\": time, \"y\": msg.FIT_Flujo || 0 }),\n        lasthour.FIT_Flujo_Total.push({ \"x\": time, \"y\": msg.FIT_Flujo_Total || 0 }),\n        lasthour.FIT_Densidad.push({ \"x\": time, \"y\": msg.FIT_Densidad || 0 }),\n        lasthour.FIT_Tempetatura.push({ \"x\": time, \"y\": msg.FIT_Tempetatura || 0 }),\n        lasthour.PIT_Presion.push({ \"x\": time, \"y\": msg.PIT_Presion || 0 }),\n        lasthour.Amp_Pro.push({ \"x\": time, \"y\": msg.Amp_Pro || 0 }),\n        lasthour.KWATT_Act_Pro.push({ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }),\n        lasthour.KVA_Act_Pro.push({ \"x\": time, \"y\": msg.KVA_Act_Pro || 0 }),\n        lasthour.KVAr_Act_Pro.push({ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0 }),\n        lasthour.FP_Pro.push({ \"x\": time, \"y\": msg.FP_Pro || 0 }),\n        lasthour.THD_I_Pro.push({ \"x\": time, \"y\": msg.THD_I_Pro || 0 }),\n        lasthour.THD_V_Pro.push({ \"x\": time, \"y\": msg.THD_V_Pro || 0 })\n\n        countd > 24 ? countd = 1 : countd = countd + 1;\n        context.set(\"countd\", countd, \"memoryOnly\");\n    }\n\n}\n\nif (lastday == null) {\n    lastday = {\n        'UPS_Bateria_Tiempo_Reman': [{ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }],\n        'UPS_Bateria_Porc_Carga': [{ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }],\n        'UPS_Bateria_Voltaje': [{ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }],\n        'Voltaje_L_L_Pro': [{ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0 }],\n        'Voltaje_L1_L2': [{ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }],\n        'Voltaje_L2_L3': [{ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }],\n        'Voltaje_L1_L3': [{ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }],\n        'Voltaje_L_N_Pro': [{ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }],\n        'Voltaje_L2_N': [{ \"x\": time, \"y\": msg.Voltaje_L2_N }],\n        'FIT_Flujo': [{ \"x\": time, \"y\": msg.FIT_Flujo }],\n        'FIT_Flujo_Total': [{ \"x\": time, \"y\": msg.FIT_Flujo_Total }],\n        'FIT_Densidad': [{ \"x\": time, \"y\": msg.FIT_Densidad }],\n        'FIT_Tempetatura': [{ \"x\": time, \"y\": msg.FIT_Tempetatura }],\n        'PIT_Presion': [{ \"x\": time, \"y\": msg.PIT_Presion || 0 }],\n        'Amp_Pro': [{ \"x\": time, \"y\": msg.Amp_Pro || 0 }],\n        'KWATT_Act_Pro': [{ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }],\n        'KVA_Act_Pro': [{ \"x\": time, \"y\": msg.KVA_Act_Pro || 0 }],\n        'KVAr_Act_Pro': [{ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0 }],\n        'FP_Pro': [{ \"x\": time, \"y\": msg.FP_Pro || 0 }],\n        'THD_I_Pro': [{ \"x\": time, \"y\": msg.THD_I_Pro || 0 }],\n        'THD_V_Pro': [{ \"x\": time, \"y\": msg.THD_V_Pro || 0 }],\n    };\n}\nelse {\n    if (countd==24){\n        context.set(\"countd\", 0, \"memoryOnly\");\n        if (lastday.UPS_Bateria_Tiempo_Reman.length > 240) {\n            lastday.UPS_Bateria_Tiempo_Reman.push({ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }),\n            lastday.UPS_Bateria_Porc_Carga.push({ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }),\n            lastday.UPS_Bateria_Voltaje.push({ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }),\n            lastday.Voltaje_L_L_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0 }),\n            lastday.Voltaje_L1_L2.push({ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }),\n            lastday.Voltaje_L2_L3.push({ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }),\n            lastday.Voltaje_L1_L3.push({ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }),\n            lastday.Voltaje_L_N_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }),\n            lastday.Voltaje_L2_N.push({ \"x\": time, \"y\": msg.Voltaje_L2_N || 0 }),\n            lastday.FIT_Flujo.push({ \"x\": time, \"y\": msg.FIT_Flujo || 0 }),\n            lastday.FIT_Flujo_Total.push({ \"x\": time, \"y\": msg.FIT_Flujo_Total || 0 }),\n            lastday.FIT_Densidad.push({ \"x\": time, \"y\": msg.FIT_Densidad || 0 }),\n            lastday.FIT_Tempetatura.push({ \"x\": time, \"y\": msg.FIT_Tempetatura || 0 }),\n            lastday.PIT_Presion.push({ \"x\": time, \"y\": msg.PIT_Presion || 0 }),\n            lastday.Amp_Pro.push({ \"x\": time, \"y\": msg.Amp_Pro || 0 }),\n            lastday.KWATT_Act_Pro.push({ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }),\n            lastday.KVA_Act_Pro.push({ \"x\": time, \"y\": msg.KVA_Act_Pro || 0 }),\n            lastday.KVAr_Act_Pro.push({ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0 }),\n            lastday.FP_Pro.push({ \"x\": time, \"y\": msg.FP_Pro || 0 }),\n            lastday.THD_I_Pro.push({ \"x\": time, \"y\": msg.THD_I_Pro || 0 }),\n            lastday.THD_V_Pro.push({ \"x\": time, \"y\": msg.THD_V_Pro || 0 })\n        }\n\n        lastday.UPS_Bateria_Tiempo_Reman.push({ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }),\n        lastday.UPS_Bateria_Porc_Carga.push({ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }),\n        lastday.UPS_Bateria_Voltaje.push({ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }),\n        lastday.Voltaje_L_L_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0 }),\n        lastday.Voltaje_L1_L2.push({ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }),\n        lastday.Voltaje_L2_L3.push({ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }),\n        lastday.Voltaje_L1_L3.push({ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }),\n        lastday.Voltaje_L_N_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }),\n        lastday.Voltaje_L2_N.push({ \"x\": time, \"y\": msg.Voltaje_L2_N || 0 }),\n        lastday.FIT_Flujo.push({ \"x\": time, \"y\": msg.FIT_Flujo || 0 }),\n        lastday.FIT_Flujo_Total.push({ \"x\": time, \"y\": msg.FIT_Flujo_Total || 0 }),\n        lastday.FIT_Densidad.push({ \"x\": time, \"y\": msg.FIT_Densidad || 0 }),\n        lastday.FIT_Tempetatura.push({ \"x\": time, \"y\": msg.FIT_Tempetatura || 0 }),\n        lastday.PIT_Presion.push({ \"x\": time, \"y\": msg.PIT_Presion || 0 }),\n        lastday.Amp_Pro.push({ \"x\": time, \"y\": msg.Amp_Pro || 0 }),\n        lastday.KWATT_Act_Pro.push({ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }),\n        lastday.KVA_Act_Pro.push({ \"x\": time, \"y\": msg.KVA_Act_Pro || 0 }),\n        lastday.KVAr_Act_Pro.push({ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0 }),\n        lastday.FP_Pro.push({ \"x\": time, \"y\": msg.FP_Pro || 0 }),\n        lastday.THD_I_Pro.push({ \"x\": time, \"y\": msg.THD_I_Pro || 0 }),\n        lastday.THD_V_Pro.push({ \"x\": time, \"y\": msg.THD_V_Pro || 0 })\n    }\n\n}\n\ncounth > 14 ? counth = 1 : counth = counth + 1;\ncontext.set(\"counth\", counth, \"memoryOnly\");\n\nflow.set(\"trends.realtime\", realtime, \"memoryOnly\");\nflow.set(\"trends.lasthour\", lasthour);\nflow.set(\"trends.lastday\", lastday);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 880,
        "wires": [
            [
                "bb9d57fad1dcf950"
            ]
        ]
    },
    {
        "id": "b62a060ca27cb69f",
        "type": "function",
        "z": "f10e7ce.d57828",
        "g": "26fe5463b2ea6acd",
        "name": "request",
        "func": "var i,request={};\nfor (i = 0; i < msg.payload.length ;i++){\n    // if (msg.payload[i] == \"UPS_Bateria_Tiempo_Reman\") request.UPS_Bateria_Tiempo_Reman = true;\n    // if (msg.payload[i] == \"UPS_Bateria_Porc_Carga\") request.UPS_Bateria_Porc_Carga = true;\n    // if (msg.payload[i] == \"UPS_Bateria_Voltaje\") request.UPS_Bateria_Voltaje = true;\n    // if (msg.payload[i] == \"Voltaje_L_L_Pro\") request.Voltaje_L_L_Pro = true;\n    // if (msg.payload[i] == \"Voltaje_L1_L2\") request.Voltaje_L1_L2 = true;\n    // if (msg.payload[i] == \"Voltaje_L2_L3\") request.Voltaje_L2_L3 = true;\n    // if (msg.payload[i] == \"Voltaje_L1_L3\") request.Voltaje_L1_L3 = true;\n    // if (msg.payload[i] == \"Voltaje_L_N_Pro\") request.Voltaje_L_N_Pro = true;\n    // if (msg.payload[i] == \"Voltaje_L2_N\") request.Voltaje_L2_N = true;\n    if (msg.payload[i] == \"FIT_Flujo\") request.FIT_Flujo = true;\n    if (msg.payload[i] == \"FIT_Flujo_Total\") request.FIT_Flujo_Total = true;\n    if (msg.payload[i] == \"FIT_Densidad\") request.FIT_Densidad = true;\n    if (msg.payload[i] == \"FIT_Tempetatura\") request.FIT_Tempetatura = true;\n    if (msg.payload[i] == \"PIT_Presion\") request.PIT_Presion = true;\n    // if (msg.payload[i] == \"Amp_Pro\") request.Amp_Pro = true;\n    // if (msg.payload[i] == \"KWATT_Act_Pro\") request.KWATT_Act_Pro = true;\n    // if (msg.payload[i] == \"KVA_Act_Pro\") request.KVA_Act_Pro = true;\n    // if (msg.payload[i] == \"KVAr_Act_Pro\") request.KVAr_Act_Pro = true;\n    // if (msg.payload[i] == \"FP_Pro\") request.FP_Pro = true;\n    // if (msg.payload[i] == \"THD_I_Pro\") request.THD_I_Pro = true;\n    // if (msg.payload[i] == \"THD_V_Pro\") request.THD_V_Pro = true;\n}\n\nmsg.payload = request;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 820,
        "wires": [
            [
                "f42b56eb37f8265c"
            ]
        ]
    },
    {
        "id": "f42b56eb37f8265c",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "26fe5463b2ea6acd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::trends.request",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "7f183be2589f9e2a",
        "type": "ui_dropdown",
        "z": "f10e7ce.d57828",
        "g": "26fe5463b2ea6acd",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Seleccionar una o mas variables",
        "group": "f7c7b392.40ecb",
        "order": 1,
        "width": 12,
        "height": 1,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Flujo Total - FIT",
                "value": "FIT_Flujo_Total",
                "type": "str"
            },
            {
                "label": "Densidad de Fluido - FIT",
                "value": "FIT_Densidad",
                "type": "str"
            },
            {
                "label": "Temperatura de Fluido - FIT",
                "value": "FIT_Tempetatura",
                "type": "str"
            },
            {
                "label": "Presion - PIT",
                "value": "PIT_Presion",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 820,
        "wires": [
            [
                "b62a060ca27cb69f"
            ]
        ]
    },
    {
        "id": "33646855a267b1b4",
        "type": "ui_dropdown",
        "z": "f10e7ce.d57828",
        "g": "26fe5463b2ea6acd",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Seleccionar tiempo",
        "group": "f7c7b392.40ecb",
        "order": 2,
        "width": 12,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Tiempo real",
                "value": "realtime",
                "type": "str"
            },
            {
                "label": "Última hora",
                "value": "lasthour",
                "type": "str"
            },
            {
                "label": "24 horas anteriores",
                "value": "lastday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 960,
        "y": 820,
        "wires": [
            [
                "f58329a789069561"
            ]
        ]
    },
    {
        "id": "f58329a789069561",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "26fe5463b2ea6acd",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::trends.selec_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1160,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "d3e0d81a17262194",
        "type": "ui_chart",
        "z": "f10e7ce.d57828",
        "g": "26fe5463b2ea6acd",
        "name": "",
        "group": "f7c7b392.40ecb",
        "order": 3,
        "width": 24,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#073a5f",
            "#791b93",
            "#ff7f0e",
            "#2ca02c",
            "#453d4d",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#e1c823"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 990,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "02cce9b2e05aa937",
        "type": "function",
        "z": "f10e7ce.d57828",
        "g": "26fe5463b2ea6acd",
        "name": "Preparing to chart",
        "func": "var select_Trend = flow.get(\"trends.request\",\"memoryOnly\")||{};\nvar select_Time = flow.get(\"trends.selec_time\", \"memoryOnly\") || \"realtime\";\n\n\nvar data = [];\n\nif (select_Trend.UPS_Bateria_Tiempo_Reman  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.UPS_Bateria_Tiempo_Reman\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.UPS_Bateria_Tiempo_Reman\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.UPS_Bateria_Tiempo_Reman\") || []);\n}\nif (select_Trend.UPS_Bateria_Porc_Carga  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.UPS_Bateria_Porc_Carga\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.UPS_Bateria_Porc_Carga\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.UPS_Bateria_Porc_Carga\") || []);\n}\nif (select_Trend.UPS_Bateria_Voltaje == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.UPS_Bateria_Voltaje\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.UPS_Bateria_Voltaje\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.UPS_Bateria_Voltaje\") || []);\n}\nif (select_Trend.Voltaje_L_L_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_L_L_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_L_L_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_L_L_Pro\") || []);\n}\nif (select_Trend.Voltaje_L1_L2  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_L1_L2\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_L1_L2\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_L1_L2\") || []);\n}\nif (select_Trend.Voltaje_L2_L3  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_L2_L3\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_L2_L3\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_L2_L3\") || []);\n}\nif (select_Trend.Voltaje_L1_L3  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_L1_L3\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_L1_L3\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_L1_L3\") || []);\n}\nif (select_Trend.Voltaje_L_N_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_L_N_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_L_N_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_L_N_Pro\") || []);\n}\nif (select_Trend.Voltaje_L2_N  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_L2_N\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_L2_N\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_L2_N\") || []);\n}\nif (select_Trend.FIT_Flujo  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.FIT_Flujo\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.FIT_Flujo\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.FIT_Flujo\") || []);\n}\nif (select_Trend.FIT_Flujo_Total  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.FIT_Flujo_Total\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.FIT_Flujo_Total\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.FIT_Flujo_Total\") || []);\n}\nif (select_Trend.FIT_Densidad  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.FIT_Densidad\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.FIT_Densidad\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.FIT_Densidad\") || []);\n}\nif (select_Trend.FIT_Tempetatura  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.FIT_Tempetatura\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.FIT_Tempetatura\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.FIT_Tempetatura\") || []);\n}\nif (select_Trend.PIT_Presion  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.PIT_Presion\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.PIT_Presion\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.PIT_Presion\") || []);\n}\nif (select_Trend.Amp_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Amp_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Amp_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Amp_Pro\") || []);\n}\nif (select_Trend.KWATT_Act_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.KWATT_Act_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.KWATT_Act_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.KWATT_Act_Pro\") || []);\n}\nif (select_Trend.KVA_Act_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.KVA_Act_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.KVA_Act_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.KVA_Act_Pro\") || []);\n}\nif (select_Trend.KVAr_Act_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.KVAr_Act_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.KVAr_Act_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.KVAr_Act_Pro\") || []);\n}\nif (select_Trend.FP_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.FP_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.FP_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.FP_Pro\") || []);\n}\nif (select_Trend.THD_I_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.THD_I_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.THD_I_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.THD_I_Pro\") || []);\n}\nif (select_Trend.THD_V_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.THD_V_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.THD_V_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.THD_V_Pro\") || []);\n}\n\nvar series = [];\n\nif (select_Trend.UPS_Bateria_Tiempo_Reman == true) select_Time != \"realtime\" ? series.push(\"Tiempo Remanente Bateria CCP (seg)\") : series.push(\"Tiempo Remanente Bateria \" + msg.UPS_Bateria_Tiempo_Reman  + \" seg\");\nif (select_Trend.UPS_Bateria_Porc_Carga == true) select_Time != \"realtime\" ? series.push(\"Porcentaje de Carga (%)\") : series.push(\"Porcentaje de Carga \" + msg.UPS_Bateria_Porc_Carga  +\" %\");\nif (select_Trend.UPS_Bateria_Voltaje == true) select_Time != \"realtime\" ? series.push(\"Voltaje Bateria (V)\") : series.push(\"Voltaje Bateria \" + msg.UPS_Bateria_Voltaje  +\" V\");\nif (select_Trend.Voltaje_L_L_Pro == true) select_Time != \"realtime\" ? series.push(\"Tensión L-L Promedio (VAC)\") : series.push(\"Tensión L-L Promedio \" + msg.Voltaje_L_L_Pro  + \" VAC\");\nif (select_Trend.Voltaje_L1_L2  == true) select_Time != \"realtime\" ? series.push(\"Tensión L1-L2 (VAC)\") : series.push(\"Tensión L1-L2 \" + msg.Voltaje_L1_L2  +\" VAC\");\nif (select_Trend.Voltaje_L2_L3 == true) select_Time != \"realtime\" ? series.push(\"Tensión L2-L3 (VAC)\") : series.push(\"Tensión L2-L3 \" + msg.Voltaje_L2_L3 +\" VAC\");\nif (select_Trend.Voltaje_L1_L3 == true) select_Time != \"realtime\" ? series.push(\"Tensión L1-L3 (VAC)\") : series.push(\"Tensión L1-L3 \" + msg.Voltaje_L1_L3 +\" VAC\");\nif (select_Trend.Voltaje_L_N_Pro == true) select_Time != \"realtime\" ? series.push(\"Tensión L-N Promedio (VAC)\") : series.push(\"Tensión L-N Promedio \" + msg.Voltaje_L_N_Pro  +\" VAC\");\n//if (select_Trend.Voltaje_L2_N == true) select_Time != \"realtime\" ? series.push(\"Tensión L2 N (V)\") : series.push(\"Tensión L2 N \" + msg.Voltaje_L2_N  +\" V\");\n//if (select_Trend.FIT_Flujo == true) select_Time != \"realtime\" ? series.push(\"Flujo (m^3/s)\") : series.push(\"Flujo \" + msg.FIT_Flujo +\" m^3/s\");\nif (select_Trend.FIT_Flujo_Total == true) select_Time != \"realtime\" ? series.push(\"Flujo Total (m^3/s)\") : series.push(\"Flujo Total \" + msg.FIT_Flujo_Total +\" m^3/s\");\nif (select_Trend.FIT_Densidad == true) select_Time != \"realtime\" ? series.push(\"Densidad (kg/m³)\") : series.push(\"Densidad \" + msg.FIT_Densidad +\" kg/m³\");\nif (select_Trend.FIT_Tempetatura == true) select_Time != \"realtime\" ? series.push(\"Temperatura (°F)\") : series.push(\"Temperatura \" + msg.FIT_Tempetatura  +\" °F\");\nif (select_Trend.PIT_Presion == true) select_Time != \"realtime\" ? series.push(\"Presión (Psi)\") : series.push(\"Presión \" + msg.PIT_Presion  + \" Psi\");\nif (select_Trend.Amp_Pro == true) select_Time != \"realtime\" ? series.push(\"Corriente Promedio (A)\") : series.push(\"Corriente Promedio \" + msg.Amp_Pro  + \" A\");\nif (select_Trend.KWATT_Act_Pro == true) select_Time != \"realtime\" ? series.push(\"Potencia Promedio (KW)\") : series.push(\"Potencia Promedio \" + msg.KWATT_Act_Pro  + \" KW\");\nif (select_Trend.KVAr_Act_Pro == true) select_Time != \"realtime\" ? series.push(\"Potencia Promedio (KVAr)\") : series.push(\"Potencia Promedio \" + msg.KVAr_Act_Pro  + \" KVAr\");\nif (select_Trend.KVA_Act_Pro == true) select_Time != \"realtime\" ? series.push(\"Potencia Promedio (KVA)\") : series.push(\"Potencia Promedio \" + msg.KVA_Act_Pro  + \" KVA\");\nif (select_Trend.FP_Pro == true) select_Time != \"realtime\" ? series.push(\"Factor de Potencia Promedio\") : series.push(\"Factor de Potencia Promedio \" + msg.FP_Pro);\nif (select_Trend.THD_I_Pro == true) select_Time != \"realtime\" ? series.push(\"THD Promedio (A)\") : series.push(\"THD  Promedio \" + msg.THD_I_Pro  + \" A\");\nif (select_Trend.THD_V_Pro == true) select_Time != \"realtime\" ? series.push(\"THD Promedio (V)\") : series.push(\"THD  Promedio \" + msg.THD_V_Pro + \" V\");\n\nvar chart = [{\n    \"series\": series,\n    \"data\": data,\n    \"labels\": [\"\"]\n}];\n\nif (data.length != 0)\n    msg.payload = chart;\nelse\n    msg.payload = [];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 890,
        "wires": [
            [
                "cb4a6286aca4bd43"
            ]
        ]
    },
    {
        "id": "bb9d57fad1dcf950",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "26fe5463b2ea6acd",
        "name": "pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Instrumentación manifold",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 520,
        "y": 880,
        "wires": [
            [
                "02cce9b2e05aa937"
            ],
            [
                "fc8160ea1a425625"
            ]
        ]
    },
    {
        "id": "fc8160ea1a425625",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "26fe5463b2ea6acd",
        "name": "realtime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "realtime",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 820,
        "wires": [
            [
                "33646855a267b1b4"
            ]
        ]
    },
    {
        "id": "cb4a6286aca4bd43",
        "type": "rbe",
        "z": "f10e7ce.d57828",
        "g": "26fe5463b2ea6acd",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 870,
        "y": 880,
        "wires": [
            [
                "d3e0d81a17262194"
            ]
        ]
    },
    {
        "id": "3e1f18e73ad342b7",
        "type": "link in",
        "z": "f10e7ce.d57828",
        "g": "26fe5463b2ea6acd",
        "name": "",
        "links": [
            "f65144617635e766"
        ],
        "x": 255,
        "y": 880,
        "wires": [
            [
                "22cd2fada9680a04"
            ]
        ]
    },
    {
        "id": "d382db6f.29f0a8",
        "type": "function",
        "z": "242bc9a6.f9b016",
        "g": "11f55817.139c18",
        "name": "Events",
        "func": "var event   = flow.get('Events')||[];\nvar id      = flow.get('id')||0;\nvar date    = new Date();\n\n// Date\nvar year    = date.getFullYear();\nvar month   = date.getMonth()+1;\nvar day     = date.getDate();\n\n//Time\nvar hours   = date.getHours();\nvar minutes = date.getMinutes();\nvar seconds = date.getSeconds();\n\nmsg.payload={\n            'no':id,\n            'fecha':month+'/'+day+'/'+year,\n            'hora':hours+':'+minutes+':'+seconds,\n            'evento':msg.payload\n}\n\n// Adjuntar evento\nevent.unshift(msg.payload);\n\n// Limitar número de eventos\nevent = event.slice(0,29);\n\n// Guardar eventos en el contexto\nflow.set('Events',event);\n\n// incrementar ID de evento\nid++\n\n// Reiniciar ID\nif(id==1000){id=0;}\nflow.set('id',id);\n\nmsg.payload = event;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 80,
        "wires": [
            [
                "7b4bd7a0.fd9398"
            ]
        ]
    },
    {
        "id": "972e1f74.3dd4c",
        "type": "comment",
        "z": "242bc9a6.f9b016",
        "g": "11f55817.139c18",
        "name": "Eventos",
        "info": "",
        "x": 110,
        "y": 80,
        "wires": []
    },
    {
        "id": "59e817c2.295b38",
        "type": "link in",
        "z": "242bc9a6.f9b016",
        "g": "11f55817.139c18",
        "name": "Eventos",
        "links": [
            "2b7f6e0d67c977a9",
            "e83ec346916a6a44",
            "fc19b94b0e22c56a",
            "1249cb6a5060fda8",
            "be16c486fa3219ab",
            "8c4ae2530865a4bc",
            "7fcae5fe0ddd4ef7",
            "c98c6a0b37ce9501",
            "35cde5193b778c94",
            "8cf04e500b246f90",
            "acb3163797abe44e",
            "a4a38a6812fcbe0c",
            "6f2d66e5045c1f08",
            "c9431e31a85352c5",
            "2d18199a5c5712c0",
            "83fe066f74219d58",
            "571b11117e80a0d2",
            "6c9cbc5f13c208de",
            "2a4b9087d5ee1da1",
            "04773618fbf0dcda",
            "dfc052d89d43424b",
            "154b741a5abdbb7d",
            "bd2e2cacb5c2d7cb",
            "cfb2c42d93e9e1ee",
            "280e4cd5c1140e28",
            "9ad294dc5c727876",
            "d97988d997fd4a60",
            "69468fe7909081de",
            "7bc4ef3f5c4b4a92",
            "1d502d179b7be8e0",
            "172b71e894976487",
            "2582b79a5a66256a",
            "7a848364d51272bd",
            "15dd3565585026a6",
            "0e88388fcb5738cd",
            "05d0671af4728704",
            "dcc5b47701793560",
            "53068a30972e632b",
            "7d68ef265d1e3035",
            "da1899281ec8a4bc",
            "a230ddb8aeaa2e12",
            "991eb055c9a9be2b",
            "dd0bfe62af67d677",
            "a1cabd508d95e630",
            "0db3231e87512499"
        ],
        "x": 365,
        "y": 80,
        "wires": [
            [
                "d382db6f.29f0a8"
            ]
        ]
    },
    {
        "id": "d50d9b6b.bbc7f8",
        "type": "change",
        "z": "242bc9a6.f9b016",
        "g": "11f55817.139c18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Events",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "+++/Eventos/Eventos.csv",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "USB_Drive",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 160,
        "wires": [
            [
                "ad47f0cc.93af5"
            ]
        ]
    },
    {
        "id": "c02fb05c.baccf",
        "type": "file",
        "z": "242bc9a6.f9b016",
        "g": "11f55817.139c18",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 850,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "75851744.fc50c8",
        "type": "trigger",
        "z": "242bc9a6.f9b016",
        "g": "11f55817.139c18",
        "name": "",
        "op1": "1",
        "op2": "2",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 260,
        "y": 120,
        "wires": [
            [
                "07fdea154e1be602"
            ]
        ]
    },
    {
        "id": "ad47f0cc.93af5",
        "type": "csv",
        "z": "242bc9a6.f9b016",
        "g": "11f55817.139c18",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "no,fecha,hora,evento",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 730,
        "y": 160,
        "wires": [
            [
                "c02fb05c.baccf"
            ]
        ]
    },
    {
        "id": "7b4bd7a0.fd9398",
        "type": "ui_table",
        "z": "242bc9a6.f9b016",
        "g": "11f55817.139c18",
        "group": "bc3b9c5.ac3f76",
        "name": "Eventos",
        "order": 1,
        "width": "24",
        "height": "13",
        "columns": [
            {
                "field": "no",
                "title": "No",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "fecha",
                "title": "Fecha",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "hora",
                "title": "Hora",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "evento",
                "title": "Evento",
                "width": "55%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 620,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "cad3d4cb.b5bc98",
        "type": "link in",
        "z": "242bc9a6.f9b016",
        "g": "11f55817.139c18",
        "name": "Descargar Eventos In",
        "links": [
            "453f1499.9c3efc"
        ],
        "x": 465,
        "y": 160,
        "wires": [
            [
                "d50d9b6b.bbc7f8"
            ]
        ]
    },
    {
        "id": "1660e38d.24cefc",
        "type": "link in",
        "z": "242bc9a6.f9b016",
        "g": "11f55817.139c18",
        "name": "Eventos UI-Control",
        "links": [
            "b2246adf6c10ac24"
        ],
        "x": 159,
        "y": 120,
        "wires": [
            [
                "75851744.fc50c8"
            ]
        ]
    },
    {
        "id": "bd165d4f.e3f48",
        "type": "comment",
        "z": "242bc9a6.f9b016",
        "g": "cf57802e.7d258",
        "name": "Alarmas",
        "info": "",
        "x": 1020,
        "y": 80,
        "wires": []
    },
    {
        "id": "c95dde3d.c676e",
        "type": "json",
        "z": "242bc9a6.f9b016",
        "g": "cf57802e.7d258",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1510,
        "y": 80,
        "wires": [
            [
                "12f5302f.69f92"
            ]
        ]
    },
    {
        "id": "191d34db.93fe3b",
        "type": "change",
        "z": "242bc9a6.f9b016",
        "g": "cf57802e.7d258",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Alarms",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1320,
        "y": 120,
        "wires": [
            [
                "c95dde3d.c676e",
                "12f5302f.69f92"
            ]
        ]
    },
    {
        "id": "35f773cc.39ea9c",
        "type": "change",
        "z": "242bc9a6.f9b016",
        "g": "cf57802e.7d258",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Alarms",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "+++/Alarmas/Alarmas.csv",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "USB_Drive",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 160,
        "wires": [
            [
                "dcdb5992.425238"
            ]
        ]
    },
    {
        "id": "ccc4d9c0.904c78",
        "type": "file",
        "z": "242bc9a6.f9b016",
        "g": "cf57802e.7d258",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1750,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "d9101c40.6e85a",
        "type": "trigger",
        "z": "242bc9a6.f9b016",
        "g": "cf57802e.7d258",
        "name": "",
        "op1": "1",
        "op2": "2",
        "op1type": "str",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1160,
        "y": 120,
        "wires": [
            [
                "191d34db.93fe3b"
            ]
        ]
    },
    {
        "id": "dcdb5992.425238",
        "type": "csv",
        "z": "242bc9a6.f9b016",
        "g": "cf57802e.7d258",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "no,fecha,hora,alarma",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 1630,
        "y": 160,
        "wires": [
            [
                "ccc4d9c0.904c78"
            ]
        ]
    },
    {
        "id": "12f5302f.69f92",
        "type": "ui_table",
        "z": "242bc9a6.f9b016",
        "g": "cf57802e.7d258",
        "group": "3b5d050c.51e49a",
        "name": "Alarmas",
        "order": 1,
        "width": "24",
        "height": "13",
        "columns": [
            {
                "field": "no",
                "title": "No",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "fecha",
                "title": "Fecha",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "hora",
                "title": "Hora",
                "width": "15%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "alarma",
                "title": "Alarma",
                "width": "55%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1520,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "33f2aa3c.6c08f6",
        "type": "link in",
        "z": "242bc9a6.f9b016",
        "g": "cf57802e.7d258",
        "name": "Alarmas",
        "links": [
            "4e8f42ac.3431ac",
            "c099945b.08bf98",
            "5c324370.33dadc",
            "f186c67c61d39f03",
            "b13f7069320f03ce",
            "4fd776c16a5f4e61",
            "4ad853664955e0c0",
            "3ee058263495f738",
            "d27d1f89019d8a16",
            "2e04301f0ad2bc1c",
            "34e61f0acdfbe811",
            "8854cd62dd1de582",
            "22225823ab272b9b",
            "2e38aa4677e8c205"
        ],
        "x": 1265,
        "y": 80,
        "wires": [
            [
                "9055a2bd.67028"
            ]
        ]
    },
    {
        "id": "9055a2bd.67028",
        "type": "function",
        "z": "242bc9a6.f9b016",
        "g": "cf57802e.7d258",
        "name": "Alarms",
        "func": "var Alarm   = flow.get('Alarms')||[];\nvar id      = flow.get('id')||0;\nvar date    = new Date();\n\n// Date\nvar year    = date.getFullYear();\nvar month   = date.getMonth()+1;\nvar day     = date.getDate();\n\n//Time\nvar hours   = date.getHours();\nvar minutes = date.getMinutes();\nvar seconds = date.getSeconds();\n\nmsg.payload={\n            'no':id,\n            'fecha':month+'/'+day+'/'+year,\n            'hora':hours+':'+minutes+':'+seconds,\n            'alarma':msg.payload\n}\n\nAlarm.unshift(msg.payload);\n\n// Limitar número de alarmas\nAlarm = Alarm.slice(0,29);\n\nflow.set('Alarms',Alarm);\n\nid++\n// Reiniciar ID\nif(id==1000){id=0;}\n\nflow.set('id',id);\nmsg.payload = Alarm;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 80,
        "wires": [
            [
                "c95dde3d.c676e",
                "12f5302f.69f92"
            ]
        ]
    },
    {
        "id": "938193ac.02d98",
        "type": "link in",
        "z": "242bc9a6.f9b016",
        "g": "cf57802e.7d258",
        "name": "ActualizarAlarmas",
        "links": [
            "504e4ed2c3e0f61e",
            "b2246adf6c10ac24"
        ],
        "x": 1069,
        "y": 120,
        "wires": [
            [
                "d9101c40.6e85a"
            ]
        ]
    },
    {
        "id": "f4dc844c.b0f888",
        "type": "link in",
        "z": "242bc9a6.f9b016",
        "g": "cf57802e.7d258",
        "name": "Descargar Alarmas In",
        "links": [
            "6c6274de.8a002c"
        ],
        "x": 1369,
        "y": 160,
        "wires": [
            [
                "35f773cc.39ea9c"
            ]
        ]
    },
    {
        "id": "81d9a00531554122",
        "type": "eth-ip in",
        "z": "242bc9a6.f9b016",
        "endpoint": "a00b93d2e424ac4e",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "",
        "x": 90,
        "y": 310,
        "wires": [
            [
                "ae1fee072e1ead94"
            ]
        ]
    },
    {
        "id": "ae1fee072e1ead94",
        "type": "function",
        "z": "242bc9a6.f9b016",
        "name": "Eventos",
        "func": "var aux1 = [], aux2 = [], aux3 = [];\nvar keys = Object.keys(msg.payload);\nvar values = Object.values(msg.payload);\nvar prevValue = context.get(\"prevValue\") || [];\n\nfor (var i = 0; i < keys.length; i++) {\n    if (values[i] && prevValue[i] != values[i]) {\n        aux1[i] = keys[i].replace(\"EVENTOS_\", \" \");\n        aux2[i] = aux1[i].replace(\"W0\", \"Pozo \");\n        aux3[i] = aux2[i].replace(\".\", \" \");\n        msg.payload = aux3[i];\n        msg.sts = values[i];\n        node.send(msg);\n    }\n    prevValue[i] = values[i];\n}\ncontext.set(\"prevValue\", prevValue);\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 310,
        "wires": [
            [
                "2b7f6e0d67c977a9",
                "b31cc01e5f203fb5"
            ]
        ]
    },
    {
        "id": "2b7f6e0d67c977a9",
        "type": "link out",
        "z": "242bc9a6.f9b016",
        "name": "",
        "links": [
            "59e817c2.295b38"
        ],
        "x": 315,
        "y": 310,
        "wires": []
    },
    {
        "id": "b31cc01e5f203fb5",
        "type": "ui_toast",
        "z": "242bc9a6.f9b016",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 390,
        "y": 350,
        "wires": []
    },
    {
        "id": "7e46a489ae849e44",
        "type": "ui_ui_control",
        "z": "242bc9a6.f9b016",
        "name": "",
        "events": "all",
        "x": 100,
        "y": 260,
        "wires": [
            [
                "95e52cf77ad022eb"
            ]
        ]
    },
    {
        "id": "95e52cf77ad022eb",
        "type": "switch",
        "z": "242bc9a6.f9b016",
        "name": "",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Alarmas/Eventos",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 260,
        "wires": [
            [
                "b2246adf6c10ac24"
            ]
        ]
    },
    {
        "id": "b2246adf6c10ac24",
        "type": "link out",
        "z": "242bc9a6.f9b016",
        "d": true,
        "name": "",
        "links": [
            "1660e38d.24cefc",
            "938193ac.02d98"
        ],
        "x": 315,
        "y": 260,
        "wires": []
    },
    {
        "id": "1a3e525fc4cc8535",
        "type": "function",
        "z": "242bc9a6.f9b016",
        "name": "Alarmas",
        "func": "var aux1 = [], aux2 = [], aux3 = [];\nvar keys    = Object.keys(msg.payload);\nvar values  = Object.values(msg.payload);\nvar prevValue = context.get(\"prevValue\") || [];\n\nfor (var i = 0; i < keys.length; i++){\n    if (values[i] && prevValue[i]!= values[i]){\n        aux1[i] = keys[i].replace(\"DATA_\", \" \");\n        aux2[i] = aux1[i].replace(\"_ALARMAS.Alarma_\", \" \");\n        aux3[i] = aux2[i].replace(\"CL\", \"Pozo \");\n        msg.payload = aux3[i];\n        msg.sts     = values[i];\n        node.send(msg);\n    }\n    prevValue[i] = values[i];\n}\ncontext.set(\"prevValue\", prevValue);\nreturn;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 310,
        "wires": [
            [
                "f186c67c61d39f03",
                "4c484c2d483f7af7"
            ]
        ]
    },
    {
        "id": "7593c87c33252c16",
        "type": "eth-ip in",
        "z": "242bc9a6.f9b016",
        "endpoint": "15f69da2533413eb",
        "mode": "all",
        "variable": "",
        "program": "",
        "name": "",
        "x": 550,
        "y": 310,
        "wires": [
            [
                "1a3e525fc4cc8535"
            ]
        ]
    },
    {
        "id": "f186c67c61d39f03",
        "type": "link out",
        "z": "242bc9a6.f9b016",
        "name": "",
        "links": [
            "33f2aa3c.6c08f6"
        ],
        "x": 785,
        "y": 310,
        "wires": []
    },
    {
        "id": "4c484c2d483f7af7",
        "type": "ui_toast",
        "z": "242bc9a6.f9b016",
        "position": "top right",
        "displayTime": "5",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 860,
        "y": 350,
        "wires": []
    },
    {
        "id": "e04b904dc4a17411",
        "type": "link in",
        "z": "242bc9a6.f9b016",
        "g": "11f55817.139c18",
        "name": "Actualizar Evento",
        "links": [
            "c98bd2dc.e9d39",
            "b56aa71999519568"
        ],
        "x": 165,
        "y": 160,
        "wires": [
            [
                "75851744.fc50c8"
            ]
        ]
    },
    {
        "id": "44e0e07ede65597e",
        "type": "link in",
        "z": "242bc9a6.f9b016",
        "g": "cf57802e.7d258",
        "name": "Actualizar Alarma",
        "links": [
            "c98bd2dc.e9d39"
        ],
        "x": 1075,
        "y": 170,
        "wires": [
            [
                "d9101c40.6e85a"
            ]
        ]
    },
    {
        "id": "07fdea154e1be602",
        "type": "function",
        "z": "242bc9a6.f9b016",
        "g": "11f55817.139c18",
        "name": "a Tabla",
        "func": "var datos = JSON.parse(JSON.stringify(flow.get(\"Events\") || null));\nvar i;\nmsg.payload = [];\nfor (i=0;i<datos.length;i++){\n    if (datos[i].evento.includes(\"Disparo\") || datos[i].evento.includes(\"Trigger\")){\n        datos[i].evento = '<font color= red><b>' + datos[i].evento +'<b>';\n    }\n    if (datos[i].evento.includes(\"Falla de com\") || datos[i].evento.includes(\"Pérdida de com\") || datos[i].evento.includes(\"COM fault\")) {\n        datos[i].evento = '<font color= orange><b>' + datos[i].evento + '<b>';\n    }\n    msg.payload.push(datos[i]);\n    \n}\nif (datos != null)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 120,
        "wires": [
            [
                "7b4bd7a0.fd9398"
            ]
        ]
    },
    {
        "id": "f151ef75ee689f12",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "order": 3,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Velocidad",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 600,
        "y": 100,
        "wires": []
    },
    {
        "id": "f0e67f4f0d829127",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Amp. VSD",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 610,
        "y": 180,
        "wires": []
    },
    {
        "id": "c4cd163112c9c257",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Pot. VSD",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 600,
        "y": 220,
        "wires": []
    },
    {
        "id": "1971c53732ba9843",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Volt. VSD",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 600,
        "y": 140,
        "wires": []
    },
    {
        "id": "f398db3e910a7124",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "order": 8,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Amp. motor",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 610,
        "y": 300,
        "wires": []
    },
    {
        "id": "357c4e57e594ef65",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "order": 7,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Volt. motor",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 610,
        "y": 260,
        "wires": []
    },
    {
        "id": "952e7831f8ba38da",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Amp. VSD",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 1420,
        "y": 180,
        "wires": []
    },
    {
        "id": "6befad24b902ee83",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Pot. VSD",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1410,
        "y": 220,
        "wires": []
    },
    {
        "id": "bb7c17b43dc01971",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Volt. VSD",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1410,
        "y": 140,
        "wires": []
    },
    {
        "id": "70b9003a66d74660",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "order": 8,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Amp. motor",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1420,
        "y": 300,
        "wires": []
    },
    {
        "id": "3c41753814bbff34",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "order": 7,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Volt. motor",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1420,
        "y": 260,
        "wires": []
    },
    {
        "id": "0c3c00860e527ec9",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "order": 3,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Velocidad",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2190,
        "y": 100,
        "wires": []
    },
    {
        "id": "8270a86bf4c4117c",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Amp. VSD",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 2200,
        "y": 180,
        "wires": []
    },
    {
        "id": "11914dc48622820b",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Pot. VSD",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2190,
        "y": 220,
        "wires": []
    },
    {
        "id": "67d6bef6d812233c",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Volt. VSD",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2190,
        "y": 140,
        "wires": []
    },
    {
        "id": "8a72ed007ec0bbd6",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "order": 8,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Amp. motor",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2200,
        "y": 300,
        "wires": []
    },
    {
        "id": "4c9bd0aeb0e2a492",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "order": 7,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Volt. motor",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2200,
        "y": 260,
        "wires": []
    },
    {
        "id": "29bb553b5154ac9a",
        "type": "ui_template",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "name": "SCP 1",
        "order": 2,
        "width": "6",
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload| trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 590,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "081cafd2b18a8c0b",
        "type": "ui_template",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "name": "SCP 2",
        "order": 2,
        "width": "6",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload| trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1400,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "09a2fe0707ac9cef",
        "type": "ui_template",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "name": "SCP 3",
        "order": 2,
        "width": "6",
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload| trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2180,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "3cbed816ab16272e",
        "type": "link out",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "name": "",
        "links": [
            "a908951142dcc258"
        ],
        "x": 585,
        "y": 620,
        "wires": []
    },
    {
        "id": "b0a0856ce0a6a98e",
        "type": "change",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "name": "Si",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[\"Despliegue_general_SCP1\"],\t       \"hide\":[]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 620,
        "wires": [
            [
                "3cbed816ab16272e"
            ]
        ]
    },
    {
        "id": "659ae12f0356cea2",
        "type": "change",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "name": "Si",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[\"Despliegue_general_SCP2\"],\t       \"hide\":[]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 420,
        "wires": [
            [
                "447a2f8ebf57eaa9"
            ]
        ]
    },
    {
        "id": "447a2f8ebf57eaa9",
        "type": "link out",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "name": "",
        "links": [
            "a908951142dcc258"
        ],
        "x": 1165,
        "y": 420,
        "wires": []
    },
    {
        "id": "afe95b9080436748",
        "type": "switch",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "name": "SCP3",
        "property": "#:(memoryOnly)::Navegacionaux.principal",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "16",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1690,
        "y": 490,
        "wires": [
            [
                "1c25c0cdf3cf7e71"
            ],
            [
                "93bd70a570662db5"
            ]
        ]
    },
    {
        "id": "93bd70a570662db5",
        "type": "change",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "name": "Si",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[\"Despliegue_general_SCP3\"],\t       \"hide\":[]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 520,
        "wires": [
            [
                "8c0abdf5a7d1991f"
            ]
        ]
    },
    {
        "id": "1c25c0cdf3cf7e71",
        "type": "change",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "name": "No",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[],\t       \"hide\":[\"Despliegue_general_SCP3\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 480,
        "wires": [
            [
                "5b96c35d08822d6b"
            ]
        ]
    },
    {
        "id": "5acd401d2f46b060",
        "type": "link out",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "name": "",
        "links": [
            "a908951142dcc258"
        ],
        "x": 2055,
        "y": 520,
        "wires": []
    },
    {
        "id": "5b96c35d08822d6b",
        "type": "link out",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "name": "",
        "links": [
            "a908951142dcc258"
        ],
        "x": 1915,
        "y": 480,
        "wires": []
    },
    {
        "id": "76b343739d5d83d3",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "order": 3,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Velocidad",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1410,
        "y": 100,
        "wires": []
    },
    {
        "id": "95efdd10e4932dd6",
        "type": "template",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "name": "SCP 1",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{payload}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 490,
        "y": 60,
        "wires": [
            [
                "391a76fe1746fcb5"
            ]
        ]
    },
    {
        "id": "391a76fe1746fcb5",
        "type": "ui_template",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "name": "Nombre SCP1",
        "order": 1,
        "width": "6",
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload| trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 670,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "20146e27f081f2f5",
        "type": "template",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "name": "SCP 2",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{payload}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 1270,
        "y": 60,
        "wires": [
            [
                "269ed6d093e03918"
            ]
        ]
    },
    {
        "id": "269ed6d093e03918",
        "type": "ui_template",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "name": "Nombre SCP2",
        "order": 1,
        "width": "6",
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload| trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1440,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "dd9e0e91a716fe95",
        "type": "template",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "name": "SCP 3",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{payload}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 2040,
        "y": 60,
        "wires": [
            [
                "6cc2257de261981f"
            ]
        ]
    },
    {
        "id": "6cc2257de261981f",
        "type": "ui_template",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "name": "Nombre SCP3",
        "order": 1,
        "width": "6",
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload| trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2200,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "0707e99d923f37a2",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "order": 3,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Velocidad",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2960,
        "y": 100,
        "wires": []
    },
    {
        "id": "3b62e6fd6ccbfa18",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "order": 5,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Amp. VSD",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2970,
        "y": 180,
        "wires": []
    },
    {
        "id": "be09dae2fbef4e6e",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "order": 6,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Pot. VSD",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2960,
        "y": 220,
        "wires": []
    },
    {
        "id": "bed2e7e74ac3b1ef",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "order": 4,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Volt. VSD",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2960,
        "y": 140,
        "wires": []
    },
    {
        "id": "bf98e1b239b6dcc2",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "order": 8,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Amp. motor",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2970,
        "y": 300,
        "wires": []
    },
    {
        "id": "0a37be73420b7fe8",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "order": 7,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Volt. motor",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2970,
        "y": 260,
        "wires": []
    },
    {
        "id": "4c8093fea15c33ac",
        "type": "ui_template",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "name": "SCP 4",
        "order": 2,
        "width": "6",
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload| trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2950,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "ba157db276676859",
        "type": "change",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "name": "Si",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[\"Despliegue_general_SCP4\"],\t       \"hide\":[]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2560,
        "y": 500,
        "wires": [
            [
                "38705d0965924c63"
            ]
        ]
    },
    {
        "id": "eb3da2225a3bbe02",
        "type": "change",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "name": "No",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[],\t       \"hide\":[\"Despliegue_general_SCP4\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2560,
        "y": 460,
        "wires": [
            [
                "b28bc401f803d685"
            ]
        ]
    },
    {
        "id": "81ed717ceb1aadc5",
        "type": "link out",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "name": "",
        "links": [
            "a908951142dcc258"
        ],
        "x": 2785,
        "y": 500,
        "wires": []
    },
    {
        "id": "b28bc401f803d685",
        "type": "link out",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "name": "",
        "links": [
            "a908951142dcc258"
        ],
        "x": 2645,
        "y": 460,
        "wires": []
    },
    {
        "id": "24297af76f43fd83",
        "type": "ui_template",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "name": "Nombre SCP4",
        "order": 1,
        "width": "6",
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload| trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2980,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "98a97a63a6bb5b41",
        "type": "template",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "name": "SCP 4",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{payload}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 2810,
        "y": 60,
        "wires": [
            [
                "24297af76f43fd83"
            ]
        ]
    },
    {
        "id": "fd17caf4e1cb953b",
        "type": "ui_ui_control",
        "z": "a409994f70cf4cc4",
        "g": "5e0b04a10149786e",
        "name": "",
        "events": "all",
        "x": 240,
        "y": 80,
        "wires": [
            [
                "b56aa71999519568"
            ]
        ]
    },
    {
        "id": "82aa836a1d0ebabd",
        "type": "link in",
        "z": "a409994f70cf4cc4",
        "g": "5e0b04a10149786e",
        "name": "in uicontrol",
        "links": [
            "d2ee2a47.afabd8",
            "dc439b5.84bfd68",
            "666152d6.dc641c",
            "c83649c3.716488",
            "f21e2e27.0af3d",
            "da1b0a1a.7d4d28",
            "6b0e4d29.b19b14",
            "f95e46ccd8ac066d",
            "3cbd8b298714a327",
            "1b6d3ebacefe3d37",
            "b0a2cd1a.ab273",
            "c98bd2dc.e9d39",
            "c0c1c5d8.339158",
            "bb4f29c8.aa7e88",
            "6b3d4586f5261369",
            "eb0d147d1d43c8ac",
            "ee04fb23cd98f8de",
            "99ae975a33b3d452",
            "6b495075ed9f6eae",
            "0e7729f7643eb73e",
            "1d59f095b4eb49a5",
            "777ffb34744decce",
            "4e0cb0bae7e629a2",
            "3cb555ec39e1b50a",
            "10d0df396dc90c03",
            "1916c08011193bbe",
            "53430c757a73bd7e",
            "372e4d8a25273034",
            "a53b2e37d82a19fa",
            "96132f1ce0844369",
            "b45a559ba55b3f77",
            "bcae200194f93c53",
            "4515e6f20738ca04",
            "38dcb788c3d27509",
            "c43540e8a91e5ddb",
            "c62c192347b4885f",
            "1bd1906b906446cb",
            "a5f101f20d6fd56b",
            "fe313f3f60b02976",
            "901c6735c8cd4585",
            "81bc7aa75d5fd2d7",
            "9f2b95a18912740b",
            "0c586d7a3befed46",
            "71610f7d1f373f17",
            "54d16bfaedad9ae5",
            "1f3f45750a40c819",
            "386399794e5984dd",
            "36415da3bc5cfb3f",
            "65f3d51b20987789",
            "cfd84f9227a1866b",
            "49ebb1a96b8ab07b",
            "8c284c7bfec72391",
            "98df19f4a197ebdc",
            "550c339b6256b576",
            "c17d5946edf5312c",
            "60cd8611f1dea5a3",
            "0bffc79214e1f738",
            "e0e34d4b68a2132e",
            "655bf08f62314f41",
            "66f51e8cdf3572d1",
            "be1489e57b9c2385",
            "1050ca2d9c778716",
            "abc9b8b81ab87e58",
            "053623fb4ec2e26f"
        ],
        "x": 135,
        "y": 80,
        "wires": [
            [
                "fd17caf4e1cb953b"
            ]
        ]
    },
    {
        "id": "b56aa71999519568",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "5e0b04a10149786e",
        "name": "out uicontrol",
        "links": [
            "1abe9aa78aaec393",
            "51d66341.8ee0fc",
            "9bf920288bfd3453",
            "b3363f6b.8bce4",
            "bc13f228fa4f0134",
            "c6f170b7e699da0a",
            "e04b904dc4a17411",
            "ee0ae928d7535b2a",
            "f155df4497b141e5",
            "6d463b90a47e15cd",
            "2b6a469ea59143dc",
            "80c3d5cca8f0000d"
        ],
        "x": 645,
        "y": 80,
        "wires": []
    },
    {
        "id": "9e4ecba6a9605392",
        "type": "rbe",
        "z": "a409994f70cf4cc4",
        "g": "5e0b04a10149786e",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 470,
        "y": 120,
        "wires": [
            [
                "b56aa71999519568"
            ]
        ]
    },
    {
        "id": "fe0f305772eadaa5",
        "type": "inject",
        "z": "a409994f70cf4cc4",
        "g": "5e0b04a10149786e",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#:(memoryOnly)::Navegación.Pantalla",
        "payloadType": "global",
        "x": 280,
        "y": 120,
        "wires": [
            [
                "9e4ecba6a9605392"
            ]
        ]
    },
    {
        "id": "f28b0c02d8fcb7fb",
        "type": "ui_template",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "group": "6e1fd4cd.a547cc",
        "name": "Navegacion datos operativos",
        "order": 1,
        "width": 24,
        "height": 1,
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-VSD-tab\" data-toggle=\"tab\" href=\"#nav-VSD\" role=\"tab\"\n                aria-controls=\"nav-VSD\" aria-selected=\"false\" ng-click=\"send({payload:VSD()})\">Datos VSD</a>\n            <a class=\"nav-item nav-link\" id=\"nav-electricos-tab\" data-toggle=\"tab\" href=\"#nav-electricos\" role=\"tab\"\n                aria-controls=\"nav-electricos\" aria-selected=\"false\" ng-click=\"send({payload:electricos()})\">Datos\n                eléctricos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-fondo-tab\" data-toggle=\"tab\" href=\"#nav-fondo\" role=\"tab\"\n                aria-controls=\"nav-fondo\" aria-selected=\"true\" ng-click=\"send({payload:fondo()})\">Datos de proceso</a>\n            <a class=\"nav-item nav-link\" id=\"nav-tendencias-tab\" data-toggle=\"tab\" href=\"#nav-tendencias\" role=\"tab\" aria-controls=\"nav-tendencias\"\n                aria-selected=\"true\" ng-click=\"send({payload:tendencias()})\">Tendencias multivariables</a>\n            <a class=\"nav-item nav-link\" id=\"nav-AV-tab\" data-toggle=\"tab\" href=\"#nav-AV\" role=\"tab\" aria-controls=\"nav-AV\" \n                aria-selected=\"true\" ng-click=\"send({payload:AV()})\">AVAS</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.fondo = function() { return \"Fondo\"; };\n        this.scope.VSD = function() { return \"VSD\"; };\n        this.scope.electricos = function() { return \"Eléctricos\"; };\n        this.scope.tendencias = function() { return \"tendencias\"; };\n        this.scope.AV = function() { return \"AVAS\"; };\n    </script>\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 700,
        "y": 280,
        "wires": [
            [
                "b178332f621e55c6"
            ]
        ]
    },
    {
        "id": "b178332f621e55c6",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "VSD",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Fondo",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Eléctricos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "tendencias",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "AVAS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 900,
        "y": 280,
        "wires": [
            [
                "026025b92bfab22d"
            ],
            [
                "2978554edd4b937d"
            ],
            [
                "6ac4c7bc1b306c2e"
            ],
            [
                "dad03e8d0c8f47ad"
            ],
            [
                "5742c17aa56d0b81",
                "5fde4cc2805bfbe8",
                "84aff144b0f6a8ab"
            ]
        ]
    },
    {
        "id": "2978554edd4b937d",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "Fondo",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Datos_operativos_pozos_Datos_de_Proceso\",\t                \"Datos_operativos_pozos_Comandos\"],\t       \"hide\":[ \"Datos_operativos_pozos_Datos_Electricos\",\t                \"Datos_operativos_pozos_Datos_VSD\",\t                \"Datos_operativos_pozos_Tendencias\",\t                \"Datos_operativos_pozos_AVAS\",\t                \"Datos_operativos_pozos_Carta_Amperimetrica\",\t                \"Datos_operativos_pozos_Grafica_IPR\",\t                \"Datos_operativos_pozos_Estado_mecánico\",\t                \"Datos_operativos_pozos_Propiedades_de_flujo\",\t                \"Datos_operativos_pozos_Pruebas_de_producción\",\t                \"Datos_operativos_pozos_Datos_de_instalación\",\t                \"Datos_operativos_pozos_Carta_Nomografica\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 260,
        "wires": [
            [
                "386399794e5984dd"
            ]
        ]
    },
    {
        "id": "026025b92bfab22d",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "VSD",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Datos_operativos_pozos_Datos_VSD\",\t                \"Datos_operativos_pozos_Comandos\"],\t       \"hide\":[ \"Datos_operativos_pozos_Datos_Electricos\",\t                \"Datos_operativos_pozos_Datos_de_Proceso\",\t                \"Datos_operativos_pozos_Tendencias\",\t                \"Datos_operativos_pozos_AVAS\",\t                \"Datos_operativos_pozos_Carta_Amperimetrica\",\t                \"Datos_operativos_pozos_Grafica_IPR\",\t                \"Datos_operativos_pozos_Estado_mecánico\",\t                \"Datos_operativos_pozos_Propiedades_de_flujo\",\t                \"Datos_operativos_pozos_Pruebas_de_producción\",\t                \"Datos_operativos_pozos_Datos_de_instalación\",\t                \"Datos_operativos_pozos_Carta_Nomografica\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 220,
        "wires": [
            [
                "1f3f45750a40c819"
            ]
        ]
    },
    {
        "id": "6ac4c7bc1b306c2e",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "Eléctricos",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Datos_operativos_pozos_Datos_Electricos\",\t                \"Datos_operativos_pozos_Comandos\"],\t       \"hide\":[ \"Datos_operativos_pozos_Datos_de_Proceso\",\t                \"Datos_operativos_pozos_Datos_VSD\",\t                \"Datos_operativos_pozos_Tendencias\",\t                \"Datos_operativos_pozos_AVAS\",\t                \"Datos_operativos_pozos_Carta_Amperimetrica\",\t                \"Datos_operativos_pozos_Grafica_IPR\",\t                \"Datos_operativos_pozos_Estado_mecánico\",\t                \"Datos_operativos_pozos_Propiedades_de_flujo\",\t                \"Datos_operativos_pozos_Pruebas_de_producción\",\t                \"Datos_operativos_pozos_Datos_de_instalación\",\t                \"Datos_operativos_pozos_Carta_Nomografica\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 300,
        "wires": [
            [
                "54d16bfaedad9ae5"
            ]
        ]
    },
    {
        "id": "c6f170b7e699da0a",
        "type": "link in",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "",
        "links": [
            "b56aa71999519568"
        ],
        "x": 295,
        "y": 280,
        "wires": [
            [
                "580975393b9d99d0",
                "026025b92bfab22d",
                "1885ef576f819e30"
            ]
        ]
    },
    {
        "id": "dad03e8d0c8f47ad",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "tendencias",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Datos_operativos_pozos_Tendencias\"],\t       \"hide\":[ \"Datos_operativos_pozos_Datos_de_Proceso\",\t                \"Datos_operativos_pozos_Datos_VSD\",\t                \"Datos_operativos_pozos_Datos_Electricos\",\t                \"Datos_operativos_pozos_AVAS\",\t                \"Datos_operativos_pozos_Comandos\",\t                \"Datos_operativos_pozos_Carta_Amperimetrica\",\t                \"Datos_operativos_pozos_Grafica_IPR\",\t                \"Datos_operativos_pozos_Estado_mecánico\",\t                \"Datos_operativos_pozos_Propiedades_de_flujo\",\t                \"Datos_operativos_pozos_Pruebas_de_producción\",\t                \"Datos_operativos_pozos_Datos_de_instalación\",\t                \"Datos_operativos_pozos_Carta_Nomografica\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 340,
        "wires": [
            [
                "36415da3bc5cfb3f"
            ]
        ]
    },
    {
        "id": "54d16bfaedad9ae5",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "",
        "links": [
            "82aa836a1d0ebabd"
        ],
        "x": 1215,
        "y": 300,
        "wires": []
    },
    {
        "id": "dd9fc11158de4d41",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "AVAS ESP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Datos_operativos_pozos_AVAS\",\t                \"Datos_operativos_pozos_Status_Bar\"],\t       \"hide\":[ \"Datos_operativos_pozos_Datos_de_Proceso\",\t                \"Datos_operativos_pozos_Datos_VSD\",\t                \"Datos_operativos_pozos_Comandos\",\t                \"Datos_operativos_pozos_Tendencias\",\t                \"Datos_operativos_pozos_Datos_Electricos\",\t                \"Datos_operativos_pozos_Carta_Nomografica\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 380,
        "wires": [
            [
                "65f3d51b20987789",
                "0f8d32d5bb39ae6e"
            ]
        ]
    },
    {
        "id": "5742c17aa56d0b81",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "AVASDATOS",
        "links": [
            "289f2de0f6488047",
            "bf70eba5de93bb5d"
        ],
        "x": 1015,
        "y": 460,
        "wires": []
    },
    {
        "id": "2b68cd765f163a22",
        "type": "ui_template",
        "z": "a409994f70cf4cc4",
        "g": "916a665ce9bddd15",
        "group": "d2786796c53c5c34",
        "name": "Navegacion datos operativos",
        "order": 1,
        "width": 24,
        "height": 1,
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-Camp-tab\" data-toggle=\"tab\" href=\"#nav-Camp\" role=\"tab\"\n                aria-controls=\"nav-Camp\" aria-selected=\"false\" ng-click=\"send({payload:Camp()})\">Carta Amperimetrica</a>\n            <a class=\"nav-item nav-link\" id=\"nav-grafipr-tab\" data-toggle=\"tab\" href=\"#nav-grafipr\" role=\"tab\"\n                aria-controls=\"nav-grafipr\" aria-selected=\"false\" ng-click=\"send({payload:grafipr()})\">Grafica IPR</a>\n            <a class=\"nav-item nav-link\" id=\"nav-AjusteAvas-tab\" data-toggle=\"tab\" href=\"#nav-AjusteAvas\" role=\"tab\"\n                aria-controls=\"nav-AjusteAvas\" aria-selected=\"false\" ng-click=\"send({payload:AjusteAvas()})\">Ajustes AVAS®</a>\n        </div>\n    </nav>\n\n    <script>\n        this.scope.Camp = function() { return \"Carta Amperi\"; };\n        this.scope.grafipr = function() { return \"Graf\"; };\n        this.scope.AjusteAvas = function() { return \"Ajuste Avas\"; };\n\n    </script>\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 240,
        "y": 590,
        "wires": [
            [
                "771206a08176d42f"
            ]
        ]
    },
    {
        "id": "771206a08176d42f",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "916a665ce9bddd15",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Carta Amperi",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Graf",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Ajuste Avas",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 430,
        "y": 590,
        "wires": [
            [
                "0f8d32d5bb39ae6e"
            ],
            [
                "84edc52e87b4b522"
            ],
            [
                "ade7f0c695edaa88"
            ]
        ]
    },
    {
        "id": "0f8d32d5bb39ae6e",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "916a665ce9bddd15",
        "name": "Datos O Amperimetrica",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Datos_operativos_pozos_Carta_Amperimetrica\"],\t       \"hide\":[ \"Datos_operativos_pozos_Datos_de_Proceso\",\t                \"Datos_operativos_pozos_Comandos\",\t                \"Datos_operativos_pozos_Datos_VSD\",\t                \"Datos_operativos_pozos_Tendencias\",\t                \"Datos_operativos_pozos_Datos_Electricos\",\t                \"Datos_operativos_pozos_Grafica_IPR\",\t                \"Datos_operativos_pozos_Estado_mecánico\",\t                \"Datos_operativos_pozos_Propiedades_de_flujo\",\t                \"Datos_operativos_pozos_Pruebas_de_producción\",\t                \"Datos_operativos_pozos_Datos_de_instalación\",\t                \"Datos_operativos_pozos_Carta_Nomografica\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 550,
        "wires": [
            [
                "cfd84f9227a1866b"
            ]
        ]
    },
    {
        "id": "84edc52e87b4b522",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "916a665ce9bddd15",
        "name": "Datos O Grafica IPR",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Datos_operativos_pozos_Grafica_IPR\"],\t       \"hide\":[ \"Datos_operativos_pozos_Datos_de_Proceso\",\t                \"Datos_operativos_pozos_Datos_VSD\",\t                \"Datos_operativos_pozos_Comandos\",\t                \"Datos_operativos_pozos_Tendencias\",\t                \"Datos_operativos_pozos_Datos_Electricos\",\t                \"Datos_operativos_pozos_Carta_Amperimetrica\",\t                \"Datos_operativos_pozos_Estado_mecánico\",\t                \"Datos_operativos_pozos_Propiedades_de_flujo\",\t                \"Datos_operativos_pozos_Pruebas_de_producción\",\t                \"Datos_operativos_pozos_Datos_de_instalación\",\t                \"Datos_operativos_pozos_Carta_Nomografica\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 590,
        "wires": [
            [
                "49ebb1a96b8ab07b"
            ]
        ]
    },
    {
        "id": "1f3f45750a40c819",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "",
        "links": [
            "82aa836a1d0ebabd"
        ],
        "x": 1215,
        "y": 220,
        "wires": []
    },
    {
        "id": "386399794e5984dd",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "",
        "links": [
            "82aa836a1d0ebabd"
        ],
        "x": 1215,
        "y": 260,
        "wires": []
    },
    {
        "id": "36415da3bc5cfb3f",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "",
        "links": [
            "82aa836a1d0ebabd"
        ],
        "x": 1215,
        "y": 340,
        "wires": []
    },
    {
        "id": "65f3d51b20987789",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "",
        "links": [
            "82aa836a1d0ebabd"
        ],
        "x": 1335,
        "y": 380,
        "wires": []
    },
    {
        "id": "cfd84f9227a1866b",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "916a665ce9bddd15",
        "name": "",
        "links": [
            "82aa836a1d0ebabd",
            "a908951142dcc258"
        ],
        "x": 775,
        "y": 550,
        "wires": []
    },
    {
        "id": "49ebb1a96b8ab07b",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "916a665ce9bddd15",
        "name": "",
        "links": [
            "82aa836a1d0ebabd",
            "a908951142dcc258"
        ],
        "x": 775,
        "y": 590,
        "wires": []
    },
    {
        "id": "ade7f0c695edaa88",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "916a665ce9bddd15",
        "name": "Datos O Ajuste AVAS",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Datos_operativos_pozos_Estado_mecánico\",\t                \"Datos_operativos_pozos_Propiedades_de_flujo\",\t                \"Datos_operativos_pozos_Pruebas_de_producción\",\t                \"Datos_operativos_pozos_Datos_de_instalación\"],\t       \"hide\":[ \"Datos_operativos_pozos_Datos_de_Proceso\",\t                \"Datos_operativos_pozos_Datos_VSD\",\t                \"Datos_operativos_pozos_Comandos\",\t                \"Datos_operativos_pozos_Tendencias\",\t                \"Datos_operativos_pozos_Datos_Electricos\",\t                \"Datos_operativos_pozos_Carta_Amperimetrica\",\t                \"Datos_operativos_pozos_Grafica_IPR\",\t                \"Datos_operativos_pozos_Carta_Nomografica\"]\t   \t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 630,
        "wires": [
            [
                "8c284c7bfec72391"
            ]
        ]
    },
    {
        "id": "8c284c7bfec72391",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "916a665ce9bddd15",
        "name": "",
        "links": [
            "82aa836a1d0ebabd",
            "a908951142dcc258"
        ],
        "x": 775,
        "y": 630,
        "wires": []
    },
    {
        "id": "0f18939cc28af552",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "else"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 360,
        "wires": [
            [
                "9e66bdb34193b06f",
                "580975393b9d99d0",
                "026025b92bfab22d"
            ],
            [
                "1885ef576f819e30",
                "2e03f1e1d51af15d"
            ]
        ]
    },
    {
        "id": "dfa4869f829aa22a",
        "type": "link in",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "",
        "links": [
            "e2dddcc8.8c593",
            "f076a6093ffd53e0"
        ],
        "x": 185,
        "y": 360,
        "wires": [
            [
                "0f18939cc28af552"
            ]
        ]
    },
    {
        "id": "1885ef576f819e30",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "VSD",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[\"Datos_operativos_Selección\"],\t       \"hide\":[ \"Datos_operativos_pozos_Datos_Electricos\",\t                \"Datos_operativos_pozos_Datos_de_Proceso\",\t                \"Datos_operativos_pozos_Tendencias\",\t                \"Datos_operativos_pozos_AVAS\",\t                \"Datos_operativos_pozos_Carta_Amperimetrica\",\t                \"Datos_operativos_pozos_Grafica_IPR\",\t                \"Datos_operativos_pozos_Estado_mecánico\",\t                \"Datos_operativos_pozos_Propiedades_de_flujo\",\t                \"Datos_operativos_pozos_Pruebas_de_producción\",\t                \"Datos_operativos_pozos_Datos_de_instalación\",\t                \"Datos_operativos_pozos_Datos_VSD\",\t                \"Datos_operativos_pozos_Comandos\",\t                \"Datos_operativos_Status_Bar\",\t                \"Datos_operativos_pozos_Datos_operativos\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 360,
        "wires": [
            [
                "98df19f4a197ebdc"
            ]
        ]
    },
    {
        "id": "8d8de6d5df9618b6",
        "type": "inject",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 190,
        "y": 430,
        "wires": [
            [
                "0f18939cc28af552"
            ]
        ]
    },
    {
        "id": "580975393b9d99d0",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "VSD",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Datos_operativos_pozos_Datos_operativos\",\t                \"Datos_operativos_pozos_Datos_VSD\",\t                \"Datos_operativos_pozos_Comandos\"],\t       \"hide\":[ \"Datos_operativos_pozos_Datos_Electricos\",\t                \"Datos_operativos_pozos_Datos_de_Proceso\",\t                \"Datos_operativos_pozos_Tendencias\",\t                \"Datos_operativos_pozos_AVAS\",\t                \"Datos_operativos_pozos_Carta_Amperimetrica\",\t                \"Datos_operativos_pozos_Grafica_IPR\",\t                \"Datos_operativos_pozos_Estado_mecánico\",\t                \"Datos_operativos_pozos_Propiedades_de_flujo\",\t                \"Datos_operativos_pozos_Pruebas_de_producción\",\t                \"Datos_operativos_pozos_Datos_de_instalación\",\t                \"Datos_operativos_Status_Bar\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 280,
        "wires": [
            [
                "98df19f4a197ebdc"
            ]
        ]
    },
    {
        "id": "9e66bdb34193b06f",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "enabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 320,
        "wires": [
            [
                "f28b0c02d8fcb7fb"
            ]
        ]
    },
    {
        "id": "2e03f1e1d51af15d",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "disabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 400,
        "wires": [
            [
                "f28b0c02d8fcb7fb"
            ]
        ]
    },
    {
        "id": "98df19f4a197ebdc",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "",
        "links": [
            "82aa836a1d0ebabd"
        ],
        "x": 535,
        "y": 240,
        "wires": []
    },
    {
        "id": "fb5172f3d8de2409",
        "type": "link in",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "",
        "links": [
            "b6cdbd2497da75f7"
        ],
        "x": 375,
        "y": 440,
        "wires": [
            [
                "2962ad0593f9a46d"
            ]
        ]
    },
    {
        "id": "2962ad0593f9a46d",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "tipoL",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 440,
        "wires": [
            [
                "ad4290b679c0ab31"
            ],
            [
                "ad4290b679c0ab31"
            ]
        ]
    },
    {
        "id": "a2d67a33a3f24010",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "AVAS PCP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Datos_operativos_pozos_Carta_Nomografica\"],\t       \"hide\":[ \"Datos_operativos_pozos_Datos_de_Proceso\",\t                \"Datos_operativos_pozos_Datos_VSD\",\t                \"Datos_operativos_pozos_Comandos\",\t                \"Datos_operativos_pozos_Tendencias\",\t                \"Datos_operativos_pozos_Datos_Electricos\",\t                \"Datos_operativos_pozos_Grafica_IPR\",\t                \"Datos_operativos_pozos_Estado_mecánico\",\t                \"Datos_operativos_pozos_Propiedades_de_flujo\",\t                \"Datos_operativos_pozos_Pruebas_de_producción\",\t                \"Datos_operativos_pozos_Datos_de_instalación\",\t                \"Datos_operativos_pozos_Carta_Amperimetrica\",\t                \"Datos_operativos_pozos_Estado_mecánico\",\t                \"Datos_operativos_pozos_Propiedades_de_flujo\",\t                \"Datos_operativos_pozos_Pruebas_de_producción\",\t                \"Datos_operativos_pozos_Datos_de_instalación\",\t                \"Datos_operativos_pozos_Status_Bar\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1210,
        "y": 420,
        "wires": [
            [
                "65f3d51b20987789"
            ]
        ]
    },
    {
        "id": "ad4290b679c0ab31",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::TipoL",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "5fde4cc2805bfbe8",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "PCP",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1050,
        "y": 420,
        "wires": [
            [
                "a2d67a33a3f24010"
            ]
        ]
    },
    {
        "id": "84aff144b0f6a8ab",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "adb0e39f299e229e",
        "name": "ESP",
        "property": "#:(memoryOnly)::TipoL",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1050,
        "y": 380,
        "wires": [
            [
                "dd9fc11158de4d41"
            ]
        ]
    },
    {
        "id": "4641720708496aa9",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "ref",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Input.Operation.Reference",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 790,
        "wires": [
            []
        ]
    },
    {
        "id": "a5c74628a83ee68e",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "ref",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::Input.Operation.Reference",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 850,
        "wires": [
            [
                "6a5e97a622279002"
            ]
        ]
    },
    {
        "id": "08970c3b488db87e",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "lims?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "C2S.Speed_Control.MaxLimit",
                "vt": "global"
            },
            {
                "t": "lt",
                "v": "C2S.Speed_Control.MinLimit",
                "vt": "global"
            },
            {
                "t": "btwn",
                "v": "C2S.Speed_Control.MinLimit",
                "vt": "global",
                "v2": "C2S.Speed_Control.MaxLimit",
                "v2t": "global"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1270,
        "y": 850,
        "wires": [
            [
                "00603f7ee26f47c0"
            ],
            [
                "00603f7ee26f47c0"
            ],
            [
                "8a37dcc9e4438586",
                "d2ae96cc06b64dac"
            ]
        ]
    },
    {
        "id": "6f75932b752b18f2",
        "type": "function",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "evento ref fuera lims",
        "func": "msg.payload = \"¡Referencia de \"+ msg.payload + \" RPM fuera de límites\";\nmsg.topic = \"Referencia\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1600,
        "y": 770,
        "wires": [
            [
                "c94c71ac1452ba53"
            ]
        ]
    },
    {
        "id": "87674c535db912b2",
        "type": "function",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "Ref OK",
        "func": "var sentidogiro = global.get(\"C2S.Drive_Status.Command_dir\",\"memoryOnly\")||0;\nmsg.payload = \"Cambio de referencia a \"+ Math.abs(msg.payload) + \" RPM\";\nmsg.topic = \"Referencia\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2000,
        "y": 830,
        "wires": [
            [
                "af8d909c4fa0f30c"
            ]
        ]
    },
    {
        "id": "ef357e33d425edee",
        "type": "delay",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1560,
        "y": 850,
        "wires": [
            [
                "13bcf2270b33d6fc"
            ]
        ]
    },
    {
        "id": "73a102f1b67894b1",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "send ref?",
        "property": "verify",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1860,
        "y": 850,
        "wires": [
            [
                "87674c535db912b2",
                "7dd9656b276d78c2"
            ],
            [
                "f68be95574cabb90"
            ]
        ]
    },
    {
        "id": "f68be95574cabb90",
        "type": "function",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "Ref Fail",
        "func": "msg.payload = \"Falla de comunicación, referencia no recibida\";\nmsg.topic = \"Referencia\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2000,
        "y": 870,
        "wires": [
            [
                "f7f620d7b77ae8ee"
            ]
        ]
    },
    {
        "id": "52640c3d094c8889",
        "type": "link in",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "retroalim referencia",
        "links": [
            "af8d909c4fa0f30c",
            "f7f620d7b77ae8ee",
            "c94c71ac1452ba53",
            "3484e5233d4f23d3"
        ],
        "x": 505,
        "y": 780,
        "wires": [
            [
                "7af017c6bf89dea3"
            ]
        ]
    },
    {
        "id": "af8d909c4fa0f30c",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "",
        "links": [
            "52640c3d094c8889",
            "207ea8ce.3dea68",
            "2da816b7.b2be9a"
        ],
        "x": 2095,
        "y": 830,
        "wires": []
    },
    {
        "id": "bc13f228fa4f0134",
        "type": "link in",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "",
        "links": [
            "b56aa71999519568"
        ],
        "x": 215,
        "y": 800,
        "wires": [
            [
                "a04a534b2cea732b"
            ]
        ]
    },
    {
        "id": "f7f620d7b77ae8ee",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "",
        "links": [
            "2da816b7.b2be9a",
            "cbbbcd1c.7180e",
            "52640c3d094c8889"
        ],
        "x": 2095,
        "y": 870,
        "wires": []
    },
    {
        "id": "c94c71ac1452ba53",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "",
        "links": [
            "abe8a848.bbbd88",
            "cbbbcd1c.7180e",
            "52640c3d094c8889"
        ],
        "x": 1735,
        "y": 770,
        "wires": []
    },
    {
        "id": "afec5585df61fd83",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "",
        "links": [
            "b5e6e9fe23ea88d7",
            "7a4d75b8.711dac",
            "fb528297.8cba4",
            "c788660f.488af8",
            "9f8f81b08fb20231",
            "fb3f8ca2.2a316",
            "501b4196.e2e16",
            "5f3854df5c8e1ca8",
            "7a4e451ab684e295",
            "4391f93affafd7a8",
            "07f261ede4e6a991"
        ],
        "x": 385,
        "y": 800,
        "wires": []
    },
    {
        "id": "3a341cdb16c7362e",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "disable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 860,
        "wires": [
            [
                "828938fc392c967c",
                "464f310713eff7a8"
            ]
        ]
    },
    {
        "id": "04b7d2e07e7ee6cd",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "enable",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 820,
        "wires": [
            [
                "828938fc392c967c",
                "464f310713eff7a8"
            ]
        ]
    },
    {
        "id": "037a44616c11133a",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "user?",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 420,
        "y": 840,
        "wires": [
            [
                "04b7d2e07e7ee6cd"
            ],
            [
                "3a341cdb16c7362e"
            ]
        ]
    },
    {
        "id": "664ecd56b5ea6db8",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "delete",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 840,
        "wires": [
            [
                "037a44616c11133a"
            ]
        ]
    },
    {
        "id": "9f8f81b08fb20231",
        "type": "link in",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "",
        "links": [
            "afec5585df61fd83",
            "d9e918f.b47e7e8",
            "9acb8447.7a7a98"
        ],
        "x": 135,
        "y": 840,
        "wires": [
            [
                "664ecd56b5ea6db8"
            ]
        ]
    },
    {
        "id": "13bcf2270b33d6fc",
        "type": "function",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "Sts Ref",
        "func": "var Commanded_SpdRef    = parseFloat((Math.abs(global.get(\"C2S.Implicit.Commanded_RPMRef\",\"memoryOnly\")||0)).toFixed(0));\nvar Reference           = global.get(\"Input.Operation.Reference\",\"memoryOnly\")||0;\n\nif (Commanded_SpdRef == Reference)\n    msg.verify=1;\nelse\n    msg.verify = 0;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 850,
        "wires": [
            [
                "73a102f1b67894b1"
            ]
        ]
    },
    {
        "id": "a04a534b2cea732b",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "home",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Datos operativos pozos",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 300,
        "y": 800,
        "wires": [
            [
                "afec5585df61fd83"
            ]
        ]
    },
    {
        "id": "7af017c6bf89dea3",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "delete",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 780,
        "wires": [
            [
                "828938fc392c967c"
            ]
        ]
    },
    {
        "id": "7dd9656b276d78c2",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "tracking ref/remoto",
        "links": [
            "730f767fbc450987",
            "f019fd4bc21346f1",
            "7d21f05bb26114a5",
            "f61f03a556d40cc2"
        ],
        "x": 1955,
        "y": 780,
        "wires": []
    },
    {
        "id": "98c58797b7e19de3",
        "type": "function",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "ref first time",
        "func": "var ref = global.get(\"C2S.Last_Reference.Value\")||\"none\";\nif (ref == \"none\"){global.set(\"C2S.Last_Reference.Value\",msg.payload);\nreturn msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1570,
        "y": 810,
        "wires": [
            [
                "7dd9656b276d78c2"
            ]
        ]
    },
    {
        "id": "f5bb60a58e8e31f4",
        "type": "inject",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "tracking manual",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "C2S.Last_Reference.Value",
        "payloadType": "global",
        "x": 1640,
        "y": 720,
        "wires": [
            [
                "7dd9656b276d78c2"
            ]
        ]
    },
    {
        "id": "00603f7ee26f47c0",
        "type": "function",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "Hz/RPM",
        "func": "var rpmplaca = global.get(\"C2S.Motor_Control.Nameplate.RPM\") || 1800;\nvar hzplaca = global.get(\"C2S.Motor_Control.Nameplate.Hertz\") || 60;\nvar relred = global.get(\"C2S.RelTx\") || 1;\n\nmsg.payload = (msg.payload*rpmplaca)/(hzplaca*relred);\nmsg.payload = parseFloat(msg.payload.toFixed(0));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 770,
        "wires": [
            [
                "6f75932b752b18f2"
            ]
        ]
    },
    {
        "id": "6a5e97a622279002",
        "type": "function",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "RPM/Hz",
        "func": "var rpmplaca = global.get(\"C2S.Motor_Control.Nameplate.RPM\") || 1800;\nvar hzplaca = global.get(\"C2S.Motor_Control.Nameplate.Hertz\") || 60;\nvar relred = global.get(\"C2S.RelTx\") || 1;\n\nmsg.payload = (msg.payload*hzplaca*relred)/rpmplaca;\nmsg.payload = parseFloat(msg.payload.toFixed(3));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 850,
        "wires": [
            [
                "08970c3b488db87e"
            ]
        ]
    },
    {
        "id": "8a37dcc9e4438586",
        "type": "function",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "Hz/RPM",
        "func": "var rpmplaca = global.get(\"C2S.Motor_Control.Nameplate.RPM\") || 1800;\nvar hzplaca = global.get(\"C2S.Motor_Control.Nameplate.Hertz\") || 60;\nvar relred = global.get(\"C2S.RelTx\") || 1;\n\nmsg.payload = (msg.payload*rpmplaca)/(hzplaca*relred);\nmsg.payload = parseFloat(msg.payload.toFixed(0));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 810,
        "wires": [
            []
        ]
    },
    {
        "id": "d2ae96cc06b64dac",
        "type": "function",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "Hz/RPM",
        "func": "var rpmplaca = global.get(\"C2S.Motor_Control.Nameplate.RPM\") || 1800;\nvar hzplaca = global.get(\"C2S.Motor_Control.Nameplate.Hertz\") || 60;\nvar relred = global.get(\"C2S.RelTx\") || 1;\n\nmsg.payload = (msg.payload*rpmplaca)/(hzplaca*relred);\nmsg.payload = parseFloat(msg.payload.toFixed(0));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 850,
        "wires": [
            [
                "ef357e33d425edee"
            ]
        ]
    },
    {
        "id": "828938fc392c967c",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "InReferencia",
        "links": [
            "4c25ebc9a7274f4f"
        ],
        "x": 695,
        "y": 750,
        "wires": []
    },
    {
        "id": "464f310713eff7a8",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "InConfirmar",
        "links": [
            "8f8700d32def862c"
        ],
        "x": 765,
        "y": 840,
        "wires": []
    },
    {
        "id": "81cb7f1c79a9d974",
        "type": "link in",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "ReferenceChange",
        "links": [
            "70e604724d00732d"
        ],
        "x": 875,
        "y": 790,
        "wires": [
            [
                "4641720708496aa9"
            ]
        ]
    },
    {
        "id": "236bdf2185357ce8",
        "type": "link in",
        "z": "a409994f70cf4cc4",
        "g": "a01d98e6e8680a8e",
        "name": "ConfirmChange",
        "links": [
            "92f4bdfbeb46ff5d"
        ],
        "x": 875,
        "y": 850,
        "wires": [
            [
                "a5c74628a83ee68e"
            ]
        ]
    },
    {
        "id": "890323f.ee684e",
        "type": "ui_template",
        "z": "a409994f70cf4cc4",
        "g": "e98dc6a9.24ece8",
        "group": "640751456ebda7f5",
        "name": "Menu Eventos y alarmas",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-event-tab\" data-toggle=\"tab\" href=\"#nav-event\" role=\"tab\"\n                aria-controls=\"nav-event\" aria-selected=\"true\" ng-click=\"send({payload:event()})\">Eventos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-alarm-tab\" data-toggle=\"tab\" href=\"#nav-alarm\" role=\"tab\" \n                aria-controls=\"nav-alarm\" aria-selected=\"false\" ng-click=\"send({payload:alarm()})\">Alarmas</a>\n            \n        </div>\n    </nav>\n\n    <script>\n        this.scope.alarm = function() { return \"alarmas\"; };\n        this.scope.event = function() { return \"eventos\"; };\n        \n        \n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 230,
        "y": 1060,
        "wires": [
            [
                "3031a06c.c602b"
            ]
        ]
    },
    {
        "id": "3031a06c.c602b",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "eventos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "alarmas",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 420,
        "y": 1060,
        "wires": [
            [
                "2e850658b0f5a639"
            ],
            [
                "2f580b82.d69ec4"
            ]
        ]
    },
    {
        "id": "36981e1d.3c8802",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Eventos y Alarmas",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 220,
        "y": 1000,
        "wires": [
            [
                "dcd696d0.332638"
            ]
        ]
    },
    {
        "id": "b3363f6b.8bce4",
        "type": "link in",
        "z": "a409994f70cf4cc4",
        "g": "e98dc6a9.24ece8",
        "name": "Menú Entradas/Salidas SWCPRO",
        "links": [
            "b56aa71999519568",
            "dc640e015754eebd"
        ],
        "x": 135,
        "y": 1000,
        "wires": [
            [
                "36981e1d.3c8802"
            ]
        ]
    },
    {
        "id": "dcd696d0.332638",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "e98dc6a9.24ece8",
        "name": "usuario",
        "property": "#:(memoryOnly)::UserStatus",
        "propertyType": "global",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 1000,
        "wires": [
            [
                "2e850658b0f5a639"
            ],
            [
                "025780450e2aef6f"
            ]
        ]
    },
    {
        "id": "c98bd2dc.e9d39",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "e98dc6a9.24ece8",
        "name": "Menú Entradas/Salidas SWCPRO",
        "links": [
            "82aa836a1d0ebabd",
            "e04b904dc4a17411",
            "44e0e07ede65597e"
        ],
        "x": 755,
        "y": 1050,
        "wires": []
    },
    {
        "id": "2f580b82.d69ec4",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "e98dc6a9.24ece8",
        "name": "menu usuario",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Alarmas/Eventos_Eventos\"],\t       \"show\":[ \"Alarmas/Eventos_Status_Bar\",\t                \"Alarmas/Eventos_Alarmas\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1060,
        "wires": [
            [
                "c98bd2dc.e9d39"
            ]
        ]
    },
    {
        "id": "025780450e2aef6f",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "d": true,
        "g": "e98dc6a9.24ece8",
        "name": "No user",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tabs\":\t    {\"hide\":\t        [\t        \"Datos_operativos_pozos\",\t        \"Tendencias\",\t        \"Datos_de_fondo\",\t        \"Estado_CCP\",\t        \"Configuración_clúster\",\t        \"Instrumentación_manifold\",\t        \"Instrumentación_pozos\",\t        \"Datos_históricos\"\t        ],\t    \"show\":\t        [\t        \"Usuarios\",\t        \"Despliegue_general\",\t        \"Datos_eléctricos_clúster\",\t        \"Alarmas/Eventos\"\t\t        ]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1020,
        "wires": [
            [
                "c98bd2dc.e9d39"
            ]
        ]
    },
    {
        "id": "2e850658b0f5a639",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "e98dc6a9.24ece8",
        "name": "menu usuario",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Alarmas/Eventos_Alarmas\"],\t       \"show\":[ \"Alarmas/Eventos_Status_Bar\",\t                \"Alarmas/Eventos_Eventos\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 980,
        "wires": [
            [
                "c98bd2dc.e9d39"
            ]
        ]
    },
    {
        "id": "9bf920288bfd3453",
        "type": "link in",
        "z": "a409994f70cf4cc4",
        "g": "e98dc6a9.24ece8",
        "name": "",
        "links": [
            "b56aa71999519568"
        ],
        "x": 445,
        "y": 960,
        "wires": [
            [
                "2e850658b0f5a639"
            ]
        ]
    },
    {
        "id": "8690aa402dcf2f44",
        "type": "ui_template",
        "z": "a409994f70cf4cc4",
        "g": "0439b4a0bf2b8cc0",
        "group": "71e771845bd3dfa2",
        "name": "Navegacion Configuración Cluster",
        "order": 1,
        "width": 24,
        "height": 1,
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-pozos-tab\" data-toggle=\"tab\" href=\"#nav-pozos\" role=\"tab\"\n                aria-controls=\"nav-pozos\" aria-selected=\"true\" ng-click=\"send({payload:pozos()})\">Configuración de pozos</a>\n            <a class=\"nav-item nav-link\" id=\"nav-Shutdown-tab\" data-toggle=\"tab\" href=\"#nav-Shutdown\" role=\"tab\" \n                aria-controls=\"nav-Shutdown\" aria-selected=\"false\" ng-click=\"send({payload:Shutdown()})\">Lógica de Shutdown</a>\n            \n        </div>\n    </nav>\n\n    <script>\n        this.scope.pozos = function() { return \"pozos\"; };\n        this.scope.Shutdown = function() { return \"Shutdown\"; };\n        \n        \n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 260,
        "y": 1200,
        "wires": [
            [
                "795829f35bfa2a77"
            ]
        ]
    },
    {
        "id": "795829f35bfa2a77",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "0439b4a0bf2b8cc0",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "pozos",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Shutdown",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 1200,
        "wires": [
            [
                "0fb23fe07e982c62"
            ],
            [
                "24bea420055f801b"
            ]
        ]
    },
    {
        "id": "0fb23fe07e982c62",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "0439b4a0bf2b8cc0",
        "name": "Configuración de pozos",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Configuración_clúster_CONFIGURACIÓN\",\t                \"Configuración_clúster_POZOS_CONFIGURADOS\"],\t       \"hide\":[ \"Configuración_clúster_ESTADO_PERMISIVOS_DE_SHUTDOWN\",\t                \"Configuración_clúster_CONFIGURACIÓN_DE_SHUTDOWN_GENERAL_DE_POZOS\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 1180,
        "wires": [
            [
                "66f51e8cdf3572d1"
            ]
        ]
    },
    {
        "id": "66f51e8cdf3572d1",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "0439b4a0bf2b8cc0",
        "name": "",
        "links": [
            "82aa836a1d0ebabd",
            "a908951142dcc258"
        ],
        "x": 795,
        "y": 1180,
        "wires": []
    },
    {
        "id": "be1489e57b9c2385",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "0439b4a0bf2b8cc0",
        "name": "",
        "links": [
            "82aa836a1d0ebabd",
            "a908951142dcc258"
        ],
        "x": 795,
        "y": 1220,
        "wires": []
    },
    {
        "id": "24bea420055f801b",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "0439b4a0bf2b8cc0",
        "name": "Lógica de shutdown",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Configuración_clúster_CONFIGURACIÓN\",\t                \"Configuración_clúster_POZOS_CONFIGURADOS\"],\t       \"show\":[ \"Configuración_clúster_ESTADO_PERMISIVOS_DE_SHUTDOWN\",\t                \"Configuración_clúster_CONFIGURACIÓN_DE_SHUTDOWN_GENERAL_DE_POZOS\"\t       ]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 1220,
        "wires": [
            [
                "be1489e57b9c2385"
            ]
        ]
    },
    {
        "id": "2b6a469ea59143dc",
        "type": "link in",
        "z": "a409994f70cf4cc4",
        "g": "0439b4a0bf2b8cc0",
        "name": "",
        "links": [
            "b56aa71999519568"
        ],
        "x": 505,
        "y": 1150,
        "wires": [
            [
                "0fb23fe07e982c62"
            ]
        ]
    },
    {
        "id": "2f5c3ac13667c918",
        "type": "inject",
        "z": "496d98c4c50cacbb",
        "g": "af59ebdb307f926a",
        "name": "Arranque de sistema",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 260,
        "y": 360,
        "wires": [
            [
                "449b37406b29dc93"
            ]
        ]
    },
    {
        "id": "b8e3d64d87828004",
        "type": "ui_ui_control",
        "z": "496d98c4c50cacbb",
        "g": "03598c96d1c54dd4",
        "name": "",
        "events": "change",
        "x": 250,
        "y": 210,
        "wires": [
            [
                "327a194a22918b10",
                "dc640e015754eebd"
            ]
        ]
    },
    {
        "id": "dc640e015754eebd",
        "type": "link out",
        "z": "496d98c4c50cacbb",
        "g": "03598c96d1c54dd4",
        "name": "UI-Control Out",
        "links": [
            "014e809185179741",
            "11379727.11b049",
            "2b47642.2404d9c",
            "3157c937b070fc59",
            "3dc16724.814948",
            "3df3dfb.cab992",
            "408b9f1.9bbfd6",
            "68f55546e9d05ca2",
            "78a30fea.3bcb2",
            "8c5351d8.97256",
            "8db3135a85f1fab1",
            "9a4e1f31c48da3ad",
            "aeb29ded9a6b39dc",
            "b3363f6b.8bce4",
            "c8dda58c.1ca2c8",
            "c982f81bb2232785",
            "d35710bff3d93d90",
            "dc19234d7f6c1436",
            "dd0739fd9e6348e6",
            "fd328934.0ddd18",
            "ffb8c84.3759b38",
            "3ce715046fc9e875",
            "11a5dcd.037cc23",
            "0d38acc234ba861f",
            "eeb74e26.02437",
            "c3b346abb490ca68",
            "2f0ccd3aedeb8b83",
            "71beaca74e8fe767",
            "d5003268072de1ac",
            "a7f401bea33a0d89",
            "12a3282355da9439",
            "a1c5e02a9d683eb4",
            "bd85cd0b58402731",
            "51d66341.8ee0fc",
            "87a1714e5207dcca",
            "87a1714e5207dcca",
            "813225a91f693b96",
            "19bb8322d8993c2c",
            "b5196ac6c64107ba",
            "bcc7308cbb92b877",
            "61317946b2a5311c"
        ],
        "x": 395,
        "y": 210,
        "wires": []
    },
    {
        "id": "a908951142dcc258",
        "type": "link in",
        "z": "496d98c4c50cacbb",
        "g": "03598c96d1c54dd4",
        "name": "UI-Control In",
        "links": [
            "502a7e8f.2ab2d",
            "9eea6118.7b917",
            "99ae3bc8.746f48",
            "1882018b.4d179e",
            "3296d851.080568",
            "1981cd18.e62913",
            "ea1ac6a6.fda178",
            "d795f048.456e2",
            "f7333c0a.a70d3",
            "b0a2cd1a.ab273",
            "fc7e2763.e00d48",
            "63ae6ad3.b07874",
            "e6e875a0.3f91d8",
            "651fde0c.6b2e9",
            "54a6e602.e31808",
            "534cb822.fca4b8",
            "762fd542.edc83c",
            "ae913734.6c7e48",
            "1b6d3ebacefe3d37",
            "f95e46ccd8ac066d",
            "3cbd8b298714a327",
            "bbac1abcf840bd8f",
            "6b495075ed9f6eae",
            "0e7729f7643eb73e",
            "1d59f095b4eb49a5",
            "777ffb34744decce",
            "3cb555ec39e1b50a",
            "10d0df396dc90c03",
            "a5f101f20d6fd56b",
            "5d21a52d26ccb608",
            "3cbed816ab16272e",
            "f11537bccefeb4f4",
            "447a2f8ebf57eaa9",
            "3ced458164c744c3",
            "5acd401d2f46b060",
            "5b96c35d08822d6b",
            "81ed717ceb1aadc5",
            "b28bc401f803d685",
            "a9412afa244d80c4",
            "51f4349ec78e94ce",
            "cc0c2003d3682ab6",
            "7da185e7fedd8e3a",
            "ea6248a19637decd",
            "7671715ce2400a27",
            "8aaad39d4ef64c92",
            "74d005555cc84b3f",
            "4332643d0a6b63b0",
            "c147f28b2ab45092",
            "4a271e2ca58ca6a1",
            "ff1125cd2b82e0ec",
            "4f2f43bf85548225",
            "456d8841447210d0",
            "4710e959a0c7148c",
            "d88f3d46cbbb032b",
            "87e0c625dc1f235e",
            "750591425b4b9382",
            "4583e1f1b9998d50",
            "7fcb7e5298dc7ec7",
            "835790f4a6fa08bc",
            "c1cafd2a5bfcdbdb",
            "1afb4f198e0a88ca",
            "6e2936ba6432b774",
            "39a17ce608f82bf2",
            "414a065d553a911b",
            "969776d1a4b59154",
            "b2aa12d03e1df985",
            "cfd84f9227a1866b",
            "49ebb1a96b8ab07b",
            "8c284c7bfec72391",
            "66f51e8cdf3572d1",
            "be1489e57b9c2385",
            "1050ca2d9c778716",
            "dc4da1f8ed896cf5",
            "6c391847fa599acc",
            "bb3621a3ed07766a",
            "d5d8adffe7cc2752",
            "946e95ed38971380",
            "a693175dc28851ee",
            "abc9b8b81ab87e58",
            "053623fb4ec2e26f"
        ],
        "x": 155,
        "y": 210,
        "wires": [
            [
                "b8e3d64d87828004"
            ]
        ]
    },
    {
        "id": "327a194a22918b10",
        "type": "change",
        "z": "496d98c4c50cacbb",
        "g": "03598c96d1c54dd4",
        "name": "Pantalla",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegación.Pantalla",
                "pt": "global",
                "to": "name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegación.Tab",
                "pt": "global",
                "to": "tab",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 250,
        "wires": [
            []
        ]
    },
    {
        "id": "9165803bd4c9d17a",
        "type": "rbe",
        "z": "496d98c4c50cacbb",
        "g": "03598c96d1c54dd4",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 480,
        "y": 170,
        "wires": [
            [
                "dc640e015754eebd"
            ]
        ]
    },
    {
        "id": "3e15e8715278c670",
        "type": "inject",
        "z": "496d98c4c50cacbb",
        "g": "03598c96d1c54dd4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#:(memoryOnly)::Navegación.Pantalla",
        "payloadType": "global",
        "x": 280,
        "y": 170,
        "wires": [
            [
                "9165803bd4c9d17a"
            ]
        ]
    },
    {
        "id": "449b37406b29dc93",
        "type": "link out",
        "z": "496d98c4c50cacbb",
        "g": "af59ebdb307f926a",
        "name": "Inicio Node-RED",
        "links": [
            "1420ed5f1f63921f",
            "287db0c4cf9142ef",
            "2b72a9c4180ff8b9",
            "30a12ffe865f6085",
            "532ad852cf730c5e",
            "6715728a4c9caee8",
            "74fc09a63e040067",
            "795e5e30460d78e8",
            "842f3db4548827dc",
            "8c73338.8deb8d",
            "9d3496f3dae6843c",
            "aedb61ae773f8b98",
            "b4842d968b0c3490",
            "b7b2748b32448d71",
            "cc250d6b78b2ed47",
            "cf91c06f1ccda7f7",
            "d951a34afbc166af",
            "daf8bb5aaa72a3e7",
            "e09ecb75b123da6d",
            "e71faa4ec04eaaf6",
            "ed4205b9c4d90286",
            "f4f3a23e38925638",
            "fd8299462b05b6e9",
            "423ba16e.29911",
            "7d326055e2d96930",
            "b22ff88f14cdc2c9",
            "5922dbb308812a60",
            "6a7a05e6729f5b0c",
            "7475d6533538daa2",
            "279ee1694dac8740",
            "6d53d119943aea85",
            "8b4d36053dc5b2b5"
        ],
        "x": 425,
        "y": 360,
        "wires": []
    },
    {
        "id": "ccb6f10d6c8566a3",
        "type": "inject",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 740,
        "y": 200,
        "wires": [
            [
                "b845abf3cb6387ac",
                "61931b0384cfca67"
            ]
        ]
    },
    {
        "id": "61931b0384cfca67",
        "type": "delay",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 750,
        "y": 260,
        "wires": [
            [
                "dd07e29916b7db6c",
                "a56341092d74dd48"
            ]
        ]
    },
    {
        "id": "a56341092d74dd48",
        "type": "delay",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 750,
        "y": 320,
        "wires": [
            [
                "d11d9c8160729e7c",
                "c733a1aa977c67a7"
            ]
        ]
    },
    {
        "id": "c733a1aa977c67a7",
        "type": "delay",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 750,
        "y": 380,
        "wires": [
            [
                "351eccb8791a5abd",
                "f62465a51a146bc8"
            ]
        ]
    },
    {
        "id": "b845abf3cb6387ac",
        "type": "exec",
        "z": "496d98c4c50cacbb",
        "g": "cacd646bcfbdbb4d",
        "command": "sudo rm -r /root/.node-red/node_modules/node-red-dashboard/dist/icon120x120.png",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "eliminar 120 dashboard",
        "x": 1010,
        "y": 200,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "dd07e29916b7db6c",
        "type": "exec",
        "z": "496d98c4c50cacbb",
        "g": "cacd646bcfbdbb4d",
        "command": "sudo rm -r /root/.node-red/node_modules/node-red-dashboard/dist/icon192x192.png",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "eliminar 192 dashboard",
        "x": 1010,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "d11d9c8160729e7c",
        "type": "exec",
        "z": "496d98c4c50cacbb",
        "g": "cacd646bcfbdbb4d",
        "command": "sudo rm -r /root/.node-red/node_modules/node-red-dashboard/dist/icon64x64.png",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "eliminar 64 dashboard",
        "x": 1000,
        "y": 320,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "351eccb8791a5abd",
        "type": "exec",
        "z": "496d98c4c50cacbb",
        "g": "cacd646bcfbdbb4d",
        "command": "sudo rm -r /root/.node-red/node_modules/node-red-dashboard/dist/index.html",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "eliminar Index dashboard",
        "x": 1010,
        "y": 380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "3b72bc49809933f3",
        "type": "comment",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "name": "Importante",
        "info": "Tener Actualizado el folder de configuración.\ny en la ruta /home/bcpgrp/Documents",
        "x": 740,
        "y": 160,
        "wires": []
    },
    {
        "id": "33025713e95850ab",
        "type": "exec",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "command": "sudo cp -r /home/bcpgrp/Documents/FolderSWC-C_Configuration/SWC-C/Bootstrap_CSS/icon120x120.png /root/.node-red/node_modules/node-red-dashboard/dist/",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "adicionar 120 dashboard",
        "x": 1010,
        "y": 480,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "fde3563bd759beb6",
        "type": "exec",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "command": "sudo cp -r /home/bcpgrp/Documents/FolderSWC-C_Configuration/SWC-C/Bootstrap_CSS/icon192x192.png /root/.node-red/node_modules/node-red-dashboard/dist/",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "adicionar 192 dashboard",
        "x": 1010,
        "y": 540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7ab9425b5516ccbe",
        "type": "exec",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "command": "sudo cp -r /home/bcpgrp/Documents/FolderSWC-C_Configuration/SWC-C/Bootstrap_CSS/icon64x64.png /root/.node-red/node_modules/node-red-dashboard/dist/",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "adicionar 64 dashboard",
        "x": 1010,
        "y": 600,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "7b05a6d416986637",
        "type": "exec",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "command": "sudo cp -r /home/bcpgrp/Documents/FolderSWC-C_Configuration/SWC-C/Bootstrap_CSS/index.html /root/.node-red/node_modules/node-red-dashboard/dist/",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "adicionar index dashboard",
        "x": 1020,
        "y": 660,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "f62465a51a146bc8",
        "type": "delay",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 750,
        "y": 480,
        "wires": [
            [
                "33025713e95850ab",
                "800b6a8d81724146"
            ]
        ]
    },
    {
        "id": "800b6a8d81724146",
        "type": "delay",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 750,
        "y": 540,
        "wires": [
            [
                "fde3563bd759beb6",
                "5ebc9eaa4819dff0"
            ]
        ]
    },
    {
        "id": "5ebc9eaa4819dff0",
        "type": "delay",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 750,
        "y": 600,
        "wires": [
            [
                "7ab9425b5516ccbe",
                "23a64f852c94d82b"
            ]
        ]
    },
    {
        "id": "23a64f852c94d82b",
        "type": "delay",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 750,
        "y": 660,
        "wires": [
            [
                "7b05a6d416986637",
                "e5f9ddcd6e4f11fe"
            ]
        ]
    },
    {
        "id": "e5f9ddcd6e4f11fe",
        "type": "delay",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 740,
        "y": 720,
        "wires": [
            [
                "0832a6b33e1f520c"
            ]
        ]
    },
    {
        "id": "0832a6b33e1f520c",
        "type": "exec",
        "z": "496d98c4c50cacbb",
        "g": "2282018314ee7576",
        "command": "sudo reboot now",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Reiniciar controlador",
        "x": 1000,
        "y": 720,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "77d67b76.8c8804",
        "type": "inject",
        "z": "496d98c4c50cacbb",
        "g": "1d0c3cb2.7129f3",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 220,
        "y": 480,
        "wires": [
            [
                "bfa48676.a364f8"
            ]
        ]
    },
    {
        "id": "26428723.4b3e38",
        "type": "exec",
        "z": "496d98c4c50cacbb",
        "g": "1d0c3cb2.7129f3",
        "command": "sudo systemctl start kiosk",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 390,
        "y": 540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bfa48676.a364f8",
        "type": "delay",
        "z": "496d98c4c50cacbb",
        "g": "1d0c3cb2.7129f3",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 200,
        "y": 540,
        "wires": [
            [
                "26428723.4b3e38"
            ]
        ]
    },
    {
        "id": "778620cf7d9cbf3d",
        "type": "function",
        "z": "0f6919ffca89833a",
        "name": "getting data",
        "func": "// Variables de control de animación de tendencias\nvar time = msg.payload;\nvar realtime = flow.get(\"trends.realtime\", \"memoryOnly\") || null;\nvar lasthour = flow.get(\"trends.lasthour\") || null;\nvar lastday = flow.get(\"trends.lastday\") || null;\nvar counth = context.get(\"counth\",\"memoryOnly\")||0;\nvar countd = context.get(\"countd\", \"memoryOnly\") || 0;\nvar Cluster = global.get(\"Cluster\", \"memoryOnly\") || [];\nvar CCP = global.get(\"CCP\", \"memoryOnly\") || [];\n\n// Variables de CILA2S\n\nmsg.UPS_Bateria_Tiempo_Reman = (CCP.UPS_Bateria_Tiempo_Reman).toFixed(2);\nmsg.UPS_Bateria_Porc_Carga = (CCP.UPS_Bateria_Porc_Carga).toFixed(2);\nmsg.UPS_Bateria_Voltaje = (CCP.UPS_Bateria_Voltaje).toFixed(1);\nmsg.Voltaje_L_L_Pro = (Cluster.PQM.Voltaje_L_L_Pro).toFixed(1);\nmsg.Voltaje_L1_L2 = (Cluster.PQM.Voltaje_L1_L2).toFixed(1);\nmsg.Voltaje_L2_L3 = (Cluster.PQM.Voltaje_L2_L3).toFixed(1);\nmsg.Voltaje_L1_L3 = (Cluster.PQM.Voltaje_L1_L3).toFixed(1);\nmsg.Voltaje_L_N_Pro = (Cluster.PQM.Voltaje_L_N_Pro).toFixed(1);\nmsg.Voltaje_L2_N = (Cluster.PQM.Voltaje_L2_N).toFixed(1);\nmsg.FIT_Flujo = (Cluster.INST_MNF.FIT_Flujo).toFixed(1);\nmsg.FIT_Flujo_Total = (Cluster.INST_MNF.FIT_Flujo_Total).toFixed(1);\nmsg.FIT_Densidad = (Cluster.INST_MNF.FIT_Densidad).toFixed(1);\nmsg.FIT_Tempetatura = (Cluster.INST_MNF.FIT_Tempetatura).toFixed(1);\nmsg.PIT_Presion = (Cluster.INST_MNF.PIT_Presion).toFixed(1);\nmsg.Amp_Pro = (Cluster.PQM.Amp_Pro).toFixed(1);\nmsg.KWATT_Act_Pro = (Cluster.PQM.KWATT_Act_Pro).toFixed(1);\nmsg.KVA_Act_Pro = (Cluster.PQM.KVA_Act_Pro).toFixed(1);\nmsg.KVAr_Act_Pro = (Cluster.PQM.KVAr_Act_Pro).toFixed(1);\nmsg.FP_Pro = (Cluster.PQM.FP_Pro).toFixed(1);\nmsg.THD_I_Pro = (Cluster.PQM.THD_I_Pro).toFixed(1);\nmsg.THD_V_Pro = (Cluster.PQM.THD_V_Pro).toFixed(1);\n\nif (realtime == null) {\n    realtime = {\n        'UPS_Bateria_Tiempo_Reman': [{ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }],\n        'UPS_Bateria_Porc_Carga': [{ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }],\n        'UPS_Bateria_Voltaje': [{ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }],\n        'Voltaje_L_L_Pro': [{ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0}],\n        'Voltaje_L1_L2': [{ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }],\n        'Voltaje_L2_L3': [{ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }],\n        'Voltaje_L1_L3': [{ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }],\n        'Voltaje_L_N_Pro': [{ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }],\n        'Voltaje_L2_N': [{ \"x\": time, \"y\": msg.Voltaje_L2_N }],\n        'FIT_Flujo': [{ \"x\": time, \"y\": msg.FIT_Flujo }],\n        'FIT_Flujo_Total': [{ \"x\": time, \"y\": msg.FIT_Flujo_Total }],\n        'FIT_Densidad': [{ \"x\": time, \"y\": msg.FIT_Densidad }],\n        'FIT_Tempetatura': [{ \"x\": time, \"y\": msg.FIT_Tempetatura }],\n        'PIT_Presion': [{ \"x\": time, \"y\": msg.PIT_Presion || 0 }],\n        'Amp_Pro': [{ \"x\": time, \"y\": msg.Amp_Pro || 0 }],\n        'KWATT_Act_Pro': [{ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0}],\n        'KVA_Act_Pro': [{ \"x\": time, \"y\": msg.KVA_Act_Pro|| 0 }],\n        'KVAr_Act_Pro': [{ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0}],\n        'FP_Pro': [{ \"x\": time, \"y\": msg.FP_Pro || 0}],\n        'THD_I_Pro': [{ \"x\": time, \"y\": msg.THD_I_Pro || 0}],\n        'THD_V_Pro': [{ \"x\": time, \"y\": msg.THD_V_Pro || 0}],\n    };\n}\nelse {\n    if (realtime.UPS_Bateria_Tiempo_Reman.length > 30) {\n        realtime.UPS_Bateria_Tiempo_Reman.shift();\n        realtime.UPS_Bateria_Porc_Carga.shift();\n        realtime.UPS_Bateria_Voltaje.shift();\n        realtime.Voltaje_L_L_Pro.shift();\n        realtime.Voltaje_L1_L2.shift();\n        realtime.Voltaje_L2_L3.shift();\n        realtime.Voltaje_L1_L3.shift();\n        realtime.Voltaje_L_N_Pro.shift();\n        realtime.Voltaje_L2_N.shift();\n        realtime.FIT_Flujo.shift();\n        realtime.FIT_Flujo_Total.shift();\n        realtime.FIT_Densidad.shift();\n        realtime.FIT_Tempetatura.shift();\n        realtime.PIT_Presion.shift();\n        realtime.Amp_Pro.shift();\n        realtime.KWATT_Act_Pro.shift();\n        realtime.KVA_Act_Pro.shift();\n        realtime.KVAr_Act_Pro.shift();\n        realtime.FP_Pro.shift();\n        realtime.THD_I_Pro.shift();\n        realtime.THD_V_Pro.shift();\n    }\n    \n    realtime.UPS_Bateria_Tiempo_Reman.push({ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }),\n    realtime.UPS_Bateria_Porc_Carga.push({ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }),\n    realtime.UPS_Bateria_Voltaje.push({ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }),\n    realtime.Voltaje_L_L_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0}),\n    realtime.Voltaje_L1_L2.push({ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }),\n    realtime.Voltaje_L2_L3.push({ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }),\n    realtime.Voltaje_L1_L3.push({ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }),\n    realtime.Voltaje_L_N_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }),\n    realtime.Voltaje_L2_N.push({ \"x\": time, \"y\": msg.Voltaje_L2_N || 0 }),\n    realtime.FIT_Flujo.push({ \"x\": time, \"y\": msg.FIT_Flujo || 0 }),\n    realtime.FIT_Flujo_Total.push({ \"x\": time, \"y\": msg.FIT_Flujo_Total || 0 }),\n    realtime.FIT_Densidad.push({ \"x\": time, \"y\": msg.FIT_Densidad || 0 }),\n    realtime.FIT_Tempetatura.push({ \"x\": time, \"y\": msg.FIT_Tempetatura || 0 }),\n    realtime.PIT_Presion.push({ \"x\": time, \"y\": msg.PIT_Presion || 0 }),\n    realtime.Amp_Pro.push({ \"x\": time, \"y\": msg.Amp_Pro || 0 }),\n    realtime.KWATT_Act_Pro.push({ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }),\n    realtime.KVA_Act_Pro.push({ \"x\": time, \"y\": msg.KVA_Act_Pro || 0 }),\n    realtime.KVAr_Act_Pro.push({ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0 }),\n    realtime.FP_Pro.push({ \"x\": time, \"y\": msg.FP_Pro || 0 }),\n    realtime.THD_I_Pro.push({ \"x\": time, \"y\": msg.THD_I_Pro || 0 }),\n    realtime.THD_V_Pro.push({ \"x\": time, \"y\": msg.THD_V_Pro || 0 })\n\n}\n\nif (lasthour == null) {\n    lasthour = {\n        'UPS_Bateria_Tiempo_Reman': [{ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }],\n        'UPS_Bateria_Porc_Carga': [{ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }],\n        'UPS_Bateria_Voltaje': [{ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }],\n        'Voltaje_L_L_Pro': [{ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0 }],\n        'Voltaje_L1_L2': [{ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }],\n        'Voltaje_L2_L3': [{ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }],\n        'Voltaje_L1_L3': [{ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }],\n        'Voltaje_L_N_Pro': [{ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }],\n        'Voltaje_L2_N': [{ \"x\": time, \"y\": msg.Voltaje_L2_N }],\n        'FIT_Flujo': [{ \"x\": time, \"y\": msg.FIT_Flujo }],\n        'FIT_Flujo_Total': [{ \"x\": time, \"y\": msg.FIT_Flujo_Total }],\n        'FIT_Densidad': [{ \"x\": time, \"y\": msg.FIT_Densidad }],\n        'FIT_Tempetatura': [{ \"x\": time, \"y\": msg.FIT_Tempetatura }],\n        'PIT_Presion': [{ \"x\": time, \"y\": msg.PIT_Presion || 0 }],\n        'Amp_Pro': [{ \"x\": time, \"y\": msg.Amp_Pro || 0 }],\n        'KWATT_Act_Pro': [{ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }],\n        'KVA_Act_Pro': [{ \"x\": time, \"y\": msg.KVA_Act_Pro || 0 }],\n        'KVAr_Act_Pro': [{ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0 }],\n        'FP_Pro': [{ \"x\": time, \"y\": msg.FP_Pro || 0 }],\n        'THD_I_Pro': [{ \"x\": time, \"y\": msg.THD_I_Pro || 0 }],\n        'THD_V_Pro': [{ \"x\": time, \"y\": msg.THD_V_Pro || 0 }],\n    };\n}\nelse {\n    if (counth == 15){\n        if (lasthour.UPS_Bateria_Tiempo_Reman.length > 240) {\n            lasthour.UPS_Bateria_Tiempo_Reman.shift();\n            lasthour.UPS_Bateria_Porc_Carga.shift();\n            lasthour.UPS_Bateria_Voltaje.shift();\n            lasthour.Voltaje_L_L_Pro.shift();\n            lasthour.Voltaje_L1_L2.shift();\n            lasthour.Voltaje_L2_L3.shift();\n            lasthour.Voltaje_L1_L3.shift();\n            lasthour.Voltaje_L_N_Pro.shift();\n            lasthour.Voltaje_L2_N.shift();\n            lasthour.FIT_Flujo.shift();\n            lasthour.FIT_Flujo_Total.shift();\n            lasthour.FIT_Densidad.shift();\n            lasthour.FIT_Tempetatura.shift();\n            lasthour.PIT_Presion.shift();\n            lasthour.Amp_Pro.shift();\n            lasthour.KWATT_Act_Pro.shift();\n            lasthour.KVA_Act_Pro.shift();\n            lasthour.KVAr_Act_Pro.shift();\n            lasthour.FP_Pro.shift();\n            lasthour.THD_I_Pro.shift();\n            lasthour.THD_V_Pro.shift();\n        }\n\n        lasthour.UPS_Bateria_Tiempo_Reman.push({ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }),\n        lasthour.UPS_Bateria_Porc_Carga.push({ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }),\n        lasthour.UPS_Bateria_Voltaje.push({ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }),\n        lasthour.Voltaje_L_L_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0 }),\n        lasthour.Voltaje_L1_L2.push({ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }),\n        lasthour.Voltaje_L2_L3.push({ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }),\n        lasthour.Voltaje_L1_L3.push({ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }),\n        lasthour.Voltaje_L_N_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }),\n        lasthour.Voltaje_L2_N.push({ \"x\": time, \"y\": msg.Voltaje_L2_N || 0 }),\n        lasthour.FIT_Flujo.push({ \"x\": time, \"y\": msg.FIT_Flujo || 0 }),\n        lasthour.FIT_Flujo_Total.push({ \"x\": time, \"y\": msg.FIT_Flujo_Total || 0 }),\n        lasthour.FIT_Densidad.push({ \"x\": time, \"y\": msg.FIT_Densidad || 0 }),\n        lasthour.FIT_Tempetatura.push({ \"x\": time, \"y\": msg.FIT_Tempetatura || 0 }),\n        lasthour.PIT_Presion.push({ \"x\": time, \"y\": msg.PIT_Presion || 0 }),\n        lasthour.Amp_Pro.push({ \"x\": time, \"y\": msg.Amp_Pro || 0 }),\n        lasthour.KWATT_Act_Pro.push({ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }),\n        lasthour.KVA_Act_Pro.push({ \"x\": time, \"y\": msg.KVA_Act_Pro || 0 }),\n        lasthour.KVAr_Act_Pro.push({ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0 }),\n        lasthour.FP_Pro.push({ \"x\": time, \"y\": msg.FP_Pro || 0 }),\n        lasthour.THD_I_Pro.push({ \"x\": time, \"y\": msg.THD_I_Pro || 0 }),\n        lasthour.THD_V_Pro.push({ \"x\": time, \"y\": msg.THD_V_Pro || 0 })\n\n        countd > 24 ? countd = 1 : countd = countd + 1;\n        context.set(\"countd\", countd, \"memoryOnly\");\n    }\n\n}\n\nif (lastday == null) {\n    lastday = {\n        'UPS_Bateria_Tiempo_Reman': [{ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }],\n        'UPS_Bateria_Porc_Carga': [{ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }],\n        'UPS_Bateria_Voltaje': [{ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }],\n        'Voltaje_L_L_Pro': [{ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0 }],\n        'Voltaje_L1_L2': [{ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }],\n        'Voltaje_L2_L3': [{ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }],\n        'Voltaje_L1_L3': [{ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }],\n        'Voltaje_L_N_Pro': [{ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }],\n        'Voltaje_L2_N': [{ \"x\": time, \"y\": msg.Voltaje_L2_N }],\n        'FIT_Flujo': [{ \"x\": time, \"y\": msg.FIT_Flujo }],\n        'FIT_Flujo_Total': [{ \"x\": time, \"y\": msg.FIT_Flujo_Total }],\n        'FIT_Densidad': [{ \"x\": time, \"y\": msg.FIT_Densidad }],\n        'FIT_Tempetatura': [{ \"x\": time, \"y\": msg.FIT_Tempetatura }],\n        'PIT_Presion': [{ \"x\": time, \"y\": msg.PIT_Presion || 0 }],\n        'Amp_Pro': [{ \"x\": time, \"y\": msg.Amp_Pro || 0 }],\n        'KWATT_Act_Pro': [{ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }],\n        'KVA_Act_Pro': [{ \"x\": time, \"y\": msg.KVA_Act_Pro || 0 }],\n        'KVAr_Act_Pro': [{ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0 }],\n        'FP_Pro': [{ \"x\": time, \"y\": msg.FP_Pro || 0 }],\n        'THD_I_Pro': [{ \"x\": time, \"y\": msg.THD_I_Pro || 0 }],\n        'THD_V_Pro': [{ \"x\": time, \"y\": msg.THD_V_Pro || 0 }],\n    };\n}\nelse {\n    if (countd==24){\n        context.set(\"countd\", 0, \"memoryOnly\");\n        if (lastday.UPS_Bateria_Tiempo_Reman.length > 240) {\n            lastday.UPS_Bateria_Tiempo_Reman.push({ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }),\n            lastday.UPS_Bateria_Porc_Carga.push({ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }),\n            lastday.UPS_Bateria_Voltaje.push({ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }),\n            lastday.Voltaje_L_L_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0 }),\n            lastday.Voltaje_L1_L2.push({ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }),\n            lastday.Voltaje_L2_L3.push({ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }),\n            lastday.Voltaje_L1_L3.push({ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }),\n            lastday.Voltaje_L_N_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }),\n            lastday.Voltaje_L2_N.push({ \"x\": time, \"y\": msg.Voltaje_L2_N || 0 }),\n            lastday.FIT_Flujo.push({ \"x\": time, \"y\": msg.FIT_Flujo || 0 }),\n            lastday.FIT_Flujo_Total.push({ \"x\": time, \"y\": msg.FIT_Flujo_Total || 0 }),\n            lastday.FIT_Densidad.push({ \"x\": time, \"y\": msg.FIT_Densidad || 0 }),\n            lastday.FIT_Tempetatura.push({ \"x\": time, \"y\": msg.FIT_Tempetatura || 0 }),\n            lastday.PIT_Presion.push({ \"x\": time, \"y\": msg.PIT_Presion || 0 }),\n            lastday.Amp_Pro.push({ \"x\": time, \"y\": msg.Amp_Pro || 0 }),\n            lastday.KWATT_Act_Pro.push({ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }),\n            lastday.KVA_Act_Pro.push({ \"x\": time, \"y\": msg.KVA_Act_Pro || 0 }),\n            lastday.KVAr_Act_Pro.push({ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0 }),\n            lastday.FP_Pro.push({ \"x\": time, \"y\": msg.FP_Pro || 0 }),\n            lastday.THD_I_Pro.push({ \"x\": time, \"y\": msg.THD_I_Pro || 0 }),\n            lastday.THD_V_Pro.push({ \"x\": time, \"y\": msg.THD_V_Pro || 0 })\n        }\n\n        lastday.UPS_Bateria_Tiempo_Reman.push({ \"x\": time, \"y\": msg.UPS_Bateria_Tiempo_Reman || 0 }),\n        lastday.UPS_Bateria_Porc_Carga.push({ \"x\": time, \"y\": msg.UPS_Bateria_Porc_Carga || 0 }),\n        lastday.UPS_Bateria_Voltaje.push({ \"x\": time, \"y\": msg.UPS_Bateria_Voltaje || 0 }),\n        lastday.Voltaje_L_L_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_L_Pro || 0 }),\n        lastday.Voltaje_L1_L2.push({ \"x\": time, \"y\": msg.Voltaje_L1_L2 || 0 }),\n        lastday.Voltaje_L2_L3.push({ \"x\": time, \"y\": msg.Voltaje_L2_L3 || 0 }),\n        lastday.Voltaje_L1_L3.push({ \"x\": time, \"y\": msg.Voltaje_L1_L3 || 0 }),\n        lastday.Voltaje_L_N_Pro.push({ \"x\": time, \"y\": msg.Voltaje_L_N_Pro || 0 }),\n        lastday.Voltaje_L2_N.push({ \"x\": time, \"y\": msg.Voltaje_L2_N || 0 }),\n        lastday.FIT_Flujo.push({ \"x\": time, \"y\": msg.FIT_Flujo || 0 }),\n        lastday.FIT_Flujo_Total.push({ \"x\": time, \"y\": msg.FIT_Flujo_Total || 0 }),\n        lastday.FIT_Densidad.push({ \"x\": time, \"y\": msg.FIT_Densidad || 0 }),\n        lastday.FIT_Tempetatura.push({ \"x\": time, \"y\": msg.FIT_Tempetatura || 0 }),\n        lastday.PIT_Presion.push({ \"x\": time, \"y\": msg.PIT_Presion || 0 }),\n        lastday.Amp_Pro.push({ \"x\": time, \"y\": msg.Amp_Pro || 0 }),\n        lastday.KWATT_Act_Pro.push({ \"x\": time, \"y\": msg.KWATT_Act_Pro || 0 }),\n        lastday.KVA_Act_Pro.push({ \"x\": time, \"y\": msg.KVA_Act_Pro || 0 }),\n        lastday.KVAr_Act_Pro.push({ \"x\": time, \"y\": msg.KVAr_Act_Pro || 0 }),\n        lastday.FP_Pro.push({ \"x\": time, \"y\": msg.FP_Pro || 0 }),\n        lastday.THD_I_Pro.push({ \"x\": time, \"y\": msg.THD_I_Pro || 0 }),\n        lastday.THD_V_Pro.push({ \"x\": time, \"y\": msg.THD_V_Pro || 0 })\n    }\n\n}\n\ncounth > 14 ? counth = 1 : counth = counth + 1;\ncontext.set(\"counth\", counth, \"memoryOnly\");\n\nflow.set(\"trends.realtime\", realtime, \"memoryOnly\");\nflow.set(\"trends.lasthour\", lasthour);\nflow.set(\"trends.lastday\", lastday);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 100,
        "wires": [
            [
                "20f1d17e020c3132"
            ]
        ]
    },
    {
        "id": "636c9ec7bd7e49c4",
        "type": "inject",
        "z": "0f6919ffca89833a",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "778620cf7d9cbf3d",
                "f65144617635e766"
            ]
        ]
    },
    {
        "id": "c8fe53d413b2d9a0",
        "type": "function",
        "z": "0f6919ffca89833a",
        "name": "request",
        "func": "var i,request={};\nfor (i = 0; i < msg.payload.length ;i++){\n    if (msg.payload[i] == \"UPS_Bateria_Tiempo_Reman\") request.UPS_Bateria_Tiempo_Reman = true;\n    if (msg.payload[i] == \"UPS_Bateria_Porc_Carga\") request.UPS_Bateria_Porc_Carga = true;\n    if (msg.payload[i] == \"UPS_Bateria_Voltaje\") request.UPS_Bateria_Voltaje = true;\n    if (msg.payload[i] == \"Voltaje_L_L_Pro\") request.Voltaje_L_L_Pro = true;\n    if (msg.payload[i] == \"Voltaje_L1_L2\") request.Voltaje_L1_L2 = true;\n    if (msg.payload[i] == \"Voltaje_L2_L3\") request.Voltaje_L2_L3 = true;\n    if (msg.payload[i] == \"Voltaje_L1_L3\") request.Voltaje_L1_L3 = true;\n    if (msg.payload[i] == \"Voltaje_L_N_Pro\") request.Voltaje_L_N_Pro = true;\n    if (msg.payload[i] == \"Voltaje_L2_N\") request.Voltaje_L2_N = true;\n    if (msg.payload[i] == \"FIT_Flujo\") request.FIT_Flujo = true;\n    if (msg.payload[i] == \"FIT_Flujo_Total\") request.FIT_Flujo_Total = true;\n    if (msg.payload[i] == \"FIT_Densidad\") request.FIT_Densidad = true;\n    if (msg.payload[i] == \"FIT_Tempetatura\") request.FIT_Tempetatura = true;\n    if (msg.payload[i] == \"PIT_Presion\") request.PIT_Presion = true;\n    if (msg.payload[i] == \"Amp_Pro\") request.Amp_Pro = true;\n    if (msg.payload[i] == \"KWATT_Act_Pro\") request.KWATT_Act_Pro = true;\n    if (msg.payload[i] == \"KVA_Act_Pro\") request.KVA_Act_Pro = true;\n    if (msg.payload[i] == \"KVAr_Act_Pro\") request.KVAr_Act_Pro = true;\n    if (msg.payload[i] == \"FP_Pro\") request.FP_Pro = true;\n    if (msg.payload[i] == \"THD_I_Pro\") request.THD_I_Pro = true;\n    if (msg.payload[i] == \"THD_V_Pro\") request.THD_V_Pro = true;\n}\n\nmsg.payload = request;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 40,
        "wires": [
            [
                "a0175e783a169aca"
            ]
        ]
    },
    {
        "id": "a0175e783a169aca",
        "type": "change",
        "z": "0f6919ffca89833a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::trends.request",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "510c895fbc2f70d7",
        "type": "ui_dropdown",
        "z": "0f6919ffca89833a",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Seleccionar una o mas variables",
        "group": "cebdc84bd432b31c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "Tiempo Remanente Bateria UPS - CCP",
                "value": "UPS_Bateria_Tiempo_Reman",
                "type": "str"
            },
            {
                "label": "Porcentaje Carga Bateria UPS - CCP",
                "value": "UPS_Bateria_Porc_Carga",
                "type": "str"
            },
            {
                "label": "Voltaje de Bateria UPS - CCP",
                "value": "UPS_Bateria_Voltaje",
                "type": "str"
            },
            {
                "label": "Voltaje LL Promedio - CCP",
                "value": "Voltaje_L_L_Pro",
                "type": "str"
            },
            {
                "label": "Voltaje L1 L2 - CCP",
                "value": "Voltaje_L1_L2",
                "type": "str"
            },
            {
                "label": "Voltaje L2 L3 - CCP",
                "value": "Voltaje_L2_L3",
                "type": "str"
            },
            {
                "label": "Voltaje L1 L3 - CCP",
                "value": "Voltaje_L1_L3",
                "type": "str"
            },
            {
                "label": "Voltaje LN Promedio - CCP",
                "value": "Voltaje_L_N_Pro",
                "type": "str"
            },
            {
                "label": "Flujo Total - FIT",
                "value": "FIT_Flujo_Total",
                "type": "str"
            },
            {
                "label": "Densidad de Fluido - FIT",
                "value": "FIT_Densidad",
                "type": "str"
            },
            {
                "label": "Temperatura de Fluido - FIT",
                "value": "FIT_Tempetatura",
                "type": "str"
            },
            {
                "label": "Presion cabezal de producción - PIT",
                "value": "PIT_Presion",
                "type": "str"
            },
            {
                "label": "Corriente Promedio - CCP",
                "value": "Amp_Pro",
                "type": "str"
            },
            {
                "label": "Potencia Activa Promedio [KW] - CCP",
                "value": "KWATT_Act_Pro",
                "type": "str"
            },
            {
                "label": "Potencia Aparente Promedio [KVA] - CCP",
                "value": "KVA_Act_Pro",
                "type": "str"
            },
            {
                "label": "Potencia Reactiva Promedio [KVAR] - CCP",
                "value": "KVAr_Act_Pro",
                "type": "str"
            },
            {
                "label": "Factor de Potencia Promedio - CCP",
                "value": "FP_Pro",
                "type": "str"
            },
            {
                "label": "THD Corriente Promedio - CCP",
                "value": "THD_I_Pro",
                "type": "str"
            },
            {
                "label": "THD Voltaje Promedio - CCP",
                "value": "THD_V_Pro",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 40,
        "wires": [
            [
                "c8fe53d413b2d9a0"
            ]
        ]
    },
    {
        "id": "3530b1342683b94c",
        "type": "ui_dropdown",
        "z": "0f6919ffca89833a",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Seleccionar tiempo",
        "group": "d2bb7f4981f2b1d7",
        "order": 1,
        "width": "12",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Tiempo real",
                "value": "realtime",
                "type": "str"
            },
            {
                "label": "Última hora",
                "value": "lasthour",
                "type": "str"
            },
            {
                "label": "24 horas anteriores",
                "value": "lastday",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 900,
        "y": 40,
        "wires": [
            [
                "d9eed679e7785f84"
            ]
        ]
    },
    {
        "id": "d9eed679e7785f84",
        "type": "change",
        "z": "0f6919ffca89833a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::trends.selec_time",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ddf6c2cf752bfe94",
        "type": "ui_chart",
        "z": "0f6919ffca89833a",
        "name": "",
        "group": "bc68efb8fdd132c4",
        "order": 1,
        "width": "24",
        "height": "13",
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "1000",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#073a5f",
            "#791b93",
            "#ff7f0e",
            "#2ca02c",
            "#453d4d",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#e1c823"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 930,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2520975e88b38aaa",
        "type": "function",
        "z": "0f6919ffca89833a",
        "name": "Preparing to chart",
        "func": "var select_Trend = flow.get(\"trends.request\",\"memoryOnly\")||{};\nvar select_Time = flow.get(\"trends.selec_time\", \"memoryOnly\") || \"realtime\";\n\n\nvar data = [];\n\nif (select_Trend.UPS_Bateria_Tiempo_Reman  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.UPS_Bateria_Tiempo_Reman\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.UPS_Bateria_Tiempo_Reman\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.UPS_Bateria_Tiempo_Reman\") || []);\n}\nif (select_Trend.UPS_Bateria_Porc_Carga  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.UPS_Bateria_Porc_Carga\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.UPS_Bateria_Porc_Carga\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.UPS_Bateria_Porc_Carga\") || []);\n}\nif (select_Trend.UPS_Bateria_Voltaje == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.UPS_Bateria_Voltaje\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.UPS_Bateria_Voltaje\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.UPS_Bateria_Voltaje\") || []);\n}\nif (select_Trend.Voltaje_L_L_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_L_L_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_L_L_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_L_L_Pro\") || []);\n}\nif (select_Trend.Voltaje_L1_L2  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_L1_L2\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_L1_L2\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_L1_L2\") || []);\n}\nif (select_Trend.Voltaje_L2_L3  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_L2_L3\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_L2_L3\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_L2_L3\") || []);\n}\nif (select_Trend.Voltaje_L1_L3  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_L1_L3\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_L1_L3\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_L1_L3\") || []);\n}\nif (select_Trend.Voltaje_L_N_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_L_N_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_L_N_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_L_N_Pro\") || []);\n}\nif (select_Trend.Voltaje_L2_N  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Voltaje_L2_N\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Voltaje_L2_N\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Voltaje_L2_N\") || []);\n}\nif (select_Trend.FIT_Flujo  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.FIT_Flujo\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.FIT_Flujo\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.FIT_Flujo\") || []);\n}\nif (select_Trend.FIT_Flujo_Total  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.FIT_Flujo_Total\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.FIT_Flujo_Total\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.FIT_Flujo_Total\") || []);\n}\nif (select_Trend.FIT_Densidad  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.FIT_Densidad\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.FIT_Densidad\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.FIT_Densidad\") || []);\n}\nif (select_Trend.FIT_Tempetatura  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.FIT_Tempetatura\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.FIT_Tempetatura\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.FIT_Tempetatura\") || []);\n}\nif (select_Trend.PIT_Presion  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.PIT_Presion\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.PIT_Presion\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.PIT_Presion\") || []);\n}\nif (select_Trend.Amp_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.Amp_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.Amp_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.Amp_Pro\") || []);\n}\nif (select_Trend.KWATT_Act_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.KWATT_Act_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.KWATT_Act_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.KWATT_Act_Pro\") || []);\n}\nif (select_Trend.KVA_Act_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.KVA_Act_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.KVA_Act_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.KVA_Act_Pro\") || []);\n}\nif (select_Trend.KVAr_Act_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.KVAr_Act_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.KVAr_Act_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.KVAr_Act_Pro\") || []);\n}\nif (select_Trend.FP_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.FP_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.FP_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.FP_Pro\") || []);\n}\nif (select_Trend.THD_I_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.THD_I_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.THD_I_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.THD_I_Pro\") || []);\n}\nif (select_Trend.THD_V_Pro  == true) {\n    if (select_Time == \"realtime\") data.push(flow.get(\"trends.realtime.THD_V_Pro\", \"memoryOnly\") || []);\n    if (select_Time == \"lasthour\") data.push(flow.get(\"trends.lasthour.THD_V_Pro\") || []);\n    if (select_Time == \"lastday\") data.push(flow.get(\"trends.lastday.THD_V_Pro\") || []);\n}\n\nvar series = [];\n\nif (select_Trend.UPS_Bateria_Tiempo_Reman == true) select_Time != \"realtime\" ? series.push(\"Tiempo Remanente Bateria CCP (seg)\") : series.push(\"Tiempo Remanente Bateria \" + msg.UPS_Bateria_Tiempo_Reman  + \" seg\");\nif (select_Trend.UPS_Bateria_Porc_Carga == true) select_Time != \"realtime\" ? series.push(\"Porcentaje de Carga (%)\") : series.push(\"Porcentaje de Carga \" + msg.UPS_Bateria_Porc_Carga  +\" %\");\nif (select_Trend.UPS_Bateria_Voltaje == true) select_Time != \"realtime\" ? series.push(\"Voltaje Bateria (V)\") : series.push(\"Voltaje Bateria \" + msg.UPS_Bateria_Voltaje  +\" V\");\nif (select_Trend.Voltaje_L_L_Pro == true) select_Time != \"realtime\" ? series.push(\"Tensión L-L Promedio (VAC)\") : series.push(\"Tensión L-L Promedio \" + msg.Voltaje_L_L_Pro  + \" VAC\");\nif (select_Trend.Voltaje_L1_L2  == true) select_Time != \"realtime\" ? series.push(\"Tensión L1-L2 (VAC)\") : series.push(\"Tensión L1-L2 \" + msg.Voltaje_L1_L2  +\" VAC\");\nif (select_Trend.Voltaje_L2_L3 == true) select_Time != \"realtime\" ? series.push(\"Tensión L2-L3 (VAC)\") : series.push(\"Tensión L2-L3 \" + msg.Voltaje_L2_L3 +\" VAC\");\nif (select_Trend.Voltaje_L1_L3 == true) select_Time != \"realtime\" ? series.push(\"Tensión L1-L3 (VAC)\") : series.push(\"Tensión L1-L3 \" + msg.Voltaje_L1_L3 +\" VAC\");\nif (select_Trend.Voltaje_L_N_Pro == true) select_Time != \"realtime\" ? series.push(\"Tensión L-N Promedio (VAC)\") : series.push(\"Tensión L-N Promedio \" + msg.Voltaje_L_N_Pro  +\" VAC\");\n//if (select_Trend.Voltaje_L2_N == true) select_Time != \"realtime\" ? series.push(\"Tensión L2 N (V)\") : series.push(\"Tensión L2 N \" + msg.Voltaje_L2_N  +\" V\");\n//if (select_Trend.FIT_Flujo == true) select_Time != \"realtime\" ? series.push(\"Flujo (m^3/s)\") : series.push(\"Flujo \" + msg.FIT_Flujo +\" m^3/s\");\nif (select_Trend.FIT_Flujo_Total == true) select_Time != \"realtime\" ? series.push(\"Flujo Total (m^3/s)\") : series.push(\"Flujo Total \" + msg.FIT_Flujo_Total +\" m^3/s\");\nif (select_Trend.FIT_Densidad == true) select_Time != \"realtime\" ? series.push(\"Densidad (kg/m³)\") : series.push(\"Densidad \" + msg.FIT_Densidad +\" kg/m³\");\nif (select_Trend.FIT_Tempetatura == true) select_Time != \"realtime\" ? series.push(\"Temperatura (°F)\") : series.push(\"Temperatura \" + msg.FIT_Tempetatura  +\" °F\");\nif (select_Trend.PIT_Presion == true) select_Time != \"realtime\" ? series.push(\"Presión (Psig)\") : series.push(\"Presión \" + msg.PIT_Presion  + \" Psig\");\nif (select_Trend.Amp_Pro == true) select_Time != \"realtime\" ? series.push(\"Corriente Promedio (A)\") : series.push(\"Corriente Promedio \" + msg.Amp_Pro  + \" A\");\nif (select_Trend.KWATT_Act_Pro == true) select_Time != \"realtime\" ? series.push(\"Potencia Promedio (KW)\") : series.push(\"Potencia Promedio \" + msg.KWATT_Act_Pro  + \" KW\");\nif (select_Trend.KVAr_Act_Pro == true) select_Time != \"realtime\" ? series.push(\"Potencia Promedio (KVAr)\") : series.push(\"Potencia Promedio \" + msg.KVAr_Act_Pro  + \" KVAr\");\nif (select_Trend.KVA_Act_Pro == true) select_Time != \"realtime\" ? series.push(\"Potencia Promedio (KVA)\") : series.push(\"Potencia Promedio \" + msg.KVA_Act_Pro  + \" KVA\");\nif (select_Trend.FP_Pro == true) select_Time != \"realtime\" ? series.push(\"Factor de Potencia Promedio\") : series.push(\"Factor de Potencia Promedio \" + msg.FP_Pro);\nif (select_Trend.THD_I_Pro == true) select_Time != \"realtime\" ? series.push(\"THD Promedio (A)\") : series.push(\"THD  Promedio \" + msg.THD_I_Pro  + \" A\");\nif (select_Trend.THD_V_Pro == true) select_Time != \"realtime\" ? series.push(\"THD Promedio (V)\") : series.push(\"THD  Promedio \" + msg.THD_V_Pro + \" V\");\n\nvar chart = [{\n    \"series\": series,\n    \"data\": data,\n    \"labels\": [\"\"]\n}];\n\nif (data.length != 0)\n    msg.payload = chart;\nelse\n    msg.payload = [];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 110,
        "wires": [
            [
                "561793b4cb2a7fca"
            ]
        ]
    },
    {
        "id": "20f1d17e020c3132",
        "type": "switch",
        "z": "0f6919ffca89833a",
        "name": "pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Tendencias",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 460,
        "y": 100,
        "wires": [
            [
                "2520975e88b38aaa"
            ],
            [
                "5421951af0b13849"
            ]
        ]
    },
    {
        "id": "7c43f4c3c1f68685",
        "type": "link in",
        "z": "0f6919ffca89833a",
        "name": "",
        "links": [
            "eedbe64de6e6f65c",
            "a9485b4128f8af1c",
            "d59a7910a658d9dc"
        ],
        "x": 625,
        "y": 20,
        "wires": [
            [
                "5421951af0b13849"
            ]
        ]
    },
    {
        "id": "5421951af0b13849",
        "type": "change",
        "z": "0f6919ffca89833a",
        "name": "realtime",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "realtime",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 40,
        "wires": [
            [
                "3530b1342683b94c"
            ]
        ]
    },
    {
        "id": "561793b4cb2a7fca",
        "type": "rbe",
        "z": "0f6919ffca89833a",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 810,
        "y": 100,
        "wires": [
            [
                "ddf6c2cf752bfe94"
            ]
        ]
    },
    {
        "id": "f65144617635e766",
        "type": "link out",
        "z": "0f6919ffca89833a",
        "name": "actualizar datos en tendencia",
        "links": [
            "3e1f18e73ad342b7",
            "038ecc84a8e8e72c"
        ],
        "x": 255,
        "y": 140,
        "wires": []
    },
    {
        "id": "f9142b1ee8f5881c",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "a319327ca6e39904",
        "name": "",
        "label": "PMP [ft]",
        "tooltip": "",
        "group": "ac5ed0dd7cb955b9",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 440,
        "y": 80,
        "wires": [
            [
                "a62208834f976d51"
            ]
        ]
    },
    {
        "id": "0be3af70b6779232",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "a319327ca6e39904",
        "name": "",
        "label": "Profundidad de descarga [ft]",
        "tooltip": "",
        "group": "ac5ed0dd7cb955b9",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 500,
        "y": 120,
        "wires": [
            [
                "b89fc54a9739744b"
            ]
        ]
    },
    {
        "id": "71dbde2b35bb9212",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "a319327ca6e39904",
        "name": "",
        "label": "Profundidad de sensor [ft]",
        "tooltip": "",
        "group": "ac5ed0dd7cb955b9",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 490,
        "y": 160,
        "wires": [
            [
                "d2eefc465ca1acf5"
            ]
        ]
    },
    {
        "id": "bd2511d45c542582",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "a319327ca6e39904",
        "name": "",
        "label": "Profundidad de Entrada [ft]",
        "tooltip": "",
        "group": "ac5ed0dd7cb955b9",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 500,
        "y": 200,
        "wires": [
            [
                "437520c765d815cd"
            ]
        ]
    },
    {
        "id": "fb72fbf8a88f4e29",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "a9302b21b3a7c502",
        "name": "",
        "label": "API",
        "tooltip": "",
        "group": "a714dc549bfb0a23",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 430,
        "y": 300,
        "wires": [
            [
                "0985c7f3798e9eb0"
            ]
        ]
    },
    {
        "id": "c2cd42df9da3d2fd",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "a9302b21b3a7c502",
        "name": "",
        "label": "Temperatura de fondo [ºF]",
        "tooltip": "",
        "group": "a714dc549bfb0a23",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 490,
        "y": 340,
        "wires": [
            [
                "84f863a5f14ffa1e"
            ]
        ]
    },
    {
        "id": "1e59307070e56705",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "a9302b21b3a7c502",
        "name": "",
        "label": "Densidad del agua [ρ]",
        "tooltip": "",
        "group": "a714dc549bfb0a23",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 480,
        "y": 380,
        "wires": [
            [
                "61dced0eece2974c"
            ]
        ]
    },
    {
        "id": "6b697489dbd4f23f",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "fc67f9d106ee5bd9",
        "name": "",
        "label": "PWF Prueba [psi]",
        "tooltip": "",
        "group": "951118097450da17",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 480,
        "wires": [
            [
                "7eb5bd99894e0d5f"
            ]
        ]
    },
    {
        "id": "202e5114bf14acef",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "fc67f9d106ee5bd9",
        "name": "",
        "label": "BSW Prueba [%]",
        "tooltip": "",
        "group": "951118097450da17",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 520,
        "wires": [
            [
                "ac16ae8704a5321c"
            ]
        ]
    },
    {
        "id": "6852478f4555719f",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "fc67f9d106ee5bd9",
        "name": "",
        "label": "Q Prueba [BPD]",
        "tooltip": "",
        "group": "951118097450da17",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 460,
        "y": 560,
        "wires": [
            [
                "1dfb8737b303dbf0"
            ]
        ]
    },
    {
        "id": "2182591ec4b87133",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "fc67f9d106ee5bd9",
        "name": "",
        "label": "Velocidad de prueba [Hz]",
        "tooltip": "",
        "group": "951118097450da17",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 490,
        "y": 600,
        "wires": [
            [
                "ce97eb62a1366cdb"
            ]
        ]
    },
    {
        "id": "e260da5af28ca7b9",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "cdb98853e2a9e9bf",
        "name": "",
        "label": "Presión de yacimiento [psi]",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 500,
        "y": 700,
        "wires": [
            [
                "ad562b713a8d0539"
            ]
        ]
    },
    {
        "id": "8902ef326321ed33",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "cdb98853e2a9e9bf",
        "name": "",
        "label": "PWF Crítica [psi]",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 740,
        "wires": [
            [
                "f8b58626cfca1831"
            ]
        ]
    },
    {
        "id": "3ea50c6096e633fb",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "cdb98853e2a9e9bf",
        "name": "",
        "label": "Presión de Burbuja [psi]",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 490,
        "y": 780,
        "wires": [
            [
                "6bf1019fee5cf90f"
            ]
        ]
    },
    {
        "id": "a62208834f976d51",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "a319327ca6e39904",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.ESTADO_MECANICO.PMP",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b89fc54a9739744b",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "a319327ca6e39904",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.ESTADO_MECANICO.Profundidad_de_descarga",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "d2eefc465ca1acf5",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "a319327ca6e39904",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.ESTADO_MECANICO.Profundidad_de_sensor",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "437520c765d815cd",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "a319327ca6e39904",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.ESTADO_MECANICO.Profundidad_de_entrada",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 890,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0985c7f3798e9eb0",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "a9302b21b3a7c502",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PROPIEDADES_DE_FLUIDO.API",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "84f863a5f14ffa1e",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "a9302b21b3a7c502",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PROPIEDADES_DE_FLUIDO.Temperatura_de_fondo",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "61dced0eece2974c",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "a9302b21b3a7c502",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PROPIEDADES_DE_FLUIDO.Densidad_del_agua",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "7eb5bd99894e0d5f",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "fc67f9d106ee5bd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PRUEBA_DE_PRODUCCION.PWF_Prueba",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "ac16ae8704a5321c",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "fc67f9d106ee5bd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PRUEBA_DE_PRODUCCION.BSW_Prueba",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "1dfb8737b303dbf0",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "fc67f9d106ee5bd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PRUEBA_DE_PRODUCCION.Q_Prueba",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "ce97eb62a1366cdb",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "fc67f9d106ee5bd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.PRUEBA_DE_PRODUCCION.Velociad_de_prueba",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "ad562b713a8d0539",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "cdb98853e2a9e9bf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_IPR.Presion_de_yacimiento",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 880,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "f8b58626cfca1831",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "cdb98853e2a9e9bf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_IPR.PWF_Critica",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "6bf1019fee5cf90f",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "cdb98853e2a9e9bf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_IPR.Presion_de_burbuja",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "55ef44557293a464",
        "type": "link in",
        "z": "84636ba2ba4b8fea",
        "g": "091089867260e133",
        "name": "",
        "links": [
            "6c08078a56593767",
            "7eb543b063e0704b"
        ],
        "x": 155,
        "y": 420,
        "wires": [
            [
                "31e418af65442158"
            ]
        ]
    },
    {
        "id": "7178e6a5fc818b18",
        "type": "inject",
        "z": "84636ba2ba4b8fea",
        "g": "091089867260e133",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 380,
        "wires": [
            [
                "31e418af65442158"
            ]
        ]
    },
    {
        "id": "31e418af65442158",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "091089867260e133",
        "name": "",
        "func": "/* Declaración de datos \nAPI         = 13.8;  \nBSW         = 96.29; \nPy          = 1110,14; //psi\nPb          = 130;  //psi\nPcrit       = 1050; // psi\nPwf_P       = 750;  //psi \nQ_p         = 2300; //BPD\nBSW         = 98;   //%\nT_fluido    = 150;  // °F\nDens_Agua   = 8.33; //ppg \nProf_Intake = 2586.73; //ft\nProf_Sensor = 4030; //ft\nPMP         = 4500; //FT\nPIP_Sensor  = 750; //psi\nPCasing     = 0;   //psi\n*/\n\n// ESTADO MECANICO\nvar PMP             = global.get(\"IWOC.ESTADO_MECANICO.PMP\") || 2842; //Punto medio de perforados \nvar Prof_Discharge  = global.get(\"IWOC.ESTADO_MECANICO.Profundidad_de_descarga\")||0;\nvar Prof_Sensor     = global.get(\"IWOC.ESTADO_MECANICO.Prof_Sensor\")||2842;\nvar Prof_Intake     = global.get(\"IWOC.ESTADO_MECANICO.Profundidad_de_entrada\")||2586.73;\n\n// PROPIEDADES DE FLUIDO\nvar API             = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.API\")||13.8;\nvar T_fluido        = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.Temperatura_de_fondo\")||150;\nvar Dens_Agua       = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.Densidad_del_agua\")||8.33;\n\n// PRUEBA DE PRODUCCION\nvar Pwf_P           = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.PWF_Prueba\")||750;\nvar BSW             = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.BSW_Prueba\")||96.29;\nvar Q_p             = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.Q_Prueba\")||2300;\nvar Vel_P           = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.Velociad_de_prueba\")||0;\n\n// DATOS PARA IPR\nvar Py              = global.get(\"IWOC.DATOS_PARA_IPR.Presion_de_yacimiento\")||1110.14;\nvar Pcrit           = global.get(\"IWOC.DATOS_PARA_IPR.PWF_Critica\")||1050;\nvar Pb              = global.get(\"IWOC.DATOS_PARA_IPR.Presion_de_burbuja\")||130;\n\n//DATOS PARA SENSORLESS\nvar qo          = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Caudal_de_Aceite\") || 132;\nvar qw          = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Caudal_de_Agua\") || 3422;\nvar GE_w        = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Gravedad_especifica_del_agua\") || 1;\nvar U_ref       = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Frecuencia_de_referencia\") || 60; //Frecuencia de referencia(Hz)\nvar N_etapas    = global.get(\"IWOC.DATOS_PARA_SENSORLESS.N_etapas\") || 400;\nvar diam        = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Diametro_de_tuberia\") || 0.25;\nvar THP         = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Presion_en_el_tubing\") || 175;\nvar l1          = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Longitud_del_tubing\") || 2556.73; //Longitud del tubing por encima de la bomba\nvar lcable      = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Longitud_cable\") || 2753.94;\nvar POT_Placa   = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Potencia_de_la_placa\") || 1776;\nvar N_sellos    = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Num_sellos\") || 2;\nvar GE_g        = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Gravedad_Especifica_Gas\") || 0;\n\nreturn [\n    MSG(PMP), \n    MSG(Prof_Discharge), \n    MSG(Prof_Sensor), \n    MSG(Prof_Intake), \n    MSG(API),\n    MSG(T_fluido),\n    MSG(Dens_Agua),\n    MSG(Pwf_P),\n    MSG(BSW),\n    MSG(Q_p),\n    MSG(Vel_P),\n    MSG(Py),\n    MSG(Pcrit),\n    MSG(Pb),\n    MSG(qo),\n    MSG(qw),\n    MSG(GE_w),\n    MSG(U_ref),\n    MSG(N_etapas),\n    MSG(diam),\n    MSG(THP),\n    MSG(l1),\n    MSG(lcable),\n    MSG(POT_Placa),\n    MSG(N_sellos)\n];\n\nfunction MSG(X){\n    return { payload: X, enabled: (global.get(\"UserStatus\",\"memoryOnly\")||0)>0?true:false }\n}",
        "outputs": 25,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 400,
        "wires": [
            [
                "f9142b1ee8f5881c"
            ],
            [
                "0be3af70b6779232"
            ],
            [
                "71dbde2b35bb9212"
            ],
            [
                "bd2511d45c542582"
            ],
            [
                "fb72fbf8a88f4e29"
            ],
            [
                "c2cd42df9da3d2fd"
            ],
            [
                "1e59307070e56705"
            ],
            [
                "6b697489dbd4f23f"
            ],
            [
                "202e5114bf14acef"
            ],
            [
                "6852478f4555719f"
            ],
            [
                "2182591ec4b87133"
            ],
            [
                "e260da5af28ca7b9"
            ],
            [
                "8902ef326321ed33"
            ],
            [
                "3ea50c6096e633fb"
            ],
            [
                "dd7547a2411a6ab7"
            ],
            [
                "d64e36480ff48db5"
            ],
            [
                "36058dc843ab65d6"
            ],
            [
                "2966bb9f9796fb6c"
            ],
            [
                "cecb0574dc213c8d"
            ],
            [
                "18525d0c618725b8"
            ],
            [
                "181cdea868673d7d"
            ],
            [
                "0434adbd5f9af963"
            ],
            [
                "28d4227adb5ded0a"
            ],
            [
                "e19c289cb05d96ce"
            ],
            [
                "749b14f9500bcdb3"
            ]
        ]
    },
    {
        "id": "14ac3364ab1f35c9",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "6c7554a242bcd1a6",
        "name": "Calculos SensorLess",
        "func": "var driveCom = global.get(\"C2S.Comunicacion_Drive\",\"memoryOnly\")||false;\n\nvar Analog = global.get(\"DownHoleData\",\"memoryOnly\")||[];\nvar THPInstrument = global.get(\"Process_data.AI['Presión de cabeza THP']\", 'memoryOnly') || 0;\nvar PCasingInstrument = global.get(\"Process_data.AI['Presión de cabeza THP']\", 'memoryOnly') || 0;\nvar RelTX = global.get(\"C2S.RelTx\")||1;\n\n//Variables electricas \nvar frec            = global.get(\"C2S.Implicit.Output_Frequency\", \"memoryOnly\") || 0; // Frecuencia de trabajo\nvar V_motor         = (global.get(\"C2S.Implicit.Output_Voltage\", \"memoryOnly\")|| 0)*RelTX; // Voltaje de salida del variador\nvar A_motor         = (global.get(\"C2S.Implicit.Output_Current\", \"memoryOnly\") || 0)/RelTX; //Corriente de salida del variaador\nvar FP              = global.get(\"C2S.Implicit.Power_Factor\", \"memoryOnly\") || 0;// Factor de potencia\n\n// ESTADO MECANICO\nvar PMP             = global.get(\"IWOC.ESTADO_MECANICO.PMP\")||2842; //Punto medio de perforados \nvar Prof_Discharge  = global.get(\"IWOC.ESTADO_MECANICO.Profundidad_de_descarga\")||0;\nvar Prof_Sensor     = global.get(\"IWOC.ESTADO_MECANICO.Prof_Sensor\")||2842;\nvar Prof_Intake     = global.get(\"IWOC.ESTADO_MECANICO.Profundidad_de_entrada\")||2586.73;\n\n// PROPIEDADES DE FLUIDO\nvar API             = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.API\")||13.8;\nvar T_fluido        = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.Temperatura_de_fondo\")||150;\nvar Dens_Agua       = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.Densidad_del_agua\")||8.33;\n\n// PRUEBA DE PRODUCCION\nvar Pwf_P           = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.PWF_Prueba\")||750;\nvar Q_p             = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.Q_Prueba\")||2300;\nvar Vel_P           = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.Velociad_de_prueba\")||0;\n\n// DATOS PARA IPR\nvar Py = global.get(\"IWOC.DATOS_PARA_IPR.Presion_de_yacimiento\") || 1110.14;\nvar Pcrit           = global.get(\"IWOC.DATOS_PARA_IPR.PWF_Critica\")||1050;\nvar Pb              = global.get(\"IWOC.DATOS_PARA_IPR.Presion_de_burbuja\")||130;\n\n//DATOS PARA SENSORLESS\nvar qo              = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Caudal_de_Aceite\") || 132;\nvar qw              = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Caudal_de_Agua\") || 3422;\nvar GE_w            = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Gravedad_especifica_del_agua\") || 1;\n//var frec            = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Frecuencia_de_trabajo\") || 55; // Frecuencia de trabajo (Hz)\nvar U_ref           = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Frecuencia_de_referencia\") || 60; //Frecuencia de referencia(Hz)\nvar N_etapas        = global.get(\"IWOC.DATOS_PARA_SENSORLESS.N_etapas\") ||  400; \nvar diam            = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Diametro_de_tuberia\") || 0.25; \nvar THP             = THPInstrument>=10? THPInstrument: (global.get(\"IWOC.DATOS_PARA_SENSORLESS.Presion_en_el_tubing\") || 175); \nvar l1              = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Longitud_del_tubing\") || 2556.73; //Longitud del tubing por encima de la bomba\n//var V_motor         = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Voltaje_motor\") || 1303;\n//var A_motor         = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Corriente_motor\") || 42.8; \nvar lcable          = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Longitud_cable\") || 2753.94;\n//var FP              = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Factor_potencia\") || 0.95;\nvar POT_Placa       = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Potencia_de_la_placa\") || 1776;\nvar N_sellos        = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Num_sellos\") || 2;\nvar GE_g            = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Gravedad_Especifica_Gas\") || 0;\nvar Fac_compres     = global.get(\"IWOC.DATOS_PARA_SENSORLESS.Factor_Compresibilidad\") || 0;\n\nvar PIP_Sensor      = 750; //psi / Presión de la entrada de la bomba \nvar PCasing         = PCasingInstrument>=8 ? PCasingInstrument : 0.1; //Presión en el Casing \n\n/*\n    Paso No. 1: Se halla Gradiente de Presión corregido por \n    temperatura y %BSW a partir de la Gravedad Específica (GE)\n    del crudo usando gravedad API del crudo.\n*/\n\nvar GE = (141.5) / (131.5 + (API)); //Corrección de la Gravedad Especifica del crudo\n\n/*\n    Paso No. 2: Hallar valores de alfa y beta según la gravedad \n    específica (GE) siguiendo lo que indica la tabla abajo:\n*/\n\nif(GE<0.63){\n    var Alfa = 0.00097;\n    var Beta = -0.0000004;\n}\nelse if((GE<0.78) && (GE>=0.63)){\n    var Alfa = 0.00097+(GE-0.63)*((0.00075-0.00097)/(0.78-0.63));\n    var Beta = 0.0000004 + (GE-0.63)*(0.0000004/(0.78-0.63));\n}\nelse if((GE<0.85)&&(GE>=0.78)){\n    var Alfa = 0.00075+(GE-0.75)*((0.00068-0.00075)/(0.85-0.78));\n    var Beta = 0 + (GE-0.75)*(0.0000001/(0.85-0.78));\n}   \nelse if((GE<0.95)&&(GE>=0.85)){\n    var Alfa = 0.00068 + (GE-0.85) * ((0.00066 - 0.00068)/(0.95-0.85));\n    var Beta = 0.0000001 + (GE-0.85)*((0.0000001-0.0000003)/(0.95-0.85));\n}   \nelse if(GE>=0.95){\n    var Alfa = 0.00066;\n    var Beta = -0.0000003;\n}\n\n//GE_o  = Gravedad específica de aceite ajustada \nvar GE_o = GE - (Alfa * (T_fluido - 60)) + (Beta * Math.pow((T_fluido - 60), 2)); // Temperatura de fondo - Temperatura ambiente (60°)\n\n/*\n    Paso No. 3: Hallar el Gradiente de presión corregido\n*/\n//var Grv_TFondoBSW = (((100 - BSW) / 100) * GE_o) + ((BSW / 100) * (Dens_Agua / 8.345)) \n//var VP = 0.433 * Grv_TFondoBSW // Gradiente de presión\n\n//---------------------------------------------------------------------------------------------------------------------\n//CALCULO DE GAS\n\n/*\n    Paso No. 4: Calculo de la Gravedad Especifica del gas \n*/\n\n\nGE_g = 0.00091 * (T_fluido + 460) - (0.0125 * API);\n\n/*\n    Paso No. 5: Se calcula el RS y GOR con la ecuación de Standing\n                GOR = Relación gas – aceite (SCF/STB)\n                RS =  Relación gas disuelto – aceite (SCF/STB)\n*/\n\nvar GOR = GE_g * Math.pow(((Py / 18) * ((Math.pow(10, (0.0125 * API)) / Math.pow(10, (0.00091 * T_fluido))))),1.2048);\nvar RS = GE_g * (Math.pow((Pb / (18 * (Math.pow(10, GE_g)))), 1.2048));\n\n/*\n    Paso No. 6: Se determinan los factores volumétricos.\n                Bo = Factor volumétrico de aceite (Bbl/STB)\n                Bg = Factor volumétrico de gas (ft3/SCF)\n                Fac_compres  = Factor de compresibilidad\n*/\nvar Bo = 0.972 + 0.000147 * (Math.pow((RS * (Math.pow((GE_g / GE_o), 0.5)) + 1.75 * (parseInt(T_fluido))), 1.175));\n\n\n    //Factor de comprensibilidad \nvar a = -0.000720704;\nvar b =  0.008654874;\nvar c = -0.009919065;\nvar d = -0.124590401;\nvar e =  1;\nvar P_pc = 677 + (15 * GE_g) - (37.5 * (Math.pow(GE_g,2))) // Presión pseudocrítica\n\nFac_compres = a * (Math.pow(((Py + 14.7) / (P_pc* GE_g)),4)) + b * (Math.pow(((Py + 14.7) / (P_pc * GE_g)), 3)) + c * (Math.pow(((Py + 14.7) / (P_pc * GE_g)), 2)) + d * ((Py + 14.7) / (P_pc * GE_g)) + e;\n\nvar Bg = 5.04 * Fac_compres * ((parseInt(T_fluido) + 460)/Py);\n\n/*\n    Paso No. 7: Se calculan los volúmenes de gas total, gas en solución y gas libre\n                V_Tg = Volumen de gas total\n                V_Sg = Volumen de gas en solución \n                V_Fg = Volumen de gas libre \n*/\nvar V_Tg = qo * (GOR/1000);\nvar V_Sg = qo * (RS / 1000);\nvar V_Fg = V_Tg - V_Sg ; \n\n/*\n    Paso No. 8: Se calculan los demás volúmenes(aceite, gas, agua y total)\n                Vo_int = Volumen de aceite en fondo (Bbl)\n                Vg = Volumen de gas libre en fondo (ft3)\n                Vw = Volumen de agua (Bbl)\n                Vt = Volumen total de fluidos (Bbl)\n                BSW = Relación Petroleo - Agua\n                qt = Caudal total\n*/\nvar Vo_int = qo * Bo;\nvar Vg = V_Fg * Bg;\nvar qt = (parseInt(qo) + parseInt(qw));\nvar BSW = (parseInt(qw) / qt) ;\nvar Vw = qt * BSW\nvar Vt = Vo_int + Vg + Vw; \n\n/*\n    Paso No. 9: Cálculo de la masa total de fluido, GE de la mezcla y densidad\n                TMPF = Masa total de los fluidos (lb)\n                GE_mix = Gravedad específica de la mezcla\n                dens_mix = Densidad de la mezcla (ppg)                \n*/\nvar TMPF = (qo * GE_o + qt * BSW * GE_w)* 62.4 * 5.6146 + (GOR * qo * GE_g * 0.0752); // GE_w gravedad especifica del agua\nvar GE_mix = TMPF / (Vt * 5.6146 * 62.44);\nvar dens_mix = GE_mix * 62.4 ; \n\n/*\n    Paso No. 10: Cálculo de la viscosidad. Se utilizan una de las tres correlaciones dependiendo del API del crudo\n                Egbogah-Ng\n                Beggs - Robinson\n                Kartoatmodjo - Schmidt\n*/\nif ((API >= 5) && (API < 16)) {\n    var z = 0;\n    var y = 2.06492 - (0.0179 * API) - (0.70226 * (Math.log10(T_fluido)));\n    var x = Math.pow(10, y);\n    var visc = (Math.pow(10, x)) - 1;\n} else if ((API >= 16) && (API < 40)) {\n    var z = 3.0324 - (0.02023 * API);\n    var y = Math.pow(10, z);\n    var x = y * Math.pow((T_fluido), (-1.163));\n    var visc = (Math.pow(10, x)) - 1;\n} else if ((API >= 40) && (API <= 59)) {\n    var z = 0;\n    var y = 0;\n    var x = (5.7526 * (Math.log10(T_fluido))) - 26.9718;\n    var visc = (16) * (Math.pow(10, 8)) * (Math.pow(T_fluido, -2.8177)) * (Math.pow((Math.log10(API)), x));\n}\n\n var visc1 = visc / 1000;\n\n/*\n    Paso No. 11: Corrección con viscosidad (la viscosidad debe ingresarse en cp/1000)\n*/\nvar Cq = 1 - 2.6266 * visc1 + 6.0032 * (Math.pow(visc1, 2)) - 6.8104 * (Math.pow(visc1, 3)) + 2.7944 * (Math.pow(visc1 , 4));\nvar Ch = 1 - 0.03 * visc1;\nvar Cp = 1 + 3.9042 * visc1 - 9.9306 * (Math.pow(visc1, 2)) + 11.091 * (Math.pow(visc1, 3)) - 4.4376 * (Math.pow(visc1 , 4));\n\n/*\n    Paso No. 12: Calculo de caudales. Para el cálculo se necesita hacer una corrección del caudal total a partir del Uqaj\n                qt = Caudal total\n                qo = Caudal de aceite (Bbl/d)\n                qw = Caudal de agua (Bbl/d)\n                qxo = Caudal total (m3/d)\n                frec = Frecuencia de trabajo (Hz)\n                U_ref = Frecuencia de referencia (Hz)\n                U_qaj = Frecuencia ajustada (Hz)\n                q_xxo = Caudal total ajustado (m3/d)\n                \n*/\nvar qxo = qt * 0.159;\nvar U_qaj = frec / U_ref;\nvar q_xxo = qxo * U_qaj; \n\n/*\n    Paso No. 13: Se calcula un HEADo EFFo y POWERo(curvas características de la bomba) \n                HEAD_o = Head inicial\n                EFF_o = Eficiencia inicial\n                POWER_o = Potencia inicial\n                HEAD = Head ajustado\n                POWER = Potencia ajustada\n                q_xx = Caudal total ajustado\n*/\nvar HEAD_o = -1 * (Math.pow(10, -8)) * (Math.pow(q_xxo, 3)) + 8 * (Math.pow(10, 6)) * (Math.pow(q_xxo, 2)) - 0.0059 * q_xxo + 13.481;\nvar EFF_o = -8 * (Math.pow(10, -8)) * (Math.pow(q_xxo, 3)) - 7 * (Math.pow(10, 6)) * (Math.pow(q_xxo, 2)) + 0.14 * q_xxo + 6.6216;\nvar POWER_o = 6 * (Math.pow(10, 13)) * (Math.pow(q_xxo, 4)) - 2 * (Math.pow(10, 9)) * (Math.pow(q_xxo, 3)) + 2 * (Math.pow(10, -6)) * (Math.pow(q_xxo, 2)) + 0.0004 * q_xxo + 0.9563;\n\nvar HEAD = HEAD_o * (Math.pow(U_qaj , 2)) * 3.28 * N_etapas;\nvar q_xx = q_xxo / (0.159);\nvar POWER = POWER_o * (Math.pow(U_qaj , 3)) * N_etapas;\n\n/*\n    Paso No. 14: Se calcula el caudal y la eficiencia de la bomba\n                q_xov = Caudal total ajustado con la viscosidad\n                EF_bomba = Eficiencia de la bomba corregida vicosidad\n*/\nvar q_xov = (qt / Cq) * U_qaj;\nvar EF_bomba = (Math.pow((frec / 60), 2)) * (((-5 * (Math.pow(10, -14)) * (Math.pow(q_xov, 4))) + (7 * (Math.pow(10, -10)) * (Math.pow(q_xov, 3))) - (5 * (Math.pow(10, -6)) * (Math.pow(q_xov, 2))) + ((0.23 * q_xov) - (0.1628)))/100);\n\n/*\n    Paso No. 15: Se calculan las áreas transversales de los tubos\n                Area = Área de la tubería por encima de la bomba\n                diam = Diametro de la tubería encima de la bomba\n*/\nvar Area = 3.1416 * ((Math.pow(diam , 2)) / 4);  \n\n/*\n    Paso No. 16: Se convierte la viscosidad a unidades del sistema inglés\n*/\nvar viscO = visc * (0.00067197); \n\n/*\n    Paso No. 17: Velocidad del fluido, caudal (m3/s) y velocidad (ft/sec)\n                Vf = Velocidad del fluido (m/s)\n                q_fm = Caudal total en m3/s\n                V_fm = Velocidad del fluido en ft/s\n*/\nvar vf = (5.615 / (3600 * 24)) * (qt / Area);\nvar q_fm = parseInt(qt) / 543439.6505;\nvar V_fm = q_xx * (5.615 / 86400) / Area; \n\n/*\n    Paso No. 18: Calculo del número de Reynols y factor de fricción\n                re = Número de Reynols\n                F_fric = Factor de fricción\n*/\nvar re = diam * V_fm * (dens_mix / viscO);\nvar F_fric = 64 / re;\n\n/*\n    Paso No. 19: Calculo del gradiente de presión\n*/\nvar VP = 0.433 * GE_mix;\n\n/*\n    Paso No. 20: Se convierte la presión en cabeza a ft con el gradiente y se estiman las pérdidas por fricción y gravitacional\n                 THP_ft = Equivalencia en ft de la presión del tubing\n                 p_fric = Pérdidas generadas por fricción\n                 p_grav = Pérdidas por gravedad\n                 l1 = Longitud del tubing por encima de la bomba\n                 TDHH = Levantamiento en ft ajustado fricción\n*/\nvar THP_ft = THP / VP;\nvar p_fric = (F_fric * dens_mix * ((Math.pow(V_fm, 2))/(2*32.2*diam))) / 144;\nvar p_grav = dens_mix / 144; \nvar Caida_presion = (p_fric + p_grav) * l1;\nvar TDHH = (THP + Caida_presion) / VP;\n\n/*\n    Paso No. 21: CALCULOS ELECTRICOS\n                POT_SUT = Potencia del SUT (Hp)\n                POT_Cable = Potencia del clable (Hp)\n                V_motor = Voltaje\n                A_motor\t= Corriente\n                FP = Factor de potencia\n                p_VoltCable = Pérdida en voltios en el cable\n                p_Cable = Pérdidas en el cable (Hp)\n*/\nvar POT_SUT = 1.73 * V_motor * A_motor * (FP / 745.6);\nvar POT_Cable = (V_motor - (15 / 1000) * (lcable)) * A_motor * 1.73 * (FP / 745.69);\nvar p_VoltCable = Prof_Sensor * 0.01;\nvar p_Cable = POT_SUT - POT_Cable;\n\n/*\n    Paso No. 22: CALCULOS ELECTRICOS. Se calcula el porcentaje de carga, caudal ajustado y la eficiencia\n                porc_car = Porcentaje de carga\n                EF = Eficiencia calculada \n*/\nvar porc_car = (POT_Cable / POT_Placa) * 100;\nvar EF = (-8 * (Math.pow(10, -8)) * (Math.pow(q_xxo, 3)) - 7 * (Math.pow(10, -6)) * (Math.pow(q_xxo, 2)) + 0.14  * (q_xxo) + 6.6216) / 100 ;\n//var EF = 0.3273; \n\n/*\n    Paso No. 23: CALCULOS ELECTRICOS.\n                EF_motor = Eficiencia del motor\n                POT_motor = Potencia del motor  \n                p_motor = Pérdida del motor\n                POT_sello = Potencia en el sello\n                N_sellos = Número de sellos\n                p_sello = Pérdida en el sello\n                POT_bomba = Potencia en la bomba\n                p_bomba = Pérdida en la bomba\n                POT_real = Potencia real a partir de las pérdidas\n                POT_realC = Potencia real calculada (Para graficar)\n                POT_RCaj = Potencia real calculada ajustada frecuencia\n*/\nvar EF_motor = (-2 * (Math.pow(10, -7)) * (Math.pow(porc_car, 4)) + 1 * (Math.pow(10, -4)) * (Math.pow(porc_car, 3)) - 0.0187 * (Math.pow(porc_car, 2)) + 1.4594 * (porc_car) + 38.618 ) / 100;\nvar POT_motor = POT_Cable * EF_motor;\nvar p_motor = POT_Cable - POT_motor;\nvar POT_sello = POT_motor - (4 * N_sellos);\nvar p_sello = POT_motor - POT_sello;\nvar POT_bomba = POT_sello * EF;\nvar p_bomba = POT_sello - POT_bomba;\nvar POT_real = POT_SUT - (p_Cable + p_motor + p_sello + p_bomba);\nvar POT_realC = 6 * (Math.pow(10, -13)) * (Math.pow(q_xxo, 4)) - 2 * (Math.pow(10, -9)) * (Math.pow(q_xxo, 3)) + 2 * (Math.pow(10, -6)) * (Math.pow(q_xxo, 2)) + 4 * (Math.pow(10, -4)) * (q_xxo) + 0.9563;\nvar POT_RCaj = POT_realC * (Math.pow(U_qaj, 3)) * N_etapas;\n\n/*\n    Paso No. 24: VARIABLES INFERIDAD POR POTENCIA\n                v_PIP = Levantamiento del fluido a partir de la potencia\n                v_PIPa = Levantamiento del fluido a partir de la potencia ajustado frecuencia\n                PIP_inf = Presión en la bomba inferida\n                PIP_infc = Presión en la bomba inferida calculada\n*/\nvar v_PIP = POT_real * (136000 / q_xx);\nvar v_PIPa = POT_RCaj * (136000 / q_xx);\nvar PIP_inf = (TDHH - v_PIP) * VP;\nvar PIP_infc = (HEAD - v_PIP) * VP;\n\n/*\n    Paso No. 25: VARIABLES INFERIDAD POR POTENCIA. Se calcula la sumergencia, nivel de fluido y la pwf inferidas y el error\n                S_inf = Sumergencia de la bomba inferida\n                NFD_inf = Nivel de fluido inferido\n                h_intk = Profundidad de la bomba\n                Pwf_inf = Presión de fondo fluyente inferida\n                Porc_PIP_IPR \n                Porc_PIP_POT\n*/\nvar S_inf = (PIP_inf - PCasing) / VP;\nvar NFD_inf = Prof_Intake - S_inf ;\nvar Pwf_inf = PIP_inf + (PMP - Prof_Intake) * VP;\n//var Porc_PIP_IPR = (PI)\n//var Porc_PIP_POT = \n\n/*\n    Paso No. 26: VARIABLES INFERIDAD POR POTENCIA. Levantamiento efectivo del yacimiento\n                He = Levantamiento efectivo del yacimiento\n*/\nvar He = Pwf_inf / VP ;\n\n/*\n    Paso No. 27: VARIABLES INFERIDAD POR POTENCIA. Nivel dinámico desde la superficie\n                Lneto = Nivel dinámico (levantamiento neto)\n                HD = Sumergencia de la bomba\n*/\nvar Lneto = PMP - He;\nvar HD = Prof_Intake - Lneto;\n\n/*\n    Paso No. 28: CALCULO DE FRICCIÓN SEGÚN HAZEN WILLIAM\n                Ct = 120 - constante para tuberías nuevas o 90 para viejas\n                ff = 0,0150\n                F = Factor Hazen William\n                FR = Fricción calculada\n                P_desc = Presión de descarga\n                TDH = Levantamiento neto total\n*/\nvar ct = 120; \nvar F = (2.083 * (Math.pow((100 / ct), 1.85)) * (Math.pow((q_xx / 34.5), 1.85))) / (Math.pow((diam * 12), 4.8655));\nvar FR = F * (l1 / 1000);\nvar P_desc = THP /VP ; \nvar TDH = Lneto + FR + P_desc\n\n/*\n    Paso No. 29: CALCULO DE FRICCIÓN SEGÚN HAZEN WILLIAM. \n                PIP con IPR          \n*/\n//var PIP_IPR = Pwf_P - (VP * (PMP - Prof_Intake));\n\n/*\n    Paso No. 30: CALCULO DE FRICCIÓN SEGÚN HAZEN WILLIAM.\n                PIP sin IPR\n*/\n//var PIP_sin_IPR = THP + (* hb + GE_g * 0.433 * (PMP - hb));\n\n/*\n    Paso No. 31: CALCULO DE FRICCIÓN SEGÚN HAZEN WILLIAM.\n                POT_pump = Potencia de la bomba calculada (kW)\n*/\nvar POT_pump = (V_motor * A_motor * EF_motor * 1.73 * FP) / 1000;\n\n/*\n    Paso No. 32: CALCULO DE FRICCIÓN SEGÚN HAZEN WILLIAM. \n                Curva de potencia\n*/\nvar POT_c = 2 * (Math.pow(10, -14)) * (Math.pow(qt, 4)) - 4 * (Math.pow(10, -10)) * (Math.pow(qt, 3)) + 2 * (Math.pow(10, -6)) * (Math.pow(qt, 2)) + 0.0018 * qt + 49.04;\n\n/*\n    Paso No. 33: CALCULO DE FRICCIÓN SEGÚN HAZEN WILLIAM.\n                Eficiencia, head dinamico y carga dinámica\n*/\nvar EFF = (Math.pow((frec / 60), 2)) * (-5 * (Math.pow(10, -14)) * (Math.pow(qt, 4)) + 7 * (Math.pow(10, -10)) * (Math.pow(qt, 3)) - 5 * (Math.pow(10, -6)) * (Math.pow(qt, 2)) + 0.023 * (qt) - 0.1628);\nvar Qt = qt * Bo;\nvar HEAD_din = (Math.pow((frec / 60), 2)) * (-7 * (Math.pow(10, -13)) * (Math.pow(Qt, 4)) + 8 * (Math.pow(10, -9)) * (Math.pow(Qt, 3)) - 3 * (Math.pow(10, -5)) * (Math.pow(Qt, 2)) - 0.0187 * Qt + 1792);\nvar Ho = (Math.pow((frec / 60), 2)) * (-7 * (Math.pow(10, -13)) * (Math.pow(q_xov, 4)) + 8 * (Math.pow(10, -9)) * (Math.pow(q_xov, 3)) - 3 * (Math.pow(10, -5)) * (Math.pow(q_xov, 2)) - 0.0187 * q_xov + 1792);\n\n\n//Data de los Resultados\nvar resultados = {\n    \"(V_motor)Voltaje de salida M\": V_motor,\n    \"(A_motor)Corriente de salida M\": A_motor,\n    \"(FP)Factor de epotencia de M\": FP,\n    \"(frec)Frecuencia de trabajo\": frec,\n    \"(GE_g)GE del Gas\": GE_g,\n    \"(T_fluido)Temperatura de Yacimiento\": T_fluido,\n    \"API\": API,\n    \"(GOR) Relación gas-aceite\": GOR,\n    \"(RS)Relación gasdisuelto-aceite\": RS,\n    \"(Pb)Presion de burbuja\": Pb,\n    \"(GE)Gravedad espeifica del aceite\": GE,\n    \"Alfa\": Alfa,\n    \"Beta\":Beta,\n    \"(GE_o)Gravedad específica de aceite ajustada\": GE_o,\n    \"(Bo)Factor volumétrico de aceite\": Bo,\n    \"(P_pc)Presión pseudocrítica\": P_pc,\n    \"(Fac_compres)Factor de compresibilidad\": Fac_compres,\n    \"(Bg)Factor volumétrico de gas\": Bg,\n    \"(qo)Caudal_de_Aceite\": qo,\n    \"(V_Tg)Volumen de gas total\": V_Tg,\n    \"(V_Sg)Volumen de gas en solución\": V_Sg,\n    \"(V_Fg) Volumen de gas libre\": V_Fg,\n    \"(Vo_int)Volumen de aceite en fondo\": Vo_int,\n    \"(Vg)Volumen de gas libre en fondo\": Vg,\n    \"(qt)Caudal total\": qt,\n    \"(BSW)Relación Petroleo - Agua\": BSW,\n    \"(Vw)Volumen de agua\": Vw,\n    \"(Vt)Volumen total de fluido\": Vt,\n    \"(TMPF)Masa total de los fluido\": TMPF,\n    \"(GE_mix)Gravedad específica de la mezcla\": GE_mix,\n    \"(dens_mix)Densidad de la mezcla\": dens_mix,\n    \"(GE_w)gravedad especifica del agua\": GE_w,\n    \"(x)\": x,\n    \"(y)\": y,\n    \"(z)\": z,\n    \"(visc)Viscosidad del crudo\": visc,\n    \"(Cq)\": Cq,\n    \"(Ch)\": Ch,\n    \"(Cp)\": Cp,\n    \"(qxo)Caudal total (m3/d)\": qxo,\n    \"(U_ref)Frecuencia de referencia\": U_ref,\n    \"(U_qaj)Frecuencia ajustada\": U_qaj,\n    \"(q_xxo)Caudal total ajustado (m3/d)\": q_xxo,\n    \"(HEAD_o)Head inicial\": HEAD_o,\n    \"(EFF_o)Eficiencia inicial\": EFF_o,\n    \"(POWER_o)Potencia inicial\": POWER_o,\n    \"(HEAD)Head ajustado\": HEAD,\n    \"(q_xx)Caudal total ajustado\": q_xx,\n    \"(POWER)Potencia ajustada\": POWER,\n    \"(q_xov)Caudal total ajustado con la viscosidad\": q_xov,\n    \"(EF_bomba)Eficiencia de la bomba corregida vicosidad\": EF_bomba,\n    \"(Area)Área de la tubería por encima de la bomba\": Area,\n    \"(viscO)Viscosidad del crudo (lbf/ft-s)\": viscO,\n    \"(vf)Velocidad del fluid\": vf,\n    \"(q_fm)Caudal total en m3/s\": q_fm,\n    \"(V_fm)Velocidad del fluido en ft/s\": V_fm,\n    \"(re)Número de Reynols\": re,\n    \"(F_fric)Factor de fricción\": F_fric,\n    \"(VP) Gradiente de Presión\": VP,\n    \"(THP_ft)Equivalencia en ft de la presión del tubing\": THP_ft,\n    \"(p_fric)Pérdidas generadas por fricción\": p_fric,\n    \"(p_grav)Pérdidas por gravedad\": p_grav,\n    \"(Caida_presion)\": Caida_presion,\n    \"(TDHH)Levantamiento en ft ajustado fricción\": TDHH,\n    \"(POT_SUT)Potencia del SUT\": POT_SUT,\n    \"(POT_Cable)Potencia del clable\": POT_Cable,\n    \"(p_VoltCable)\": p_VoltCable,\n    \"(p_Cable) Perdidas en el cable\": p_Cable,\n    \"(porc_car)\": porc_car,\n    \"(EF)Eficiencia calculada \": EF,\n    \"EF_motor(Eficiencia del motor)\": EF_motor, \n    \"(POT_motor)Potencia del motor\": POT_motor,\n    \"(p_motor)Pérdida del motor\": p_motor,\n    \"(POT_sello)Potencia en el sello\": POT_sello,\n    \"(p_sello)Pérdida en el sello\": p_sello,\n    \"(POT_bomba)Potencia en la bomba\": POT_bomba,\n    \"(p_bomba)Pérdida en la bomba\": p_bomba,\n    \"(POT_real)Potencia real a partir de las pérdidas\": POT_real,\n    \"(POT_realC)Potencia real calculada \": POT_realC,\n    \"(POT_RCaj)Potencia real calculada ajustada frecuencia\": POT_RCaj,\n    \"(v_PIP)Levantamiento del fluido a partir de la potencia \": v_PIP,\n    \"(v_PIPa)Levantamiento del fluido a partir de la potencia ajustado frecuencuencia\": v_PIPa,\n    \"(PIP_inf)Presión en la bomba inferida\": PIP_inf,\n    \"(PIP_infc)Presión en la bomba inferida calculada\": PIP_infc,\n    \"(S_inf)Sumergencia de la bomba inferida\": S_inf,\n    \"(NFD_inf)Nivel de fluido inferido\": NFD_inf,\n    \"(Pwf_inf)Presión de fondo fluyente inferida\": Pwf_inf,\n    \"(He)Levantamiento efectivo del yacimiento\": He,\n    \"(Lneto)Nivel dinámico (levantamiento neto)\": Lneto,\n    \"(HD)Sumergencia de la bomba\": HD,\n    \"(F)Factor Hazen William\": F,\n    \"(FR)Fricción calculada\": FR,\n    \"(P_desc)Presión de descarga\": P_desc,\n    \"(TDH)Levantamiento neto total\": TDH,\n    \"(POT_pump)Potencia de la bomba calculad\": POT_pump,\n    \"(POT_c)Curva de potencia\": POT_c,\n    \"(EFF)\": EFF,\n    \"(Qt)\": Qt,\n    \"(HEAD_din)head dinamico\": HEAD_din,\n    \"(Ho)carga dinámica\": Ho,\n    \"(EF_motor)Eficiencia del motor\": EF_motor,\n};\ncontext.set(\"resultados\", resultados, \"memoryOnly\");\ncontext.set(\"frec\", frec, \"memoryOnly\");\ncontext.set(\"V_motor\", V_motor, \"memoryOnly\");\ncontext.set(\"A_motor\", A_motor, \"memoryOnly\");\ncontext.set(\"FP\", FP, \"memoryOnly\");\n\nreturn [\n    MSG(PIP_inf),\n    MSG(NFD_inf),\n    MSG(S_inf),\n    MSG(qt),\n    MSG(Pwf_inf)\n];\n\nfunction MSG(X) {\n    return { payload: (!isNaN(X) && driveCom)? X:0 }\n}",
        "outputs": 5,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 670,
        "wires": [
            [
                "99037279125d9fcb"
            ],
            [
                "c22413e09d1b89d4"
            ],
            [
                "f5c126f3b4d54361"
            ],
            [
                "c6fbcaf2f2a30a04"
            ],
            [
                "683bbc40139c0fac"
            ]
        ]
    },
    {
        "id": "99037279125d9fcb",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "6c7554a242bcd1a6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::SENSORLESS.PIP_inferida",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 610,
        "wires": [
            []
        ]
    },
    {
        "id": "c22413e09d1b89d4",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "6c7554a242bcd1a6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::SENSORLESS.Nivel_de_fluido_inferido",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 650,
        "wires": [
            []
        ]
    },
    {
        "id": "f5c126f3b4d54361",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "6c7554a242bcd1a6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::SENSORLESS.Sumergencia_inferida",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 690,
        "wires": [
            []
        ]
    },
    {
        "id": "c6fbcaf2f2a30a04",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "6c7554a242bcd1a6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::SENSORLESS.Caudal_ajustado_con_la_viscosidad",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1910,
        "y": 730,
        "wires": [
            []
        ]
    },
    {
        "id": "a8be061e73802d8d",
        "type": "link in",
        "z": "84636ba2ba4b8fea",
        "g": "6c7554a242bcd1a6",
        "name": "",
        "links": [
            "d1a315add4a835c9"
        ],
        "x": 1335,
        "y": 670,
        "wires": [
            [
                "14ac3364ab1f35c9"
            ]
        ]
    },
    {
        "id": "dd7547a2411a6ab7",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "label": "Caudal de Aceite [BBL/d]",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 880,
        "wires": [
            [
                "82e80ec60dba924d"
            ]
        ]
    },
    {
        "id": "82e80ec60dba924d",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Caudal_de_Aceite",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "d64e36480ff48db5",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "label": "Caudal de Agua [BBL/d]",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 14,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 920,
        "wires": [
            [
                "6366edb9570f90f4"
            ]
        ]
    },
    {
        "id": "6366edb9570f90f4",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Caudal_de_Agua",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "36058dc843ab65d6",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "label": "Gravedad especifica del agua",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 490,
        "y": 960,
        "wires": [
            [
                "e0d438b1148bb97a"
            ]
        ]
    },
    {
        "id": "e0d438b1148bb97a",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Gravedad_especifica_del_agua",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "2966bb9f9796fb6c",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "label": "Frecuencia de referencia [Hz]",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 490,
        "y": 1000,
        "wires": [
            [
                "fe4fbf56b7397a67"
            ]
        ]
    },
    {
        "id": "fe4fbf56b7397a67",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Frecuencia_de_referencia",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "cecb0574dc213c8d",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "label": "N° de etapas",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 430,
        "y": 1040,
        "wires": [
            [
                "b746d9d68d9fc0e4"
            ]
        ]
    },
    {
        "id": "b746d9d68d9fc0e4",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.N_etapas",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "18525d0c618725b8",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "label": "Diametro de tuberia [ft]",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 460,
        "y": 1080,
        "wires": [
            [
                "731ec7e15a31f443"
            ]
        ]
    },
    {
        "id": "731ec7e15a31f443",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Diametro_de_tuberia",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "181cdea868673d7d",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "label": "Presion en el tubing [psi]",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 1120,
        "wires": [
            [
                "04a19001c731f09d"
            ]
        ]
    },
    {
        "id": "04a19001c731f09d",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Presion_en_el_tubing",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "0434adbd5f9af963",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "label": "Longitud del tubing [ft]",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 460,
        "y": 1160,
        "wires": [
            [
                "9d6bba006123a181"
            ]
        ]
    },
    {
        "id": "9d6bba006123a181",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Longitud_del_tubing",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "28d4227adb5ded0a",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "label": "Longitud del cable [ft]",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 13,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 460,
        "y": 1200,
        "wires": [
            [
                "65f3fad2faed0aff"
            ]
        ]
    },
    {
        "id": "65f3fad2faed0aff",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Longitud_cable",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "e19c289cb05d96ce",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "label": "Potencia de la Placa [V]",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 11,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 470,
        "y": 1240,
        "wires": [
            [
                "4b09954e165d4255"
            ]
        ]
    },
    {
        "id": "4b09954e165d4255",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Potencia_de_la_placa",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "749b14f9500bcdb3",
        "type": "ui_text_input",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "label": "N° Sellos",
        "tooltip": "",
        "group": "0c75fbb95a827f65",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "",
        "topicType": "str",
        "x": 420,
        "y": 1280,
        "wires": [
            [
                "905b1b0d5d78ff65"
            ]
        ]
    },
    {
        "id": "905b1b0d5d78ff65",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "4f21a66cdc5abf28",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "IWOC.DATOS_PARA_SENSORLESS.Num_sellos",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "683bbc40139c0fac",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "6c7554a242bcd1a6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::SENSORLESS.PWF",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1810,
        "y": 770,
        "wires": [
            []
        ]
    },
    {
        "id": "468aa330d11121f1",
        "type": "ui_template",
        "z": "84636ba2ba4b8fea",
        "g": "53d376e89282424a",
        "group": "82879a916204025a",
        "name": "carta nomografica",
        "order": 1,
        "width": 20,
        "height": 8,
        "format": "<!doctype html>\n<html lang=\"en\">\n<style>\n    {\n            {\n                {\n                style\n            }\n        }\n    }\n</style>\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <div class=\"container\">\n        <div class=\"row col-12 justify-content-center d-flex\">\n            <div class=\"col-1\" style=\"background-color:rgba(20,200,201,255)\"></div>\n            <div class=\"col-2\" style=\"font-size:17px\">Subcarga</div>\n            <div class=\"col-1\" style=\"background-color:rgba(35,16,201,255)\"></div>\n            <div class=\"col-2\" style=\"font-size:17px\">Seguro</div>\n            <div class=\"col-1\" style=\"background-color:rgba(34,235,12,255)\"></div>\n            <div class=\"col-2\" style=\"font-size:17px\">Óptimo</div>\n            <div class=\"col-1\" style=\"background-color:rgba(255,251,10,255)\"></div>\n            <div class=\"col-2\" style=\"font-size:17px\">Sobrecarga</div>\n\n        </div>\n    </div>\n    <div class=\"container\">\n        <div class=\"row col-12 justify-content-center\">\n            <canvas id=\"cartanomograf\" width=\"800\" height=\"520\"></canvas>\n        </div>\n    </div>\n\n    <div id=\"pantallalabelmain\" style=\"display:none\" ng-bind-html=\"msg.Name\"></div>\n    <div id=\"torqueHH\" ng-bind-html=\"msg.torqueHH\" style=\"display:none\"></div>\n    <div id=\"torqueH\" ng-bind-html=\"msg.torqueH\" style=\"display:none\"></div>\n    <div id=\"torqueL\" ng-bind-html=\"msg.torqueL\" style=\"display:none\"></div>\n    <div id=\"torqueLL\" ng-bind-html=\"msg.torqueLL\" style=\"display:none\"></div>\n    <div id=\"rpmmin\" ng-bind-html=\"msg.rpmmin\" style=\"display:none\"></div>\n    <div id=\"rpmmax\" ng-bind-html=\"msg.rpmmax\" style=\"display:none\"></div>\n    <div id=\"torqvar\" ng-bind-html=\"msg.torqvar\" style=\"display:none\"></div>\n    <div id=\"rpmref\" ng-bind-html=\"msg.rpmref\" style=\"display:none\"></div>\n\n    <script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n    <script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n    <script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n    <script>\n        rtorque=10;\n    presionmax=document.getElementById('torqueHH').innerHTML;\n    presionmaxp=document.getElementById('torqueH').innerHTML;\n    presionmin=document.getElementById('torqueLL').innerHTML;\n    presionminp=document.getElementById('torqueL').innerHTML;\n    torquevar=document.getElementById('torqvar').innerHTML;\n    rpmmin=parseInt(document.getElementById('rpmmin').innerHTML);\n    rpmmax=parseInt(document.getElementById('rpmmax').innerHTML);\n    rpmref=parseInt(document.getElementById('rpmref').innerHTML);\n    labelx = [rpmmin.toFixed(0),\"\", \"\", \"\", \"\", (rpmmin+(rpmmax-rpmmin)*0.2).toFixed(0),\"\", \"\", \"\", \"\",\n    (rpmmin+(rpmmax-rpmmin)*0.4).toFixed(0),\"\", \"\", \"\", \"\",\n    (rpmmin+(rpmmax-rpmmin)*0.6).toFixed(0),\"\", \"\", \"\", \"\", (rpmmin+(rpmmax-rpmmin)*0.8).toFixed(0),\"\", \"\", \"\", \"\",\n    rpmmax.toFixed(0)];\n    \n    ytorque=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,\n    null, null, null, null, null, null, null, null];\n    if(rpmref>rpmmin){\n    for(i=0;i<26;i=i+1){ if(rpmref>=rpmmin+(rpmmax-rpmmin)*0.04*i)\n        yindex=i;\n        else\n        if(yindex==i-1)\n        yindexp=i;\n        }\n        if(rpmref-(rpmmin+(rpmmax-rpmmin)*0.04*yindex)>(rpmmin+(rpmmax-rpmmin)*0.04*yindexp)-rpmref)\n        yindex=yindexp;\n        }\n        else\n        yindex=null;\n    \n        ytorque[yindex]=torquevar;\n    \n        data0={\n        type: 'bubble',\n        label: 'torque',\n        data:\n        [{y:ytorque[0],r:rtorque},{y:ytorque[1],r:rtorque},{y:ytorque[2],r:rtorque},{y:ytorque[3],r:rtorque},{y:ytorque[4],r:rtorque},{y:ytorque[5],r:rtorque},{y:ytorque[6],r:rtorque},{y:ytorque[7],r:rtorque},{y:ytorque[8],r:rtorque},{y:ytorque[9],r:rtorque},{y:ytorque[10],r:rtorque},{y:ytorque[11],r:rtorque},{y:ytorque[12],r:rtorque},{y:ytorque[13],r:rtorque},{y:ytorque[14],r:rtorque},{y:ytorque[15],r:rtorque},{y:ytorque[16],r:rtorque},{y:ytorque[17],r:rtorque},{y:ytorque[18],r:rtorque},{y:ytorque[19],r:rtorque},{y:ytorque[20],r:rtorque},{y:ytorque[21],r:rtorque},{y:ytorque[22],r:rtorque},{y:ytorque[23],r:rtorque},{y:ytorque[24],r:rtorque},{y:ytorque[25],r:rtorque}],\n        backgroundColor: 'rgb(0, 0, 0)'\n        };    \n        data1={\n        type: 'line',\n        label: 'subcarga',\n        data: [presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin,\n        presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin,\n        presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin],\n        backgroundColor: [\n        'rgba(255, 255, 255, 1)'\n        ],\n        borderColor: [\n        'rgba(255, 244, 3, 1))'\n        ],\n        borderWidth: 1,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n        data2={\n        type: 'line',\n        label: 'Seguridad',\n        data: [presionmax, presionmax, presionmax, presionmax, presionmax, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0],\n        backgroundColor: [\n        'rgba(35, 16, 201, 0.7)'\n        ],\n        borderColor: [\n        'rgba(35, 16, 201, 1)'\n        ],\n        borderWidth: 1.5,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n        data3={\n        type: 'line',\n        label: 'subcargaP',\n        data: [presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp,\n        presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp,\n        presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp,\n        presionminp],\n        backgroundColor: [\n        'rgba(20, 200, 201, 0.7)'\n        ],\n        borderColor: [\n        'rgba(20, 200, 201, 1)'\n        ],\n        borderWidth: 1.5,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n        data4={\n        type: 'line',\n        label: 'optima',\n        data: [presionmaxp, presionmaxp, presionmaxp,presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp,\n        presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp,\n        presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp,\n        presionmaxp],\n        backgroundColor: [\n        'rgba(34, 235, 12, 0.7)'\n        ],\n        borderColor: [\n        'rgba(34, 235, 12, 1)'\n        ],\n        borderWidth: 1.5,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n        data5={\n        type: 'line',\n        label: 'sobrecarga',\n        data: [presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax,\n        presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax,\n        presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax],\n        backgroundColor: [\n        'rgba(255, 251, 10, 0.7)'\n        ],\n        borderColor: [\n        'rgba(255, 251, 10, 1)'\n        ],\n        borderWidth: 1.5,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n    \n        var nomochart = document.getElementById('cartanomograf');\n        nomografChart = new Chart(nomochart, {\n        data:{\n        datasets: [data0, data1,data2,data3,data4,data5],\n        labels:\n        [labelx[0],labelx[1],labelx[2],labelx[3],labelx[4],labelx[5],labelx[6],labelx[7],labelx[8],labelx[9],labelx[10],labelx[11],labelx[12],labelx[13],labelx[14],labelx[15],labelx[16],labelx[17],labelx[18],labelx[19],labelx[20],labelx[21],labelx[22],labelx[23],labelx[24],labelx[25]]\n        },\n        options: {\n        plugins: {\n        filler: {\n        propagate: true\n        }\n        },\n        responsive: true,\n        scales: {\n        yAxes: [{\n        ticks: {\n        suggestedMin:presionmin,\n        suggestedMax:presionmax,\n        callback: function(value, index, values) {\n        return value+' LBft';\n        }\n        }\n        }],\n        xAxes: [{\n        ticks: {\n        fontSize: 12,\n        }\n        }]\n        },\n        animation: false\n        }\n        });\n    </script>\n</body>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n</style>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2210,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "cc674ca2e8075b6a",
        "type": "ui_text",
        "z": "84636ba2ba4b8fea",
        "g": "53d376e89282424a",
        "group": "82879a916204025a",
        "order": 3,
        "width": 2,
        "height": 2,
        "name": "",
        "label": "Torque",
        "format": "{{msg.payload}} LBft",
        "layout": "col-center",
        "x": 2200,
        "y": 940,
        "wires": []
    },
    {
        "id": "b776ba52a7389804",
        "type": "ui_text",
        "z": "84636ba2ba4b8fea",
        "g": "53d376e89282424a",
        "group": "82879a916204025a",
        "order": 4,
        "width": 2,
        "height": 2,
        "name": "",
        "label": "Velocidad",
        "format": "{{msg.payload}} RPM",
        "layout": "col-center",
        "x": 2230,
        "y": 980,
        "wires": []
    },
    {
        "id": "8f4859372e72c7a1",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "53d376e89282424a",
        "name": "datos",
        "func": "var min = global.get(\"Cluster.SCP1.VSD.Velocidad_Min\") || 0;\nmin = toRPM(min);\nvar max = global.get(\"Cluster.SCP1.VSD.Velocidad_Max\") || 10;\nmax = toRPM(max);\nvar torqvar = Math.abs(global.get(\"C2S.Implicit.Torque\",\"memoryOnly\")||0);\nvar rpmref = Math.abs(global.get(\"C2S.Implicit.Output_RPM\",\"memoryOnly\")||0);\nvar torquedefault = parseFloat((global.get(\"C2S.Implicit.Torque_Nominal\", \"memoryOnly\")||30).toFixed(0));\nvar aux;\nif (torquedefault >= 10) aux = 10; if (torquedefault >= 100) aux = 100; if (torquedefault >= 1000) aux = 1000;\nif (torquedefault >= 10000) aux = 10000;\nif (torquedefault % aux != 0) torquedefault = (Math.trunc(torquedefault / aux) + 1) * aux;\n\nmsg.Name = \"Main\";\nmsg.rpmmin= min;\nmsg.rpmmax= max;\nmsg.torqueHH = global.get(\"Protections.Torque.HH.Setpoint\") || torquedefault;\nmsg.torqueH = global.get(\"Protections.Torque.H.Setpoint\") || parseFloat((msg.torqueHH*0.7).toFixed(0));\nmsg.torqueL = global.get(\"Protections.Torque.L.Setpoint\") || parseFloat((msg.torqueHH * 0.4).toFixed(0));\nmsg.torqueLL = global.get(\"Protections.Torque.LL.Setpoint\") || parseFloat((msg.torqueHH * 0.1).toFixed(0));\n\n\nmsg.torqvar = torqvar.toFixed(2);\n\nmsg.rpmref=rpmref.toFixed(2);\n\nreturn msg;\n\nfunction toRPM(hz){\nvar rpmplaca = global.get(\"C2S.Motor_Control.Nameplate.RPM\") || 1800;\nvar hzplaca = global.get(\"C2S.Motor_Control.Nameplate.Hertz\") || 60;\nvar relred = global.get(\"C2S.RelTx\") || 1;\n\nvar RPM = (hz * rpmplaca) / (hzplaca * relred);\n    RPM = parseFloat(RPM.toFixed(0));\nreturn RPM;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 900,
        "wires": [
            [
                "614ed2a085394be5",
                "0668fdaa0b5c2bcf",
                "0debf976b06e3a63"
            ]
        ]
    },
    {
        "id": "35df64eb3de4bd1f",
        "type": "link in",
        "z": "84636ba2ba4b8fea",
        "g": "53d376e89282424a",
        "name": "Nomograf_notif",
        "links": [
            "bb4f0d3ff3b1228d",
            "87857b683465f57d"
        ],
        "x": 1335,
        "y": 900,
        "wires": [
            [
                "51810e450c58c602"
            ]
        ]
    },
    {
        "id": "614ed2a085394be5",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "53d376e89282424a",
        "name": "Torque",
        "func": "var factor = global.get(\"C2S.Drive_Status.Actual_dir\", \"memoryOnly\")==0 ?-1:1;\nmsg.payload = msg.torqvar*factor;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2070,
        "y": 940,
        "wires": [
            [
                "cc674ca2e8075b6a"
            ]
        ]
    },
    {
        "id": "0668fdaa0b5c2bcf",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "53d376e89282424a",
        "name": "Velocidad",
        "func": "var factor = global.get(\"Drive_Status.Actual_dir\", \"memoryOnly\") == 0 ? -1 : 1;\nmsg.payload = msg.rpmref*factor;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2080,
        "y": 980,
        "wires": [
            [
                "b776ba52a7389804"
            ]
        ]
    },
    {
        "id": "f08b40bf5ea23646",
        "type": "template",
        "z": "84636ba2ba4b8fea",
        "g": "53d376e89282424a",
        "name": "Colores pasteles",
        "field": "script",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "<script>\n    rtorque=10;\n\n    rendercarta=1;\n    var timercartanomo = setInterval(cartaNomografi,1000);\n\n    function cartaNomografi(){\n        presionmax = document.getElementById('torqueHH').innerHTML;\n    presionmaxp=document.getElementById('torqueH').innerHTML;\n    presionmin=document.getElementById('torqueLL').innerHTML;\n    presionminp=document.getElementById('torqueL').innerHTML;\n    torquevar=document.getElementById('torqvar').innerHTML;\n    rpmmin=parseInt(document.getElementById('rpmmin').innerHTML);\n    rpmmax=parseInt(document.getElementById('rpmmax').innerHTML);\n    rpmref=parseInt(document.getElementById('rpmref').innerHTML);\n    labelx = [rpmmin.toFixed(0),\"\", \"\", \"\", \"\", (rpmmin+(rpmmax-rpmmin)*0.2).toFixed(0),\"\", \"\", \"\", \"\",\n    (rpmmin+(rpmmax-rpmmin)*0.4).toFixed(0),\"\", \"\", \"\", \"\",\n    (rpmmin+(rpmmax-rpmmin)*0.6).toFixed(0),\"\", \"\", \"\", \"\", (rpmmin+(rpmmax-rpmmin)*0.8).toFixed(0),\"\", \"\", \"\", \"\",\n    rpmmax.toFixed(0)];\n\n    ytorque=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,\n    null, null, null, null, null, null, null, null];\n        if(rpmref>rpmmin){\n        for(i=0;i<26;i=i+1){ if(rpmref>=rpmmin+(rpmmax-rpmmin)*0.04*i)\n    yindex=i;\n    else\n    if(yindex==i-1)\n    yindexp=i;\n            }\n            if(rpmref-(rpmmin+(rpmmax-rpmmin)*0.04*yindex)>(rpmmin+(rpmmax-rpmmin)*0.04*yindexp)-rpmref)\n    yindex=yindexp;\n            }\n    else\n    yindex=null;\n\n    ytorque[yindex]=torquevar;\n\n    data0={\n        type: 'bubble',\n    label: 'torque',\n    data:\n    [{y:ytorque[0],r:rtorque},{y:ytorque[1],r:rtorque},{y:ytorque[2],r:rtorque},{y:ytorque[3],r:rtorque},{y:ytorque[4],r:rtorque},{y:ytorque[5],r:rtorque},{y:ytorque[6],r:rtorque},{y:ytorque[7],r:rtorque},{y:ytorque[8],r:rtorque},{y:ytorque[9],r:rtorque},{y:ytorque[10],r:rtorque},{y:ytorque[11],r:rtorque},{y:ytorque[12],r:rtorque},{y:ytorque[13],r:rtorque},{y:ytorque[14],r:rtorque},{y:ytorque[15],r:rtorque},{y:ytorque[16],r:rtorque},{y:ytorque[17],r:rtorque},{y:ytorque[18],r:rtorque},{y:ytorque[19],r:rtorque},{y:ytorque[20],r:rtorque},{y:ytorque[21],r:rtorque},{y:ytorque[22],r:rtorque},{y:ytorque[23],r:rtorque},{y:ytorque[24],r:rtorque},{y:ytorque[25],r:rtorque}],\n    backgroundColor: 'rgb(0, 0, 0)'\n            };\n\n    if(rendercarta==2){\n        nomografChart.data.datasets[0] = data0;\n    nomografChart.update();\n        \n            }\n\n    if(rendercarta==1){\n\n        data1 = {\n            type: 'line',\n            label: 'subcarga',\n            data: [presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin,\n                presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin,\n                presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin],\n            backgroundColor: [\n                'rgba(255, 255, 255, 0.7)'\n            ],\n            borderColor: [\n                'rgba(255, 244, 3, 1))'\n            ],\n            borderWidth: 1,\n            tension: 0.1,\n            pointStyle: 'none',\n            pointRadius: 0,\n            steppedLine: true\n        };\n    data2={\n        type: 'line',\n    label: 'Seguridad',\n    data: [presionmax, presionmax, presionmax, presionmax, presionmax, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0],\n    backgroundColor: [\n    'rgba(3, 90, 250, 0.2)'\n    ],\n    borderColor: [\n    'rgba(3, 90, 250, 0.7)'\n    ],\n    borderWidth: 1.5,\n    tension: 0.1,\n    pointStyle: 'none',\n    pointRadius: 0,\n    steppedLine:true\n            };\n    data3={\n        type: 'line',\n    label: 'subcargaP',\n    data: [presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp,\n    presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp,\n    presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp,\n    presionminp],\n    backgroundColor: [\n    'rgba(255, 244, 3, 0.2)'\n    ],\n    borderColor: [\n    'rgba(255, 244, 3, 1)'\n    ],\n    borderWidth: 1.5,\n    tension: 0.1,\n    pointStyle: 'none',\n    pointRadius: 0,\n    steppedLine:true\n            };\n    data4={\n        type: 'line',\n    label: 'optima',\n    data: [presionmaxp, presionmaxp, presionmaxp,presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp,\n    presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp,\n    presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp,\n    presionmaxp],\n    backgroundColor: [\n    'rgba(3, 252, 57, 0.2)'\n    ],\n    borderColor: [\n    'rgba(3, 252, 57, 1)'\n    ],\n    borderWidth: 1.5,\n    tension: 0.1,\n    pointStyle: 'none',\n    pointRadius: 0,\n    steppedLine:true\n            };\n    data5={\n        type: 'line',\n    label: 'sobrecarga',\n    data: [presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax,\n    presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax,\n    presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax],\n    backgroundColor: [\n    'rgba(255, 48, 3, 0.2)'\n    ],\n    borderColor: [\n    'rgba(255, 48, 3, 1)'\n    ],\n    borderWidth: 1.5,\n    tension: 0.1,\n    pointStyle: 'none',\n    pointRadius: 0,\n    steppedLine:true\n            };\n\n    var nomochart = document.getElementById('cartanomograf');\n    nomografChart = new Chart(nomochart, {\n        data:{\n        datasets: [data0,data1,data2,data3,data4,data5],\n    labels:\n    [labelx[0],labelx[1],labelx[2],labelx[3],labelx[4],labelx[5],labelx[6],labelx[7],labelx[8],labelx[9],labelx[10],labelx[11],labelx[12],labelx[13],labelx[14],labelx[15],labelx[16],labelx[17],labelx[18],labelx[19],labelx[20],labelx[21],labelx[22],labelx[23],labelx[24],labelx[25]]\n            },\n    options: {\n        plugins: {\n        filler: {\n        propagate: true\n            }\n            },\n    responsive: true,\n    scales: {\n        yAxes: [{\n        ticks: {\n        suggestedMin:presionmin,\n    suggestedMax:presionmax,\n    callback: function(value, index, values) {\n            return value+' LBft';\n            }\n            }\n            }],\n    xAxes: [{\n        ticks: {\n        fontSize: 12,\n            }\n            }]\n            },\n    animation: false\n            }\n            });\n    rendercarta=2;\n            }\n    pant=document.getElementById('pantallalabelmain').innerHTML;\n    if(pant!=\"Main\"){\n        rendercarta = 1;\n    clearInterval(timercartanomo);\n            }\n        \n            }\n</script>",
        "output": "str",
        "x": 2310,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "51810e450c58c602",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "53d376e89282424a",
        "name": "1 second",
        "func": "var count = context.get(\"count\",\"memoryOnly\")||0;\ncount < 2 ? count++ : 0;\ncontext.set(\"count\", count, \"memoryOnly\");\nif (count == 2) return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1440,
        "y": 900,
        "wires": [
            [
                "55baa43df38d9183"
            ]
        ]
    },
    {
        "id": "9fbee0714f88c6ad",
        "type": "template",
        "z": "84636ba2ba4b8fea",
        "g": "53d376e89282424a",
        "name": "original code",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n<style>\n    {\n            {\n                {\n                style\n            }\n        }\n    }\n</style>\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <div class=\"container\">\n        <div class=\"row col-12 justify-content-center d-flex\">\n            <div class=\"col-1\" style=\"background-color:rgba(20,200,201,255)\"></div>\n            <div class=\"col-2\" style=\"font-size:17px\">Subcarga</div>\n            <div class=\"col-1\" style=\"background-color:rgba(35,16,201,255)\"></div>\n            <div class=\"col-2\" style=\"font-size:17px\">Seguro</div>\n            <div class=\"col-1\" style=\"background-color:rgba(34,235,12,255)\"></div>\n            <div class=\"col-2\" style=\"font-size:17px\">Óptimo</div>\n            <div class=\"col-1\" style=\"background-color:rgba(255,251,10,255)\"></div>\n            <div class=\"col-2\" style=\"font-size:17px\">Sobrecarga</div>\n\n        </div>\n    </div>\n    <div class=\"container\">\n        <div class=\"row col-12 justify-content-center\">\n            <canvas id=\"cartanomograf\" width=\"800\" height=\"520\"></canvas>\n        </div>\n    </div>\n\n    <div id=\"pantallalabelmain\" style=\"display:none\" ng-bind-html=\"msg.Name\"></div>\n    <div id=\"torqueHH\" ng-bind-html=\"msg.torqueHH\" style=\"display:none\"></div>\n    <div id=\"torqueH\" ng-bind-html=\"msg.torqueH\" style=\"display:none\"></div>\n    <div id=\"torqueL\" ng-bind-html=\"msg.torqueL\" style=\"display:none\"></div>\n    <div id=\"torqueLL\" ng-bind-html=\"msg.torqueLL\" style=\"display:none\"></div>\n    <div id=\"rpmmin\" ng-bind-html=\"msg.rpmmin\" style=\"display:none\"></div>\n    <div id=\"rpmmax\" ng-bind-html=\"msg.rpmmax\" style=\"display:none\"></div>\n    <div id=\"torqvar\" ng-bind-html=\"msg.torqvar\" style=\"display:none\"></div>\n    <div id=\"rpmref\" ng-bind-html=\"msg.rpmref\" style=\"display:none\"></div>\n\n    <script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n    <script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n    <script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n    <script>\n    rtorque=10;\n    \n    rendercarta=1;\n    var timercartanomo = setInterval(cartaNomografi,1000);\n    \n    function cartaNomografi(){\n    presionmax=document.getElementById('torqueHH').innerHTML;\n    presionmaxp=document.getElementById('torqueH').innerHTML;\n    presionmin=document.getElementById('torqueLL').innerHTML;\n    presionminp=document.getElementById('torqueL').innerHTML;\n    torquevar=document.getElementById('torqvar').innerHTML;\n    rpmmin=parseInt(document.getElementById('rpmmin').innerHTML);\n    rpmmax=parseInt(document.getElementById('rpmmax').innerHTML);\n    rpmref=parseInt(document.getElementById('rpmref').innerHTML);\n    labelx = [rpmmin.toFixed(0),\"\", \"\", \"\", \"\", (rpmmin+(rpmmax-rpmmin)*0.2).toFixed(0),\"\", \"\", \"\", \"\",\n    (rpmmin+(rpmmax-rpmmin)*0.4).toFixed(0),\"\", \"\", \"\", \"\",\n    (rpmmin+(rpmmax-rpmmin)*0.6).toFixed(0),\"\", \"\", \"\", \"\", (rpmmin+(rpmmax-rpmmin)*0.8).toFixed(0),\"\", \"\", \"\", \"\",\n    rpmmax.toFixed(0)];\n    \n    ytorque=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,\n    null, null, null, null, null, null, null, null];\n    if(rpmref>rpmmin){\n    for(i=0;i<26;i=i+1){ if(rpmref>=rpmmin+(rpmmax-rpmmin)*0.04*i)\n        yindex=i;\n        else\n        if(yindex==i-1)\n        yindexp=i;\n        }\n        if(rpmref-(rpmmin+(rpmmax-rpmmin)*0.04*yindex)>(rpmmin+(rpmmax-rpmmin)*0.04*yindexp)-rpmref)\n        yindex=yindexp;\n        }\n        else\n        yindex=null;\n    \n        ytorque[yindex]=torquevar;\n    \n        data0={\n        type: 'bubble',\n        label: 'torque',\n        data:\n        [{y:ytorque[0],r:rtorque},{y:ytorque[1],r:rtorque},{y:ytorque[2],r:rtorque},{y:ytorque[3],r:rtorque},{y:ytorque[4],r:rtorque},{y:ytorque[5],r:rtorque},{y:ytorque[6],r:rtorque},{y:ytorque[7],r:rtorque},{y:ytorque[8],r:rtorque},{y:ytorque[9],r:rtorque},{y:ytorque[10],r:rtorque},{y:ytorque[11],r:rtorque},{y:ytorque[12],r:rtorque},{y:ytorque[13],r:rtorque},{y:ytorque[14],r:rtorque},{y:ytorque[15],r:rtorque},{y:ytorque[16],r:rtorque},{y:ytorque[17],r:rtorque},{y:ytorque[18],r:rtorque},{y:ytorque[19],r:rtorque},{y:ytorque[20],r:rtorque},{y:ytorque[21],r:rtorque},{y:ytorque[22],r:rtorque},{y:ytorque[23],r:rtorque},{y:ytorque[24],r:rtorque},{y:ytorque[25],r:rtorque}],\n        backgroundColor: 'rgb(0, 0, 0)'\n        };\n    \n        if(rendercarta==2){\n        nomografChart.data.datasets[0]=data0;\n        nomografChart.update();\n    \n        }\n    \n        if(rendercarta==1){\n    \n        data1={\n        type: 'line',\n        label: 'subcarga',\n        data: [presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin,\n        presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin,\n        presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin],\n        backgroundColor: [\n        'rgba(255, 255, 255, 1)'\n        ],\n        borderColor: [\n        'rgba(255, 244, 3, 1))'\n        ],\n        borderWidth: 1,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n        data2={\n        type: 'line',\n        label: 'Seguridad',\n        data: [presionmax, presionmax, presionmax, presionmax, presionmax, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0],\n        backgroundColor: [\n        'rgba(35, 16, 201, 0.7)'\n        ],\n        borderColor: [\n        'rgba(35, 16, 201, 1)'\n        ],\n        borderWidth: 1.5,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n        data3={\n        type: 'line',\n        label: 'subcargaP',\n        data: [presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp,\n        presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp,\n        presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp,\n        presionminp],\n        backgroundColor: [\n        'rgba(20, 200, 201, 0.7)'\n        ],\n        borderColor: [\n        'rgba(20, 200, 201, 1)'\n        ],\n        borderWidth: 1.5,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n        data4={\n        type: 'line',\n        label: 'optima',\n        data: [presionmaxp, presionmaxp, presionmaxp,presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp,\n        presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp,\n        presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp,\n        presionmaxp],\n        backgroundColor: [\n        'rgba(34, 235, 12, 0.7)'\n        ],\n        borderColor: [\n        'rgba(34, 235, 12, 1)'\n        ],\n        borderWidth: 1.5,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n        data5={\n        type: 'line',\n        label: 'sobrecarga',\n        data: [presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax,\n        presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax,\n        presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax],\n        backgroundColor: [\n        'rgba(255, 251, 10, 0.7)'\n        ],\n        borderColor: [\n        'rgba(255, 251, 10, 1)'\n        ],\n        borderWidth: 1.5,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n    \n        var nomochart = document.getElementById('cartanomograf');\n        nomografChart = new Chart(nomochart, {\n        data:{\n        datasets: [data0, data1,data2,data3,data4,data5],\n        labels:\n        [labelx[0],labelx[1],labelx[2],labelx[3],labelx[4],labelx[5],labelx[6],labelx[7],labelx[8],labelx[9],labelx[10],labelx[11],labelx[12],labelx[13],labelx[14],labelx[15],labelx[16],labelx[17],labelx[18],labelx[19],labelx[20],labelx[21],labelx[22],labelx[23],labelx[24],labelx[25]]\n        },\n        options: {\n        plugins: {\n        filler: {\n        propagate: true\n        }\n        },\n        responsive: true,\n        scales: {\n        yAxes: [{\n        ticks: {\n        suggestedMin:presionmin,\n        suggestedMax:presionmax,\n        callback: function(value, index, values) {\n        return value+' LBft';\n        }\n        }\n        }],\n        xAxes: [{\n        ticks: {\n        fontSize: 12,\n        }\n        }]\n        },\n        animation: false\n        }\n        });\n        rendercarta=2;\n        }\n        pant=document.getElementById('pantallalabelmain').innerHTML;\n        if(pant!=\"Main\"){\n        rendercarta=1;\n        clearInterval(timercartanomo);\n        }\n    \n        }\n    </script>\n</body>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 2510,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "55baa43df38d9183",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "53d376e89282424a",
        "name": "Principal?",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Principal",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1580,
        "y": 900,
        "wires": [
            [
                "79c8fad952dcaa51"
            ],
            []
        ]
    },
    {
        "id": "79c8fad952dcaa51",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "53d376e89282424a",
        "name": "nomograf?",
        "property": "#:(memoryOnly)::Navegación.hometab",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Nomografrica",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1730,
        "y": 900,
        "wires": [
            [
                "8f4859372e72c7a1"
            ]
        ]
    },
    {
        "id": "0debf976b06e3a63",
        "type": "template",
        "z": "84636ba2ba4b8fea",
        "g": "53d376e89282424a",
        "name": "code",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n<style>\n    {\n            {\n                {\n                style\n            }\n        }\n    }\n</style>\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <div class=\"container\">\n        <div class=\"row col-12 justify-content-center d-flex\">\n            <div class=\"col-1\" style=\"background-color:rgba(20,200,201,255)\"></div>\n            <div class=\"col-2\" style=\"font-size:17px\">Subcarga</div>\n            <div class=\"col-1\" style=\"background-color:rgba(35,16,201,255)\"></div>\n            <div class=\"col-2\" style=\"font-size:17px\">Seguro</div>\n            <div class=\"col-1\" style=\"background-color:rgba(34,235,12,255)\"></div>\n            <div class=\"col-2\" style=\"font-size:17px\">Óptimo</div>\n            <div class=\"col-1\" style=\"background-color:rgba(255,251,10,255)\"></div>\n            <div class=\"col-2\" style=\"font-size:17px\">Sobrecarga</div>\n\n        </div>\n    </div>\n    <div class=\"container\">\n        <div class=\"row col-12 justify-content-center\">\n            <canvas id=\"cartanomograf\" width=\"800\" height=\"520\"></canvas>\n        </div>\n    </div>\n\n    <div id=\"torqueHH\" style=\"display:none\">{{torqueHH}}</div>\n    <div id=\"torqueH\" style=\"display:none\">{{torqueH}}</div>\n    <div id=\"torqueL\" style=\"display:none\">{{torqueL}}</div>\n    <div id=\"torqueLL\" style=\"display:none\">{{torqueLL}}</div>\n    <div id=\"rpmmin\" style=\"display:none\">{{rpmmin}}</div>\n    <div id=\"rpmmax\" style=\"display:none\">{{rpmmax}}</div>\n    <div id=\"torqvar\" style=\"display:none\">{{torqvar}}</div>\n    <div id=\"rpmref\" style=\"display:none\">{{rpmref}}</div>\n\n    <script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n    <script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n    <script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n    <script>\n    rtorque=10;\n    presionmax=document.getElementById('torqueHH').innerHTML;\n    presionmaxp=document.getElementById('torqueH').innerHTML;\n    presionmin=document.getElementById('torqueLL').innerHTML;\n    presionminp=document.getElementById('torqueL').innerHTML;\n    torquevar=document.getElementById('torqvar').innerHTML;\n    rpmmin=parseInt(document.getElementById('rpmmin').innerHTML);\n    rpmmax=parseInt(document.getElementById('rpmmax').innerHTML);\n    rpmref=parseInt(document.getElementById('rpmref').innerHTML);\n    labelx = [rpmmin.toFixed(0),\"\", \"\", \"\", \"\", (rpmmin+(rpmmax-rpmmin)*0.2).toFixed(0),\"\", \"\", \"\", \"\",\n    (rpmmin+(rpmmax-rpmmin)*0.4).toFixed(0),\"\", \"\", \"\", \"\",\n    (rpmmin+(rpmmax-rpmmin)*0.6).toFixed(0),\"\", \"\", \"\", \"\", (rpmmin+(rpmmax-rpmmin)*0.8).toFixed(0),\"\", \"\", \"\", \"\",\n    rpmmax.toFixed(0)];\n    \n    ytorque=[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,\n    null, null, null, null, null, null, null, null];\n    if(rpmref>rpmmin){\n    for(i=0;i<26;i=i+1){ if(rpmref>=rpmmin+(rpmmax-rpmmin)*0.04*i)\n        yindex=i;\n        else\n        if(yindex==i-1)\n        yindexp=i;\n        }\n        if(rpmref-(rpmmin+(rpmmax-rpmmin)*0.04*yindex)>(rpmmin+(rpmmax-rpmmin)*0.04*yindexp)-rpmref)\n        yindex=yindexp;\n        }\n        else\n        yindex=null;\n    \n        ytorque[yindex]=torquevar;\n    \n        data0={\n        type: 'bubble',\n        label: 'torque',\n        data:\n        [{y:ytorque[0],r:rtorque},{y:ytorque[1],r:rtorque},{y:ytorque[2],r:rtorque},{y:ytorque[3],r:rtorque},{y:ytorque[4],r:rtorque},{y:ytorque[5],r:rtorque},{y:ytorque[6],r:rtorque},{y:ytorque[7],r:rtorque},{y:ytorque[8],r:rtorque},{y:ytorque[9],r:rtorque},{y:ytorque[10],r:rtorque},{y:ytorque[11],r:rtorque},{y:ytorque[12],r:rtorque},{y:ytorque[13],r:rtorque},{y:ytorque[14],r:rtorque},{y:ytorque[15],r:rtorque},{y:ytorque[16],r:rtorque},{y:ytorque[17],r:rtorque},{y:ytorque[18],r:rtorque},{y:ytorque[19],r:rtorque},{y:ytorque[20],r:rtorque},{y:ytorque[21],r:rtorque},{y:ytorque[22],r:rtorque},{y:ytorque[23],r:rtorque},{y:ytorque[24],r:rtorque},{y:ytorque[25],r:rtorque}],\n        backgroundColor: 'rgb(0, 0, 0)'\n        };    \n        data1={\n        type: 'line',\n        label: 'subcarga',\n        data: [presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin,\n        presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin,\n        presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin, presionmin],\n        backgroundColor: [\n        'rgba(255, 255, 255, 1)'\n        ],\n        borderColor: [\n        'rgba(255, 244, 3, 1))'\n        ],\n        borderWidth: 1,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n        data2={\n        type: 'line',\n        label: 'Seguridad',\n        data: [presionmax, presionmax, presionmax, presionmax, presionmax, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n        0, 0, 0, 0, 0],\n        backgroundColor: [\n        'rgba(35, 16, 201, 0.7)'\n        ],\n        borderColor: [\n        'rgba(35, 16, 201, 1)'\n        ],\n        borderWidth: 1.5,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n        data3={\n        type: 'line',\n        label: 'subcargaP',\n        data: [presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp,\n        presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp,\n        presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp, presionminp,\n        presionminp],\n        backgroundColor: [\n        'rgba(20, 200, 201, 0.7)'\n        ],\n        borderColor: [\n        'rgba(20, 200, 201, 1)'\n        ],\n        borderWidth: 1.5,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n        data4={\n        type: 'line',\n        label: 'optima',\n        data: [presionmaxp, presionmaxp, presionmaxp,presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp,\n        presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp,\n        presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp, presionmaxp,\n        presionmaxp],\n        backgroundColor: [\n        'rgba(34, 235, 12, 0.7)'\n        ],\n        borderColor: [\n        'rgba(34, 235, 12, 1)'\n        ],\n        borderWidth: 1.5,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n        data5={\n        type: 'line',\n        label: 'sobrecarga',\n        data: [presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax,\n        presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax,\n        presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax, presionmax],\n        backgroundColor: [\n        'rgba(255, 251, 10, 0.7)'\n        ],\n        borderColor: [\n        'rgba(255, 251, 10, 1)'\n        ],\n        borderWidth: 1.5,\n        tension: 0.1,\n        pointStyle: 'none',\n        pointRadius: 0,\n        steppedLine:true\n        };\n    \n        var nomochart = document.getElementById('cartanomograf');\n        nomografChart = new Chart(nomochart, {\n        data:{\n        datasets: [data0, data1,data2,data3,data4,data5],\n        labels:\n        [labelx[0],labelx[1],labelx[2],labelx[3],labelx[4],labelx[5],labelx[6],labelx[7],labelx[8],labelx[9],labelx[10],labelx[11],labelx[12],labelx[13],labelx[14],labelx[15],labelx[16],labelx[17],labelx[18],labelx[19],labelx[20],labelx[21],labelx[22],labelx[23],labelx[24],labelx[25]]\n        },\n        options: {\n        plugins: {\n        filler: {\n        propagate: true\n        }\n        },\n        responsive: true,\n        scales: {\n        yAxes: [{\n        ticks: {\n        suggestedMin:presionmin,\n        suggestedMax:presionmax,\n        callback: function(value, index, values) {\n        return value+' LBft';\n        }\n        }\n        }],\n        xAxes: [{\n        ticks: {\n        fontSize: 12,\n        }\n        }]\n        },\n        animation: false\n        }\n        });\n    </script>\n</body>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 2050,
        "y": 900,
        "wires": [
            [
                "468aa330d11121f1"
            ]
        ]
    },
    {
        "id": "5457ed051d9a846f",
        "type": "ui_template",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "group": "93dbf0d057803e26",
        "name": "",
        "order": 1,
        "width": 24,
        "height": 13,
        "format": "",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 2260,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "f101ac16fcca21d3",
        "type": "template",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "Bootstrap",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://bcpgrp.local:1880/bootstrap/dist/css/bootstrap.min.css\">\n    \n  </head>\n  <body>\n    <div class=\"disable-select\">\n        <div class=\"container\">\n            <div class=\"row justify-content-center\" style=\"background-color:#fcfcfc;\">\n                <div class=\"co-12\">{{{chart}}}</div>\n            </div>\n        </div>\n    </div>\n  </body>\n  <script src=\"http://bcpgrp.local:1880/apexcharts/dist/apexcharts.js\"></script>\n  <style>\n    .disable-select {\n        user-select: none; /* supported by Chrome and Opera /\n        -webkit-user-select: none; / Safari /\n       -khtml-user-select: none; / Konqueror HTML /\n       -moz-user-select: none; / Firefox /\n       -ms-user-select: none; / Internet Explorer/Edge */\n    }\n  </style>\n</html>\n<script>\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.ApexCharts = factory());\n}(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    } else if (call !== void 0) {\n      throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n          result;\n\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor;\n\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n\n      return _possibleConstructorReturn(this, result);\n    };\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  /*\n   ** Generic functions which are not dependent on ApexCharts\n   */\n  var Utils$1 = /*#__PURE__*/function () {\n    function Utils() {\n      _classCallCheck(this, Utils);\n    }\n\n    _createClass(Utils, [{\n      key: \"shadeRGBColor\",\n      value: function shadeRGBColor(percent, color) {\n        var f = color.split(','),\n            t = percent < 0 ? 0 : 255,\n            p = percent < 0 ? percent * -1 : percent,\n            R = parseInt(f[0].slice(4), 10),\n            G = parseInt(f[1], 10),\n            B = parseInt(f[2], 10);\n        return 'rgb(' + (Math.round((t - R) * p) + R) + ',' + (Math.round((t - G) * p) + G) + ',' + (Math.round((t - B) * p) + B) + ')';\n      }\n    }, {\n      key: \"shadeHexColor\",\n      value: function shadeHexColor(percent, color) {\n        var f = parseInt(color.slice(1), 16),\n            t = percent < 0 ? 0 : 255,\n            p = percent < 0 ? percent * -1 : percent,\n            R = f >> 16,\n            G = f >> 8 & 0x00ff,\n            B = f & 0x0000ff;\n        return '#' + (0x1000000 + (Math.round((t - R) * p) + R) * 0x10000 + (Math.round((t - G) * p) + G) * 0x100 + (Math.round((t - B) * p) + B)).toString(16).slice(1);\n      } // beautiful color shading blending code\n      // http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n\n    }, {\n      key: \"shadeColor\",\n      value: function shadeColor(p, color) {\n        if (Utils.isColorHex(color)) {\n          return this.shadeHexColor(p, color);\n        } else {\n          return this.shadeRGBColor(p, color);\n        }\n      }\n    }], [{\n      key: \"bind\",\n      value: function bind(fn, me) {\n        return function () {\n          return fn.apply(me, arguments);\n        };\n      }\n    }, {\n      key: \"isObject\",\n      value: function isObject(item) {\n        return item && _typeof(item) === 'object' && !Array.isArray(item) && item != null;\n      } // Type checking that works across different window objects\n\n    }, {\n      key: \"is\",\n      value: function is(type, val) {\n        return Object.prototype.toString.call(val) === '[object ' + type + ']';\n      }\n    }, {\n      key: \"listToArray\",\n      value: function listToArray(list) {\n        var i,\n            array = [];\n\n        for (i = 0; i < list.length; i++) {\n          array[i] = list[i];\n        }\n\n        return array;\n      } // to extend defaults with user options\n      // credit: http://stackoverflow.com/questions/27936772/deep-object-merging-in-es6-es7#answer-34749873\n\n    }, {\n      key: \"extend\",\n      value: function extend(target, source) {\n        var _this = this;\n\n        if (typeof Object.assign !== 'function') {\n\n          (function () {\n            Object.assign = function (target) {\n\n              if (target === undefined || target === null) {\n                throw new TypeError('Cannot convert undefined or null to object');\n              }\n\n              var output = Object(target);\n\n              for (var index = 1; index < arguments.length; index++) {\n                var _source = arguments[index];\n\n                if (_source !== undefined && _source !== null) {\n                  for (var nextKey in _source) {\n                    if (_source.hasOwnProperty(nextKey)) {\n                      output[nextKey] = _source[nextKey];\n                    }\n                  }\n                }\n              }\n\n              return output;\n            };\n          })();\n        }\n\n        var output = Object.assign({}, target);\n\n        if (this.isObject(target) && this.isObject(source)) {\n          Object.keys(source).forEach(function (key) {\n            if (_this.isObject(source[key])) {\n              if (!(key in target)) {\n                Object.assign(output, _defineProperty({}, key, source[key]));\n              } else {\n                output[key] = _this.extend(target[key], source[key]);\n              }\n            } else {\n              Object.assign(output, _defineProperty({}, key, source[key]));\n            }\n          });\n        }\n\n        return output;\n      }\n    }, {\n      key: \"extendArray\",\n      value: function extendArray(arrToExtend, resultArr) {\n        var extendedArr = [];\n        arrToExtend.map(function (item) {\n          extendedArr.push(Utils.extend(resultArr, item));\n        });\n        arrToExtend = extendedArr;\n        return arrToExtend;\n      } // If month counter exceeds 12, it starts again from 1\n\n    }, {\n      key: \"monthMod\",\n      value: function monthMod(month) {\n        return month % 12;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone(source) {\n        if (Utils.is('Array', source)) {\n          var cloneResult = [];\n\n          for (var i = 0; i < source.length; i++) {\n            cloneResult[i] = this.clone(source[i]);\n          }\n\n          return cloneResult;\n        } else if (Utils.is('Null', source)) {\n          // fixes an issue where null values were converted to {}\n          return null;\n        } else if (Utils.is('Date', source)) {\n          return source;\n        } else if (_typeof(source) === 'object') {\n          var _cloneResult = {};\n\n          for (var prop in source) {\n            if (source.hasOwnProperty(prop)) {\n              _cloneResult[prop] = this.clone(source[prop]);\n            }\n          }\n\n          return _cloneResult;\n        } else {\n          return source;\n        }\n      }\n    }, {\n      key: \"log10\",\n      value: function log10(x) {\n        return Math.log(x) / Math.LN10;\n      }\n    }, {\n      key: \"roundToBase10\",\n      value: function roundToBase10(x) {\n        return Math.pow(10, Math.floor(Math.log10(x)));\n      }\n    }, {\n      key: \"roundToBase\",\n      value: function roundToBase(x, base) {\n        return Math.pow(base, Math.floor(Math.log(x) / Math.log(base)));\n      }\n    }, {\n      key: \"parseNumber\",\n      value: function parseNumber(val) {\n        if (val === null) return val;\n        return parseFloat(val);\n      }\n    }, {\n      key: \"randomId\",\n      value: function randomId() {\n        return (Math.random() + 1).toString(36).substring(4);\n      }\n    }, {\n      key: \"noExponents\",\n      value: function noExponents(val) {\n        var data = String(val).split(/[eE]/);\n        if (data.length === 1) return data[0];\n        var z = '',\n            sign = val < 0 ? '-' : '',\n            str = data[0].replace('.', ''),\n            mag = Number(data[1]) + 1;\n\n        if (mag < 0) {\n          z = sign + '0.';\n\n          while (mag++) {\n            z += '0';\n          }\n\n          return z + str.replace(/^-/, '');\n        }\n\n        mag -= str.length;\n\n        while (mag--) {\n          z += '0';\n        }\n\n        return str + z;\n      }\n    }, {\n      key: \"getDimensions\",\n      value: function getDimensions(el) {\n        var computedStyle = getComputedStyle(el, null);\n        var elementHeight = el.clientHeight;\n        var elementWidth = el.clientWidth;\n        elementHeight -= parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n        elementWidth -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n        return [elementWidth, elementHeight];\n      }\n    }, {\n      key: \"getBoundingClientRect\",\n      value: function getBoundingClientRect(element) {\n        var rect = element.getBoundingClientRect();\n        return {\n          top: rect.top,\n          right: rect.right,\n          bottom: rect.bottom,\n          left: rect.left,\n          width: element.clientWidth,\n          height: element.clientHeight,\n          x: rect.left,\n          y: rect.top\n        };\n      }\n    }, {\n      key: \"getLargestStringFromArr\",\n      value: function getLargestStringFromArr(arr) {\n        return arr.reduce(function (a, b) {\n          if (Array.isArray(b)) {\n            b = b.reduce(function (aa, bb) {\n              return aa.length > bb.length ? aa : bb;\n            });\n          }\n\n          return a.length > b.length ? a : b;\n        }, 0);\n      } // http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb#answer-12342275\n\n    }, {\n      key: \"hexToRgba\",\n      value: function hexToRgba() {\n        var hex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '#999999';\n        var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.6;\n\n        if (hex.substring(0, 1) !== '#') {\n          hex = '#999999';\n        }\n\n        var h = hex.replace('#', '');\n        h = h.match(new RegExp('(.{' + h.length / 3 + '})', 'g'));\n\n        for (var i = 0; i < h.length; i++) {\n          h[i] = parseInt(h[i].length === 1 ? h[i] + h[i] : h[i], 16);\n        }\n\n        if (typeof opacity !== 'undefined') h.push(opacity);\n        return 'rgba(' + h.join(',') + ')';\n      }\n    }, {\n      key: \"getOpacityFromRGBA\",\n      value: function getOpacityFromRGBA(rgba) {\n        return parseFloat(rgba.replace(/^.*,(.+)\\)/, '$1'));\n      }\n    }, {\n      key: \"rgb2hex\",\n      value: function rgb2hex(rgb) {\n        rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n        return rgb && rgb.length === 4 ? '#' + ('0' + parseInt(rgb[1], 10).toString(16)).slice(-2) + ('0' + parseInt(rgb[2], 10).toString(16)).slice(-2) + ('0' + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';\n      }\n    }, {\n      key: \"isColorHex\",\n      value: function isColorHex(color) {\n        return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(color);\n      }\n    }, {\n      key: \"getPolygonPos\",\n      value: function getPolygonPos(size, dataPointsLen) {\n        var dotsArray = [];\n        var angle = Math.PI * 2 / dataPointsLen;\n\n        for (var i = 0; i < dataPointsLen; i++) {\n          var curPos = {};\n          curPos.x = size * Math.sin(i * angle);\n          curPos.y = -size * Math.cos(i * angle);\n          dotsArray.push(curPos);\n        }\n\n        return dotsArray;\n      }\n    }, {\n      key: \"polarToCartesian\",\n      value: function polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n        var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n        return {\n          x: centerX + radius * Math.cos(angleInRadians),\n          y: centerY + radius * Math.sin(angleInRadians)\n        };\n      }\n    }, {\n      key: \"escapeString\",\n      value: function escapeString(str) {\n        var escapeWith = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';\n        var newStr = str.toString().slice();\n        newStr = newStr.replace(/[` ~!@#$%^&*()_|+\\-=?;:'\",.<>{}[\\]\\\\/]/gi, escapeWith);\n        return newStr;\n      }\n    }, {\n      key: \"negToZero\",\n      value: function negToZero(val) {\n        return val < 0 ? 0 : val;\n      }\n    }, {\n      key: \"moveIndexInArray\",\n      value: function moveIndexInArray(arr, old_index, new_index) {\n        if (new_index >= arr.length) {\n          var k = new_index - arr.length + 1;\n\n          while (k--) {\n            arr.push(undefined);\n          }\n        }\n\n        arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);\n        return arr;\n      }\n    }, {\n      key: \"extractNumber\",\n      value: function extractNumber(s) {\n        return parseFloat(s.replace(/[^\\d.]*/g, ''));\n      }\n    }, {\n      key: \"findAncestor\",\n      value: function findAncestor(el, cls) {\n        while ((el = el.parentElement) && !el.classList.contains(cls)) {\n        }\n\n        return el;\n      }\n    }, {\n      key: \"setELstyles\",\n      value: function setELstyles(el, styles) {\n        for (var key in styles) {\n          if (styles.hasOwnProperty(key)) {\n            el.style.key = styles[key];\n          }\n        }\n      }\n    }, {\n      key: \"isNumber\",\n      value: function isNumber(value) {\n        return !isNaN(value) && parseFloat(Number(value)) === value && !isNaN(parseInt(value, 10));\n      }\n    }, {\n      key: \"isFloat\",\n      value: function isFloat(n) {\n        return Number(n) === n && n % 1 !== 0;\n      }\n    }, {\n      key: \"isSafari\",\n      value: function isSafari() {\n        return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n      }\n    }, {\n      key: \"isFirefox\",\n      value: function isFirefox() {\n        return navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n      }\n    }, {\n      key: \"isIE11\",\n      value: function isIE11() {\n        if (window.navigator.userAgent.indexOf('MSIE') !== -1 || window.navigator.appVersion.indexOf('Trident/') > -1) {\n          return true;\n        }\n      }\n    }, {\n      key: \"isIE\",\n      value: function isIE() {\n        var ua = window.navigator.userAgent;\n        var msie = ua.indexOf('MSIE ');\n\n        if (msie > 0) {\n          // IE 10 or older => return version number\n          return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n        }\n\n        var trident = ua.indexOf('Trident/');\n\n        if (trident > 0) {\n          // IE 11 => return version number\n          var rv = ua.indexOf('rv:');\n          return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n        }\n\n        var edge = ua.indexOf('Edge/');\n\n        if (edge > 0) {\n          // Edge (IE 12+) => return version number\n          return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n        } // other browser\n\n\n        return false;\n      }\n    }]);\n\n    return Utils;\n  }();\n\n  /**\n   * ApexCharts Animation Class.\n   *\n   * @module Animations\n   **/\n\n  var Animations = /*#__PURE__*/function () {\n    function Animations(ctx) {\n      _classCallCheck(this, Animations);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.setEasingFunctions();\n    }\n\n    _createClass(Animations, [{\n      key: \"setEasingFunctions\",\n      value: function setEasingFunctions() {\n        var easing;\n        if (this.w.globals.easing) return;\n        var userDefinedEasing = this.w.config.chart.animations.easing;\n\n        switch (userDefinedEasing) {\n          case 'linear':\n            {\n              easing = '-';\n              break;\n            }\n\n          case 'easein':\n            {\n              easing = '<';\n              break;\n            }\n\n          case 'easeout':\n            {\n              easing = '>';\n              break;\n            }\n\n          case 'easeinout':\n            {\n              easing = '<>';\n              break;\n            }\n\n          case 'swing':\n            {\n              easing = function easing(pos) {\n                var s = 1.70158;\n                var ret = (pos -= 1) * pos * ((s + 1) * pos + s) + 1;\n                return ret;\n              };\n\n              break;\n            }\n\n          case 'bounce':\n            {\n              easing = function easing(pos) {\n                var ret = '';\n\n                if (pos < 1 / 2.75) {\n                  ret = 7.5625 * pos * pos;\n                } else if (pos < 2 / 2.75) {\n                  ret = 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75;\n                } else if (pos < 2.5 / 2.75) {\n                  ret = 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375;\n                } else {\n                  ret = 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375;\n                }\n\n                return ret;\n              };\n\n              break;\n            }\n\n          case 'elastic':\n            {\n              easing = function easing(pos) {\n                if (pos === !!pos) return pos;\n                return Math.pow(2, -10 * pos) * Math.sin((pos - 0.075) * (2 * Math.PI) / 0.3) + 1;\n              };\n\n              break;\n            }\n\n          default:\n            {\n              easing = '<>';\n            }\n        }\n\n        this.w.globals.easing = easing;\n      }\n    }, {\n      key: \"animateLine\",\n      value: function animateLine(el, from, to, speed) {\n        el.attr(from).animate(speed).attr(to);\n      }\n      /*\n       ** Animate radius of a circle element\n       */\n\n    }, {\n      key: \"animateMarker\",\n      value: function animateMarker(el, from, to, speed, easing, cb) {\n        if (!from) from = 0;\n        el.attr({\n          r: from,\n          width: from,\n          height: from\n        }).animate(speed, easing).attr({\n          r: to,\n          width: to.width,\n          height: to.height\n        }).afterAll(function () {\n          cb();\n        });\n      }\n      /*\n       ** Animate radius and position of a circle element\n       */\n\n    }, {\n      key: \"animateCircle\",\n      value: function animateCircle(el, from, to, speed, easing) {\n        el.attr({\n          r: from.r,\n          cx: from.cx,\n          cy: from.cy\n        }).animate(speed, easing).attr({\n          r: to.r,\n          cx: to.cx,\n          cy: to.cy\n        });\n      }\n      /*\n       ** Animate rect properties\n       */\n\n    }, {\n      key: \"animateRect\",\n      value: function animateRect(el, from, to, speed, fn) {\n        el.attr(from).animate(speed).attr(to).afterAll(function () {\n          return fn();\n        });\n      }\n    }, {\n      key: \"animatePathsGradually\",\n      value: function animatePathsGradually(params) {\n        var el = params.el,\n            realIndex = params.realIndex,\n            j = params.j,\n            fill = params.fill,\n            pathFrom = params.pathFrom,\n            pathTo = params.pathTo,\n            speed = params.speed,\n            delay = params.delay;\n        var me = this;\n        var w = this.w;\n        var delayFactor = 0;\n\n        if (w.config.chart.animations.animateGradually.enabled) {\n          delayFactor = w.config.chart.animations.animateGradually.delay;\n        }\n\n        if (w.config.chart.animations.dynamicAnimation.enabled && w.globals.dataChanged && w.config.chart.type !== 'bar') {\n          // disabled due to this bug - https://github.com/apexcharts/vue-apexcharts/issues/75\n          delayFactor = 0;\n        }\n\n        me.morphSVG(el, realIndex, j, w.config.chart.type === 'line' && !w.globals.comboCharts ? 'stroke' : fill, pathFrom, pathTo, speed, delay * delayFactor);\n      }\n    }, {\n      key: \"showDelayedElements\",\n      value: function showDelayedElements() {\n        this.w.globals.delayedElements.forEach(function (d) {\n          var ele = d.el;\n          ele.classList.remove('apexcharts-element-hidden');\n        });\n      }\n    }, {\n      key: \"animationCompleted\",\n      value: function animationCompleted(el) {\n        var w = this.w;\n        if (w.globals.animationEnded) return;\n        w.globals.animationEnded = true;\n        this.showDelayedElements();\n\n        if (typeof w.config.chart.events.animationEnd === 'function') {\n          w.config.chart.events.animationEnd(this.ctx, {\n            el: el,\n            w: w\n          });\n        }\n      } // SVG.js animation for morphing one path to another\n\n    }, {\n      key: \"morphSVG\",\n      value: function morphSVG(el, realIndex, j, fill, pathFrom, pathTo, speed, delay) {\n        var _this = this;\n\n        var w = this.w;\n\n        if (!pathFrom) {\n          pathFrom = el.attr('pathFrom');\n        }\n\n        if (!pathTo) {\n          pathTo = el.attr('pathTo');\n        }\n\n        var disableAnimationForCorrupPath = function disableAnimationForCorrupPath(path) {\n          if (w.config.chart.type === 'radar') {\n            // radar chart drops the path to bottom and hence a corrup path looks ugly\n            // therefore, disable animation for such a case\n            speed = 1;\n          }\n\n          return \"M 0 \".concat(w.globals.gridHeight);\n        };\n\n        if (!pathFrom || pathFrom.indexOf('undefined') > -1 || pathFrom.indexOf('NaN') > -1) {\n          pathFrom = disableAnimationForCorrupPath();\n        }\n\n        if (!pathTo || pathTo.indexOf('undefined') > -1 || pathTo.indexOf('NaN') > -1) {\n          pathTo = disableAnimationForCorrupPath();\n        }\n\n        if (!w.globals.shouldAnimate) {\n          speed = 1;\n        }\n\n        el.plot(pathFrom).animate(1, w.globals.easing, delay).plot(pathFrom).animate(speed, w.globals.easing, delay).plot(pathTo).afterAll(function () {\n          // a flag to indicate that the original mount function can return true now as animation finished here\n          if (Utils$1.isNumber(j)) {\n            if (j === w.globals.series[w.globals.maxValsInArrayIndex].length - 2 && w.globals.shouldAnimate) {\n              _this.animationCompleted(el);\n            }\n          } else if (fill !== 'none' && w.globals.shouldAnimate) {\n            if (!w.globals.comboCharts && realIndex === w.globals.series.length - 1 || w.globals.comboCharts) {\n              _this.animationCompleted(el);\n            }\n          }\n\n          _this.showDelayedElements();\n        });\n      }\n    }]);\n\n    return Animations;\n  }();\n\n  /**\n   * ApexCharts Filters Class for setting hover/active states on the paths.\n   *\n   * @module Formatters\n   **/\n\n  var Filters = /*#__PURE__*/function () {\n    function Filters(ctx) {\n      _classCallCheck(this, Filters);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    } // create a re-usable filter which can be appended other filter effects and applied to multiple elements\n\n\n    _createClass(Filters, [{\n      key: \"getDefaultFilter\",\n      value: function getDefaultFilter(el, i) {\n        var w = this.w;\n        el.unfilter(true);\n        var filter = new window.SVG.Filter();\n        filter.size('120%', '180%', '-5%', '-40%');\n\n        if (w.config.states.normal.filter !== 'none') {\n          this.applyFilter(el, i, w.config.states.normal.filter.type, w.config.states.normal.filter.value);\n        } else {\n          if (w.config.chart.dropShadow.enabled) {\n            this.dropShadow(el, w.config.chart.dropShadow, i);\n          }\n        }\n      }\n    }, {\n      key: \"addNormalFilter\",\n      value: function addNormalFilter(el, i) {\n        var w = this.w; // revert shadow if it was there\n        // but, ignore marker as marker don't have dropshadow yet\n\n        if (w.config.chart.dropShadow.enabled && !el.node.classList.contains('apexcharts-marker')) {\n          this.dropShadow(el, w.config.chart.dropShadow, i);\n        }\n      } // appends dropShadow to the filter object which can be chained with other filter effects\n\n    }, {\n      key: \"addLightenFilter\",\n      value: function addLightenFilter(el, i, attrs) {\n        var _this = this;\n\n        var w = this.w;\n        var intensity = attrs.intensity;\n        el.unfilter(true);\n        var filter = new window.SVG.Filter();\n        el.filter(function (add) {\n          var shadowAttr = w.config.chart.dropShadow;\n\n          if (shadowAttr.enabled) {\n            filter = _this.addShadow(add, i, shadowAttr);\n          } else {\n            filter = add;\n          }\n\n          filter.componentTransfer({\n            rgb: {\n              type: 'linear',\n              slope: 1.5,\n              intercept: intensity\n            }\n          });\n        });\n        el.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse');\n\n        this._scaleFilterSize(el.filterer.node);\n      } // appends dropShadow to the filter object which can be chained with other filter effects\n\n    }, {\n      key: \"addDarkenFilter\",\n      value: function addDarkenFilter(el, i, attrs) {\n        var _this2 = this;\n\n        var w = this.w;\n        var intensity = attrs.intensity;\n        el.unfilter(true);\n        var filter = new window.SVG.Filter();\n        el.filter(function (add) {\n          var shadowAttr = w.config.chart.dropShadow;\n\n          if (shadowAttr.enabled) {\n            filter = _this2.addShadow(add, i, shadowAttr);\n          } else {\n            filter = add;\n          }\n\n          filter.componentTransfer({\n            rgb: {\n              type: 'linear',\n              slope: intensity\n            }\n          });\n        });\n        el.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse');\n\n        this._scaleFilterSize(el.filterer.node);\n      }\n    }, {\n      key: \"applyFilter\",\n      value: function applyFilter(el, i, filter) {\n        var intensity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.5;\n\n        switch (filter) {\n          case 'none':\n            {\n              this.addNormalFilter(el, i);\n              break;\n            }\n\n          case 'lighten':\n            {\n              this.addLightenFilter(el, i, {\n                intensity: intensity\n              });\n              break;\n            }\n\n          case 'darken':\n            {\n              this.addDarkenFilter(el, i, {\n                intensity: intensity\n              });\n              break;\n            }\n        }\n      } // appends dropShadow to the filter object which can be chained with other filter effects\n\n    }, {\n      key: \"addShadow\",\n      value: function addShadow(add, i, attrs) {\n        var blur = attrs.blur,\n            top = attrs.top,\n            left = attrs.left,\n            color = attrs.color,\n            opacity = attrs.opacity;\n        var shadowBlur = add.flood(Array.isArray(color) ? color[i] : color, opacity).composite(add.sourceAlpha, 'in').offset(left, top).gaussianBlur(blur).merge(add.source);\n        return add.blend(add.source, shadowBlur);\n      } // directly adds dropShadow to the element and returns the same element.\n      // the only way it is different from the addShadow() function is that addShadow is chainable to other filters, while this function discards all filters and add dropShadow\n\n    }, {\n      key: \"dropShadow\",\n      value: function dropShadow(el, attrs) {\n        var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var top = attrs.top,\n            left = attrs.left,\n            blur = attrs.blur,\n            color = attrs.color,\n            opacity = attrs.opacity,\n            noUserSpaceOnUse = attrs.noUserSpaceOnUse;\n        var w = this.w;\n        el.unfilter(true);\n\n        if (Utils$1.isIE() && w.config.chart.type === 'radialBar') {\n          // in radialbar charts, dropshadow is clipping actual drawing in IE\n          return el;\n        }\n\n        color = Array.isArray(color) ? color[i] : color;\n        el.filter(function (add) {\n          var shadowBlur = null;\n\n          if (Utils$1.isSafari() || Utils$1.isFirefox() || Utils$1.isIE()) {\n            // safari/firefox/IE have some alternative way to use this filter\n            shadowBlur = add.flood(color, opacity).composite(add.sourceAlpha, 'in').offset(left, top).gaussianBlur(blur);\n          } else {\n            shadowBlur = add.flood(color, opacity).composite(add.sourceAlpha, 'in').offset(left, top).gaussianBlur(blur).merge(add.source);\n          }\n\n          add.blend(add.source, shadowBlur);\n        });\n\n        if (!noUserSpaceOnUse) {\n          el.filterer.node.setAttribute('filterUnits', 'userSpaceOnUse');\n        }\n\n        this._scaleFilterSize(el.filterer.node);\n\n        return el;\n      }\n    }, {\n      key: \"setSelectionFilter\",\n      value: function setSelectionFilter(el, realIndex, dataPointIndex) {\n        var w = this.w;\n\n        if (typeof w.globals.selectedDataPoints[realIndex] !== 'undefined') {\n          if (w.globals.selectedDataPoints[realIndex].indexOf(dataPointIndex) > -1) {\n            el.node.setAttribute('selected', true);\n            var activeFilter = w.config.states.active.filter;\n\n            if (activeFilter !== 'none') {\n              this.applyFilter(el, realIndex, activeFilter.type, activeFilter.value);\n            }\n          }\n        }\n      }\n    }, {\n      key: \"_scaleFilterSize\",\n      value: function _scaleFilterSize(el) {\n        var setAttributes = function setAttributes(attrs) {\n          for (var key in attrs) {\n            if (attrs.hasOwnProperty(key)) {\n              el.setAttribute(key, attrs[key]);\n            }\n          }\n        };\n\n        setAttributes({\n          width: '200%',\n          height: '200%',\n          x: '-50%',\n          y: '-50%'\n        });\n      }\n    }]);\n\n    return Filters;\n  }();\n\n  /**\n   * ApexCharts Graphics Class for all drawing operations.\n   *\n   * @module Graphics\n   **/\n\n  var Graphics = /*#__PURE__*/function () {\n    function Graphics(ctx) {\n      _classCallCheck(this, Graphics);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Graphics, [{\n      key: \"drawLine\",\n      value: function drawLine(x1, y1, x2, y2) {\n        var lineColor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '#a8a8a8';\n        var dashArray = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n        var strokeWidth = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n        var strokeLineCap = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'butt';\n        var w = this.w;\n        var line = w.globals.dom.Paper.line().attr({\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          stroke: lineColor,\n          'stroke-dasharray': dashArray,\n          'stroke-width': strokeWidth,\n          'stroke-linecap': strokeLineCap\n        });\n        return line;\n      }\n    }, {\n      key: \"drawRect\",\n      value: function drawRect() {\n        var x1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var y1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var x2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        var y2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n        var radius = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n        var color = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '#fefefe';\n        var opacity = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 1;\n        var strokeWidth = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n        var strokeColor = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : null;\n        var strokeDashArray = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 0;\n        var w = this.w;\n        var rect = w.globals.dom.Paper.rect();\n        rect.attr({\n          x: x1,\n          y: y1,\n          width: x2 > 0 ? x2 : 0,\n          height: y2 > 0 ? y2 : 0,\n          rx: radius,\n          ry: radius,\n          opacity: opacity,\n          'stroke-width': strokeWidth !== null ? strokeWidth : 0,\n          stroke: strokeColor !== null ? strokeColor : 'none',\n          'stroke-dasharray': strokeDashArray\n        }); // fix apexcharts.js#1410\n\n        rect.node.setAttribute('fill', color);\n        return rect;\n      }\n    }, {\n      key: \"drawPolygon\",\n      value: function drawPolygon(polygonString) {\n        var stroke = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '#e1e1e1';\n        var strokeWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n        var fill = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'none';\n        var w = this.w;\n        var polygon = w.globals.dom.Paper.polygon(polygonString).attr({\n          fill: fill,\n          stroke: stroke,\n          'stroke-width': strokeWidth\n        });\n        return polygon;\n      }\n    }, {\n      key: \"drawCircle\",\n      value: function drawCircle(radius) {\n        var attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var w = this.w;\n        if (radius < 0) radius = 0;\n        var c = w.globals.dom.Paper.circle(radius * 2);\n\n        if (attrs !== null) {\n          c.attr(attrs);\n        }\n\n        return c;\n      }\n    }, {\n      key: \"drawPath\",\n      value: function drawPath(_ref) {\n        var _ref$d = _ref.d,\n            d = _ref$d === void 0 ? '' : _ref$d,\n            _ref$stroke = _ref.stroke,\n            stroke = _ref$stroke === void 0 ? '#a8a8a8' : _ref$stroke,\n            _ref$strokeWidth = _ref.strokeWidth,\n            strokeWidth = _ref$strokeWidth === void 0 ? 1 : _ref$strokeWidth,\n            fill = _ref.fill,\n            _ref$fillOpacity = _ref.fillOpacity,\n            fillOpacity = _ref$fillOpacity === void 0 ? 1 : _ref$fillOpacity,\n            _ref$strokeOpacity = _ref.strokeOpacity,\n            strokeOpacity = _ref$strokeOpacity === void 0 ? 1 : _ref$strokeOpacity,\n            classes = _ref.classes,\n            _ref$strokeLinecap = _ref.strokeLinecap,\n            strokeLinecap = _ref$strokeLinecap === void 0 ? null : _ref$strokeLinecap,\n            _ref$strokeDashArray = _ref.strokeDashArray,\n            strokeDashArray = _ref$strokeDashArray === void 0 ? 0 : _ref$strokeDashArray;\n        var w = this.w;\n\n        if (strokeLinecap === null) {\n          strokeLinecap = w.config.stroke.lineCap;\n        }\n\n        if (d.indexOf('undefined') > -1 || d.indexOf('NaN') > -1) {\n          d = \"M 0 \".concat(w.globals.gridHeight);\n        }\n\n        var p = w.globals.dom.Paper.path(d).attr({\n          fill: fill,\n          'fill-opacity': fillOpacity,\n          stroke: stroke,\n          'stroke-opacity': strokeOpacity,\n          'stroke-linecap': strokeLinecap,\n          'stroke-width': strokeWidth,\n          'stroke-dasharray': strokeDashArray,\n          class: classes\n        });\n        return p;\n      }\n    }, {\n      key: \"group\",\n      value: function group() {\n        var attrs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var w = this.w;\n        var g = w.globals.dom.Paper.group();\n\n        if (attrs !== null) {\n          g.attr(attrs);\n        }\n\n        return g;\n      }\n    }, {\n      key: \"move\",\n      value: function move(x, y) {\n        var move = ['M', x, y].join(' ');\n        return move;\n      }\n    }, {\n      key: \"line\",\n      value: function line(x, y) {\n        var hORv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var line = null;\n\n        if (hORv === null) {\n          line = ['L', x, y].join(' ');\n        } else if (hORv === 'H') {\n          line = ['H', x].join(' ');\n        } else if (hORv === 'V') {\n          line = ['V', y].join(' ');\n        }\n\n        return line;\n      }\n    }, {\n      key: \"curve\",\n      value: function curve(x1, y1, x2, y2, x, y) {\n        var curve = ['C', x1, y1, x2, y2, x, y].join(' ');\n        return curve;\n      }\n    }, {\n      key: \"quadraticCurve\",\n      value: function quadraticCurve(x1, y1, x, y) {\n        var curve = ['Q', x1, y1, x, y].join(' ');\n        return curve;\n      }\n    }, {\n      key: \"arc\",\n      value: function arc(rx, ry, axisRotation, largeArcFlag, sweepFlag, x, y) {\n        var relative = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n        var coord = 'A';\n        if (relative) coord = 'a';\n        var arc = [coord, rx, ry, axisRotation, largeArcFlag, sweepFlag, x, y].join(' ');\n        return arc;\n      }\n      /**\n       * @memberof Graphics\n       * @param {object}\n       *  i = series's index\n       *  realIndex = realIndex is series's actual index when it was drawn time. After several redraws, the iterating \"i\" may change in loops, but realIndex doesn't\n       *  pathFrom = existing pathFrom to animateTo\n       *  pathTo = new Path to which d attr will be animated from pathFrom to pathTo\n       *  stroke = line Color\n       *  strokeWidth = width of path Line\n       *  fill = it can be gradient, single color, pattern or image\n       *  animationDelay = how much to delay when starting animation (in milliseconds)\n       *  dataChangeSpeed = for dynamic animations, when data changes\n       *  className = class attribute to add\n       * @return {object} svg.js path object\n       **/\n\n    }, {\n      key: \"renderPaths\",\n      value: function renderPaths(_ref2) {\n        var j = _ref2.j,\n            realIndex = _ref2.realIndex,\n            pathFrom = _ref2.pathFrom,\n            pathTo = _ref2.pathTo,\n            stroke = _ref2.stroke,\n            strokeWidth = _ref2.strokeWidth,\n            strokeLinecap = _ref2.strokeLinecap,\n            fill = _ref2.fill,\n            animationDelay = _ref2.animationDelay,\n            initialSpeed = _ref2.initialSpeed,\n            dataChangeSpeed = _ref2.dataChangeSpeed,\n            className = _ref2.className,\n            _ref2$shouldClipToGri = _ref2.shouldClipToGrid,\n            shouldClipToGrid = _ref2$shouldClipToGri === void 0 ? true : _ref2$shouldClipToGri,\n            _ref2$bindEventsOnPat = _ref2.bindEventsOnPaths,\n            bindEventsOnPaths = _ref2$bindEventsOnPat === void 0 ? true : _ref2$bindEventsOnPat,\n            _ref2$drawShadow = _ref2.drawShadow,\n            drawShadow = _ref2$drawShadow === void 0 ? true : _ref2$drawShadow;\n        var w = this.w;\n        var filters = new Filters(this.ctx);\n        var anim = new Animations(this.ctx);\n        var initialAnim = this.w.config.chart.animations.enabled;\n        var dynamicAnim = initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;\n        var d;\n        var shouldAnimate = !!(initialAnim && !w.globals.resized || dynamicAnim && w.globals.dataChanged && w.globals.shouldAnimate);\n\n        if (shouldAnimate) {\n          d = pathFrom;\n        } else {\n          d = pathTo;\n          w.globals.animationEnded = true;\n        }\n\n        var strokeDashArrayOpt = w.config.stroke.dashArray;\n        var strokeDashArray = 0;\n\n        if (Array.isArray(strokeDashArrayOpt)) {\n          strokeDashArray = strokeDashArrayOpt[realIndex];\n        } else {\n          strokeDashArray = w.config.stroke.dashArray;\n        }\n\n        var el = this.drawPath({\n          d: d,\n          stroke: stroke,\n          strokeWidth: strokeWidth,\n          fill: fill,\n          fillOpacity: 1,\n          classes: className,\n          strokeLinecap: strokeLinecap,\n          strokeDashArray: strokeDashArray\n        });\n        el.attr('index', realIndex);\n\n        if (shouldClipToGrid) {\n          el.attr({\n            'clip-path': \"url(#gridRectMask\".concat(w.globals.cuid, \")\")\n          });\n        } // const defaultFilter = el.filterer\n\n\n        if (w.config.states.normal.filter.type !== 'none') {\n          filters.getDefaultFilter(el, realIndex);\n        } else {\n          if (w.config.chart.dropShadow.enabled && drawShadow) {\n            if (!w.config.chart.dropShadow.enabledOnSeries || w.config.chart.dropShadow.enabledOnSeries && w.config.chart.dropShadow.enabledOnSeries.indexOf(realIndex) !== -1) {\n              var shadow = w.config.chart.dropShadow;\n              filters.dropShadow(el, shadow, realIndex);\n            }\n          }\n        }\n\n        if (bindEventsOnPaths) {\n          el.node.addEventListener('mouseenter', this.pathMouseEnter.bind(this, el));\n          el.node.addEventListener('mouseleave', this.pathMouseLeave.bind(this, el));\n          el.node.addEventListener('mousedown', this.pathMouseDown.bind(this, el));\n        }\n\n        el.attr({\n          pathTo: pathTo,\n          pathFrom: pathFrom\n        });\n        var defaultAnimateOpts = {\n          el: el,\n          j: j,\n          realIndex: realIndex,\n          pathFrom: pathFrom,\n          pathTo: pathTo,\n          fill: fill,\n          strokeWidth: strokeWidth,\n          delay: animationDelay\n        };\n\n        if (initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n          anim.animatePathsGradually(_objectSpread2(_objectSpread2({}, defaultAnimateOpts), {}, {\n            speed: initialSpeed\n          }));\n        } else {\n          if (w.globals.resized || !w.globals.dataChanged) {\n            anim.showDelayedElements();\n          }\n        }\n\n        if (w.globals.dataChanged && dynamicAnim && shouldAnimate) {\n          anim.animatePathsGradually(_objectSpread2(_objectSpread2({}, defaultAnimateOpts), {}, {\n            speed: dataChangeSpeed\n          }));\n        }\n\n        return el;\n      }\n    }, {\n      key: \"drawPattern\",\n      value: function drawPattern(style, width, height) {\n        var stroke = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '#a8a8a8';\n        var strokeWidth = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n        var w = this.w;\n        var p = w.globals.dom.Paper.pattern(width, height, function (add) {\n          if (style === 'horizontalLines') {\n            add.line(0, 0, height, 0).stroke({\n              color: stroke,\n              width: strokeWidth + 1\n            });\n          } else if (style === 'verticalLines') {\n            add.line(0, 0, 0, width).stroke({\n              color: stroke,\n              width: strokeWidth + 1\n            });\n          } else if (style === 'slantedLines') {\n            add.line(0, 0, width, height).stroke({\n              color: stroke,\n              width: strokeWidth\n            });\n          } else if (style === 'squares') {\n            add.rect(width, height).fill('none').stroke({\n              color: stroke,\n              width: strokeWidth\n            });\n          } else if (style === 'circles') {\n            add.circle(width).fill('none').stroke({\n              color: stroke,\n              width: strokeWidth\n            });\n          }\n        });\n        return p;\n      }\n    }, {\n      key: \"drawGradient\",\n      value: function drawGradient(style, gfrom, gto, opacityFrom, opacityTo) {\n        var size = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var stops = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : null;\n        var colorStops = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : null;\n        var i = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 0;\n        var w = this.w;\n        var g;\n\n        if (gfrom.length < 9 && gfrom.indexOf('#') === 0) {\n          // if the hex contains alpha and is of 9 digit, skip the opacity\n          gfrom = Utils$1.hexToRgba(gfrom, opacityFrom);\n        }\n\n        if (gto.length < 9 && gto.indexOf('#') === 0) {\n          gto = Utils$1.hexToRgba(gto, opacityTo);\n        }\n\n        var stop1 = 0;\n        var stop2 = 1;\n        var stop3 = 1;\n        var stop4 = null;\n\n        if (stops !== null) {\n          stop1 = typeof stops[0] !== 'undefined' ? stops[0] / 100 : 0;\n          stop2 = typeof stops[1] !== 'undefined' ? stops[1] / 100 : 1;\n          stop3 = typeof stops[2] !== 'undefined' ? stops[2] / 100 : 1;\n          stop4 = typeof stops[3] !== 'undefined' ? stops[3] / 100 : null;\n        }\n\n        var radial = !!(w.config.chart.type === 'donut' || w.config.chart.type === 'pie' || w.config.chart.type === 'polarArea' || w.config.chart.type === 'bubble');\n\n        if (colorStops === null || colorStops.length === 0) {\n          g = w.globals.dom.Paper.gradient(radial ? 'radial' : 'linear', function (stop) {\n            stop.at(stop1, gfrom, opacityFrom);\n            stop.at(stop2, gto, opacityTo);\n            stop.at(stop3, gto, opacityTo);\n\n            if (stop4 !== null) {\n              stop.at(stop4, gfrom, opacityFrom);\n            }\n          });\n        } else {\n          g = w.globals.dom.Paper.gradient(radial ? 'radial' : 'linear', function (stop) {\n            var gradientStops = Array.isArray(colorStops[i]) ? colorStops[i] : colorStops;\n            gradientStops.forEach(function (s) {\n              stop.at(s.offset / 100, s.color, s.opacity);\n            });\n          });\n        }\n\n        if (!radial) {\n          if (style === 'vertical') {\n            g.from(0, 0).to(0, 1);\n          } else if (style === 'diagonal') {\n            g.from(0, 0).to(1, 1);\n          } else if (style === 'horizontal') {\n            g.from(0, 1).to(1, 1);\n          } else if (style === 'diagonal2') {\n            g.from(1, 0).to(0, 1);\n          }\n        } else {\n          var offx = w.globals.gridWidth / 2;\n          var offy = w.globals.gridHeight / 2;\n\n          if (w.config.chart.type !== 'bubble') {\n            g.attr({\n              gradientUnits: 'userSpaceOnUse',\n              cx: offx,\n              cy: offy,\n              r: size\n            });\n          } else {\n            g.attr({\n              cx: 0.5,\n              cy: 0.5,\n              r: 0.8,\n              fx: 0.2,\n              fy: 0.2\n            });\n          }\n        }\n\n        return g;\n      }\n    }, {\n      key: \"drawText\",\n      value: function drawText(_ref3) {\n        var x = _ref3.x,\n            y = _ref3.y,\n            text = _ref3.text,\n            textAnchor = _ref3.textAnchor,\n            fontSize = _ref3.fontSize,\n            fontFamily = _ref3.fontFamily,\n            fontWeight = _ref3.fontWeight,\n            foreColor = _ref3.foreColor,\n            opacity = _ref3.opacity,\n            _ref3$cssClass = _ref3.cssClass,\n            cssClass = _ref3$cssClass === void 0 ? '' : _ref3$cssClass,\n            _ref3$isPlainText = _ref3.isPlainText,\n            isPlainText = _ref3$isPlainText === void 0 ? true : _ref3$isPlainText;\n        var w = this.w;\n        if (typeof text === 'undefined') text = '';\n\n        if (!textAnchor) {\n          textAnchor = 'start';\n        }\n\n        if (!foreColor || !foreColor.length) {\n          foreColor = w.config.chart.foreColor;\n        }\n\n        fontFamily = fontFamily || w.config.chart.fontFamily;\n        fontWeight = fontWeight || 'regular';\n        var elText;\n\n        if (Array.isArray(text)) {\n          elText = w.globals.dom.Paper.text(function (add) {\n            for (var i = 0; i < text.length; i++) {\n              i === 0 ? add.tspan(text[i]) : add.tspan(text[i]).newLine();\n            }\n          });\n        } else {\n          elText = isPlainText ? w.globals.dom.Paper.plain(text) : w.globals.dom.Paper.text(function (add) {\n            return add.tspan(text);\n          });\n        }\n\n        elText.attr({\n          x: x,\n          y: y,\n          'text-anchor': textAnchor,\n          'dominant-baseline': 'auto',\n          'font-size': fontSize,\n          'font-family': fontFamily,\n          'font-weight': fontWeight,\n          fill: foreColor,\n          class: 'apexcharts-text ' + cssClass\n        });\n        elText.node.style.fontFamily = fontFamily;\n        elText.node.style.opacity = opacity;\n        return elText;\n      }\n    }, {\n      key: \"drawMarker\",\n      value: function drawMarker(x, y, opts) {\n        x = x || 0;\n        var size = opts.pSize || 0;\n        var elPoint = null;\n\n        if (opts.shape === 'square' || opts.shape === 'rect') {\n          var radius = opts.pRadius === undefined ? size / 2 : opts.pRadius;\n\n          if (y === null || !size) {\n            size = 0;\n            radius = 0;\n          }\n\n          var nSize = size * 1.2 + radius;\n          var p = this.drawRect(nSize, nSize, nSize, nSize, radius);\n          p.attr({\n            x: x - nSize / 2,\n            y: y - nSize / 2,\n            cx: x,\n            cy: y,\n            class: opts.class ? opts.class : '',\n            fill: opts.pointFillColor,\n            'fill-opacity': opts.pointFillOpacity ? opts.pointFillOpacity : 1,\n            stroke: opts.pointStrokeColor,\n            'stroke-width': opts.pointStrokeWidth ? opts.pointStrokeWidth : 0,\n            'stroke-opacity': opts.pointStrokeOpacity ? opts.pointStrokeOpacity : 1\n          });\n          elPoint = p;\n        } else if (opts.shape === 'circle' || !opts.shape) {\n          if (!Utils$1.isNumber(y)) {\n            size = 0;\n            y = 0;\n          } // let nSize = size - opts.pRadius / 2 < 0 ? 0 : size - opts.pRadius / 2\n\n\n          elPoint = this.drawCircle(size, {\n            cx: x,\n            cy: y,\n            class: opts.class ? opts.class : '',\n            stroke: opts.pointStrokeColor,\n            fill: opts.pointFillColor,\n            'fill-opacity': opts.pointFillOpacity ? opts.pointFillOpacity : 1,\n            'stroke-width': opts.pointStrokeWidth ? opts.pointStrokeWidth : 0,\n            'stroke-opacity': opts.pointStrokeOpacity ? opts.pointStrokeOpacity : 1\n          });\n        }\n\n        return elPoint;\n      }\n    }, {\n      key: \"pathMouseEnter\",\n      value: function pathMouseEnter(path, e) {\n        var w = this.w;\n        var filters = new Filters(this.ctx);\n        var i = parseInt(path.node.getAttribute('index'), 10);\n        var j = parseInt(path.node.getAttribute('j'), 10);\n\n        if (typeof w.config.chart.events.dataPointMouseEnter === 'function') {\n          w.config.chart.events.dataPointMouseEnter(e, this.ctx, {\n            seriesIndex: i,\n            dataPointIndex: j,\n            w: w\n          });\n        }\n\n        this.ctx.events.fireEvent('dataPointMouseEnter', [e, this.ctx, {\n          seriesIndex: i,\n          dataPointIndex: j,\n          w: w\n        }]);\n\n        if (w.config.states.active.filter.type !== 'none') {\n          if (path.node.getAttribute('selected') === 'true') {\n            return;\n          }\n        }\n\n        if (w.config.states.hover.filter.type !== 'none') {\n          if (!w.globals.isTouchDevice) {\n            var hoverFilter = w.config.states.hover.filter;\n            filters.applyFilter(path, i, hoverFilter.type, hoverFilter.value);\n          }\n        }\n      }\n    }, {\n      key: \"pathMouseLeave\",\n      value: function pathMouseLeave(path, e) {\n        var w = this.w;\n        var filters = new Filters(this.ctx);\n        var i = parseInt(path.node.getAttribute('index'), 10);\n        var j = parseInt(path.node.getAttribute('j'), 10);\n\n        if (typeof w.config.chart.events.dataPointMouseLeave === 'function') {\n          w.config.chart.events.dataPointMouseLeave(e, this.ctx, {\n            seriesIndex: i,\n            dataPointIndex: j,\n            w: w\n          });\n        }\n\n        this.ctx.events.fireEvent('dataPointMouseLeave', [e, this.ctx, {\n          seriesIndex: i,\n          dataPointIndex: j,\n          w: w\n        }]);\n\n        if (w.config.states.active.filter.type !== 'none') {\n          if (path.node.getAttribute('selected') === 'true') {\n            return;\n          }\n        }\n\n        if (w.config.states.hover.filter.type !== 'none') {\n          filters.getDefaultFilter(path, i);\n        }\n      }\n    }, {\n      key: \"pathMouseDown\",\n      value: function pathMouseDown(path, e) {\n        var w = this.w;\n        var filters = new Filters(this.ctx);\n        var i = parseInt(path.node.getAttribute('index'), 10);\n        var j = parseInt(path.node.getAttribute('j'), 10);\n        var selected = 'false';\n\n        if (path.node.getAttribute('selected') === 'true') {\n          path.node.setAttribute('selected', 'false');\n\n          if (w.globals.selectedDataPoints[i].indexOf(j) > -1) {\n            var index = w.globals.selectedDataPoints[i].indexOf(j);\n            w.globals.selectedDataPoints[i].splice(index, 1);\n          }\n        } else {\n          if (!w.config.states.active.allowMultipleDataPointsSelection && w.globals.selectedDataPoints.length > 0) {\n            w.globals.selectedDataPoints = [];\n            var elPaths = w.globals.dom.Paper.select('.apexcharts-series path').members;\n            var elCircles = w.globals.dom.Paper.select('.apexcharts-series circle, .apexcharts-series rect').members;\n\n            var deSelect = function deSelect(els) {\n              Array.prototype.forEach.call(els, function (el) {\n                el.node.setAttribute('selected', 'false');\n                filters.getDefaultFilter(el, i);\n              });\n            };\n\n            deSelect(elPaths);\n            deSelect(elCircles);\n          }\n\n          path.node.setAttribute('selected', 'true');\n          selected = 'true';\n\n          if (typeof w.globals.selectedDataPoints[i] === 'undefined') {\n            w.globals.selectedDataPoints[i] = [];\n          }\n\n          w.globals.selectedDataPoints[i].push(j);\n        }\n\n        if (selected === 'true') {\n          var activeFilter = w.config.states.active.filter;\n\n          if (activeFilter !== 'none') {\n            filters.applyFilter(path, i, activeFilter.type, activeFilter.value);\n          }\n        } else {\n          if (w.config.states.active.filter.type !== 'none') {\n            filters.getDefaultFilter(path, i);\n          }\n        }\n\n        if (typeof w.config.chart.events.dataPointSelection === 'function') {\n          w.config.chart.events.dataPointSelection(e, this.ctx, {\n            selectedDataPoints: w.globals.selectedDataPoints,\n            seriesIndex: i,\n            dataPointIndex: j,\n            w: w\n          });\n        }\n\n        if (e) {\n          this.ctx.events.fireEvent('dataPointSelection', [e, this.ctx, {\n            selectedDataPoints: w.globals.selectedDataPoints,\n            seriesIndex: i,\n            dataPointIndex: j,\n            w: w\n          }]);\n        }\n      }\n    }, {\n      key: \"rotateAroundCenter\",\n      value: function rotateAroundCenter(el) {\n        var coord = {};\n\n        if (el && typeof el.getBBox === 'function') {\n          coord = el.getBBox();\n        }\n\n        var x = coord.x + coord.width / 2;\n        var y = coord.y + coord.height / 2;\n        return {\n          x: x,\n          y: y\n        };\n      }\n    }, {\n      key: \"getTextRects\",\n      value: function getTextRects(text, fontSize, fontFamily, transform) {\n        var useBBox = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n        var w = this.w;\n        var virtualText = this.drawText({\n          x: -200,\n          y: -200,\n          text: text,\n          textAnchor: 'start',\n          fontSize: fontSize,\n          fontFamily: fontFamily,\n          foreColor: '#fff',\n          opacity: 0\n        });\n\n        if (transform) {\n          virtualText.attr('transform', transform);\n        }\n\n        w.globals.dom.Paper.add(virtualText);\n        var rect = virtualText.bbox();\n\n        if (!useBBox) {\n          rect = virtualText.node.getBoundingClientRect();\n        }\n\n        virtualText.remove();\n        return {\n          width: rect.width,\n          height: rect.height\n        };\n      }\n      /**\n       * append ... to long text\n       * http://stackoverflow.com/questions/9241315/trimming-text-to-a-given-pixel-width-in-svg\n       * @memberof Graphics\n       **/\n\n    }, {\n      key: \"placeTextWithEllipsis\",\n      value: function placeTextWithEllipsis(textObj, textString, width) {\n        if (typeof textObj.getComputedTextLength !== 'function') return;\n        textObj.textContent = textString;\n\n        if (textString.length > 0) {\n          // ellipsis is needed\n          if (textObj.getComputedTextLength() >= width / 1.1) {\n            for (var x = textString.length - 3; x > 0; x -= 3) {\n              if (textObj.getSubStringLength(0, x) <= width / 1.1) {\n                textObj.textContent = textString.substring(0, x) + '...';\n                return;\n              }\n            }\n\n            textObj.textContent = '.'; // can't place at all\n          }\n        }\n      }\n    }], [{\n      key: \"setAttrs\",\n      value: function setAttrs(el, attrs) {\n        for (var key in attrs) {\n          if (attrs.hasOwnProperty(key)) {\n            el.setAttribute(key, attrs[key]);\n          }\n        }\n      }\n    }]);\n\n    return Graphics;\n  }();\n\n  var Helpers$4 = /*#__PURE__*/function () {\n    function Helpers(annoCtx) {\n      _classCallCheck(this, Helpers);\n\n      this.w = annoCtx.w;\n      this.annoCtx = annoCtx;\n    }\n\n    _createClass(Helpers, [{\n      key: \"setOrientations\",\n      value: function setOrientations(anno) {\n        var annoIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var w = this.w;\n\n        if (anno.label.orientation === 'vertical') {\n          var i = annoIndex !== null ? annoIndex : 0;\n          var xAnno = w.globals.dom.baseEl.querySelector(\".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='\".concat(i, \"']\"));\n\n          if (xAnno !== null) {\n            var xAnnoCoord = xAnno.getBoundingClientRect();\n            xAnno.setAttribute('x', parseFloat(xAnno.getAttribute('x')) - xAnnoCoord.height + 4);\n\n            if (anno.label.position === 'top') {\n              xAnno.setAttribute('y', parseFloat(xAnno.getAttribute('y')) + xAnnoCoord.width);\n            } else {\n              xAnno.setAttribute('y', parseFloat(xAnno.getAttribute('y')) - xAnnoCoord.width);\n            }\n\n            var annoRotatingCenter = this.annoCtx.graphics.rotateAroundCenter(xAnno);\n            var x = annoRotatingCenter.x;\n            var y = annoRotatingCenter.y;\n            xAnno.setAttribute('transform', \"rotate(-90 \".concat(x, \" \").concat(y, \")\"));\n          }\n        }\n      }\n    }, {\n      key: \"addBackgroundToAnno\",\n      value: function addBackgroundToAnno(annoEl, anno) {\n        var w = this.w;\n        if (!annoEl || typeof anno.label.text === 'undefined' || typeof anno.label.text !== 'undefined' && !String(anno.label.text).trim()) return null;\n        var elGridRect = w.globals.dom.baseEl.querySelector('.apexcharts-grid').getBoundingClientRect();\n        var coords = annoEl.getBoundingClientRect();\n        var pleft = anno.label.style.padding.left;\n        var pright = anno.label.style.padding.right;\n        var ptop = anno.label.style.padding.top;\n        var pbottom = anno.label.style.padding.bottom;\n\n        if (anno.label.orientation === 'vertical') {\n          ptop = anno.label.style.padding.left;\n          pbottom = anno.label.style.padding.right;\n          pleft = anno.label.style.padding.top;\n          pright = anno.label.style.padding.bottom;\n        }\n\n        var x1 = coords.left - elGridRect.left - pleft;\n        var y1 = coords.top - elGridRect.top - ptop;\n        var elRect = this.annoCtx.graphics.drawRect(x1 - w.globals.barPadForNumericAxis, y1, coords.width + pleft + pright, coords.height + ptop + pbottom, anno.label.borderRadius, anno.label.style.background, 1, anno.label.borderWidth, anno.label.borderColor, 0);\n\n        if (anno.id) {\n          elRect.node.classList.add(Utils$1.escapeString(anno.id));\n        }\n\n        return elRect;\n      }\n    }, {\n      key: \"annotationsBackground\",\n      value: function annotationsBackground() {\n        var _this = this;\n\n        var w = this.w;\n\n        var add = function add(anno, i, type) {\n          var annoLabel = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(type, \"-annotations .apexcharts-\").concat(type, \"-annotation-label[rel='\").concat(i, \"']\"));\n\n          if (annoLabel) {\n            var parent = annoLabel.parentNode;\n\n            var elRect = _this.addBackgroundToAnno(annoLabel, anno);\n\n            if (elRect) {\n              parent.insertBefore(elRect.node, annoLabel);\n\n              if (anno.label.mouseEnter) {\n                elRect.node.addEventListener('mouseenter', anno.label.mouseEnter.bind(_this, anno));\n              }\n\n              if (anno.label.mouseLeave) {\n                elRect.node.addEventListener('mouseleave', anno.label.mouseLeave.bind(_this, anno));\n              }\n            }\n          }\n        };\n\n        w.config.annotations.xaxis.map(function (anno, i) {\n          add(anno, i, 'xaxis');\n        });\n        w.config.annotations.yaxis.map(function (anno, i) {\n          add(anno, i, 'yaxis');\n        });\n        w.config.annotations.points.map(function (anno, i) {\n          add(anno, i, 'point');\n        });\n      }\n    }, {\n      key: \"getStringX\",\n      value: function getStringX(x) {\n        var w = this.w;\n        var rX = x;\n\n        if (w.config.xaxis.convertedCatToNumeric && w.globals.categoryLabels.length) {\n          x = w.globals.categoryLabels.indexOf(x) + 1;\n        }\n\n        var catIndex = w.globals.labels.indexOf(x);\n        var xLabel = w.globals.dom.baseEl.querySelector('.apexcharts-xaxis-texts-g text:nth-child(' + (catIndex + 1) + ')');\n\n        if (xLabel) {\n          rX = parseFloat(xLabel.getAttribute('x'));\n        }\n\n        return rX;\n      }\n    }]);\n\n    return Helpers;\n  }();\n\n  var XAnnotations = /*#__PURE__*/function () {\n    function XAnnotations(annoCtx) {\n      _classCallCheck(this, XAnnotations);\n\n      this.w = annoCtx.w;\n      this.annoCtx = annoCtx;\n      this.invertAxis = this.annoCtx.invertAxis;\n    }\n\n    _createClass(XAnnotations, [{\n      key: \"addXaxisAnnotation\",\n      value: function addXaxisAnnotation(anno, parent, index) {\n        var w = this.w;\n        var min = this.invertAxis ? w.globals.minY : w.globals.minX;\n        var max = this.invertAxis ? w.globals.maxY : w.globals.maxX;\n        var range = this.invertAxis ? w.globals.yRange[0] : w.globals.xRange;\n        var x1 = (anno.x - min) / (range / w.globals.gridWidth);\n\n        if (this.annoCtx.inversedReversedAxis) {\n          x1 = (max - anno.x) / (range / w.globals.gridWidth);\n        }\n\n        var text = anno.label.text;\n\n        if ((w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) && !this.invertAxis && !w.globals.dataFormatXNumeric) {\n          x1 = this.annoCtx.helpers.getStringX(anno.x);\n        }\n\n        var strokeDashArray = anno.strokeDashArray;\n        if (!Utils$1.isNumber(x1)) return;\n\n        if (anno.x2 === null || typeof anno.x2 === 'undefined') {\n          var line = this.annoCtx.graphics.drawLine(x1 + anno.offsetX, // x1\n          0 + anno.offsetY, // y1\n          x1 + anno.offsetX, // x2\n          w.globals.gridHeight + anno.offsetY, // y2\n          anno.borderColor, // lineColor\n          strokeDashArray, //dashArray\n          anno.borderWidth);\n          parent.appendChild(line.node);\n\n          if (anno.id) {\n            line.node.classList.add(anno.id);\n          }\n        } else {\n          var x2 = (anno.x2 - min) / (range / w.globals.gridWidth);\n\n          if (this.annoCtx.inversedReversedAxis) {\n            x2 = (max - anno.x2) / (range / w.globals.gridWidth);\n          }\n\n          if ((w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) && !this.invertAxis && !w.globals.dataFormatXNumeric) {\n            x2 = this.annoCtx.helpers.getStringX(anno.x2);\n          }\n\n          if (x2 < x1) {\n            var temp = x1;\n            x1 = x2;\n            x2 = temp;\n          }\n\n          var rect = this.annoCtx.graphics.drawRect(x1 + anno.offsetX, // x1\n          0 + anno.offsetY, // y1\n          x2 - x1, // x2\n          w.globals.gridHeight + anno.offsetY, // y2\n          0, // radius\n          anno.fillColor, // color\n          anno.opacity, // opacity,\n          1, // strokeWidth\n          anno.borderColor, // strokeColor\n          strokeDashArray // stokeDashArray\n          );\n          rect.node.classList.add('apexcharts-annotation-rect');\n          rect.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\"));\n          parent.appendChild(rect.node);\n\n          if (anno.id) {\n            rect.node.classList.add(anno.id);\n          }\n        }\n\n        var textY = anno.label.position === 'top' ? 4 : w.globals.gridHeight;\n        var textRects = this.annoCtx.graphics.getTextRects(text, parseFloat(anno.label.style.fontSize));\n        var elText = this.annoCtx.graphics.drawText({\n          x: x1 + anno.label.offsetX,\n          y: textY + anno.label.offsetY - (anno.label.orientation === 'vertical' ? anno.label.position === 'top' ? textRects.width / 2 - 12 : -textRects.width / 2 : 0),\n          text: text,\n          textAnchor: anno.label.textAnchor,\n          fontSize: anno.label.style.fontSize,\n          fontFamily: anno.label.style.fontFamily,\n          fontWeight: anno.label.style.fontWeight,\n          foreColor: anno.label.style.color,\n          cssClass: \"apexcharts-xaxis-annotation-label \".concat(anno.label.style.cssClass, \" \").concat(anno.id ? anno.id : '')\n        });\n        elText.attr({\n          rel: index\n        });\n        parent.appendChild(elText.node); // after placing the annotations on svg, set any vertically placed annotations\n\n        this.annoCtx.helpers.setOrientations(anno, index);\n      }\n    }, {\n      key: \"drawXAxisAnnotations\",\n      value: function drawXAxisAnnotations() {\n        var _this = this;\n\n        var w = this.w;\n        var elg = this.annoCtx.graphics.group({\n          class: 'apexcharts-xaxis-annotations'\n        });\n        w.config.annotations.xaxis.map(function (anno, index) {\n          _this.addXaxisAnnotation(anno, elg.node, index);\n        });\n        return elg;\n      }\n    }]);\n\n    return XAnnotations;\n  }();\n\n  /*\n   ** Util functions which are dependent on ApexCharts instance\n   */\n  var CoreUtils = /*#__PURE__*/function () {\n    function CoreUtils(ctx) {\n      _classCallCheck(this, CoreUtils);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(CoreUtils, [{\n      key: \"getStackedSeriesTotals\",\n      value:\n      /**\n       * @memberof CoreUtils\n       * returns the sum of all individual values in a multiple stacked series\n       * Eg. w.globals.series = [[32,33,43,12], [2,3,5,1]]\n       *  @return [34,36,48,13]\n       **/\n      function getStackedSeriesTotals() {\n        var w = this.w;\n        var total = [];\n        if (w.globals.series.length === 0) return total;\n\n        for (var i = 0; i < w.globals.series[w.globals.maxValsInArrayIndex].length; i++) {\n          var t = 0;\n\n          for (var j = 0; j < w.globals.series.length; j++) {\n            if (typeof w.globals.series[j][i] !== 'undefined') {\n              t += w.globals.series[j][i];\n            }\n          }\n\n          total.push(t);\n        }\n\n        w.globals.stackedSeriesTotals = total;\n        return total;\n      } // get total of the all values inside all series\n\n    }, {\n      key: \"getSeriesTotalByIndex\",\n      value: function getSeriesTotalByIndex() {\n        var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n        if (index === null) {\n          // non-plot chart types - pie / donut / circle\n          return this.w.config.series.reduce(function (acc, cur) {\n            return acc + cur;\n          }, 0);\n        } else {\n          // axis charts - supporting multiple series\n          return this.w.globals.series[index].reduce(function (acc, cur) {\n            return acc + cur;\n          }, 0);\n        }\n      }\n    }, {\n      key: \"isSeriesNull\",\n      value: function isSeriesNull() {\n        var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var r = [];\n\n        if (index === null) {\n          // non-plot chart types - pie / donut / circle\n          r = this.w.config.series.filter(function (d) {\n            return d !== null;\n          });\n        } else {\n          // axis charts - supporting multiple series\n          r = this.w.config.series[index].data.filter(function (d) {\n            return d !== null;\n          });\n        }\n\n        return r.length === 0;\n      }\n    }, {\n      key: \"seriesHaveSameValues\",\n      value: function seriesHaveSameValues(index) {\n        return this.w.globals.series[index].every(function (val, i, arr) {\n          return val === arr[0];\n        });\n      }\n    }, {\n      key: \"getCategoryLabels\",\n      value: function getCategoryLabels(labels) {\n        var w = this.w;\n        var catLabels = labels.slice();\n\n        if (w.config.xaxis.convertedCatToNumeric) {\n          catLabels = labels.map(function (i, li) {\n            return w.config.xaxis.labels.formatter(i - w.globals.minX + 1);\n          });\n        }\n\n        return catLabels;\n      } // maxValsInArrayIndex is the index of series[] which has the largest number of items\n\n    }, {\n      key: \"getLargestSeries\",\n      value: function getLargestSeries() {\n        var w = this.w;\n        w.globals.maxValsInArrayIndex = w.globals.series.map(function (a) {\n          return a.length;\n        }).indexOf(Math.max.apply(Math, w.globals.series.map(function (a) {\n          return a.length;\n        })));\n      }\n    }, {\n      key: \"getLargestMarkerSize\",\n      value: function getLargestMarkerSize() {\n        var w = this.w;\n        var size = 0;\n        w.globals.markers.size.forEach(function (m) {\n          size = Math.max(size, m);\n        });\n        w.globals.markers.largestSize = size;\n        return size;\n      }\n      /**\n       * @memberof Core\n       * returns the sum of all values in a series\n       * Eg. w.globals.series = [[32,33,43,12], [2,3,5,1]]\n       *  @return [120, 11]\n       **/\n\n    }, {\n      key: \"getSeriesTotals\",\n      value: function getSeriesTotals() {\n        var w = this.w;\n        w.globals.seriesTotals = w.globals.series.map(function (ser, index) {\n          var total = 0;\n\n          if (Array.isArray(ser)) {\n            for (var j = 0; j < ser.length; j++) {\n              total += ser[j];\n            }\n          } else {\n            // for pie/donuts/gauges\n            total += ser;\n          }\n\n          return total;\n        });\n      }\n    }, {\n      key: \"getSeriesTotalsXRange\",\n      value: function getSeriesTotalsXRange(minX, maxX) {\n        var w = this.w;\n        var seriesTotalsXRange = w.globals.series.map(function (ser, index) {\n          var total = 0;\n\n          for (var j = 0; j < ser.length; j++) {\n            if (w.globals.seriesX[index][j] > minX && w.globals.seriesX[index][j] < maxX) {\n              total += ser[j];\n            }\n          }\n\n          return total;\n        });\n        return seriesTotalsXRange;\n      }\n      /**\n       * @memberof CoreUtils\n       * returns the percentage value of all individual values which can be used in a 100% stacked series\n       * Eg. w.globals.series = [[32, 33, 43, 12], [2, 3, 5, 1]]\n       *  @return [[94.11, 91.66, 89.58, 92.30], [5.88, 8.33, 10.41, 7.7]]\n       **/\n\n    }, {\n      key: \"getPercentSeries\",\n      value: function getPercentSeries() {\n        var w = this.w;\n        w.globals.seriesPercent = w.globals.series.map(function (ser, index) {\n          var seriesPercent = [];\n\n          if (Array.isArray(ser)) {\n            for (var j = 0; j < ser.length; j++) {\n              var total = w.globals.stackedSeriesTotals[j];\n              var percent = 0;\n\n              if (total) {\n                percent = 100 * ser[j] / total;\n              }\n\n              seriesPercent.push(percent);\n            }\n          } else {\n            var _total = w.globals.seriesTotals.reduce(function (acc, val) {\n              return acc + val;\n            }, 0);\n\n            var _percent = 100 * ser / _total;\n\n            seriesPercent.push(_percent);\n          }\n\n          return seriesPercent;\n        });\n      }\n    }, {\n      key: \"getCalculatedRatios\",\n      value: function getCalculatedRatios() {\n        var gl = this.w.globals;\n        var yRatio = [];\n        var invertedYRatio = 0;\n        var xRatio = 0;\n        var initialXRatio = 0;\n        var invertedXRatio = 0;\n        var zRatio = 0;\n        var baseLineY = [];\n        var baseLineInvertedY = 0.1;\n        var baseLineX = 0;\n        gl.yRange = [];\n\n        if (gl.isMultipleYAxis) {\n          for (var i = 0; i < gl.minYArr.length; i++) {\n            gl.yRange.push(Math.abs(gl.minYArr[i] - gl.maxYArr[i]));\n            baseLineY.push(0);\n          }\n        } else {\n          gl.yRange.push(Math.abs(gl.minY - gl.maxY));\n        }\n\n        gl.xRange = Math.abs(gl.maxX - gl.minX);\n        gl.zRange = Math.abs(gl.maxZ - gl.minZ); // multiple y axis\n\n        for (var _i = 0; _i < gl.yRange.length; _i++) {\n          yRatio.push(gl.yRange[_i] / gl.gridHeight);\n        }\n\n        xRatio = gl.xRange / gl.gridWidth;\n        initialXRatio = Math.abs(gl.initialMaxX - gl.initialMinX) / gl.gridWidth;\n        invertedYRatio = gl.yRange / gl.gridWidth;\n        invertedXRatio = gl.xRange / gl.gridHeight;\n        zRatio = gl.zRange / gl.gridHeight * 16;\n\n        if (!zRatio) {\n          zRatio = 1;\n        }\n\n        if (gl.minY !== Number.MIN_VALUE && Math.abs(gl.minY) !== 0) {\n          // Negative numbers present in series\n          gl.hasNegs = true;\n        }\n\n        if (gl.isMultipleYAxis) {\n          baseLineY = []; // baseline variables is the 0 of the yaxis which will be needed when there are negatives\n\n          for (var _i2 = 0; _i2 < yRatio.length; _i2++) {\n            baseLineY.push(-gl.minYArr[_i2] / yRatio[_i2]);\n          }\n        } else {\n          baseLineY.push(-gl.minY / yRatio[0]);\n\n          if (gl.minY !== Number.MIN_VALUE && Math.abs(gl.minY) !== 0) {\n            baseLineInvertedY = -gl.minY / invertedYRatio; // this is for bar chart\n\n            baseLineX = gl.minX / xRatio;\n          }\n        }\n\n        return {\n          yRatio: yRatio,\n          invertedYRatio: invertedYRatio,\n          zRatio: zRatio,\n          xRatio: xRatio,\n          initialXRatio: initialXRatio,\n          invertedXRatio: invertedXRatio,\n          baseLineInvertedY: baseLineInvertedY,\n          baseLineY: baseLineY,\n          baseLineX: baseLineX\n        };\n      }\n    }, {\n      key: \"getLogSeries\",\n      value: function getLogSeries(series) {\n        var _this = this;\n\n        var w = this.w;\n        w.globals.seriesLog = series.map(function (s, i) {\n          if (w.config.yaxis[i] && w.config.yaxis[i].logarithmic) {\n            return s.map(function (d) {\n              if (d === null) return null;\n              return _this.getLogVal(d, i);\n            });\n          } else {\n            return s;\n          }\n        });\n        return w.globals.invalidLogScale ? series : w.globals.seriesLog;\n      }\n    }, {\n      key: \"getLogVal\",\n      value: function getLogVal(d, yIndex) {\n        var w = this.w;\n        return (Math.log(d) - Math.log(w.globals.minYArr[yIndex])) / (Math.log(w.globals.maxYArr[yIndex]) - Math.log(w.globals.minYArr[yIndex]));\n      }\n    }, {\n      key: \"getLogYRatios\",\n      value: function getLogYRatios(yRatio) {\n        var _this2 = this;\n\n        var w = this.w;\n        var gl = this.w.globals;\n        gl.yLogRatio = yRatio.slice();\n        gl.logYRange = gl.yRange.map(function (yRange, i) {\n          if (w.config.yaxis[i] && _this2.w.config.yaxis[i].logarithmic) {\n            var maxY = -Number.MAX_VALUE;\n            var minY = Number.MIN_VALUE;\n            var range = 1;\n            gl.seriesLog.forEach(function (s, si) {\n              s.forEach(function (v) {\n                if (w.config.yaxis[si] && w.config.yaxis[si].logarithmic) {\n                  maxY = Math.max(v, maxY);\n                  minY = Math.min(v, minY);\n                }\n              });\n            });\n            range = Math.pow(gl.yRange[i], Math.abs(minY - maxY) / gl.yRange[i]);\n            gl.yLogRatio[i] = range / gl.gridHeight;\n            return range;\n          }\n        });\n        return gl.invalidLogScale ? yRatio.slice() : gl.yLogRatio;\n      } // Some config objects can be array - and we need to extend them correctly\n\n    }], [{\n      key: \"checkComboSeries\",\n      value: function checkComboSeries(series) {\n        var comboCharts = false;\n        var comboBarCount = 0;\n        var comboCount = 0; // if user specified a type in series too, turn on comboCharts flag\n\n        if (series.length && typeof series[0].type !== 'undefined') {\n          series.forEach(function (s) {\n            if (s.type === 'bar' || s.type === 'column' || s.type === 'candlestick' || s.type === 'boxPlot') {\n              comboBarCount++;\n            }\n\n            if (typeof s.type !== 'undefined') {\n              comboCount++;\n            }\n          });\n        }\n\n        if (comboCount > 0) {\n          comboCharts = true;\n        }\n\n        return {\n          comboBarCount: comboBarCount,\n          comboCharts: comboCharts\n        };\n      }\n    }, {\n      key: \"extendArrayProps\",\n      value: function extendArrayProps(configInstance, options, w) {\n        if (options.yaxis) {\n          options = configInstance.extendYAxis(options, w);\n        }\n\n        if (options.annotations) {\n          if (options.annotations.yaxis) {\n            options = configInstance.extendYAxisAnnotations(options);\n          }\n\n          if (options.annotations.xaxis) {\n            options = configInstance.extendXAxisAnnotations(options);\n          }\n\n          if (options.annotations.points) {\n            options = configInstance.extendPointAnnotations(options);\n          }\n        }\n\n        return options;\n      }\n    }]);\n\n    return CoreUtils;\n  }();\n\n  var YAnnotations = /*#__PURE__*/function () {\n    function YAnnotations(annoCtx) {\n      _classCallCheck(this, YAnnotations);\n\n      this.w = annoCtx.w;\n      this.annoCtx = annoCtx;\n    }\n\n    _createClass(YAnnotations, [{\n      key: \"addYaxisAnnotation\",\n      value: function addYaxisAnnotation(anno, parent, index) {\n        var w = this.w;\n        var strokeDashArray = anno.strokeDashArray;\n\n        var y1 = this._getY1Y2('y1', anno);\n\n        var y2;\n        var text = anno.label.text;\n\n        if (anno.y2 === null || typeof anno.y2 === 'undefined') {\n          var line = this.annoCtx.graphics.drawLine(0 + anno.offsetX, // x1\n          y1 + anno.offsetY, // y1\n          this._getYAxisAnnotationWidth(anno), // x2\n          y1 + anno.offsetY, // y2\n          anno.borderColor, // lineColor\n          strokeDashArray, // dashArray\n          anno.borderWidth);\n          parent.appendChild(line.node);\n\n          if (anno.id) {\n            line.node.classList.add(anno.id);\n          }\n        } else {\n          y2 = this._getY1Y2('y2', anno);\n\n          if (y2 > y1) {\n            var temp = y1;\n            y1 = y2;\n            y2 = temp;\n          }\n\n          var rect = this.annoCtx.graphics.drawRect(0 + anno.offsetX, // x1\n          y2 + anno.offsetY, // y1\n          this._getYAxisAnnotationWidth(anno), // x2\n          y1 - y2, // y2\n          0, // radius\n          anno.fillColor, // color\n          anno.opacity, // opacity,\n          1, // strokeWidth\n          anno.borderColor, // strokeColor\n          strokeDashArray // stokeDashArray\n          );\n          rect.node.classList.add('apexcharts-annotation-rect');\n          rect.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\"));\n          parent.appendChild(rect.node);\n\n          if (anno.id) {\n            rect.node.classList.add(anno.id);\n          }\n        }\n\n        var textX = anno.label.position === 'right' ? w.globals.gridWidth : 0;\n        var elText = this.annoCtx.graphics.drawText({\n          x: textX + anno.label.offsetX,\n          y: (y2 != null ? y2 : y1) + anno.label.offsetY - 3,\n          text: text,\n          textAnchor: anno.label.textAnchor,\n          fontSize: anno.label.style.fontSize,\n          fontFamily: anno.label.style.fontFamily,\n          fontWeight: anno.label.style.fontWeight,\n          foreColor: anno.label.style.color,\n          cssClass: \"apexcharts-yaxis-annotation-label \".concat(anno.label.style.cssClass, \" \").concat(anno.id ? anno.id : '')\n        });\n        elText.attr({\n          rel: index\n        });\n        parent.appendChild(elText.node);\n      }\n    }, {\n      key: \"_getY1Y2\",\n      value: function _getY1Y2(type, anno) {\n        var y = type === 'y1' ? anno.y : anno.y2;\n        var yP;\n        var w = this.w;\n\n        if (this.annoCtx.invertAxis) {\n          var catIndex = w.globals.labels.indexOf(y);\n\n          if (w.config.xaxis.convertedCatToNumeric) {\n            catIndex = w.globals.categoryLabels.indexOf(y);\n          }\n\n          var xLabel = w.globals.dom.baseEl.querySelector('.apexcharts-yaxis-texts-g text:nth-child(' + (catIndex + 1) + ')');\n\n          if (xLabel) {\n            yP = parseFloat(xLabel.getAttribute('y'));\n          }\n        } else {\n          var yPos;\n\n          if (w.config.yaxis[anno.yAxisIndex].logarithmic) {\n            var coreUtils = new CoreUtils(this.annoCtx.ctx);\n            y = coreUtils.getLogVal(y, anno.yAxisIndex);\n            yPos = y / w.globals.yLogRatio[anno.yAxisIndex];\n          } else {\n            yPos = (y - w.globals.minYArr[anno.yAxisIndex]) / (w.globals.yRange[anno.yAxisIndex] / w.globals.gridHeight);\n          }\n\n          yP = w.globals.gridHeight - yPos;\n\n          if (w.config.yaxis[anno.yAxisIndex] && w.config.yaxis[anno.yAxisIndex].reversed) {\n            yP = yPos;\n          }\n        }\n\n        return yP;\n      }\n    }, {\n      key: \"_getYAxisAnnotationWidth\",\n      value: function _getYAxisAnnotationWidth(anno) {\n        // issue apexcharts.js#2009\n        var w = this.w;\n        var width = w.globals.gridWidth;\n\n        if (anno.width.indexOf('%') > -1) {\n          width = w.globals.gridWidth * parseInt(anno.width, 10) / 100;\n        } else {\n          width = parseInt(anno.width, 10);\n        }\n\n        return width + anno.offsetX;\n      }\n    }, {\n      key: \"drawYAxisAnnotations\",\n      value: function drawYAxisAnnotations() {\n        var _this = this;\n\n        var w = this.w;\n        var elg = this.annoCtx.graphics.group({\n          class: 'apexcharts-yaxis-annotations'\n        });\n        w.config.annotations.yaxis.map(function (anno, index) {\n          _this.addYaxisAnnotation(anno, elg.node, index);\n        });\n        return elg;\n      }\n    }]);\n\n    return YAnnotations;\n  }();\n\n  var PointAnnotations = /*#__PURE__*/function () {\n    function PointAnnotations(annoCtx) {\n      _classCallCheck(this, PointAnnotations);\n\n      this.w = annoCtx.w;\n      this.annoCtx = annoCtx;\n    }\n\n    _createClass(PointAnnotations, [{\n      key: \"addPointAnnotation\",\n      value: function addPointAnnotation(anno, parent, index) {\n        var w = this.w;\n        var x = 0;\n        var y = 0;\n        var pointY = 0;\n\n        if (this.annoCtx.invertAxis) {\n          console.warn('Point annotation is not supported in horizontal bar charts.');\n        }\n\n        var annoY = parseFloat(anno.y);\n\n        if (typeof anno.x === 'string' || w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) {\n          var catIndex = w.globals.labels.indexOf(anno.x);\n\n          if (w.config.xaxis.convertedCatToNumeric) {\n            catIndex = w.globals.categoryLabels.indexOf(anno.x);\n          }\n\n          x = this.annoCtx.helpers.getStringX(anno.x);\n\n          if (anno.y === null) {\n            annoY = w.globals.series[anno.seriesIndex][catIndex];\n          }\n        } else {\n          x = (anno.x - w.globals.minX) / (w.globals.xRange / w.globals.gridWidth);\n        } // count series assign to the same axis\n\n\n        var duplicateSeriesName = [];\n        var countDuplicateSeriesName = 0;\n\n        for (var i = 0; i <= anno.seriesIndex; i++) {\n          var serieName = w.config.yaxis[i].seriesName;\n          if (serieName) for (var j = i + 1; j <= anno.seriesIndex; j++) {\n            if (w.config.yaxis[j].seriesName === serieName && duplicateSeriesName.indexOf(serieName) === -1) {\n              countDuplicateSeriesName++;\n              duplicateSeriesName.push(serieName);\n            }\n          }\n        }\n\n        var yPos;\n\n        if (w.config.yaxis[anno.yAxisIndex].logarithmic) {\n          var coreUtils = new CoreUtils(this.annoCtx.ctx);\n          annoY = coreUtils.getLogVal(annoY, anno.yAxisIndex);\n          yPos = annoY / w.globals.yLogRatio[anno.yAxisIndex];\n        } else {\n          // calculate the right position in array for this yAxisIndex\n          var actualSerieIndex = anno.yAxisIndex + countDuplicateSeriesName;\n          yPos = (annoY - w.globals.minYArr[actualSerieIndex]) / (w.globals.yRange[actualSerieIndex] / w.globals.gridHeight);\n        }\n\n        y = w.globals.gridHeight - yPos - parseFloat(anno.label.style.fontSize) - anno.marker.size;\n        pointY = w.globals.gridHeight - yPos;\n\n        if (w.config.yaxis[anno.yAxisIndex] && w.config.yaxis[anno.yAxisIndex].reversed) {\n          y = yPos + parseFloat(anno.label.style.fontSize) + anno.marker.size;\n          pointY = yPos;\n        }\n\n        if (!Utils$1.isNumber(x)) return;\n        var optsPoints = {\n          pSize: anno.marker.size,\n          pointStrokeWidth: anno.marker.strokeWidth,\n          pointFillColor: anno.marker.fillColor,\n          pointStrokeColor: anno.marker.strokeColor,\n          shape: anno.marker.shape,\n          pRadius: anno.marker.radius,\n          class: \"apexcharts-point-annotation-marker \".concat(anno.marker.cssClass, \" \").concat(anno.id ? anno.id : '')\n        };\n        var point = this.annoCtx.graphics.drawMarker(x + anno.marker.offsetX, pointY + anno.marker.offsetY, optsPoints);\n        parent.appendChild(point.node);\n        var text = anno.label.text ? anno.label.text : '';\n        var elText = this.annoCtx.graphics.drawText({\n          x: x + anno.label.offsetX,\n          y: y + anno.label.offsetY,\n          text: text,\n          textAnchor: anno.label.textAnchor,\n          fontSize: anno.label.style.fontSize,\n          fontFamily: anno.label.style.fontFamily,\n          fontWeight: anno.label.style.fontWeight,\n          foreColor: anno.label.style.color,\n          cssClass: \"apexcharts-point-annotation-label \".concat(anno.label.style.cssClass, \" \").concat(anno.id ? anno.id : '')\n        });\n        elText.attr({\n          rel: index\n        });\n        parent.appendChild(elText.node); // TODO: deprecate this as we will use custom\n\n        if (anno.customSVG.SVG) {\n          var g = this.annoCtx.graphics.group({\n            class: 'apexcharts-point-annotations-custom-svg ' + anno.customSVG.cssClass\n          });\n          g.attr({\n            transform: \"translate(\".concat(x + anno.customSVG.offsetX, \", \").concat(y + anno.customSVG.offsetY, \")\")\n          });\n          g.node.innerHTML = anno.customSVG.SVG;\n          parent.appendChild(g.node);\n        }\n\n        if (anno.image.path) {\n          var imgWidth = anno.image.width ? anno.image.width : 20;\n          var imgHeight = anno.image.height ? anno.image.height : 20;\n          point = this.annoCtx.addImage({\n            x: x + anno.image.offsetX - imgWidth / 2,\n            y: y + anno.image.offsetY - imgHeight / 2,\n            width: imgWidth,\n            height: imgHeight,\n            path: anno.image.path,\n            appendTo: '.apexcharts-point-annotations'\n          });\n        }\n\n        if (anno.mouseEnter) {\n          point.node.addEventListener('mouseenter', anno.mouseEnter.bind(this, anno));\n        }\n\n        if (anno.mouseLeave) {\n          point.node.addEventListener('mouseleave', anno.mouseLeave.bind(this, anno));\n        }\n      }\n    }, {\n      key: \"drawPointAnnotations\",\n      value: function drawPointAnnotations() {\n        var _this = this;\n\n        var w = this.w;\n        var elg = this.annoCtx.graphics.group({\n          class: 'apexcharts-point-annotations'\n        });\n        w.config.annotations.points.map(function (anno, index) {\n          _this.addPointAnnotation(anno, elg.node, index);\n        });\n        return elg;\n      }\n    }]);\n\n    return PointAnnotations;\n  }();\n\n  const name = \"en\";\n  const options = {\n  \tmonths: [\n  \t\t\"January\",\n  \t\t\"February\",\n  \t\t\"March\",\n  \t\t\"April\",\n  \t\t\"May\",\n  \t\t\"June\",\n  \t\t\"July\",\n  \t\t\"August\",\n  \t\t\"September\",\n  \t\t\"October\",\n  \t\t\"November\",\n  \t\t\"December\"\n  \t],\n  \tshortMonths: [\n  \t\t\"Jan\",\n  \t\t\"Feb\",\n  \t\t\"Mar\",\n  \t\t\"Apr\",\n  \t\t\"May\",\n  \t\t\"Jun\",\n  \t\t\"Jul\",\n  \t\t\"Aug\",\n  \t\t\"Sep\",\n  \t\t\"Oct\",\n  \t\t\"Nov\",\n  \t\t\"Dec\"\n  \t],\n  \tdays: [\n  \t\t\"Sunday\",\n  \t\t\"Monday\",\n  \t\t\"Tuesday\",\n  \t\t\"Wednesday\",\n  \t\t\"Thursday\",\n  \t\t\"Friday\",\n  \t\t\"Saturday\"\n  \t],\n  \tshortDays: [\n  \t\t\"Sun\",\n  \t\t\"Mon\",\n  \t\t\"Tue\",\n  \t\t\"Wed\",\n  \t\t\"Thu\",\n  \t\t\"Fri\",\n  \t\t\"Sat\"\n  \t],\n  \ttoolbar: {\n  \t\texportToSVG: \"Download SVG\",\n  \t\texportToPNG: \"Download PNG\",\n  \t\texportToCSV: \"Download CSV\",\n  \t\tmenu: \"Menu\",\n  \t\tselection: \"Selection\",\n  \t\tselectionZoom: \"Selection Zoom\",\n  \t\tzoomIn: \"Zoom In\",\n  \t\tzoomOut: \"Zoom Out\",\n  \t\tpan: \"Panning\",\n  \t\treset: \"Reset Zoom\"\n  \t}\n  };\n  var en = {\n  \tname: name,\n  \toptions: options\n  };\n\n  var Options = /*#__PURE__*/function () {\n    function Options() {\n      _classCallCheck(this, Options);\n\n      this.yAxis = {\n        show: true,\n        showAlways: false,\n        showForNullSeries: true,\n        seriesName: undefined,\n        opposite: false,\n        reversed: false,\n        logarithmic: false,\n        logBase: 10,\n        tickAmount: undefined,\n        forceNiceScale: false,\n        max: undefined,\n        min: undefined,\n        floating: false,\n        decimalsInFloat: undefined,\n        labels: {\n          show: true,\n          minWidth: 0,\n          maxWidth: 160,\n          offsetX: 0,\n          offsetY: 0,\n          align: undefined,\n          rotate: 0,\n          padding: 20,\n          style: {\n            colors: [],\n            fontSize: '11px',\n            fontWeight: 400,\n            fontFamily: undefined,\n            cssClass: ''\n          },\n          formatter: undefined\n        },\n        axisBorder: {\n          show: false,\n          color: '#e0e0e0',\n          width: 1,\n          offsetX: 0,\n          offsetY: 0\n        },\n        axisTicks: {\n          show: false,\n          color: '#e0e0e0',\n          width: 6,\n          offsetX: 0,\n          offsetY: 0\n        },\n        title: {\n          text: undefined,\n          rotate: -90,\n          offsetY: 0,\n          offsetX: 0,\n          style: {\n            color: undefined,\n            fontSize: '11px',\n            fontWeight: 900,\n            fontFamily: undefined,\n            cssClass: ''\n          }\n        },\n        tooltip: {\n          enabled: false,\n          offsetX: 0\n        },\n        crosshairs: {\n          show: true,\n          position: 'front',\n          stroke: {\n            color: '#b6b6b6',\n            width: 1,\n            dashArray: 0\n          }\n        }\n      };\n      this.pointAnnotation = {\n        id: undefined,\n        x: 0,\n        y: null,\n        yAxisIndex: 0,\n        seriesIndex: 0,\n        mouseEnter: undefined,\n        mouseLeave: undefined,\n        marker: {\n          size: 4,\n          fillColor: '#fff',\n          strokeWidth: 2,\n          strokeColor: '#333',\n          shape: 'circle',\n          offsetX: 0,\n          offsetY: 0,\n          radius: 2,\n          cssClass: ''\n        },\n        label: {\n          borderColor: '#c2c2c2',\n          borderWidth: 1,\n          borderRadius: 2,\n          text: undefined,\n          textAnchor: 'middle',\n          offsetX: 0,\n          offsetY: 0,\n          mouseEnter: undefined,\n          mouseLeave: undefined,\n          style: {\n            background: '#fff',\n            color: undefined,\n            fontSize: '11px',\n            fontFamily: undefined,\n            fontWeight: 400,\n            cssClass: '',\n            padding: {\n              left: 5,\n              right: 5,\n              top: 2,\n              bottom: 2\n            }\n          }\n        },\n        customSVG: {\n          // this will be deprecated in the next major version as it is going to be replaced with a better alternative below\n          SVG: undefined,\n          cssClass: undefined,\n          offsetX: 0,\n          offsetY: 0\n        },\n        image: {\n          path: undefined,\n          width: 20,\n          height: 20,\n          offsetX: 0,\n          offsetY: 0\n        }\n      };\n      this.yAxisAnnotation = {\n        id: undefined,\n        y: 0,\n        y2: null,\n        strokeDashArray: 1,\n        fillColor: '#c2c2c2',\n        borderColor: '#c2c2c2',\n        borderWidth: 1,\n        opacity: 0.3,\n        offsetX: 0,\n        offsetY: 0,\n        width: '100%',\n        yAxisIndex: 0,\n        label: {\n          borderColor: '#c2c2c2',\n          borderWidth: 1,\n          borderRadius: 2,\n          text: undefined,\n          textAnchor: 'end',\n          position: 'right',\n          offsetX: 0,\n          offsetY: -3,\n          mouseEnter: undefined,\n          mouseLeave: undefined,\n          style: {\n            background: '#fff',\n            color: undefined,\n            fontSize: '11px',\n            fontFamily: undefined,\n            fontWeight: 400,\n            cssClass: '',\n            padding: {\n              left: 5,\n              right: 5,\n              top: 2,\n              bottom: 2\n            }\n          }\n        }\n      };\n      this.xAxisAnnotation = {\n        id: undefined,\n        x: 0,\n        x2: null,\n        strokeDashArray: 1,\n        fillColor: '#c2c2c2',\n        borderColor: '#c2c2c2',\n        borderWidth: 1,\n        opacity: 0.3,\n        offsetX: 0,\n        offsetY: 0,\n        label: {\n          borderColor: '#c2c2c2',\n          borderWidth: 1,\n          borderRadius: 2,\n          text: undefined,\n          textAnchor: 'middle',\n          orientation: 'vertical',\n          position: 'top',\n          offsetX: 0,\n          offsetY: 0,\n          mouseEnter: undefined,\n          mouseLeave: undefined,\n          style: {\n            background: '#fff',\n            color: undefined,\n            fontSize: '11px',\n            fontFamily: undefined,\n            fontWeight: 400,\n            cssClass: '',\n            padding: {\n              left: 5,\n              right: 5,\n              top: 2,\n              bottom: 2\n            }\n          }\n        }\n      };\n      this.text = {\n        x: 0,\n        y: 0,\n        text: '',\n        textAnchor: 'start',\n        foreColor: undefined,\n        fontSize: '13px',\n        fontFamily: undefined,\n        fontWeight: 400,\n        appendTo: '.apexcharts-annotations',\n        backgroundColor: 'transparent',\n        borderColor: '#c2c2c2',\n        borderRadius: 0,\n        borderWidth: 0,\n        paddingLeft: 4,\n        paddingRight: 4,\n        paddingTop: 2,\n        paddingBottom: 2\n      };\n    }\n\n    _createClass(Options, [{\n      key: \"init\",\n      value: function init() {\n        return {\n          annotations: {\n            position: 'front',\n            yaxis: [this.yAxisAnnotation],\n            xaxis: [this.xAxisAnnotation],\n            points: [this.pointAnnotation],\n            texts: [],\n            images: [],\n            shapes: []\n          },\n          chart: {\n            animations: {\n              enabled: true,\n              easing: 'easeinout',\n              // linear, easeout, easein, easeinout, swing, bounce, elastic\n              speed: 800,\n              animateGradually: {\n                delay: 150,\n                enabled: true\n              },\n              dynamicAnimation: {\n                enabled: true,\n                speed: 350\n              }\n            },\n            background: 'transparent',\n            locales: [en],\n            defaultLocale: 'en',\n            dropShadow: {\n              enabled: false,\n              enabledOnSeries: undefined,\n              top: 2,\n              left: 2,\n              blur: 4,\n              color: '#000',\n              opacity: 0.35\n            },\n            events: {\n              animationEnd: undefined,\n              beforeMount: undefined,\n              mounted: undefined,\n              updated: undefined,\n              click: undefined,\n              mouseMove: undefined,\n              mouseLeave: undefined,\n              legendClick: undefined,\n              markerClick: undefined,\n              selection: undefined,\n              dataPointSelection: undefined,\n              dataPointMouseEnter: undefined,\n              dataPointMouseLeave: undefined,\n              beforeZoom: undefined,\n              beforeResetZoom: undefined,\n              zoomed: undefined,\n              scrolled: undefined,\n              brushScrolled: undefined\n            },\n            foreColor: '#373d3f',\n            fontFamily: 'Helvetica, Arial, sans-serif',\n            height: 'auto',\n            parentHeightOffset: 15,\n            redrawOnParentResize: true,\n            redrawOnWindowResize: true,\n            id: undefined,\n            group: undefined,\n            offsetX: 0,\n            offsetY: 0,\n            selection: {\n              enabled: false,\n              type: 'x',\n              // selectedPoints: undefined, // default datapoints that should be selected automatically\n              fill: {\n                color: '#24292e',\n                opacity: 0.1\n              },\n              stroke: {\n                width: 1,\n                color: '#24292e',\n                opacity: 0.4,\n                dashArray: 3\n              },\n              xaxis: {\n                min: undefined,\n                max: undefined\n              },\n              yaxis: {\n                min: undefined,\n                max: undefined\n              }\n            },\n            sparkline: {\n              enabled: false\n            },\n            brush: {\n              enabled: false,\n              autoScaleYaxis: true,\n              target: undefined\n            },\n            stacked: false,\n            stackType: 'normal',\n            toolbar: {\n              show: true,\n              offsetX: 0,\n              offsetY: 0,\n              tools: {\n                download: true,\n                selection: true,\n                zoom: true,\n                zoomin: true,\n                zoomout: true,\n                pan: true,\n                reset: true,\n                customIcons: []\n              },\n              export: {\n                csv: {\n                  filename: undefined,\n                  columnDelimiter: ',',\n                  headerCategory: 'category',\n                  headerValue: 'value',\n                  dateFormatter: function dateFormatter(timestamp) {\n                    return new Date(timestamp).toDateString();\n                  }\n                },\n                png: {\n                  filename: undefined\n                },\n                svg: {\n                  filename: undefined\n                }\n              },\n              autoSelected: 'zoom' // accepts -> zoom, pan, selection\n\n            },\n            type: 'line',\n            width: '100%',\n            zoom: {\n              enabled: true,\n              type: 'x',\n              autoScaleYaxis: false,\n              zoomedArea: {\n                fill: {\n                  color: '#90CAF9',\n                  opacity: 0.4\n                },\n                stroke: {\n                  color: '#0D47A1',\n                  opacity: 0.4,\n                  width: 1\n                }\n              }\n            }\n          },\n          plotOptions: {\n            area: {\n              fillTo: 'origin'\n            },\n            bar: {\n              horizontal: false,\n              columnWidth: '70%',\n              // should be in percent 0 - 100\n              barHeight: '70%',\n              // should be in percent 0 - 100\n              distributed: false,\n              borderRadius: 0,\n              rangeBarOverlap: true,\n              rangeBarGroupRows: false,\n              colors: {\n                ranges: [],\n                backgroundBarColors: [],\n                backgroundBarOpacity: 1,\n                backgroundBarRadius: 0\n              },\n              dataLabels: {\n                position: 'top',\n                // top, center, bottom\n                maxItems: 100,\n                hideOverflowingLabels: true,\n                orientation: 'horizontal' // TODO: provide stackedLabels for stacked charts which gives additions of values\n\n              }\n            },\n            bubble: {\n              minBubbleRadius: undefined,\n              maxBubbleRadius: undefined\n            },\n            candlestick: {\n              colors: {\n                upward: '#00B746',\n                downward: '#EF403C'\n              },\n              wick: {\n                useFillColor: true\n              }\n            },\n            boxPlot: {\n              colors: {\n                upper: '#00E396',\n                lower: '#008FFB'\n              }\n            },\n            heatmap: {\n              radius: 2,\n              enableShades: true,\n              shadeIntensity: 0.5,\n              reverseNegativeShade: false,\n              distributed: false,\n              useFillColorAsStroke: false,\n              colorScale: {\n                inverse: false,\n                ranges: [],\n                min: undefined,\n                max: undefined\n              }\n            },\n            treemap: {\n              enableShades: true,\n              shadeIntensity: 0.5,\n              distributed: false,\n              reverseNegativeShade: false,\n              useFillColorAsStroke: false,\n              colorScale: {\n                inverse: false,\n                ranges: [],\n                min: undefined,\n                max: undefined\n              }\n            },\n            radialBar: {\n              inverseOrder: false,\n              startAngle: 0,\n              endAngle: 360,\n              offsetX: 0,\n              offsetY: 0,\n              hollow: {\n                margin: 5,\n                size: '50%',\n                background: 'transparent',\n                image: undefined,\n                imageWidth: 150,\n                imageHeight: 150,\n                imageOffsetX: 0,\n                imageOffsetY: 0,\n                imageClipped: true,\n                position: 'front',\n                dropShadow: {\n                  enabled: false,\n                  top: 0,\n                  left: 0,\n                  blur: 3,\n                  color: '#000',\n                  opacity: 0.5\n                }\n              },\n              track: {\n                show: true,\n                startAngle: undefined,\n                endAngle: undefined,\n                background: '#f2f2f2',\n                strokeWidth: '97%',\n                opacity: 1,\n                margin: 5,\n                // margin is in pixels\n                dropShadow: {\n                  enabled: false,\n                  top: 0,\n                  left: 0,\n                  blur: 3,\n                  color: '#000',\n                  opacity: 0.5\n                }\n              },\n              dataLabels: {\n                show: true,\n                name: {\n                  show: true,\n                  fontSize: '16px',\n                  fontFamily: undefined,\n                  fontWeight: 600,\n                  color: undefined,\n                  offsetY: 0,\n                  formatter: function formatter(val) {\n                    return val;\n                  }\n                },\n                value: {\n                  show: true,\n                  fontSize: '14px',\n                  fontFamily: undefined,\n                  fontWeight: 400,\n                  color: undefined,\n                  offsetY: 16,\n                  formatter: function formatter(val) {\n                    return val + '%';\n                  }\n                },\n                total: {\n                  show: false,\n                  label: 'Total',\n                  fontSize: '16px',\n                  fontWeight: 600,\n                  fontFamily: undefined,\n                  color: undefined,\n                  formatter: function formatter(w) {\n                    return w.globals.seriesTotals.reduce(function (a, b) {\n                      return a + b;\n                    }, 0) / w.globals.series.length + '%';\n                  }\n                }\n              }\n            },\n            pie: {\n              customScale: 1,\n              offsetX: 0,\n              offsetY: 0,\n              startAngle: 0,\n              endAngle: 360,\n              expandOnClick: true,\n              dataLabels: {\n                // These are the percentage values which are displayed on slice\n                offset: 0,\n                // offset by which labels will move outside\n                minAngleToShowLabel: 10\n              },\n              donut: {\n                size: '65%',\n                background: 'transparent',\n                labels: {\n                  // These are the inner labels appearing inside donut\n                  show: false,\n                  name: {\n                    show: true,\n                    fontSize: '16px',\n                    fontFamily: undefined,\n                    fontWeight: 600,\n                    color: undefined,\n                    offsetY: -10,\n                    formatter: function formatter(val) {\n                      return val;\n                    }\n                  },\n                  value: {\n                    show: true,\n                    fontSize: '20px',\n                    fontFamily: undefined,\n                    fontWeight: 400,\n                    color: undefined,\n                    offsetY: 10,\n                    formatter: function formatter(val) {\n                      return val;\n                    }\n                  },\n                  total: {\n                    show: false,\n                    showAlways: false,\n                    label: 'Total',\n                    fontSize: '16px',\n                    fontWeight: 400,\n                    fontFamily: undefined,\n                    color: undefined,\n                    formatter: function formatter(w) {\n                      return w.globals.seriesTotals.reduce(function (a, b) {\n                        return a + b;\n                      }, 0);\n                    }\n                  }\n                }\n              }\n            },\n            polarArea: {\n              rings: {\n                strokeWidth: 1,\n                strokeColor: '#e8e8e8'\n              },\n              spokes: {\n                strokeWidth: 1,\n                connectorColors: '#e8e8e8'\n              }\n            },\n            radar: {\n              size: undefined,\n              offsetX: 0,\n              offsetY: 0,\n              polygons: {\n                // strokeColor: '#e8e8e8', // should be deprecated in the minor version i.e 3.2\n                strokeWidth: 1,\n                strokeColors: '#e8e8e8',\n                connectorColors: '#e8e8e8',\n                fill: {\n                  colors: undefined\n                }\n              }\n            }\n          },\n          colors: undefined,\n          dataLabels: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            formatter: function formatter(val) {\n              return val !== null ? val : '';\n            },\n            textAnchor: 'middle',\n            distributed: false,\n            offsetX: 0,\n            offsetY: 0,\n            style: {\n              fontSize: '12px',\n              fontFamily: undefined,\n              fontWeight: 600,\n              colors: undefined\n            },\n            background: {\n              enabled: true,\n              foreColor: '#fff',\n              borderRadius: 2,\n              padding: 4,\n              opacity: 0.9,\n              borderWidth: 1,\n              borderColor: '#fff',\n              dropShadow: {\n                enabled: false,\n                top: 1,\n                left: 1,\n                blur: 1,\n                color: '#000',\n                opacity: 0.45\n              }\n            },\n            dropShadow: {\n              enabled: false,\n              top: 1,\n              left: 1,\n              blur: 1,\n              color: '#000',\n              opacity: 0.45\n            }\n          },\n          fill: {\n            type: 'solid',\n            colors: undefined,\n            // array of colors\n            opacity: 0.85,\n            gradient: {\n              shade: 'dark',\n              type: 'horizontal',\n              shadeIntensity: 0.5,\n              gradientToColors: undefined,\n              inverseColors: true,\n              opacityFrom: 1,\n              opacityTo: 1,\n              stops: [0, 50, 100],\n              colorStops: []\n            },\n            image: {\n              src: [],\n              width: undefined,\n              // optional\n              height: undefined // optional\n\n            },\n            pattern: {\n              style: 'squares',\n              // String | Array of Strings\n              width: 6,\n              height: 6,\n              strokeWidth: 2\n            }\n          },\n          forecastDataPoints: {\n            count: 0,\n            fillOpacity: 0.5,\n            strokeWidth: undefined,\n            dashArray: 4\n          },\n          grid: {\n            show: true,\n            borderColor: '#e0e0e0',\n            strokeDashArray: 0,\n            position: 'back',\n            xaxis: {\n              lines: {\n                show: false\n              }\n            },\n            yaxis: {\n              lines: {\n                show: true\n              }\n            },\n            row: {\n              colors: undefined,\n              // takes as array which will be repeated on rows\n              opacity: 0.5\n            },\n            column: {\n              colors: undefined,\n              // takes an array which will be repeated on columns\n              opacity: 0.5\n            },\n            padding: {\n              top: 0,\n              right: 10,\n              bottom: 0,\n              left: 12\n            }\n          },\n          labels: [],\n          legend: {\n            show: true,\n            showForSingleSeries: false,\n            showForNullSeries: true,\n            showForZeroSeries: true,\n            floating: false,\n            position: 'bottom',\n            // whether to position legends in 1 of 4\n            // direction - top, bottom, left, right\n            horizontalAlign: 'center',\n            // when position top/bottom, you can specify whether to align legends left, right or center\n            inverseOrder: false,\n            fontSize: '12px',\n            fontFamily: undefined,\n            fontWeight: 400,\n            width: undefined,\n            height: undefined,\n            formatter: undefined,\n            tooltipHoverFormatter: undefined,\n            offsetX: -20,\n            offsetY: 4,\n            customLegendItems: [],\n            labels: {\n              colors: undefined,\n              useSeriesColors: false\n            },\n            markers: {\n              width: 12,\n              height: 12,\n              strokeWidth: 0,\n              fillColors: undefined,\n              strokeColor: '#fff',\n              radius: 12,\n              customHTML: undefined,\n              offsetX: 0,\n              offsetY: 0,\n              onClick: undefined\n            },\n            itemMargin: {\n              horizontal: 5,\n              vertical: 2\n            },\n            onItemClick: {\n              toggleDataSeries: true\n            },\n            onItemHover: {\n              highlightDataSeries: true\n            }\n          },\n          markers: {\n            discrete: [],\n            size: 0,\n            colors: undefined,\n            //strokeColor: '#fff', // TODO: deprecate in major version 4.0\n            strokeColors: '#fff',\n            strokeWidth: 2,\n            strokeOpacity: 0.9,\n            strokeDashArray: 0,\n            fillOpacity: 1,\n            shape: 'circle',\n            width: 8,\n            // only applicable when shape is rect/square\n            height: 8,\n            // only applicable when shape is rect/square\n            radius: 2,\n            offsetX: 0,\n            offsetY: 0,\n            onClick: undefined,\n            onDblClick: undefined,\n            showNullDataPoints: true,\n            hover: {\n              size: undefined,\n              sizeOffset: 3\n            }\n          },\n          noData: {\n            text: undefined,\n            align: 'center',\n            verticalAlign: 'middle',\n            offsetX: 0,\n            offsetY: 0,\n            style: {\n              color: undefined,\n              fontSize: '14px',\n              fontFamily: undefined\n            }\n          },\n          responsive: [],\n          // breakpoints should follow ascending order 400, then 700, then 1000\n          series: undefined,\n          states: {\n            normal: {\n              filter: {\n                type: 'none',\n                value: 0\n              }\n            },\n            hover: {\n              filter: {\n                type: 'lighten',\n                value: 0.1\n              }\n            },\n            active: {\n              allowMultipleDataPointsSelection: false,\n              filter: {\n                type: 'darken',\n                value: 0.5\n              }\n            }\n          },\n          title: {\n            text: undefined,\n            align: 'left',\n            margin: 5,\n            offsetX: 0,\n            offsetY: 0,\n            floating: false,\n            style: {\n              fontSize: '14px',\n              fontWeight: 900,\n              fontFamily: undefined,\n              color: undefined\n            }\n          },\n          subtitle: {\n            text: undefined,\n            align: 'left',\n            margin: 5,\n            offsetX: 0,\n            offsetY: 30,\n            floating: false,\n            style: {\n              fontSize: '12px',\n              fontWeight: 400,\n              fontFamily: undefined,\n              color: undefined\n            }\n          },\n          stroke: {\n            show: true,\n            curve: 'smooth',\n            // \"smooth\" / \"straight\" / \"stepline\"\n            lineCap: 'butt',\n            // round, butt , square\n            width: 2,\n            colors: undefined,\n            // array of colors\n            dashArray: 0 // single value or array of values\n\n          },\n          tooltip: {\n            enabled: true,\n            enabledOnSeries: undefined,\n            shared: true,\n            followCursor: false,\n            // when disabled, the tooltip will show on top of the series instead of mouse position\n            intersect: false,\n            // when enabled, tooltip will only show when user directly hovers over point\n            inverseOrder: false,\n            custom: undefined,\n            fillSeriesColor: false,\n            theme: 'light',\n            style: {\n              fontSize: '12px',\n              fontFamily: undefined\n            },\n            onDatasetHover: {\n              highlightDataSeries: false\n            },\n            x: {\n              // x value\n              show: true,\n              format: 'dd MMM',\n              // dd/MM, dd MMM yy, dd MMM yyyy\n              formatter: undefined // a custom user supplied formatter function\n\n            },\n            y: {\n              formatter: undefined,\n              title: {\n                formatter: function formatter(seriesName) {\n                  return seriesName ? seriesName + ': ' : '';\n                }\n              }\n            },\n            z: {\n              formatter: undefined,\n              title: 'Size: '\n            },\n            marker: {\n              show: true,\n              fillColors: undefined\n            },\n            items: {\n              display: 'flex'\n            },\n            fixed: {\n              enabled: false,\n              position: 'topRight',\n              // topRight, topLeft, bottomRight, bottomLeft\n              offsetX: 0,\n              offsetY: 0\n            }\n          },\n          xaxis: {\n            type: 'category',\n            categories: [],\n            convertedCatToNumeric: false,\n            // internal property which should not be altered outside\n            offsetX: 0,\n            offsetY: 0,\n            overwriteCategories: undefined,\n            labels: {\n              show: true,\n              rotate: -45,\n              rotateAlways: false,\n              hideOverlappingLabels: true,\n              trim: false,\n              minHeight: undefined,\n              maxHeight: 120,\n              showDuplicates: true,\n              style: {\n                colors: [],\n                fontSize: '12px',\n                fontWeight: 400,\n                fontFamily: undefined,\n                cssClass: ''\n              },\n              offsetX: 0,\n              offsetY: 0,\n              format: undefined,\n              formatter: undefined,\n              // custom formatter function which will override format\n              datetimeUTC: true,\n              datetimeFormatter: {\n                year: 'yyyy',\n                month: \"MMM 'yy\",\n                day: 'dd MMM',\n                hour: 'HH:mm',\n                minute: 'HH:mm:ss',\n                second: 'HH:mm:ss'\n              }\n            },\n            axisBorder: {\n              show: true,\n              color: '#e0e0e0',\n              width: '100%',\n              height: 1,\n              offsetX: 0,\n              offsetY: 0\n            },\n            axisTicks: {\n              show: true,\n              color: '#e0e0e0',\n              height: 6,\n              offsetX: 0,\n              offsetY: 0\n            },\n            tickAmount: undefined,\n            tickPlacement: 'on',\n            min: undefined,\n            max: undefined,\n            range: undefined,\n            floating: false,\n            decimalsInFloat: undefined,\n            position: 'bottom',\n            title: {\n              text: undefined,\n              offsetX: 0,\n              offsetY: 0,\n              style: {\n                color: undefined,\n                fontSize: '12px',\n                fontWeight: 900,\n                fontFamily: undefined,\n                cssClass: ''\n              }\n            },\n            crosshairs: {\n              show: true,\n              width: 1,\n              // tickWidth/barWidth or an integer\n              position: 'back',\n              opacity: 0.9,\n              stroke: {\n                color: '#b6b6b6',\n                width: 1,\n                dashArray: 3\n              },\n              fill: {\n                type: 'solid',\n                // solid, gradient\n                color: '#B1B9C4',\n                gradient: {\n                  colorFrom: '#D8E3F0',\n                  colorTo: '#BED1E6',\n                  stops: [0, 100],\n                  opacityFrom: 0.4,\n                  opacityTo: 0.5\n                }\n              },\n              dropShadow: {\n                enabled: false,\n                left: 0,\n                top: 0,\n                blur: 1,\n                opacity: 0.4\n              }\n            },\n            tooltip: {\n              enabled: true,\n              offsetY: 0,\n              formatter: undefined,\n              style: {\n                fontSize: '12px',\n                fontFamily: undefined\n              }\n            }\n          },\n          yaxis: this.yAxis,\n          theme: {\n            mode: 'light',\n            palette: 'palette1',\n            // If defined, it will overwrite globals.colors variable\n            monochrome: {\n              // monochrome allows you to select just 1 color and fill out the rest with light/dark shade (intensity can be selected)\n              enabled: false,\n              color: '#008FFB',\n              shadeTo: 'light',\n              shadeIntensity: 0.65\n            }\n          }\n        };\n      }\n    }]);\n\n    return Options;\n  }();\n\n  /**\n   * ApexCharts Annotations Class for drawing lines/rects on both xaxis and yaxis.\n   *\n   * @module Annotations\n   **/\n\n  var Annotations = /*#__PURE__*/function () {\n    function Annotations(ctx) {\n      _classCallCheck(this, Annotations);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.graphics = new Graphics(this.ctx);\n\n      if (this.w.globals.isBarHorizontal) {\n        this.invertAxis = true;\n      }\n\n      this.helpers = new Helpers$4(this);\n      this.xAxisAnnotations = new XAnnotations(this);\n      this.yAxisAnnotations = new YAnnotations(this);\n      this.pointsAnnotations = new PointAnnotations(this);\n\n      if (this.w.globals.isBarHorizontal && this.w.config.yaxis[0].reversed) {\n        this.inversedReversedAxis = true;\n      }\n\n      this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints;\n    }\n\n    _createClass(Annotations, [{\n      key: \"drawAxesAnnotations\",\n      value: function drawAxesAnnotations() {\n        var w = this.w;\n\n        if (w.globals.axisCharts) {\n          var yAnnotations = this.yAxisAnnotations.drawYAxisAnnotations();\n          var xAnnotations = this.xAxisAnnotations.drawXAxisAnnotations();\n          var pointAnnotations = this.pointsAnnotations.drawPointAnnotations();\n          var initialAnim = w.config.chart.animations.enabled;\n          var annoArray = [yAnnotations, xAnnotations, pointAnnotations];\n          var annoElArray = [xAnnotations.node, yAnnotations.node, pointAnnotations.node];\n\n          for (var i = 0; i < 3; i++) {\n            w.globals.dom.elGraphical.add(annoArray[i]);\n\n            if (initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n              // fixes apexcharts/apexcharts.js#685\n              if (w.config.chart.type !== 'scatter' && w.config.chart.type !== 'bubble' && w.globals.dataPoints > 1) {\n                annoElArray[i].classList.add('apexcharts-element-hidden');\n              }\n            }\n\n            w.globals.delayedElements.push({\n              el: annoElArray[i],\n              index: 0\n            });\n          } // background sizes needs to be calculated after text is drawn, so calling them last\n\n\n          this.helpers.annotationsBackground();\n        }\n      }\n    }, {\n      key: \"drawImageAnnos\",\n      value: function drawImageAnnos() {\n        var _this = this;\n\n        var w = this.w;\n        w.config.annotations.images.map(function (s, index) {\n          _this.addImage(s, index);\n        });\n      }\n    }, {\n      key: \"drawTextAnnos\",\n      value: function drawTextAnnos() {\n        var _this2 = this;\n\n        var w = this.w;\n        w.config.annotations.texts.map(function (t, index) {\n          _this2.addText(t, index);\n        });\n      }\n    }, {\n      key: \"addXaxisAnnotation\",\n      value: function addXaxisAnnotation(anno, parent, index) {\n        this.xAxisAnnotations.addXaxisAnnotation(anno, parent, index);\n      }\n    }, {\n      key: \"addYaxisAnnotation\",\n      value: function addYaxisAnnotation(anno, parent, index) {\n        this.yAxisAnnotations.addYaxisAnnotation(anno, parent, index);\n      }\n    }, {\n      key: \"addPointAnnotation\",\n      value: function addPointAnnotation(anno, parent, index) {\n        this.pointsAnnotations.addPointAnnotation(anno, parent, index);\n      }\n    }, {\n      key: \"addText\",\n      value: function addText(params, index) {\n        var x = params.x,\n            y = params.y,\n            text = params.text,\n            textAnchor = params.textAnchor,\n            foreColor = params.foreColor,\n            fontSize = params.fontSize,\n            fontFamily = params.fontFamily,\n            fontWeight = params.fontWeight,\n            cssClass = params.cssClass,\n            backgroundColor = params.backgroundColor,\n            borderWidth = params.borderWidth,\n            strokeDashArray = params.strokeDashArray,\n            borderRadius = params.borderRadius,\n            borderColor = params.borderColor,\n            _params$appendTo = params.appendTo,\n            appendTo = _params$appendTo === void 0 ? '.apexcharts-annotations' : _params$appendTo,\n            _params$paddingLeft = params.paddingLeft,\n            paddingLeft = _params$paddingLeft === void 0 ? 4 : _params$paddingLeft,\n            _params$paddingRight = params.paddingRight,\n            paddingRight = _params$paddingRight === void 0 ? 4 : _params$paddingRight,\n            _params$paddingBottom = params.paddingBottom,\n            paddingBottom = _params$paddingBottom === void 0 ? 2 : _params$paddingBottom,\n            _params$paddingTop = params.paddingTop,\n            paddingTop = _params$paddingTop === void 0 ? 2 : _params$paddingTop;\n        var w = this.w;\n        var elText = this.graphics.drawText({\n          x: x,\n          y: y,\n          text: text,\n          textAnchor: textAnchor || 'start',\n          fontSize: fontSize || '12px',\n          fontWeight: fontWeight || 'regular',\n          fontFamily: fontFamily || w.config.chart.fontFamily,\n          foreColor: foreColor || w.config.chart.foreColor,\n          cssClass: 'apexcharts-text ' + cssClass ? cssClass : ''\n        });\n        var parent = w.globals.dom.baseEl.querySelector(appendTo);\n\n        if (parent) {\n          parent.appendChild(elText.node);\n        }\n\n        var textRect = elText.bbox();\n\n        if (text) {\n          var elRect = this.graphics.drawRect(textRect.x - paddingLeft, textRect.y - paddingTop, textRect.width + paddingLeft + paddingRight, textRect.height + paddingBottom + paddingTop, borderRadius, backgroundColor ? backgroundColor : 'transparent', 1, borderWidth, borderColor, strokeDashArray);\n          parent.insertBefore(elRect.node, elText.node);\n        }\n      }\n    }, {\n      key: \"addImage\",\n      value: function addImage(params, index) {\n        var w = this.w;\n        var path = params.path,\n            _params$x = params.x,\n            x = _params$x === void 0 ? 0 : _params$x,\n            _params$y = params.y,\n            y = _params$y === void 0 ? 0 : _params$y,\n            _params$width = params.width,\n            width = _params$width === void 0 ? 20 : _params$width,\n            _params$height = params.height,\n            height = _params$height === void 0 ? 20 : _params$height,\n            _params$appendTo2 = params.appendTo,\n            appendTo = _params$appendTo2 === void 0 ? '.apexcharts-annotations' : _params$appendTo2;\n        var img = w.globals.dom.Paper.image(path);\n        img.size(width, height).move(x, y);\n        var parent = w.globals.dom.baseEl.querySelector(appendTo);\n\n        if (parent) {\n          parent.appendChild(img.node);\n        }\n\n        return img;\n      } // The addXaxisAnnotation method requires a parent class, and user calling this method externally on the chart instance may not specify parent, hence a different method\n\n    }, {\n      key: \"addXaxisAnnotationExternal\",\n      value: function addXaxisAnnotationExternal(params, pushToMemory, context) {\n        this.addAnnotationExternal({\n          params: params,\n          pushToMemory: pushToMemory,\n          context: context,\n          type: 'xaxis',\n          contextMethod: context.addXaxisAnnotation\n        });\n        return context;\n      }\n    }, {\n      key: \"addYaxisAnnotationExternal\",\n      value: function addYaxisAnnotationExternal(params, pushToMemory, context) {\n        this.addAnnotationExternal({\n          params: params,\n          pushToMemory: pushToMemory,\n          context: context,\n          type: 'yaxis',\n          contextMethod: context.addYaxisAnnotation\n        });\n        return context;\n      }\n    }, {\n      key: \"addPointAnnotationExternal\",\n      value: function addPointAnnotationExternal(params, pushToMemory, context) {\n        if (typeof this.invertAxis === 'undefined') {\n          this.invertAxis = context.w.globals.isBarHorizontal;\n        }\n\n        this.addAnnotationExternal({\n          params: params,\n          pushToMemory: pushToMemory,\n          context: context,\n          type: 'point',\n          contextMethod: context.addPointAnnotation\n        });\n        return context;\n      }\n    }, {\n      key: \"addAnnotationExternal\",\n      value: function addAnnotationExternal(_ref) {\n        var params = _ref.params,\n            pushToMemory = _ref.pushToMemory,\n            context = _ref.context,\n            type = _ref.type,\n            contextMethod = _ref.contextMethod;\n        var me = context;\n        var w = me.w;\n        var parent = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(type, \"-annotations\"));\n        var index = parent.childNodes.length + 1;\n        var options = new Options();\n        var axesAnno = Object.assign({}, type === 'xaxis' ? options.xAxisAnnotation : type === 'yaxis' ? options.yAxisAnnotation : options.pointAnnotation);\n        var anno = Utils$1.extend(axesAnno, params);\n\n        switch (type) {\n          case 'xaxis':\n            this.addXaxisAnnotation(anno, parent, index);\n            break;\n\n          case 'yaxis':\n            this.addYaxisAnnotation(anno, parent, index);\n            break;\n\n          case 'point':\n            this.addPointAnnotation(anno, parent, index);\n            break;\n        } // add background\n\n\n        var axesAnnoLabel = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(type, \"-annotations .apexcharts-\").concat(type, \"-annotation-label[rel='\").concat(index, \"']\"));\n        var elRect = this.helpers.addBackgroundToAnno(axesAnnoLabel, anno);\n\n        if (elRect) {\n          parent.insertBefore(elRect.node, axesAnnoLabel);\n        }\n\n        if (pushToMemory) {\n          w.globals.memory.methodsToExec.push({\n            context: me,\n            id: anno.id ? anno.id : Utils$1.randomId(),\n            method: contextMethod,\n            label: 'addAnnotation',\n            params: params\n          });\n        }\n\n        return context;\n      }\n    }, {\n      key: \"clearAnnotations\",\n      value: function clearAnnotations(ctx) {\n        var w = ctx.w;\n        var annos = w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations'); // annotations added externally should be cleared out too\n\n        w.globals.memory.methodsToExec.map(function (m, i) {\n          if (m.label === 'addText' || m.label === 'addAnnotation') {\n            w.globals.memory.methodsToExec.splice(i, 1);\n          }\n        });\n        annos = Utils$1.listToArray(annos); // delete the DOM elements\n\n        Array.prototype.forEach.call(annos, function (a) {\n          while (a.firstChild) {\n            a.removeChild(a.firstChild);\n          }\n        });\n      }\n    }, {\n      key: \"removeAnnotation\",\n      value: function removeAnnotation(ctx, id) {\n        var w = ctx.w;\n        var annos = w.globals.dom.baseEl.querySelectorAll(\".\".concat(id));\n\n        if (annos) {\n          w.globals.memory.methodsToExec.map(function (m, i) {\n            if (m.id === id) {\n              w.globals.memory.methodsToExec.splice(i, 1);\n            }\n          });\n          Array.prototype.forEach.call(annos, function (a) {\n            a.parentElement.removeChild(a);\n          });\n        }\n      }\n    }]);\n\n    return Annotations;\n  }();\n\n  /**\n   * ApexCharts Fill Class for setting fill options of the paths.\n   *\n   * @module Fill\n   **/\n\n  var Fill = /*#__PURE__*/function () {\n    function Fill(ctx) {\n      _classCallCheck(this, Fill);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.opts = null;\n      this.seriesIndex = 0;\n    }\n\n    _createClass(Fill, [{\n      key: \"clippedImgArea\",\n      value: function clippedImgArea(params) {\n        var w = this.w;\n        var cnf = w.config;\n        var svgW = parseInt(w.globals.gridWidth, 10);\n        var svgH = parseInt(w.globals.gridHeight, 10);\n        var size = svgW > svgH ? svgW : svgH;\n        var fillImg = params.image;\n        var imgWidth = 0;\n        var imgHeight = 0;\n\n        if (typeof params.width === 'undefined' && typeof params.height === 'undefined') {\n          if (cnf.fill.image.width !== undefined && cnf.fill.image.height !== undefined) {\n            imgWidth = cnf.fill.image.width + 1;\n            imgHeight = cnf.fill.image.height;\n          } else {\n            imgWidth = size + 1;\n            imgHeight = size;\n          }\n        } else {\n          imgWidth = params.width;\n          imgHeight = params.height;\n        }\n\n        var elPattern = document.createElementNS(w.globals.SVGNS, 'pattern');\n        Graphics.setAttrs(elPattern, {\n          id: params.patternID,\n          patternUnits: params.patternUnits ? params.patternUnits : 'userSpaceOnUse',\n          width: imgWidth + 'px',\n          height: imgHeight + 'px'\n        });\n        var elImage = document.createElementNS(w.globals.SVGNS, 'image');\n        elPattern.appendChild(elImage);\n        elImage.setAttributeNS(window.SVG.xlink, 'href', fillImg);\n        Graphics.setAttrs(elImage, {\n          x: 0,\n          y: 0,\n          preserveAspectRatio: 'none',\n          width: imgWidth + 'px',\n          height: imgHeight + 'px'\n        });\n        elImage.style.opacity = params.opacity;\n        w.globals.dom.elDefs.node.appendChild(elPattern);\n      }\n    }, {\n      key: \"getSeriesIndex\",\n      value: function getSeriesIndex(opts) {\n        var w = this.w;\n\n        if ((w.config.chart.type === 'bar' || w.config.chart.type === 'rangeBar') && w.config.plotOptions.bar.distributed || w.config.chart.type === 'heatmap' || w.config.chart.type === 'treemap') {\n          this.seriesIndex = opts.seriesNumber;\n        } else {\n          this.seriesIndex = opts.seriesNumber % w.globals.series.length;\n        }\n\n        return this.seriesIndex;\n      }\n    }, {\n      key: \"fillPath\",\n      value: function fillPath(opts) {\n        var w = this.w;\n        this.opts = opts;\n        var cnf = this.w.config;\n        var pathFill;\n        var patternFill, gradientFill;\n        this.seriesIndex = this.getSeriesIndex(opts);\n        var fillColors = this.getFillColors();\n        var fillColor = fillColors[this.seriesIndex]; //override fillcolor if user inputted color with data\n\n        if (w.globals.seriesColors[this.seriesIndex] !== undefined) {\n          fillColor = w.globals.seriesColors[this.seriesIndex];\n        }\n\n        if (typeof fillColor === 'function') {\n          fillColor = fillColor({\n            seriesIndex: this.seriesIndex,\n            dataPointIndex: opts.dataPointIndex,\n            value: opts.value,\n            w: w\n          });\n        }\n\n        var fillType = this.getFillType(this.seriesIndex);\n        var fillOpacity = Array.isArray(cnf.fill.opacity) ? cnf.fill.opacity[this.seriesIndex] : cnf.fill.opacity;\n\n        if (opts.color) {\n          fillColor = opts.color;\n        }\n\n        var defaultColor = fillColor;\n\n        if (fillColor.indexOf('rgb') === -1) {\n          if (fillColor.length < 9) {\n            // if the hex contains alpha and is of 9 digit, skip the opacity\n            defaultColor = Utils$1.hexToRgba(fillColor, fillOpacity);\n          }\n        } else {\n          if (fillColor.indexOf('rgba') > -1) {\n            fillOpacity = Utils$1.getOpacityFromRGBA(fillColor);\n          }\n        }\n\n        if (opts.opacity) fillOpacity = opts.opacity;\n\n        if (fillType === 'pattern') {\n          patternFill = this.handlePatternFill(patternFill, fillColor, fillOpacity, defaultColor);\n        }\n\n        if (fillType === 'gradient') {\n          gradientFill = this.handleGradientFill(fillColor, fillOpacity, this.seriesIndex);\n        }\n\n        if (fillType === 'image') {\n          var imgSrc = cnf.fill.image.src;\n          var patternID = opts.patternID ? opts.patternID : '';\n          this.clippedImgArea({\n            opacity: fillOpacity,\n            image: Array.isArray(imgSrc) ? opts.seriesNumber < imgSrc.length ? imgSrc[opts.seriesNumber] : imgSrc[0] : imgSrc,\n            width: opts.width ? opts.width : undefined,\n            height: opts.height ? opts.height : undefined,\n            patternUnits: opts.patternUnits,\n            patternID: \"pattern\".concat(w.globals.cuid).concat(opts.seriesNumber + 1).concat(patternID)\n          });\n          pathFill = \"url(#pattern\".concat(w.globals.cuid).concat(opts.seriesNumber + 1).concat(patternID, \")\");\n        } else if (fillType === 'gradient') {\n          pathFill = gradientFill;\n        } else if (fillType === 'pattern') {\n          pathFill = patternFill;\n        } else {\n          pathFill = defaultColor;\n        } // override pattern/gradient if opts.solid is true\n\n\n        if (opts.solid) {\n          pathFill = defaultColor;\n        }\n\n        return pathFill;\n      }\n    }, {\n      key: \"getFillType\",\n      value: function getFillType(seriesIndex) {\n        var w = this.w;\n\n        if (Array.isArray(w.config.fill.type)) {\n          return w.config.fill.type[seriesIndex];\n        } else {\n          return w.config.fill.type;\n        }\n      }\n    }, {\n      key: \"getFillColors\",\n      value: function getFillColors() {\n        var w = this.w;\n        var cnf = w.config;\n        var opts = this.opts;\n        var fillColors = [];\n\n        if (w.globals.comboCharts) {\n          if (w.config.series[this.seriesIndex].type === 'line') {\n            if (Array.isArray(w.globals.stroke.colors)) {\n              fillColors = w.globals.stroke.colors;\n            } else {\n              fillColors.push(w.globals.stroke.colors);\n            }\n          } else {\n            if (Array.isArray(w.globals.fill.colors)) {\n              fillColors = w.globals.fill.colors;\n            } else {\n              fillColors.push(w.globals.fill.colors);\n            }\n          }\n        } else {\n          if (cnf.chart.type === 'line') {\n            if (Array.isArray(w.globals.stroke.colors)) {\n              fillColors = w.globals.stroke.colors;\n            } else {\n              fillColors.push(w.globals.stroke.colors);\n            }\n          } else {\n            if (Array.isArray(w.globals.fill.colors)) {\n              fillColors = w.globals.fill.colors;\n            } else {\n              fillColors.push(w.globals.fill.colors);\n            }\n          }\n        } // colors passed in arguments\n\n\n        if (typeof opts.fillColors !== 'undefined') {\n          fillColors = [];\n\n          if (Array.isArray(opts.fillColors)) {\n            fillColors = opts.fillColors.slice();\n          } else {\n            fillColors.push(opts.fillColors);\n          }\n        }\n\n        return fillColors;\n      }\n    }, {\n      key: \"handlePatternFill\",\n      value: function handlePatternFill(patternFill, fillColor, fillOpacity, defaultColor) {\n        var cnf = this.w.config;\n        var opts = this.opts;\n        var graphics = new Graphics(this.ctx);\n        var patternStrokeWidth = cnf.fill.pattern.strokeWidth === undefined ? Array.isArray(cnf.stroke.width) ? cnf.stroke.width[this.seriesIndex] : cnf.stroke.width : Array.isArray(cnf.fill.pattern.strokeWidth) ? cnf.fill.pattern.strokeWidth[this.seriesIndex] : cnf.fill.pattern.strokeWidth;\n        var patternLineColor = fillColor;\n\n        if (Array.isArray(cnf.fill.pattern.style)) {\n          if (typeof cnf.fill.pattern.style[opts.seriesNumber] !== 'undefined') {\n            var pf = graphics.drawPattern(cnf.fill.pattern.style[opts.seriesNumber], cnf.fill.pattern.width, cnf.fill.pattern.height, patternLineColor, patternStrokeWidth, fillOpacity);\n            patternFill = pf;\n          } else {\n            patternFill = defaultColor;\n          }\n        } else {\n          patternFill = graphics.drawPattern(cnf.fill.pattern.style, cnf.fill.pattern.width, cnf.fill.pattern.height, patternLineColor, patternStrokeWidth, fillOpacity);\n        }\n\n        return patternFill;\n      }\n    }, {\n      key: \"handleGradientFill\",\n      value: function handleGradientFill(fillColor, fillOpacity, i) {\n        var cnf = this.w.config;\n        var opts = this.opts;\n        var graphics = new Graphics(this.ctx);\n        var utils = new Utils$1();\n        var type = cnf.fill.gradient.type;\n        var gradientFrom = fillColor;\n        var gradientTo;\n        var opacityFrom = cnf.fill.gradient.opacityFrom === undefined ? fillOpacity : Array.isArray(cnf.fill.gradient.opacityFrom) ? cnf.fill.gradient.opacityFrom[i] : cnf.fill.gradient.opacityFrom;\n\n        if (gradientFrom.indexOf('rgba') > -1) {\n          opacityFrom = Utils$1.getOpacityFromRGBA(gradientFrom);\n        }\n\n        var opacityTo = cnf.fill.gradient.opacityTo === undefined ? fillOpacity : Array.isArray(cnf.fill.gradient.opacityTo) ? cnf.fill.gradient.opacityTo[i] : cnf.fill.gradient.opacityTo;\n\n        if (cnf.fill.gradient.gradientToColors === undefined || cnf.fill.gradient.gradientToColors.length === 0) {\n          if (cnf.fill.gradient.shade === 'dark') {\n            gradientTo = utils.shadeColor(parseFloat(cnf.fill.gradient.shadeIntensity) * -1, fillColor.indexOf('rgb') > -1 ? Utils$1.rgb2hex(fillColor) : fillColor);\n          } else {\n            gradientTo = utils.shadeColor(parseFloat(cnf.fill.gradient.shadeIntensity), fillColor.indexOf('rgb') > -1 ? Utils$1.rgb2hex(fillColor) : fillColor);\n          }\n        } else {\n          if (cnf.fill.gradient.gradientToColors[opts.seriesNumber]) {\n            var gToColor = cnf.fill.gradient.gradientToColors[opts.seriesNumber];\n            gradientTo = gToColor;\n\n            if (gToColor.indexOf('rgba') > -1) {\n              opacityTo = Utils$1.getOpacityFromRGBA(gToColor);\n            }\n          } else {\n            gradientTo = fillColor;\n          }\n        }\n\n        if (cnf.fill.gradient.inverseColors) {\n          var t = gradientFrom;\n          gradientFrom = gradientTo;\n          gradientTo = t;\n        }\n\n        if (gradientFrom.indexOf('rgb') > -1) {\n          gradientFrom = Utils$1.rgb2hex(gradientFrom);\n        }\n\n        if (gradientTo.indexOf('rgb') > -1) {\n          gradientTo = Utils$1.rgb2hex(gradientTo);\n        }\n\n        return graphics.drawGradient(type, gradientFrom, gradientTo, opacityFrom, opacityTo, opts.size, cnf.fill.gradient.stops, cnf.fill.gradient.colorStops, i);\n      }\n    }]);\n\n    return Fill;\n  }();\n\n  /**\n   * ApexCharts Markers Class for drawing points on y values in axes charts.\n   *\n   * @module Markers\n   **/\n\n  var Markers = /*#__PURE__*/function () {\n    function Markers(ctx, opts) {\n      _classCallCheck(this, Markers);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Markers, [{\n      key: \"setGlobalMarkerSize\",\n      value: function setGlobalMarkerSize() {\n        var w = this.w;\n        w.globals.markers.size = Array.isArray(w.config.markers.size) ? w.config.markers.size : [w.config.markers.size];\n\n        if (w.globals.markers.size.length > 0) {\n          if (w.globals.markers.size.length < w.globals.series.length + 1) {\n            for (var i = 0; i <= w.globals.series.length; i++) {\n              if (typeof w.globals.markers.size[i] === 'undefined') {\n                w.globals.markers.size.push(w.globals.markers.size[0]);\n              }\n            }\n          }\n        } else {\n          w.globals.markers.size = w.config.series.map(function (s) {\n            return w.config.markers.size;\n          });\n        }\n      }\n    }, {\n      key: \"plotChartMarkers\",\n      value: function plotChartMarkers(pointsPos, seriesIndex, j, pSize) {\n        var alwaysDrawMarker = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        var w = this.w;\n        var i = seriesIndex;\n        var p = pointsPos;\n        var elPointsWrap = null;\n        var graphics = new Graphics(this.ctx);\n        var point;\n\n        if (w.globals.markers.size[seriesIndex] > 0 || alwaysDrawMarker) {\n          elPointsWrap = graphics.group({\n            class: alwaysDrawMarker ? '' : 'apexcharts-series-markers'\n          });\n          elPointsWrap.attr('clip-path', \"url(#gridRectMarkerMask\".concat(w.globals.cuid, \")\"));\n        }\n\n        if (Array.isArray(p.x)) {\n          for (var q = 0; q < p.x.length; q++) {\n            var dataPointIndex = j; // a small hack as we have 2 points for the first val to connect it\n\n            if (j === 1 && q === 0) dataPointIndex = 0;\n            if (j === 1 && q === 1) dataPointIndex = 1;\n            var PointClasses = 'apexcharts-marker';\n\n            if ((w.config.chart.type === 'line' || w.config.chart.type === 'area') && !w.globals.comboCharts && !w.config.tooltip.intersect) {\n              PointClasses += ' no-pointer-events';\n            }\n\n            var shouldMarkerDraw = Array.isArray(w.config.markers.size) ? w.globals.markers.size[seriesIndex] > 0 : w.config.markers.size > 0;\n\n            if (shouldMarkerDraw || alwaysDrawMarker) {\n              if (Utils$1.isNumber(p.y[q])) {\n                PointClasses += \" w\".concat(Utils$1.randomId());\n              } else {\n                PointClasses = 'apexcharts-nullpoint';\n              }\n\n              var opts = this.getMarkerConfig({\n                cssClass: PointClasses,\n                seriesIndex: seriesIndex,\n                dataPointIndex: dataPointIndex\n              });\n\n              if (w.config.series[i].data[dataPointIndex]) {\n                if (w.config.series[i].data[dataPointIndex].fillColor) {\n                  opts.pointFillColor = w.config.series[i].data[dataPointIndex].fillColor;\n                }\n\n                if (w.config.series[i].data[dataPointIndex].strokeColor) {\n                  opts.pointStrokeColor = w.config.series[i].data[dataPointIndex].strokeColor;\n                }\n              }\n\n              if (pSize) {\n                opts.pSize = pSize;\n              }\n\n              point = graphics.drawMarker(p.x[q], p.y[q], opts);\n              point.attr('rel', dataPointIndex);\n              point.attr('j', dataPointIndex);\n              point.attr('index', seriesIndex);\n              point.node.setAttribute('default-marker-size', opts.pSize);\n              var filters = new Filters(this.ctx);\n              filters.setSelectionFilter(point, seriesIndex, dataPointIndex);\n              this.addEvents(point);\n\n              if (elPointsWrap) {\n                elPointsWrap.add(point);\n              }\n            } else {\n              // dynamic array creation - multidimensional\n              if (typeof w.globals.pointsArray[seriesIndex] === 'undefined') w.globals.pointsArray[seriesIndex] = [];\n              w.globals.pointsArray[seriesIndex].push([p.x[q], p.y[q]]);\n            }\n          }\n        }\n\n        return elPointsWrap;\n      }\n    }, {\n      key: \"getMarkerConfig\",\n      value: function getMarkerConfig(_ref) {\n        var cssClass = _ref.cssClass,\n            seriesIndex = _ref.seriesIndex,\n            _ref$dataPointIndex = _ref.dataPointIndex,\n            dataPointIndex = _ref$dataPointIndex === void 0 ? null : _ref$dataPointIndex,\n            _ref$finishRadius = _ref.finishRadius,\n            finishRadius = _ref$finishRadius === void 0 ? null : _ref$finishRadius;\n        var w = this.w;\n        var pStyle = this.getMarkerStyle(seriesIndex);\n        var pSize = w.globals.markers.size[seriesIndex];\n        var m = w.config.markers; // discrete markers is an option where user can specify a particular marker with different shape, size and color\n\n        if (dataPointIndex !== null && m.discrete.length) {\n          m.discrete.map(function (marker) {\n            if (marker.seriesIndex === seriesIndex && marker.dataPointIndex === dataPointIndex) {\n              pStyle.pointStrokeColor = marker.strokeColor;\n              pStyle.pointFillColor = marker.fillColor;\n              pSize = marker.size;\n              pStyle.pointShape = marker.shape;\n            }\n          });\n        }\n\n        return {\n          pSize: finishRadius === null ? pSize : finishRadius,\n          pRadius: m.radius,\n          width: Array.isArray(m.width) ? m.width[seriesIndex] : m.width,\n          height: Array.isArray(m.height) ? m.height[seriesIndex] : m.height,\n          pointStrokeWidth: Array.isArray(m.strokeWidth) ? m.strokeWidth[seriesIndex] : m.strokeWidth,\n          pointStrokeColor: pStyle.pointStrokeColor,\n          pointFillColor: pStyle.pointFillColor,\n          shape: pStyle.pointShape || (Array.isArray(m.shape) ? m.shape[seriesIndex] : m.shape),\n          class: cssClass,\n          pointStrokeOpacity: Array.isArray(m.strokeOpacity) ? m.strokeOpacity[seriesIndex] : m.strokeOpacity,\n          pointStrokeDashArray: Array.isArray(m.strokeDashArray) ? m.strokeDashArray[seriesIndex] : m.strokeDashArray,\n          pointFillOpacity: Array.isArray(m.fillOpacity) ? m.fillOpacity[seriesIndex] : m.fillOpacity,\n          seriesIndex: seriesIndex\n        };\n      }\n    }, {\n      key: \"addEvents\",\n      value: function addEvents(circle) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        circle.node.addEventListener('mouseenter', graphics.pathMouseEnter.bind(this.ctx, circle));\n        circle.node.addEventListener('mouseleave', graphics.pathMouseLeave.bind(this.ctx, circle));\n        circle.node.addEventListener('mousedown', graphics.pathMouseDown.bind(this.ctx, circle));\n        circle.node.addEventListener('click', w.config.markers.onClick);\n        circle.node.addEventListener('dblclick', w.config.markers.onDblClick);\n        circle.node.addEventListener('touchstart', graphics.pathMouseDown.bind(this.ctx, circle), {\n          passive: true\n        });\n      }\n    }, {\n      key: \"getMarkerStyle\",\n      value: function getMarkerStyle(seriesIndex) {\n        var w = this.w;\n        var colors = w.globals.markers.colors;\n        var strokeColors = w.config.markers.strokeColor || w.config.markers.strokeColors;\n        var pointStrokeColor = Array.isArray(strokeColors) ? strokeColors[seriesIndex] : strokeColors;\n        var pointFillColor = Array.isArray(colors) ? colors[seriesIndex] : colors;\n        return {\n          pointStrokeColor: pointStrokeColor,\n          pointFillColor: pointFillColor\n        };\n      }\n    }]);\n\n    return Markers;\n  }();\n\n  /**\n   * ApexCharts Scatter Class.\n   * This Class also handles bubbles chart as currently there is no major difference in drawing them,\n   * @module Scatter\n   **/\n\n  var Scatter = /*#__PURE__*/function () {\n    function Scatter(ctx) {\n      _classCallCheck(this, Scatter);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.initialAnim = this.w.config.chart.animations.enabled;\n      this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;\n    }\n\n    _createClass(Scatter, [{\n      key: \"draw\",\n      value: function draw(elSeries, j, opts) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var realIndex = opts.realIndex;\n        var pointsPos = opts.pointsPos;\n        var zRatio = opts.zRatio;\n        var elPointsMain = opts.elParent;\n        var elPointsWrap = graphics.group({\n          class: \"apexcharts-series-markers apexcharts-series-\".concat(w.config.chart.type)\n        });\n        elPointsWrap.attr('clip-path', \"url(#gridRectMarkerMask\".concat(w.globals.cuid, \")\"));\n\n        if (Array.isArray(pointsPos.x)) {\n          for (var q = 0; q < pointsPos.x.length; q++) {\n            var dataPointIndex = j + 1;\n            var shouldDraw = true; // a small hack as we have 2 points for the first val to connect it\n\n            if (j === 0 && q === 0) dataPointIndex = 0;\n            if (j === 0 && q === 1) dataPointIndex = 1;\n            var radius = 0;\n            var finishRadius = w.globals.markers.size[realIndex];\n\n            if (zRatio !== Infinity) {\n              // means we have a bubble\n              finishRadius = w.globals.seriesZ[realIndex][dataPointIndex] / zRatio;\n              var bubble = w.config.plotOptions.bubble;\n\n              if (bubble.minBubbleRadius && finishRadius < bubble.minBubbleRadius) {\n                finishRadius = bubble.minBubbleRadius;\n              }\n\n              if (bubble.maxBubbleRadius && finishRadius > bubble.maxBubbleRadius) {\n                finishRadius = bubble.maxBubbleRadius;\n              }\n            }\n\n            if (!w.config.chart.animations.enabled) {\n              radius = finishRadius;\n            }\n\n            var x = pointsPos.x[q];\n            var y = pointsPos.y[q];\n            radius = radius || 0;\n\n            if (y === null || typeof w.globals.series[realIndex][dataPointIndex] === 'undefined') {\n              shouldDraw = false;\n            }\n\n            if (shouldDraw) {\n              var point = this.drawPoint(x, y, radius, finishRadius, realIndex, dataPointIndex, j);\n              elPointsWrap.add(point);\n            }\n\n            elPointsMain.add(elPointsWrap);\n          }\n        }\n      }\n    }, {\n      key: \"drawPoint\",\n      value: function drawPoint(x, y, radius, finishRadius, realIndex, dataPointIndex, j) {\n        var w = this.w;\n        var i = realIndex;\n        var anim = new Animations(this.ctx);\n        var filters = new Filters(this.ctx);\n        var fill = new Fill(this.ctx);\n        var markers = new Markers(this.ctx);\n        var graphics = new Graphics(this.ctx);\n        var markerConfig = markers.getMarkerConfig({\n          cssClass: 'apexcharts-marker',\n          seriesIndex: i,\n          dataPointIndex: dataPointIndex,\n          finishRadius: w.config.chart.type === 'bubble' || w.globals.comboCharts && w.config.series[realIndex] && w.config.series[realIndex].type === 'bubble' ? finishRadius : null\n        });\n        finishRadius = markerConfig.pSize;\n        var pathFillCircle = fill.fillPath({\n          seriesNumber: realIndex,\n          dataPointIndex: dataPointIndex,\n          color: markerConfig.pointFillColor,\n          patternUnits: 'objectBoundingBox',\n          value: w.globals.series[realIndex][j]\n        });\n        var el;\n\n        if (markerConfig.shape === 'circle') {\n          el = graphics.drawCircle(radius);\n        } else if (markerConfig.shape === 'square' || markerConfig.shape === 'rect') {\n          el = graphics.drawRect(0, 0, markerConfig.width - markerConfig.pointStrokeWidth / 2, markerConfig.height - markerConfig.pointStrokeWidth / 2, markerConfig.pRadius);\n        }\n\n        if (w.config.series[i].data[dataPointIndex]) {\n          if (w.config.series[i].data[dataPointIndex].fillColor) {\n            pathFillCircle = w.config.series[i].data[dataPointIndex].fillColor;\n          }\n        }\n\n        el.attr({\n          x: x - markerConfig.width / 2 - markerConfig.pointStrokeWidth / 2,\n          y: y - markerConfig.height / 2 - markerConfig.pointStrokeWidth / 2,\n          cx: x,\n          cy: y,\n          fill: pathFillCircle,\n          'fill-opacity': markerConfig.pointFillOpacity,\n          stroke: markerConfig.pointStrokeColor,\n          r: finishRadius,\n          'stroke-width': markerConfig.pointStrokeWidth,\n          'stroke-dasharray': markerConfig.pointStrokeDashArray,\n          'stroke-opacity': markerConfig.pointStrokeOpacity\n        });\n\n        if (w.config.chart.dropShadow.enabled) {\n          var dropShadow = w.config.chart.dropShadow;\n          filters.dropShadow(el, dropShadow, realIndex);\n        }\n\n        if (this.initialAnim && !w.globals.dataChanged && !w.globals.resized) {\n          var speed = w.config.chart.animations.speed;\n          anim.animateMarker(el, 0, markerConfig.shape === 'circle' ? finishRadius : {\n            width: markerConfig.width,\n            height: markerConfig.height\n          }, speed, w.globals.easing, function () {\n            window.setTimeout(function () {\n              anim.animationCompleted(el);\n            }, 100);\n          });\n        } else {\n          w.globals.animationEnded = true;\n        }\n\n        if (w.globals.dataChanged && markerConfig.shape === 'circle') {\n          if (this.dynamicAnim) {\n            var _speed = w.config.chart.animations.dynamicAnimation.speed;\n            var prevX, prevY, prevR;\n            var prevPathJ = null;\n            prevPathJ = w.globals.previousPaths[realIndex] && w.globals.previousPaths[realIndex][j];\n\n            if (typeof prevPathJ !== 'undefined' && prevPathJ !== null) {\n              // series containing less elements will ignore these values and revert to 0\n              prevX = prevPathJ.x;\n              prevY = prevPathJ.y;\n              prevR = typeof prevPathJ.r !== 'undefined' ? prevPathJ.r : finishRadius;\n            }\n\n            for (var cs = 0; cs < w.globals.collapsedSeries.length; cs++) {\n              if (w.globals.collapsedSeries[cs].index === realIndex) {\n                _speed = 1;\n                finishRadius = 0;\n              }\n            }\n\n            if (x === 0 && y === 0) finishRadius = 0;\n            anim.animateCircle(el, {\n              cx: prevX,\n              cy: prevY,\n              r: prevR\n            }, {\n              cx: x,\n              cy: y,\n              r: finishRadius\n            }, _speed, w.globals.easing);\n          } else {\n            el.attr({\n              r: finishRadius\n            });\n          }\n        }\n\n        el.attr({\n          rel: dataPointIndex,\n          j: dataPointIndex,\n          index: realIndex,\n          'default-marker-size': finishRadius\n        });\n        filters.setSelectionFilter(el, realIndex, dataPointIndex);\n        markers.addEvents(el);\n        el.node.classList.add('apexcharts-marker');\n        return el;\n      }\n    }, {\n      key: \"centerTextInBubble\",\n      value: function centerTextInBubble(y) {\n        var w = this.w;\n        y = y + parseInt(w.config.dataLabels.style.fontSize, 10) / 4;\n        return {\n          y: y\n        };\n      }\n    }]);\n\n    return Scatter;\n  }();\n\n  /**\n   * ApexCharts DataLabels Class for drawing dataLabels on Axes based Charts.\n   *\n   * @module DataLabels\n   **/\n\n  var DataLabels = /*#__PURE__*/function () {\n    function DataLabels(ctx) {\n      _classCallCheck(this, DataLabels);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    } // When there are many datalabels to be printed, and some of them overlaps each other in the same series, this method will take care of that\n    // Also, when datalabels exceeds the drawable area and get clipped off, we need to adjust and move some pixels to make them visible again\n\n\n    _createClass(DataLabels, [{\n      key: \"dataLabelsCorrection\",\n      value: function dataLabelsCorrection(x, y, val, i, dataPointIndex, alwaysDrawDataLabel, fontSize) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var drawnextLabel = false; //\n\n        var textRects = graphics.getTextRects(val, fontSize);\n        var width = textRects.width;\n        var height = textRects.height;\n        if (y < 0) y = 0;\n        if (y > w.globals.gridHeight + height) y = w.globals.gridHeight + height / 2; // first value in series, so push an empty array\n\n        if (typeof w.globals.dataLabelsRects[i] === 'undefined') w.globals.dataLabelsRects[i] = []; // then start pushing actual rects in that sub-array\n\n        w.globals.dataLabelsRects[i].push({\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n        var len = w.globals.dataLabelsRects[i].length - 2;\n        var lastDrawnIndex = typeof w.globals.lastDrawnDataLabelsIndexes[i] !== 'undefined' ? w.globals.lastDrawnDataLabelsIndexes[i][w.globals.lastDrawnDataLabelsIndexes[i].length - 1] : 0;\n\n        if (typeof w.globals.dataLabelsRects[i][len] !== 'undefined') {\n          var lastDataLabelRect = w.globals.dataLabelsRects[i][lastDrawnIndex];\n\n          if ( // next label forward and x not intersecting\n          x > lastDataLabelRect.x + lastDataLabelRect.width + 2 || y > lastDataLabelRect.y + lastDataLabelRect.height + 2 || x + width < lastDataLabelRect.x // next label is going to be drawn backwards\n          ) {\n            // the 2 indexes don't override, so OK to draw next label\n            drawnextLabel = true;\n          }\n        }\n\n        if (dataPointIndex === 0 || alwaysDrawDataLabel) {\n          drawnextLabel = true;\n        }\n\n        return {\n          x: x,\n          y: y,\n          textRects: textRects,\n          drawnextLabel: drawnextLabel\n        };\n      }\n    }, {\n      key: \"drawDataLabel\",\n      value: function drawDataLabel(pos, i, j) {\n        var _this = this;\n        var strokeWidth = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 2;\n        // this method handles line, area, bubble, scatter charts as those charts contains markers/points which have pre-defined x/y positions\n        // all other charts like radar / bars / heatmaps will define their own drawDataLabel routine\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var dataLabelsConfig = w.config.dataLabels;\n        var x = 0;\n        var y = 0;\n        var dataPointIndex = j;\n        var elDataLabelsWrap = null;\n\n        if (!dataLabelsConfig.enabled || !Array.isArray(pos.x)) {\n          return elDataLabelsWrap;\n        }\n\n        elDataLabelsWrap = graphics.group({\n          class: 'apexcharts-data-labels'\n        });\n\n        for (var q = 0; q < pos.x.length; q++) {\n          x = pos.x[q] + dataLabelsConfig.offsetX;\n          y = pos.y[q] + dataLabelsConfig.offsetY + strokeWidth;\n\n          if (!isNaN(x)) {\n            // a small hack as we have 2 points for the first val to connect it\n            if (j === 1 && q === 0) dataPointIndex = 0;\n            if (j === 1 && q === 1) dataPointIndex = 1;\n            var val = w.globals.series[i][dataPointIndex];\n            var text = '';\n\n            var getText = function getText(v) {\n              return w.config.dataLabels.formatter(v, {\n                ctx: _this.ctx,\n                seriesIndex: i,\n                dataPointIndex: dataPointIndex,\n                w: w\n              });\n            };\n\n            if (w.config.chart.type === 'bubble') {\n              val = w.globals.seriesZ[i][dataPointIndex];\n              text = getText(val);\n              y = pos.y[q];\n              var scatter = new Scatter(this.ctx);\n              var centerTextInBubbleCoords = scatter.centerTextInBubble(y, i, dataPointIndex);\n              y = centerTextInBubbleCoords.y;\n            } else {\n              if (typeof val !== 'undefined') {\n                text = getText(val);\n              }\n            }\n\n            this.plotDataLabelsText({\n              x: x,\n              y: y,\n              text: text,\n              i: i,\n              j: dataPointIndex,\n              parent: elDataLabelsWrap,\n              offsetCorrection: true,\n              dataLabelsConfig: w.config.dataLabels\n            });\n          }\n        }\n\n        return elDataLabelsWrap;\n      }\n    }, {\n      key: \"plotDataLabelsText\",\n      value: function plotDataLabelsText(opts) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var x = opts.x,\n            y = opts.y,\n            i = opts.i,\n            j = opts.j,\n            text = opts.text,\n            textAnchor = opts.textAnchor,\n            fontSize = opts.fontSize,\n            parent = opts.parent,\n            dataLabelsConfig = opts.dataLabelsConfig,\n            color = opts.color,\n            alwaysDrawDataLabel = opts.alwaysDrawDataLabel,\n            offsetCorrection = opts.offsetCorrection;\n\n        if (Array.isArray(w.config.dataLabels.enabledOnSeries)) {\n          if (w.config.dataLabels.enabledOnSeries.indexOf(i) < 0) {\n            return;\n          }\n        }\n\n        var correctedLabels = {\n          x: x,\n          y: y,\n          drawnextLabel: true,\n          textRects: null\n        };\n\n        if (offsetCorrection) {\n          correctedLabels = this.dataLabelsCorrection(x, y, text, i, j, alwaysDrawDataLabel, parseInt(dataLabelsConfig.style.fontSize, 10));\n        } // when zoomed, we don't need to correct labels offsets,\n        // but if normally, labels get cropped, correct them\n\n\n        if (!w.globals.zoomed) {\n          x = correctedLabels.x;\n          y = correctedLabels.y;\n        }\n\n        if (correctedLabels.textRects) {\n          // fixes #2264\n          if (x < -10 - correctedLabels.textRects.width || x > w.globals.gridWidth + correctedLabels.textRects.width + 10) {\n            // datalabels fall outside drawing area, so draw a blank label\n            text = '';\n          }\n        }\n\n        var dataLabelColor = w.globals.dataLabels.style.colors[i];\n\n        if ((w.config.chart.type === 'bar' || w.config.chart.type === 'rangeBar') && w.config.plotOptions.bar.distributed || w.config.dataLabels.distributed) {\n          dataLabelColor = w.globals.dataLabels.style.colors[j];\n        }\n\n        if (typeof dataLabelColor === 'function') {\n          dataLabelColor = dataLabelColor({\n            series: w.globals.series,\n            seriesIndex: i,\n            dataPointIndex: j,\n            w: w\n          });\n        }\n\n        if (color) {\n          dataLabelColor = color;\n        }\n\n        var offX = dataLabelsConfig.offsetX;\n        var offY = dataLabelsConfig.offsetY;\n\n        if (w.config.chart.type === 'bar' || w.config.chart.type === 'rangeBar') {\n          // for certain chart types, we handle offsets while calculating datalabels pos\n          // why? because bars/column may have negative values and based on that\n          // offsets becomes reversed\n          offX = 0;\n          offY = 0;\n        }\n\n        if (correctedLabels.drawnextLabel) {\n          if (typeof text !== 'undefined' && String(text).trim().length) {\n            var dataLabelText = graphics.drawText({\n              width: 100,\n              height: parseInt(dataLabelsConfig.style.fontSize, 10),\n              x: x + offX,\n              y: y + offY,\n              foreColor: dataLabelColor,\n              textAnchor: textAnchor || dataLabelsConfig.textAnchor,\n              text: text,\n              fontSize: fontSize || dataLabelsConfig.style.fontSize,\n              fontFamily: dataLabelsConfig.style.fontFamily,\n              fontWeight: dataLabelsConfig.style.fontWeight || 'normal'\n            });\n            dataLabelText.attr({\n              class: 'apexcharts-datalabel',\n              cx: x,\n              cy: y\n            });\n\n            if (dataLabelsConfig.dropShadow.enabled) {\n              var textShadow = dataLabelsConfig.dropShadow;\n              var filters = new Filters(this.ctx);\n              filters.dropShadow(dataLabelText, textShadow);\n            }\n\n            parent.add(dataLabelText);\n\n            if (typeof w.globals.lastDrawnDataLabelsIndexes[i] === 'undefined') {\n              w.globals.lastDrawnDataLabelsIndexes[i] = [];\n            }\n\n            w.globals.lastDrawnDataLabelsIndexes[i].push(j);\n          }\n        }\n      }\n    }, {\n      key: \"addBackgroundToDataLabel\",\n      value: function addBackgroundToDataLabel(el, coords) {\n        var w = this.w;\n        var bCnf = w.config.dataLabels.background;\n        var paddingH = bCnf.padding;\n        var paddingV = bCnf.padding / 2;\n        var width = coords.width;\n        var height = coords.height;\n        var graphics = new Graphics(this.ctx);\n        var elRect = graphics.drawRect(coords.x - paddingH, coords.y - paddingV / 2, width + paddingH * 2, height + paddingV, bCnf.borderRadius, w.config.chart.background === 'transparent' ? '#fff' : w.config.chart.background, bCnf.opacity, bCnf.borderWidth, bCnf.borderColor);\n\n        if (bCnf.dropShadow.enabled) {\n          var filters = new Filters(this.ctx);\n          filters.dropShadow(elRect, bCnf.dropShadow);\n        }\n\n        return elRect;\n      }\n    }, {\n      key: \"dataLabelsBackground\",\n      value: function dataLabelsBackground() {\n        var w = this.w;\n        if (w.config.chart.type === 'bubble') return;\n        var elDataLabels = w.globals.dom.baseEl.querySelectorAll('.apexcharts-datalabels text');\n\n        for (var i = 0; i < elDataLabels.length; i++) {\n          var el = elDataLabels[i];\n          var coords = el.getBBox();\n          var elRect = null;\n\n          if (coords.width && coords.height) {\n            elRect = this.addBackgroundToDataLabel(el, coords);\n          }\n\n          if (elRect) {\n            el.parentNode.insertBefore(elRect.node, el);\n            var background = el.getAttribute('fill');\n            var shouldAnim = w.config.chart.animations.enabled && !w.globals.resized && !w.globals.dataChanged;\n\n            if (shouldAnim) {\n              elRect.animate().attr({\n                fill: background\n              });\n            } else {\n              elRect.attr({\n                fill: background\n              });\n            }\n\n            el.setAttribute('fill', w.config.dataLabels.background.foreColor);\n          }\n        }\n      }\n    }, {\n      key: \"bringForward\",\n      value: function bringForward() {\n        var w = this.w;\n        var elDataLabelsNodes = w.globals.dom.baseEl.querySelectorAll('.apexcharts-datalabels');\n        var elSeries = w.globals.dom.baseEl.querySelector('.apexcharts-plot-series:last-child');\n\n        for (var i = 0; i < elDataLabelsNodes.length; i++) {\n          if (elSeries) {\n            elSeries.insertBefore(elDataLabelsNodes[i], elSeries.nextSibling);\n          }\n        }\n      }\n    }]);\n\n    return DataLabels;\n  }();\n\n  var BarDataLabels = /*#__PURE__*/function () {\n    function BarDataLabels(barCtx) {\n      _classCallCheck(this, BarDataLabels);\n\n      this.w = barCtx.w;\n      this.barCtx = barCtx;\n    }\n    /** handleBarDataLabels is used to calculate the positions for the data-labels\n     * It also sets the element's data attr for bars and calls drawCalculatedBarDataLabels()\n     * After calculating, it also calls the function to draw data labels\n     * @memberof Bar\n     * @param {object} {barProps} most of the bar properties used throughout the bar\n     * drawing function\n     * @return {object} dataLabels node-element which you can append later\n     **/\n\n\n    _createClass(BarDataLabels, [{\n      key: \"handleBarDataLabels\",\n      value: function handleBarDataLabels(opts) {\n        var x = opts.x,\n            y = opts.y,\n            y1 = opts.y1,\n            y2 = opts.y2,\n            i = opts.i,\n            j = opts.j,\n            realIndex = opts.realIndex,\n            series = opts.series,\n            barHeight = opts.barHeight,\n            barWidth = opts.barWidth,\n            barYPosition = opts.barYPosition,\n            visibleSeries = opts.visibleSeries,\n            renderedPath = opts.renderedPath;\n        var w = this.w;\n        var graphics = new Graphics(this.barCtx.ctx);\n        var strokeWidth = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[realIndex] : this.barCtx.strokeWidth;\n        var bcx = x + parseFloat(barWidth * visibleSeries);\n        var bcy = y + parseFloat(barHeight * visibleSeries);\n\n        if (w.globals.isXNumeric && !w.globals.isBarHorizontal) {\n          bcx = x + parseFloat(barWidth * (visibleSeries + 1));\n          bcy = y + parseFloat(barHeight * (visibleSeries + 1)) - strokeWidth;\n        }\n\n        var dataLabels = null;\n        var dataLabelsX = x;\n        var dataLabelsY = y;\n        var dataLabelsPos = {};\n        var dataLabelsConfig = w.config.dataLabels;\n        var barDataLabelsConfig = this.barCtx.barOptions.dataLabels;\n\n        if (typeof barYPosition !== 'undefined' && this.barCtx.isRangeBar) {\n          bcy = barYPosition;\n          dataLabelsY = barYPosition;\n        }\n\n        var offX = dataLabelsConfig.offsetX;\n        var offY = dataLabelsConfig.offsetY;\n        var textRects = {\n          width: 0,\n          height: 0\n        };\n\n        if (w.config.dataLabels.enabled) {\n          var yLabel = this.barCtx.series[i][j];\n          textRects = graphics.getTextRects(w.globals.yLabelFormatters[0](yLabel), parseFloat(dataLabelsConfig.style.fontSize));\n        }\n\n        var params = {\n          x: x,\n          y: y,\n          i: i,\n          j: j,\n          renderedPath: renderedPath,\n          bcx: bcx,\n          bcy: bcy,\n          barHeight: barHeight,\n          barWidth: barWidth,\n          textRects: textRects,\n          strokeWidth: strokeWidth,\n          dataLabelsX: dataLabelsX,\n          dataLabelsY: dataLabelsY,\n          barDataLabelsConfig: barDataLabelsConfig,\n          offX: offX,\n          offY: offY\n        };\n\n        if (this.barCtx.isHorizontal) {\n          dataLabelsPos = this.calculateBarsDataLabelsPosition(params);\n        } else {\n          dataLabelsPos = this.calculateColumnsDataLabelsPosition(params);\n        }\n\n        renderedPath.attr({\n          cy: dataLabelsPos.bcy,\n          cx: dataLabelsPos.bcx,\n          j: j,\n          val: series[i][j],\n          barHeight: barHeight,\n          barWidth: barWidth\n        });\n        dataLabels = this.drawCalculatedDataLabels({\n          x: dataLabelsPos.dataLabelsX,\n          y: dataLabelsPos.dataLabelsY,\n          val: this.barCtx.isRangeBar ? [y1, y2] : series[i][j],\n          i: realIndex,\n          j: j,\n          barWidth: barWidth,\n          barHeight: barHeight,\n          textRects: textRects,\n          dataLabelsConfig: dataLabelsConfig\n        });\n        return dataLabels;\n      }\n    }, {\n      key: \"calculateColumnsDataLabelsPosition\",\n      value: function calculateColumnsDataLabelsPosition(opts) {\n        var w = this.w;\n        var i = opts.i,\n            j = opts.j,\n            y = opts.y,\n            bcx = opts.bcx,\n            barWidth = opts.barWidth,\n            barHeight = opts.barHeight,\n            textRects = opts.textRects,\n            dataLabelsY = opts.dataLabelsY,\n            barDataLabelsConfig = opts.barDataLabelsConfig,\n            strokeWidth = opts.strokeWidth,\n            offX = opts.offX,\n            offY = opts.offY;\n        var dataLabelsX;\n        barHeight = Math.abs(barHeight);\n        var vertical = w.config.plotOptions.bar.dataLabels.orientation === 'vertical';\n        bcx = bcx - strokeWidth / 2;\n        var dataPointsDividedWidth = w.globals.gridWidth / w.globals.dataPoints;\n\n        if (w.globals.isXNumeric) {\n          dataLabelsX = bcx - barWidth / 2 + offX;\n        } else {\n          dataLabelsX = bcx - dataPointsDividedWidth + barWidth / 2 + offX;\n        }\n\n        if (vertical) {\n          var offsetDLX = 2;\n          dataLabelsX = dataLabelsX + textRects.height / 2 - strokeWidth / 2 - offsetDLX;\n        }\n\n        var valIsNegative = this.barCtx.series[i][j] < 0;\n        var newY = y;\n\n        if (this.barCtx.isReversed) {\n          newY = y - barHeight + (valIsNegative ? barHeight * 2 : 0);\n          y = y - barHeight;\n        }\n\n        switch (barDataLabelsConfig.position) {\n          case 'center':\n            if (vertical) {\n              if (valIsNegative) {\n                dataLabelsY = newY + barHeight / 2 + offY;\n              } else {\n                dataLabelsY = newY + barHeight / 2 - offY;\n              }\n            } else {\n              if (valIsNegative) {\n                dataLabelsY = newY - barHeight / 2 + textRects.height / 2 + offY;\n              } else {\n                dataLabelsY = newY + barHeight / 2 + textRects.height / 2 - offY;\n              }\n            }\n\n            break;\n\n          case 'bottom':\n            if (vertical) {\n              if (valIsNegative) {\n                dataLabelsY = newY + barHeight + offY;\n              } else {\n                dataLabelsY = newY + barHeight - offY;\n              }\n            } else {\n              if (valIsNegative) {\n                dataLabelsY = newY - barHeight + textRects.height + strokeWidth + offY;\n              } else {\n                dataLabelsY = newY + barHeight - textRects.height / 2 + strokeWidth - offY;\n              }\n            }\n\n            break;\n\n          case 'top':\n            if (vertical) {\n              if (valIsNegative) {\n                dataLabelsY = newY + offY;\n              } else {\n                dataLabelsY = newY - offY;\n              }\n            } else {\n              if (valIsNegative) {\n                dataLabelsY = newY - textRects.height / 2 - offY;\n              } else {\n                dataLabelsY = newY + textRects.height + offY;\n              }\n            }\n\n            break;\n        }\n\n        if (!w.config.chart.stacked) {\n          if (dataLabelsY < 0) {\n            dataLabelsY = 0 + strokeWidth;\n          } else if (dataLabelsY + textRects.height / 3 > w.globals.gridHeight) {\n            dataLabelsY = w.globals.gridHeight - strokeWidth;\n          }\n        }\n\n        return {\n          bcx: bcx,\n          bcy: y,\n          dataLabelsX: dataLabelsX,\n          dataLabelsY: dataLabelsY\n        };\n      }\n    }, {\n      key: \"calculateBarsDataLabelsPosition\",\n      value: function calculateBarsDataLabelsPosition(opts) {\n        var w = this.w;\n        var x = opts.x,\n            i = opts.i,\n            j = opts.j,\n            bcy = opts.bcy,\n            barHeight = opts.barHeight,\n            barWidth = opts.barWidth,\n            textRects = opts.textRects,\n            dataLabelsX = opts.dataLabelsX,\n            strokeWidth = opts.strokeWidth,\n            barDataLabelsConfig = opts.barDataLabelsConfig,\n            offX = opts.offX,\n            offY = opts.offY;\n        var dataPointsDividedHeight = w.globals.gridHeight / w.globals.dataPoints;\n        barWidth = Math.abs(barWidth);\n        var dataLabelsY = bcy - (this.barCtx.isRangeBar ? 0 : dataPointsDividedHeight) + barHeight / 2 + textRects.height / 2 + offY - 3;\n        var valIsNegative = this.barCtx.series[i][j] < 0;\n        var newX = x;\n\n        if (this.barCtx.isReversed) {\n          newX = x + barWidth - (valIsNegative ? barWidth * 2 : 0);\n          x = w.globals.gridWidth - barWidth;\n        }\n\n        switch (barDataLabelsConfig.position) {\n          case 'center':\n            if (valIsNegative) {\n              dataLabelsX = newX + barWidth / 2 - offX;\n            } else {\n              dataLabelsX = Math.max(textRects.width / 2, newX - barWidth / 2) + offX;\n            }\n\n            break;\n\n          case 'bottom':\n            if (valIsNegative) {\n              dataLabelsX = newX + barWidth - strokeWidth - Math.round(textRects.width / 2) - offX;\n            } else {\n              dataLabelsX = newX - barWidth + strokeWidth + Math.round(textRects.width / 2) + offX;\n            }\n\n            break;\n\n          case 'top':\n            if (valIsNegative) {\n              dataLabelsX = newX - strokeWidth + Math.round(textRects.width / 2) - offX;\n            } else {\n              dataLabelsX = newX - strokeWidth - Math.round(textRects.width / 2) + offX;\n            }\n\n            break;\n        }\n\n        if (!w.config.chart.stacked) {\n          if (dataLabelsX < 0) {\n            dataLabelsX = dataLabelsX + textRects.width + strokeWidth;\n          } else if (dataLabelsX + textRects.width / 2 > w.globals.gridWidth) {\n            dataLabelsX = w.globals.gridWidth - textRects.width - strokeWidth;\n          }\n        }\n\n        return {\n          bcx: x,\n          bcy: bcy,\n          dataLabelsX: dataLabelsX,\n          dataLabelsY: dataLabelsY\n        };\n      }\n    }, {\n      key: \"drawCalculatedDataLabels\",\n      value: function drawCalculatedDataLabels(_ref) {\n        var x = _ref.x,\n            y = _ref.y,\n            val = _ref.val,\n            i = _ref.i,\n            j = _ref.j,\n            textRects = _ref.textRects,\n            barHeight = _ref.barHeight,\n            barWidth = _ref.barWidth,\n            dataLabelsConfig = _ref.dataLabelsConfig;\n        var w = this.w;\n        var rotate = 'rotate(0)';\n        if (w.config.plotOptions.bar.dataLabels.orientation === 'vertical') rotate = \"rotate(-90, \".concat(x, \", \").concat(y, \")\");\n        var dataLabels = new DataLabels(this.barCtx.ctx);\n        var graphics = new Graphics(this.barCtx.ctx);\n        var formatter = dataLabelsConfig.formatter;\n        var elDataLabelsWrap = null;\n        var isSeriesNotCollapsed = w.globals.collapsedSeriesIndices.indexOf(i) > -1;\n\n        if (dataLabelsConfig.enabled && !isSeriesNotCollapsed) {\n          elDataLabelsWrap = graphics.group({\n            class: 'apexcharts-data-labels',\n            transform: rotate\n          });\n          var text = '';\n\n          if (typeof val !== 'undefined') {\n            text = formatter(val, {\n              seriesIndex: i,\n              dataPointIndex: j,\n              w: w\n            });\n          }\n\n          var valIsNegative = w.globals.series[i][j] < 0;\n          var position = w.config.plotOptions.bar.dataLabels.position;\n\n          if (w.config.plotOptions.bar.dataLabels.orientation === 'vertical') {\n            if (position === 'top') {\n              if (valIsNegative) dataLabelsConfig.textAnchor = 'end';else dataLabelsConfig.textAnchor = 'start';\n            }\n\n            if (position === 'center') {\n              dataLabelsConfig.textAnchor = 'middle';\n            }\n\n            if (position === 'bottom') {\n              if (valIsNegative) dataLabelsConfig.textAnchor = 'end';else dataLabelsConfig.textAnchor = 'start';\n            }\n          }\n\n          if (this.barCtx.isRangeBar && this.barCtx.barOptions.dataLabels.hideOverflowingLabels) {\n            // hide the datalabel if it cannot fit into the rect\n            var txRect = graphics.getTextRects(text, parseFloat(dataLabelsConfig.style.fontSize));\n\n            if (barWidth < txRect.width) {\n              text = '';\n            }\n          }\n\n          if (w.config.chart.stacked && this.barCtx.barOptions.dataLabels.hideOverflowingLabels) {\n            // if there is not enough space to draw the label in the bar/column rect, check hideOverflowingLabels property to prevent overflowing on wrong rect\n            // Note: This issue is only seen in stacked charts\n            if (this.barCtx.isHorizontal) {\n              if (textRects.width / 1.6 > Math.abs(barWidth)) {\n                text = '';\n              }\n            } else {\n              if (textRects.height / 1.6 > Math.abs(barHeight)) {\n                text = '';\n              }\n            }\n          }\n\n          var modifiedDataLabelsConfig = _objectSpread2({}, dataLabelsConfig);\n\n          if (this.barCtx.isHorizontal) {\n            if (val < 0) {\n              if (dataLabelsConfig.textAnchor === 'start') {\n                modifiedDataLabelsConfig.textAnchor = 'end';\n              } else if (dataLabelsConfig.textAnchor === 'end') {\n                modifiedDataLabelsConfig.textAnchor = 'start';\n              }\n            }\n          }\n\n          dataLabels.plotDataLabelsText({\n            x: x,\n            y: y,\n            text: text,\n            i: i,\n            j: j,\n            parent: elDataLabelsWrap,\n            dataLabelsConfig: modifiedDataLabelsConfig,\n            alwaysDrawDataLabel: true,\n            offsetCorrection: true\n          });\n        }\n\n        return elDataLabelsWrap;\n      }\n    }]);\n\n    return BarDataLabels;\n  }();\n\n  /**\n   * ApexCharts Series Class for interaction with the Series of the chart.\n   *\n   * @module Series\n   **/\n\n  var Series = /*#__PURE__*/function () {\n    function Series(ctx) {\n      _classCallCheck(this, Series);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.legendInactiveClass = 'legend-mouseover-inactive';\n    }\n\n    _createClass(Series, [{\n      key: \"getAllSeriesEls\",\n      value: function getAllSeriesEls() {\n        return this.w.globals.dom.baseEl.getElementsByClassName(\"apexcharts-series\");\n      }\n    }, {\n      key: \"getSeriesByName\",\n      value: function getSeriesByName(seriesName) {\n        return this.w.globals.dom.baseEl.querySelector(\".apexcharts-inner .apexcharts-series[seriesName='\".concat(Utils$1.escapeString(seriesName), \"']\"));\n      }\n    }, {\n      key: \"isSeriesHidden\",\n      value: function isSeriesHidden(seriesName) {\n        var targetElement = this.getSeriesByName(seriesName);\n        var realIndex = parseInt(targetElement.getAttribute('data:realIndex'), 10);\n        var isHidden = targetElement.classList.contains('apexcharts-series-collapsed');\n        return {\n          isHidden: isHidden,\n          realIndex: realIndex\n        };\n      }\n    }, {\n      key: \"addCollapsedClassToSeries\",\n      value: function addCollapsedClassToSeries(elSeries, index) {\n        var w = this.w;\n\n        function iterateOnAllCollapsedSeries(series) {\n          for (var cs = 0; cs < series.length; cs++) {\n            if (series[cs].index === index) {\n              elSeries.node.classList.add('apexcharts-series-collapsed');\n            }\n          }\n        }\n\n        iterateOnAllCollapsedSeries(w.globals.collapsedSeries);\n        iterateOnAllCollapsedSeries(w.globals.ancillaryCollapsedSeries);\n      }\n    }, {\n      key: \"toggleSeries\",\n      value: function toggleSeries(seriesName) {\n        var isSeriesHidden = this.isSeriesHidden(seriesName);\n        this.ctx.legend.legendHelpers.toggleDataSeries(isSeriesHidden.realIndex, isSeriesHidden.isHidden);\n        return isSeriesHidden.isHidden;\n      }\n    }, {\n      key: \"showSeries\",\n      value: function showSeries(seriesName) {\n        var isSeriesHidden = this.isSeriesHidden(seriesName);\n\n        if (isSeriesHidden.isHidden) {\n          this.ctx.legend.legendHelpers.toggleDataSeries(isSeriesHidden.realIndex, true);\n        }\n      }\n    }, {\n      key: \"hideSeries\",\n      value: function hideSeries(seriesName) {\n        var isSeriesHidden = this.isSeriesHidden(seriesName);\n\n        if (!isSeriesHidden.isHidden) {\n          this.ctx.legend.legendHelpers.toggleDataSeries(isSeriesHidden.realIndex, false);\n        }\n      }\n    }, {\n      key: \"resetSeries\",\n      value: function resetSeries() {\n        var shouldUpdateChart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var shouldResetZoom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var shouldResetCollapsed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var w = this.w;\n        var series = Utils$1.clone(w.globals.initialSeries);\n        w.globals.previousPaths = [];\n\n        if (shouldResetCollapsed) {\n          w.globals.collapsedSeries = [];\n          w.globals.ancillaryCollapsedSeries = [];\n          w.globals.collapsedSeriesIndices = [];\n          w.globals.ancillaryCollapsedSeriesIndices = [];\n        } else {\n          series = this.emptyCollapsedSeries(series);\n        }\n\n        w.config.series = series;\n\n        if (shouldUpdateChart) {\n          if (shouldResetZoom) {\n            w.globals.zoomed = false;\n            this.ctx.updateHelpers.revertDefaultAxisMinMax();\n          }\n\n          this.ctx.updateHelpers._updateSeries(series, w.config.chart.animations.dynamicAnimation.enabled);\n        }\n      }\n    }, {\n      key: \"emptyCollapsedSeries\",\n      value: function emptyCollapsedSeries(series) {\n        var w = this.w;\n\n        for (var i = 0; i < series.length; i++) {\n          if (w.globals.collapsedSeriesIndices.indexOf(i) > -1) {\n            series[i].data = [];\n          }\n        }\n\n        return series;\n      }\n    }, {\n      key: \"toggleSeriesOnHover\",\n      value: function toggleSeriesOnHover(e, targetElement) {\n        var w = this.w;\n        if (!targetElement) targetElement = e.target;\n        var allSeriesEls = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-series, .apexcharts-datalabels\");\n\n        if (e.type === 'mousemove') {\n          var seriesCnt = parseInt(targetElement.getAttribute('rel'), 10) - 1;\n          var seriesEl = null;\n          var dataLabelEl = null;\n\n          if (w.globals.axisCharts || w.config.chart.type === 'radialBar') {\n            if (w.globals.axisCharts) {\n              seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[data\\\\:realIndex='\".concat(seriesCnt, \"']\"));\n              dataLabelEl = w.globals.dom.baseEl.querySelector(\".apexcharts-datalabels[data\\\\:realIndex='\".concat(seriesCnt, \"']\"));\n            } else {\n              seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[rel='\".concat(seriesCnt + 1, \"']\"));\n            }\n          } else {\n            seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[rel='\".concat(seriesCnt + 1, \"'] path\"));\n          }\n\n          for (var se = 0; se < allSeriesEls.length; se++) {\n            allSeriesEls[se].classList.add(this.legendInactiveClass);\n          }\n\n          if (seriesEl !== null) {\n            if (!w.globals.axisCharts) {\n              seriesEl.parentNode.classList.remove(this.legendInactiveClass);\n            }\n\n            seriesEl.classList.remove(this.legendInactiveClass);\n\n            if (dataLabelEl !== null) {\n              dataLabelEl.classList.remove(this.legendInactiveClass);\n            }\n          }\n        } else if (e.type === 'mouseout') {\n          for (var _se = 0; _se < allSeriesEls.length; _se++) {\n            allSeriesEls[_se].classList.remove(this.legendInactiveClass);\n          }\n        }\n      }\n    }, {\n      key: \"highlightRangeInSeries\",\n      value: function highlightRangeInSeries(e, targetElement) {\n        var _this = this;\n\n        var w = this.w;\n        var allHeatMapElements = w.globals.dom.baseEl.getElementsByClassName('apexcharts-heatmap-rect');\n\n        var activeInactive = function activeInactive(action) {\n          for (var i = 0; i < allHeatMapElements.length; i++) {\n            allHeatMapElements[i].classList[action](_this.legendInactiveClass);\n          }\n        };\n\n        var removeInactiveClassFromHoveredRange = function removeInactiveClassFromHoveredRange(range) {\n          for (var i = 0; i < allHeatMapElements.length; i++) {\n            var val = parseInt(allHeatMapElements[i].getAttribute('val'), 10);\n\n            if (val >= range.from && val <= range.to) {\n              allHeatMapElements[i].classList.remove(_this.legendInactiveClass);\n            }\n          }\n        };\n\n        if (e.type === 'mousemove') {\n          var seriesCnt = parseInt(targetElement.getAttribute('rel'), 10) - 1;\n          activeInactive('add');\n          var range = w.config.plotOptions.heatmap.colorScale.ranges[seriesCnt];\n          removeInactiveClassFromHoveredRange(range);\n        } else if (e.type === 'mouseout') {\n          activeInactive('remove');\n        }\n      }\n    }, {\n      key: \"getActiveConfigSeriesIndex\",\n      value: function getActiveConfigSeriesIndex() {\n        var ignoreBars = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'asc';\n        var w = this.w;\n        var activeIndex = 0;\n\n        if (w.config.series.length > 1) {\n          // active series flag is required to know if user has not deactivated via legend click\n          var activeSeriesIndex = w.config.series.map(function (s, index) {\n            var hasBars = false;\n\n            if (ignoreBars) {\n              hasBars = w.config.series[index].type === 'bar' || w.config.series[index].type === 'column';\n            }\n\n            return s.data && s.data.length > 0 && !hasBars ? index : -1;\n          });\n\n          for (var a = order === 'asc' ? 0 : activeSeriesIndex.length - 1; order === 'asc' ? a < activeSeriesIndex.length : a >= 0; order === 'asc' ? a++ : a--) {\n            if (activeSeriesIndex[a] !== -1) {\n              activeIndex = activeSeriesIndex[a];\n              break;\n            }\n          }\n        }\n\n        return activeIndex;\n      }\n    }, {\n      key: \"getPreviousPaths\",\n      value: function getPreviousPaths() {\n        var w = this.w;\n        w.globals.previousPaths = [];\n\n        function pushPaths(seriesEls, i, type) {\n          var paths = seriesEls[i].childNodes;\n          var dArr = {\n            type: type,\n            paths: [],\n            realIndex: seriesEls[i].getAttribute('data:realIndex')\n          };\n\n          for (var j = 0; j < paths.length; j++) {\n            if (paths[j].hasAttribute('pathTo')) {\n              var d = paths[j].getAttribute('pathTo');\n              dArr.paths.push({\n                d: d\n              });\n            }\n          }\n\n          w.globals.previousPaths.push(dArr);\n        }\n\n        var getPaths = function getPaths(chartType) {\n          return w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(chartType, \"-series .apexcharts-series\"));\n        };\n\n        var chartTypes = ['line', 'area', 'bar', 'rangebar', 'candlestick', 'radar'];\n        chartTypes.forEach(function (type) {\n          var paths = getPaths(type);\n\n          for (var p = 0; p < paths.length; p++) {\n            pushPaths(paths, p, type);\n          }\n        });\n        this.handlePrevBubbleScatterPaths('bubble');\n        this.handlePrevBubbleScatterPaths('scatter');\n        var heatTreeSeries = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(w.config.chart.type, \" .apexcharts-series\"));\n\n        if (heatTreeSeries.length > 0) {\n          var _loop = function _loop(h) {\n            var seriesEls = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(w.config.chart.type, \" .apexcharts-series[data\\\\:realIndex='\").concat(h, \"'] rect\"));\n            var dArr = [];\n\n            var _loop2 = function _loop2(i) {\n              var getAttr = function getAttr(x) {\n                return seriesEls[i].getAttribute(x);\n              };\n\n              var rect = {\n                x: parseFloat(getAttr('x')),\n                y: parseFloat(getAttr('y')),\n                width: parseFloat(getAttr('width')),\n                height: parseFloat(getAttr('height'))\n              };\n              dArr.push({\n                rect: rect,\n                color: seriesEls[i].getAttribute('color')\n              });\n            };\n\n            for (var i = 0; i < seriesEls.length; i++) {\n              _loop2(i);\n            }\n\n            w.globals.previousPaths.push(dArr);\n          };\n\n          for (var h = 0; h < heatTreeSeries.length; h++) {\n            _loop(h);\n          }\n        }\n\n        if (!w.globals.axisCharts) {\n          // for non-axis charts (i.e., circular charts, pathFrom is not usable. We need whole series)\n          w.globals.previousPaths = w.globals.series;\n        }\n      }\n    }, {\n      key: \"handlePrevBubbleScatterPaths\",\n      value: function handlePrevBubbleScatterPaths(type) {\n        var w = this.w;\n        var paths = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(type, \"-series .apexcharts-series\"));\n\n        if (paths.length > 0) {\n          for (var s = 0; s < paths.length; s++) {\n            var seriesEls = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-\".concat(type, \"-series .apexcharts-series[data\\\\:realIndex='\").concat(s, \"'] circle\"));\n            var dArr = [];\n\n            for (var i = 0; i < seriesEls.length; i++) {\n              dArr.push({\n                x: seriesEls[i].getAttribute('cx'),\n                y: seriesEls[i].getAttribute('cy'),\n                r: seriesEls[i].getAttribute('r')\n              });\n            }\n\n            w.globals.previousPaths.push(dArr);\n          }\n        }\n      }\n    }, {\n      key: \"clearPreviousPaths\",\n      value: function clearPreviousPaths() {\n        var w = this.w;\n        w.globals.previousPaths = [];\n        w.globals.allSeriesCollapsed = false;\n      }\n    }, {\n      key: \"handleNoData\",\n      value: function handleNoData() {\n        var w = this.w;\n        var me = this;\n        var noDataOpts = w.config.noData;\n        var graphics = new Graphics(me.ctx);\n        var x = w.globals.svgWidth / 2;\n        var y = w.globals.svgHeight / 2;\n        var textAnchor = 'middle';\n        w.globals.noData = true;\n        w.globals.animationEnded = true;\n\n        if (noDataOpts.align === 'left') {\n          x = 10;\n          textAnchor = 'start';\n        } else if (noDataOpts.align === 'right') {\n          x = w.globals.svgWidth - 10;\n          textAnchor = 'end';\n        }\n\n        if (noDataOpts.verticalAlign === 'top') {\n          y = 50;\n        } else if (noDataOpts.verticalAlign === 'bottom') {\n          y = w.globals.svgHeight - 50;\n        }\n\n        x = x + noDataOpts.offsetX;\n        y = y + parseInt(noDataOpts.style.fontSize, 10) + 2 + noDataOpts.offsetY;\n\n        if (noDataOpts.text !== undefined && noDataOpts.text !== '') {\n          var titleText = graphics.drawText({\n            x: x,\n            y: y,\n            text: noDataOpts.text,\n            textAnchor: textAnchor,\n            fontSize: noDataOpts.style.fontSize,\n            fontFamily: noDataOpts.style.fontFamily,\n            foreColor: noDataOpts.style.color,\n            opacity: 1,\n            class: 'apexcharts-text-nodata'\n          });\n          w.globals.dom.Paper.add(titleText);\n        }\n      } // When user clicks on legends, the collapsed series is filled with [0,0,0,...,0]\n      // This is because we don't want to alter the series' length as it is used at many places\n\n    }, {\n      key: \"setNullSeriesToZeroValues\",\n      value: function setNullSeriesToZeroValues(series) {\n        var w = this.w;\n\n        for (var sl = 0; sl < series.length; sl++) {\n          if (series[sl].length === 0) {\n            for (var j = 0; j < series[w.globals.maxValsInArrayIndex].length; j++) {\n              series[sl].push(0);\n            }\n          }\n        }\n\n        return series;\n      }\n    }, {\n      key: \"hasAllSeriesEqualX\",\n      value: function hasAllSeriesEqualX() {\n        var equalLen = true;\n        var w = this.w;\n        var filteredSerX = this.filteredSeriesX();\n\n        for (var i = 0; i < filteredSerX.length - 1; i++) {\n          if (filteredSerX[i][0] !== filteredSerX[i + 1][0]) {\n            equalLen = false;\n            break;\n          }\n        }\n\n        w.globals.allSeriesHasEqualX = equalLen;\n        return equalLen;\n      }\n    }, {\n      key: \"filteredSeriesX\",\n      value: function filteredSeriesX() {\n        var w = this.w;\n        var filteredSeriesX = w.globals.seriesX.map(function (ser) {\n          return ser.length > 0 ? ser : [];\n        });\n        return filteredSeriesX;\n      }\n    }]);\n\n    return Series;\n  }();\n\n  var Helpers$3 = /*#__PURE__*/function () {\n    function Helpers(barCtx) {\n      _classCallCheck(this, Helpers);\n\n      this.w = barCtx.w;\n      this.barCtx = barCtx;\n    }\n\n    _createClass(Helpers, [{\n      key: \"initVariables\",\n      value: function initVariables(series) {\n        var w = this.w;\n        this.barCtx.series = series;\n        this.barCtx.totalItems = 0;\n        this.barCtx.seriesLen = 0;\n        this.barCtx.visibleI = -1; // visible Series\n\n        this.barCtx.visibleItems = 1; // number of visible bars after user zoomed in/out\n\n        for (var sl = 0; sl < series.length; sl++) {\n          if (series[sl].length > 0) {\n            this.barCtx.seriesLen = this.barCtx.seriesLen + 1;\n            this.barCtx.totalItems += series[sl].length;\n          }\n\n          if (w.globals.isXNumeric) {\n            // get max visible items\n            for (var j = 0; j < series[sl].length; j++) {\n              if (w.globals.seriesX[sl][j] > w.globals.minX && w.globals.seriesX[sl][j] < w.globals.maxX) {\n                this.barCtx.visibleItems++;\n              }\n            }\n          } else {\n            this.barCtx.visibleItems = w.globals.dataPoints;\n          }\n        }\n\n        if (this.barCtx.seriesLen === 0) {\n          // A small adjustment when combo charts are used\n          this.barCtx.seriesLen = 1;\n        }\n\n        this.barCtx.zeroSerieses = [];\n        this.barCtx.radiusOnSeriesNumber = series.length - 1; // which series to draw ending shape on\n\n        if (!w.globals.comboCharts) {\n          this.checkZeroSeries({\n            series: series\n          });\n        }\n      }\n    }, {\n      key: \"initialPositions\",\n      value: function initialPositions() {\n        var w = this.w;\n        var x, y, yDivision, xDivision, barHeight, barWidth, zeroH, zeroW;\n        var dataPoints = w.globals.dataPoints;\n\n        if (this.barCtx.isRangeBar) {\n          // timeline rangebar chart\n          dataPoints = w.globals.labels.length;\n        }\n\n        var seriesLen = this.barCtx.seriesLen;\n\n        if (w.config.plotOptions.bar.rangeBarGroupRows) {\n          seriesLen = 1;\n        }\n\n        if (this.barCtx.isHorizontal) {\n          // height divided into equal parts\n          yDivision = w.globals.gridHeight / dataPoints;\n          barHeight = yDivision / seriesLen;\n\n          if (w.globals.isXNumeric) {\n            yDivision = w.globals.gridHeight / this.barCtx.totalItems;\n            barHeight = yDivision / this.barCtx.seriesLen;\n          }\n\n          barHeight = barHeight * parseInt(this.barCtx.barOptions.barHeight, 10) / 100;\n          zeroW = this.barCtx.baseLineInvertedY + w.globals.padHorizontal + (this.barCtx.isReversed ? w.globals.gridWidth : 0) - (this.barCtx.isReversed ? this.barCtx.baseLineInvertedY * 2 : 0);\n          y = (yDivision - barHeight * this.barCtx.seriesLen) / 2;\n        } else {\n          // width divided into equal parts\n          xDivision = w.globals.gridWidth / this.barCtx.visibleItems;\n\n          if (w.config.xaxis.convertedCatToNumeric) {\n            xDivision = w.globals.gridWidth / w.globals.dataPoints;\n          }\n\n          barWidth = xDivision / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100;\n\n          if (w.globals.isXNumeric) {\n            // max barwidth should be equal to minXDiff to avoid overlap\n            var xRatio = this.barCtx.xRatio;\n\n            if (w.config.xaxis.convertedCatToNumeric) {\n              xRatio = this.barCtx.initialXRatio;\n            }\n\n            if (w.globals.minXDiff && w.globals.minXDiff !== 0.5 && w.globals.minXDiff / xRatio > 0) {\n              xDivision = w.globals.minXDiff / xRatio;\n            }\n\n            barWidth = xDivision / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100;\n\n            if (barWidth < 1) {\n              barWidth = 1;\n            }\n          }\n\n          zeroH = w.globals.gridHeight - this.barCtx.baseLineY[this.barCtx.yaxisIndex] - (this.barCtx.isReversed ? w.globals.gridHeight : 0) + (this.barCtx.isReversed ? this.barCtx.baseLineY[this.barCtx.yaxisIndex] * 2 : 0);\n          x = w.globals.padHorizontal + (xDivision - barWidth * this.barCtx.seriesLen) / 2;\n        }\n\n        return {\n          x: x,\n          y: y,\n          yDivision: yDivision,\n          xDivision: xDivision,\n          barHeight: barHeight,\n          barWidth: barWidth,\n          zeroH: zeroH,\n          zeroW: zeroW\n        };\n      }\n    }, {\n      key: \"getPathFillColor\",\n      value: function getPathFillColor(series, i, j, realIndex) {\n        var w = this.w;\n        var fill = new Fill(this.barCtx.ctx);\n        var fillColor = null;\n        var seriesNumber = this.barCtx.barOptions.distributed ? j : i;\n\n        if (this.barCtx.barOptions.colors.ranges.length > 0) {\n          var colorRange = this.barCtx.barOptions.colors.ranges;\n          colorRange.map(function (range) {\n            if (series[i][j] >= range.from && series[i][j] <= range.to) {\n              fillColor = range.color;\n            }\n          });\n        }\n\n        if (w.config.series[i].data[j] && w.config.series[i].data[j].fillColor) {\n          fillColor = w.config.series[i].data[j].fillColor;\n        }\n\n        var pathFill = fill.fillPath({\n          seriesNumber: this.barCtx.barOptions.distributed ? seriesNumber : realIndex,\n          dataPointIndex: j,\n          color: fillColor,\n          value: series[i][j]\n        });\n        return pathFill;\n      }\n    }, {\n      key: \"getStrokeWidth\",\n      value: function getStrokeWidth(i, j, realIndex) {\n        var strokeWidth = 0;\n        var w = this.w;\n\n        if (typeof this.barCtx.series[i][j] === 'undefined' || this.barCtx.series[i][j] === null) {\n          this.barCtx.isNullValue = true;\n        } else {\n          this.barCtx.isNullValue = false;\n        }\n\n        if (w.config.stroke.show) {\n          if (!this.barCtx.isNullValue) {\n            strokeWidth = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[realIndex] : this.barCtx.strokeWidth;\n          }\n        }\n\n        return strokeWidth;\n      }\n    }, {\n      key: \"barBackground\",\n      value: function barBackground(_ref) {\n        var j = _ref.j,\n            i = _ref.i,\n            x1 = _ref.x1,\n            x2 = _ref.x2,\n            y1 = _ref.y1,\n            y2 = _ref.y2,\n            elSeries = _ref.elSeries;\n        var w = this.w;\n        var graphics = new Graphics(this.barCtx.ctx);\n        var sr = new Series(this.barCtx.ctx);\n        var activeSeriesIndex = sr.getActiveConfigSeriesIndex();\n\n        if (this.barCtx.barOptions.colors.backgroundBarColors.length > 0 && activeSeriesIndex === i) {\n          if (j >= this.barCtx.barOptions.colors.backgroundBarColors.length) {\n            j -= this.barCtx.barOptions.colors.backgroundBarColors.length;\n          }\n\n          var bcolor = this.barCtx.barOptions.colors.backgroundBarColors[j];\n          var rect = graphics.drawRect(typeof x1 !== 'undefined' ? x1 : 0, typeof y1 !== 'undefined' ? y1 : 0, typeof x2 !== 'undefined' ? x2 : w.globals.gridWidth, typeof y2 !== 'undefined' ? y2 : w.globals.gridHeight, this.barCtx.barOptions.colors.backgroundBarRadius, bcolor, this.barCtx.barOptions.colors.backgroundBarOpacity);\n          elSeries.add(rect);\n          rect.node.classList.add('apexcharts-backgroundBar');\n        }\n      }\n    }, {\n      key: \"getColumnPaths\",\n      value: function getColumnPaths(_ref2) {\n        var barWidth = _ref2.barWidth,\n            barXPosition = _ref2.barXPosition,\n            yRatio = _ref2.yRatio,\n            y1 = _ref2.y1,\n            y2 = _ref2.y2,\n            strokeWidth = _ref2.strokeWidth,\n            series = _ref2.series,\n            realIndex = _ref2.realIndex,\n            i = _ref2.i,\n            j = _ref2.j,\n            w = _ref2.w;\n        var graphics = new Graphics(this.barCtx.ctx);\n        strokeWidth = Array.isArray(strokeWidth) ? strokeWidth[realIndex] : strokeWidth;\n        if (!strokeWidth) strokeWidth = 0;\n        var shapeOpts = {\n          barWidth: barWidth,\n          strokeWidth: strokeWidth,\n          yRatio: yRatio,\n          barXPosition: barXPosition,\n          y1: y1,\n          y2: y2\n        };\n        var newPath = this.getRoundedBars(w, shapeOpts, series, i, j);\n        var x1 = barXPosition;\n        var x2 = barXPosition + barWidth;\n        var pathTo = graphics.move(x1, y1);\n        var pathFrom = graphics.move(x1, y1);\n        var sl = graphics.line(x2 - strokeWidth, y1);\n\n        if (w.globals.previousPaths.length > 0) {\n          pathFrom = this.barCtx.getPreviousPath(realIndex, j, false);\n        }\n\n        pathTo = pathTo + graphics.line(x1, newPath.y2) + newPath.pathWithRadius + graphics.line(x2 - strokeWidth, newPath.y2) + sl + sl + 'z'; // the lines in pathFrom are repeated to equal it to the points of pathTo\n        // this is to avoid weird animation (bug in svg.js)\n\n        pathFrom = pathFrom + graphics.line(x1, y1) + sl + sl + sl + sl + sl + graphics.line(x1, y1);\n\n        if (w.config.chart.stacked) {\n          this.barCtx.yArrj.push(newPath.y2);\n          this.barCtx.yArrjF.push(Math.abs(y1 - newPath.y2));\n          this.barCtx.yArrjVal.push(this.barCtx.series[i][j]);\n        }\n\n        return {\n          pathTo: pathTo,\n          pathFrom: pathFrom\n        };\n      }\n    }, {\n      key: \"getBarpaths\",\n      value: function getBarpaths(_ref3) {\n        var barYPosition = _ref3.barYPosition,\n            barHeight = _ref3.barHeight,\n            x1 = _ref3.x1,\n            x2 = _ref3.x2,\n            strokeWidth = _ref3.strokeWidth,\n            series = _ref3.series,\n            realIndex = _ref3.realIndex,\n            i = _ref3.i,\n            j = _ref3.j,\n            w = _ref3.w;\n        var graphics = new Graphics(this.barCtx.ctx);\n        strokeWidth = Array.isArray(strokeWidth) ? strokeWidth[realIndex] : strokeWidth;\n        if (!strokeWidth) strokeWidth = 0;\n        var shapeOpts = {\n          barHeight: barHeight,\n          strokeWidth: strokeWidth,\n          barYPosition: barYPosition,\n          x2: x2,\n          x1: x1\n        };\n        var newPath = this.getRoundedBars(w, shapeOpts, series, i, j);\n        var pathTo = graphics.move(x1, barYPosition);\n        var pathFrom = graphics.move(x1, barYPosition);\n\n        if (w.globals.previousPaths.length > 0) {\n          pathFrom = this.barCtx.getPreviousPath(realIndex, j, false);\n        }\n\n        var y1 = barYPosition;\n        var y2 = barYPosition + barHeight;\n        var sl = graphics.line(x1, y2 - strokeWidth);\n        pathTo = pathTo + graphics.line(newPath.x2, y1) + newPath.pathWithRadius + graphics.line(newPath.x2, y2 - strokeWidth) + sl + sl + 'z';\n        pathFrom = pathFrom + graphics.line(x1, y1) + sl + sl + sl + sl + sl + graphics.line(x1, y1);\n\n        if (w.config.chart.stacked) {\n          this.barCtx.xArrj.push(newPath.x2);\n          this.barCtx.xArrjF.push(Math.abs(x1 - newPath.x2));\n          this.barCtx.xArrjVal.push(this.barCtx.series[i][j]);\n        }\n\n        return {\n          pathTo: pathTo,\n          pathFrom: pathFrom\n        };\n      }\n      /** getRoundedBars draws border radius for bars/columns\n       * @memberof Bar\n       * @param {object} w - chart context\n       * @param {object} opts - consists several properties like barHeight/barWidth\n       * @param {array} series - global primary series\n       * @param {int} i - current iterating series's index\n       * @param {int} j - series's j of i\n       * @return {object} pathWithRadius - ending shape path string\n       *         newY/newX - which is calculated from existing x/y based on rounded border\n       **/\n\n    }, {\n      key: \"getRoundedBars\",\n      value: function getRoundedBars(w, opts, series, i, j) {\n        var graphics = new Graphics(this.barCtx.ctx);\n        var radius = 0;\n        var borderRadius = w.config.plotOptions.bar.borderRadius;\n        var borderRadiusIsArray = Array.isArray(borderRadius);\n\n        if (borderRadiusIsArray) {\n          var radiusIndex = i > borderRadius.length - 1 ? borderRadius.length - 1 : i;\n          radius = borderRadius[radiusIndex];\n        } else {\n          radius = borderRadius;\n        }\n\n        if (w.config.chart.stacked && series.length > 1 && i !== this.barCtx.radiusOnSeriesNumber && !borderRadiusIsArray) {\n          radius = 0;\n        }\n\n        if (this.barCtx.isHorizontal) {\n          var pathWithRadius = '';\n          var x2 = opts.x2;\n\n          if (Math.abs(opts.x1 - opts.x2) < radius) {\n            radius = Math.abs(opts.x1 - opts.x2);\n          }\n\n          if (typeof series[i][j] !== 'undefined' || series[i][j] !== null) {\n            var inverse = this.barCtx.isReversed ? series[i][j] > 0 : series[i][j] < 0;\n            if (inverse) radius = radius * -1;\n            x2 = x2 - radius;\n            pathWithRadius = graphics.quadraticCurve(x2 + radius, opts.barYPosition, x2 + radius, opts.barYPosition + (!inverse ? radius : radius * -1)) + graphics.line(x2 + radius, opts.barYPosition + opts.barHeight - opts.strokeWidth - (!inverse ? radius : radius * -1)) + graphics.quadraticCurve(x2 + radius, opts.barYPosition + opts.barHeight - opts.strokeWidth, x2, opts.barYPosition + opts.barHeight - opts.strokeWidth);\n          }\n\n          return {\n            pathWithRadius: pathWithRadius,\n            x2: x2\n          };\n        } else {\n          var _pathWithRadius = '';\n          var y2 = opts.y2;\n\n          if (Math.abs(opts.y1 - opts.y2) < radius) {\n            radius = Math.abs(opts.y1 - opts.y2);\n          }\n\n          if (typeof series[i][j] !== 'undefined' || series[i][j] !== null) {\n            var _inverse = series[i][j] < 0;\n\n            if (_inverse) radius = radius * -1;\n            y2 = y2 + radius;\n            _pathWithRadius = graphics.quadraticCurve(opts.barXPosition, y2 - radius, opts.barXPosition + (!_inverse ? radius : radius * -1), y2 - radius) + graphics.line(opts.barXPosition + opts.barWidth - opts.strokeWidth - (!_inverse ? radius : radius * -1), y2 - radius) + graphics.quadraticCurve(opts.barXPosition + opts.barWidth - opts.strokeWidth, y2 - radius, opts.barXPosition + opts.barWidth - opts.strokeWidth, y2);\n          }\n\n          return {\n            pathWithRadius: _pathWithRadius,\n            y2: y2\n          };\n        }\n      }\n    }, {\n      key: \"checkZeroSeries\",\n      value: function checkZeroSeries(_ref4) {\n        var series = _ref4.series;\n        var w = this.w;\n\n        for (var zs = 0; zs < series.length; zs++) {\n          var total = 0;\n\n          for (var zsj = 0; zsj < series[w.globals.maxValsInArrayIndex].length; zsj++) {\n            total += series[zs][zsj];\n          }\n\n          if (total === 0) {\n            this.barCtx.zeroSerieses.push(zs);\n          }\n        } // After getting all zeroserieses, we need to ensure whether radiusOnSeriesNumber is not in that zeroseries array\n\n\n        for (var s = series.length - 1; s >= 0; s--) {\n          if (this.barCtx.zeroSerieses.indexOf(s) > -1 && s === this.radiusOnSeriesNumber) {\n            this.barCtx.radiusOnSeriesNumber -= 1;\n          }\n        }\n\n        for (var _s = series.length - 1; _s >= 0; _s--) {\n          if (w.globals.collapsedSeriesIndices.indexOf(this.barCtx.radiusOnSeriesNumber) > -1) {\n            this.barCtx.radiusOnSeriesNumber -= 1;\n          }\n        }\n      }\n    }, {\n      key: \"getXForValue\",\n      value: function getXForValue(value, zeroW) {\n        var zeroPositionForNull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var xForVal = zeroPositionForNull ? zeroW : null;\n\n        if (typeof value !== 'undefined' && value !== null) {\n          xForVal = zeroW + value / this.barCtx.invertedYRatio - (this.barCtx.isReversed ? value / this.barCtx.invertedYRatio : 0) * 2;\n        }\n\n        return xForVal;\n      }\n    }, {\n      key: \"getYForValue\",\n      value: function getYForValue(value, zeroH) {\n        var zeroPositionForNull = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var yForVal = zeroPositionForNull ? zeroH : null;\n\n        if (typeof value !== 'undefined' && value !== null) {\n          yForVal = zeroH - value / this.barCtx.yRatio[this.barCtx.yaxisIndex] + (this.barCtx.isReversed ? value / this.barCtx.yRatio[this.barCtx.yaxisIndex] : 0) * 2;\n        }\n\n        return yForVal;\n      }\n    }, {\n      key: \"getGoalValues\",\n      value: function getGoalValues(type, zeroW, zeroH, i, j) {\n        var _this = this;\n\n        var w = this.w;\n        var goals = [];\n\n        if (w.globals.seriesGoals[i] && w.globals.seriesGoals[i][j] && Array.isArray(w.globals.seriesGoals[i][j])) {\n          w.globals.seriesGoals[i][j].forEach(function (goal) {\n            var _goals$push;\n\n            goals.push((_goals$push = {}, _defineProperty(_goals$push, type, type === 'x' ? _this.getXForValue(goal.value, zeroW, false) : _this.getYForValue(goal.value, zeroH, false)), _defineProperty(_goals$push, \"attrs\", goal), _goals$push));\n          });\n        }\n\n        return goals;\n      }\n    }, {\n      key: \"drawGoalLine\",\n      value: function drawGoalLine(_ref5) {\n        var barXPosition = _ref5.barXPosition,\n            barYPosition = _ref5.barYPosition,\n            goalX = _ref5.goalX,\n            goalY = _ref5.goalY,\n            barWidth = _ref5.barWidth,\n            barHeight = _ref5.barHeight;\n        var graphics = new Graphics(this.barCtx.ctx);\n        var lineGroup = graphics.group({\n          className: 'apexcharts-bar-goals-groups'\n        });\n        var line = null;\n\n        if (this.barCtx.isHorizontal) {\n          if (Array.isArray(goalX)) {\n            goalX.forEach(function (goal) {\n              var sHeight = typeof goal.attrs.strokeHeight !== 'undefined' ? goal.attrs.strokeHeight : barHeight / 2;\n              var y = barYPosition + sHeight + barHeight / 2;\n              line = graphics.drawLine(goal.x, y - sHeight * 2, goal.x, y, goal.attrs.strokeColor ? goal.attrs.strokeColor : undefined, goal.attrs.strokeDashArray, goal.attrs.strokeWidth ? goal.attrs.strokeWidth : 2, goal.attrs.strokeLineCap);\n              lineGroup.add(line);\n            });\n          }\n        } else {\n          if (Array.isArray(goalY)) {\n            goalY.forEach(function (goal) {\n              var sWidth = typeof goal.attrs.strokeWidth !== 'undefined' ? goal.attrs.strokeWidth : barWidth / 2;\n              var x = barXPosition + sWidth + barWidth / 2;\n              line = graphics.drawLine(x - sWidth * 2, goal.y, x, goal.y, goal.attrs.strokeColor ? goal.attrs.strokeColor : undefined, goal.attrs.strokeDashArray, goal.attrs.strokeHeight ? goal.attrs.strokeHeight : 2, goal.attrs.strokeLineCap);\n              lineGroup.add(line);\n            });\n          }\n        }\n\n        return lineGroup;\n      }\n    }]);\n\n    return Helpers;\n  }();\n\n  /**\n   * ApexCharts Bar Class responsible for drawing both Columns and Bars.\n   *\n   * @module Bar\n   **/\n\n  var Bar = /*#__PURE__*/function () {\n    function Bar(ctx, xyRatios) {\n      _classCallCheck(this, Bar);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.barOptions = w.config.plotOptions.bar;\n      this.isHorizontal = this.barOptions.horizontal;\n      this.strokeWidth = w.config.stroke.width;\n      this.isNullValue = false;\n      this.isRangeBar = w.globals.seriesRangeBar.length && this.isHorizontal;\n      this.xyRatios = xyRatios;\n\n      if (this.xyRatios !== null) {\n        this.xRatio = xyRatios.xRatio;\n        this.initialXRatio = xyRatios.initialXRatio;\n        this.yRatio = xyRatios.yRatio;\n        this.invertedXRatio = xyRatios.invertedXRatio;\n        this.invertedYRatio = xyRatios.invertedYRatio;\n        this.baseLineY = xyRatios.baseLineY;\n        this.baseLineInvertedY = xyRatios.baseLineInvertedY;\n      }\n\n      this.yaxisIndex = 0;\n      this.seriesLen = 0;\n      this.barHelpers = new Helpers$3(this);\n    }\n    /** primary draw method which is called on bar object\n     * @memberof Bar\n     * @param {array} series - user supplied series values\n     * @param {int} seriesIndex - the index by which series will be drawn on the svg\n     * @return {node} element which is supplied to parent chart draw method for appending\n     **/\n\n\n    _createClass(Bar, [{\n      key: \"draw\",\n      value: function draw(series, seriesIndex) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var coreUtils = new CoreUtils(this.ctx, w);\n        series = coreUtils.getLogSeries(series);\n        this.series = series;\n        this.yRatio = coreUtils.getLogYRatios(this.yRatio);\n        this.barHelpers.initVariables(series);\n        var ret = graphics.group({\n          class: 'apexcharts-bar-series apexcharts-plot-series'\n        });\n\n        if (w.config.dataLabels.enabled) {\n          if (this.totalItems > this.barOptions.dataLabels.maxItems) {\n            console.warn('WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.');\n          }\n        }\n\n        for (var i = 0, bc = 0; i < series.length; i++, bc++) {\n          var x = void 0,\n              y = void 0,\n              xDivision = void 0,\n              // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n          yDivision = void 0,\n              // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n          zeroH = void 0,\n              // zeroH is the baseline where 0 meets y axis\n          zeroW = void 0; // zeroW is the baseline where 0 meets x axis\n\n          var yArrj = []; // hold y values of current iterating series\n\n          var xArrj = []; // hold x values of current iterating series\n\n          var realIndex = w.globals.comboCharts ? seriesIndex[i] : i; // el to which series will be drawn\n\n          var elSeries = graphics.group({\n            class: \"apexcharts-series\",\n            rel: i + 1,\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[realIndex]),\n            'data:realIndex': realIndex\n          });\n          this.ctx.series.addCollapsedClassToSeries(elSeries, realIndex);\n\n          if (series[i].length > 0) {\n            this.visibleI = this.visibleI + 1;\n          }\n\n          var barHeight = 0;\n          var barWidth = 0;\n\n          if (this.yRatio.length > 1) {\n            this.yaxisIndex = realIndex;\n          }\n\n          this.isReversed = w.config.yaxis[this.yaxisIndex] && w.config.yaxis[this.yaxisIndex].reversed;\n          var initPositions = this.barHelpers.initialPositions();\n          y = initPositions.y;\n          barHeight = initPositions.barHeight;\n          yDivision = initPositions.yDivision;\n          zeroW = initPositions.zeroW;\n          x = initPositions.x;\n          barWidth = initPositions.barWidth;\n          xDivision = initPositions.xDivision;\n          zeroH = initPositions.zeroH;\n\n          if (!this.horizontal) {\n            xArrj.push(x + barWidth / 2);\n          } // eldatalabels\n\n\n          var elDataLabelsWrap = graphics.group({\n            class: 'apexcharts-datalabels',\n            'data:realIndex': realIndex\n          });\n          var elGoalsMarkers = graphics.group({\n            class: 'apexcharts-bar-goals-markers',\n            style: \"pointer-events: none\"\n          });\n\n          for (var j = 0; j < w.globals.dataPoints; j++) {\n            var strokeWidth = this.barHelpers.getStrokeWidth(i, j, realIndex);\n            var paths = null;\n            var pathsParams = {\n              indexes: {\n                i: i,\n                j: j,\n                realIndex: realIndex,\n                bc: bc\n              },\n              x: x,\n              y: y,\n              strokeWidth: strokeWidth,\n              elSeries: elSeries\n            };\n\n            if (this.isHorizontal) {\n              paths = this.drawBarPaths(_objectSpread2(_objectSpread2({}, pathsParams), {}, {\n                barHeight: barHeight,\n                zeroW: zeroW,\n                yDivision: yDivision\n              }));\n              barWidth = this.series[i][j] / this.invertedYRatio;\n            } else {\n              paths = this.drawColumnPaths(_objectSpread2(_objectSpread2({}, pathsParams), {}, {\n                xDivision: xDivision,\n                barWidth: barWidth,\n                zeroH: zeroH\n              }));\n              barHeight = this.series[i][j] / this.yRatio[this.yaxisIndex];\n            }\n\n            var barGoalLine = this.barHelpers.drawGoalLine({\n              barXPosition: paths.barXPosition,\n              barYPosition: paths.barYPosition,\n              goalX: paths.goalX,\n              goalY: paths.goalY,\n              barHeight: barHeight,\n              barWidth: barWidth\n            });\n\n            if (barGoalLine) {\n              elGoalsMarkers.add(barGoalLine);\n            }\n\n            y = paths.y;\n            x = paths.x; // push current X\n\n            if (j > 0) {\n              xArrj.push(x + barWidth / 2);\n            }\n\n            yArrj.push(y);\n            var pathFill = this.barHelpers.getPathFillColor(series, i, j, realIndex);\n            this.renderSeries({\n              realIndex: realIndex,\n              pathFill: pathFill,\n              j: j,\n              i: i,\n              pathFrom: paths.pathFrom,\n              pathTo: paths.pathTo,\n              strokeWidth: strokeWidth,\n              elSeries: elSeries,\n              x: x,\n              y: y,\n              series: series,\n              barHeight: barHeight,\n              barWidth: barWidth,\n              elDataLabelsWrap: elDataLabelsWrap,\n              elGoalsMarkers: elGoalsMarkers,\n              visibleSeries: this.visibleI,\n              type: 'bar'\n            });\n          } // push all x val arrays into main xArr\n\n\n          w.globals.seriesXvalues[realIndex] = xArrj;\n          w.globals.seriesYvalues[realIndex] = yArrj;\n          ret.add(elSeries);\n        }\n\n        return ret;\n      }\n    }, {\n      key: \"renderSeries\",\n      value: function renderSeries(_ref) {\n        var realIndex = _ref.realIndex,\n            pathFill = _ref.pathFill,\n            lineFill = _ref.lineFill,\n            j = _ref.j,\n            i = _ref.i,\n            pathFrom = _ref.pathFrom,\n            pathTo = _ref.pathTo,\n            strokeWidth = _ref.strokeWidth,\n            elSeries = _ref.elSeries,\n            x = _ref.x,\n            y = _ref.y,\n            y1 = _ref.y1,\n            y2 = _ref.y2,\n            series = _ref.series,\n            barHeight = _ref.barHeight,\n            barWidth = _ref.barWidth,\n            barYPosition = _ref.barYPosition,\n            elDataLabelsWrap = _ref.elDataLabelsWrap,\n            elGoalsMarkers = _ref.elGoalsMarkers,\n            visibleSeries = _ref.visibleSeries,\n            type = _ref.type;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n\n        if (!lineFill) {\n          /* fix apexcharts#341 */\n          lineFill = this.barOptions.distributed ? w.globals.stroke.colors[j] : w.globals.stroke.colors[realIndex];\n        }\n\n        if (w.config.series[i].data[j] && w.config.series[i].data[j].strokeColor) {\n          lineFill = w.config.series[i].data[j].strokeColor;\n        }\n\n        if (this.isNullValue) {\n          pathFill = 'none';\n        }\n\n        var delay = j / w.config.chart.animations.animateGradually.delay * (w.config.chart.animations.speed / w.globals.dataPoints) / 2.4;\n        var renderedPath = graphics.renderPaths({\n          i: i,\n          j: j,\n          realIndex: realIndex,\n          pathFrom: pathFrom,\n          pathTo: pathTo,\n          stroke: lineFill,\n          strokeWidth: strokeWidth,\n          strokeLineCap: w.config.stroke.lineCap,\n          fill: pathFill,\n          animationDelay: delay,\n          initialSpeed: w.config.chart.animations.speed,\n          dataChangeSpeed: w.config.chart.animations.dynamicAnimation.speed,\n          className: \"apexcharts-\".concat(type, \"-area\")\n        });\n        renderedPath.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\"));\n        var forecast = w.config.forecastDataPoints;\n\n        if (forecast.count > 0) {\n          if (j >= w.globals.dataPoints - forecast.count) {\n            renderedPath.node.setAttribute('stroke-dasharray', forecast.dashArray);\n            renderedPath.node.setAttribute('stroke-width', forecast.strokeWidth);\n            renderedPath.node.setAttribute('fill-opacity', forecast.fillOpacity);\n          }\n        }\n\n        if (typeof y1 !== 'undefined' && typeof y2 !== 'undefined') {\n          renderedPath.attr('data-range-y1', y1);\n          renderedPath.attr('data-range-y2', y2);\n        }\n\n        var filters = new Filters(this.ctx);\n        filters.setSelectionFilter(renderedPath, realIndex, j);\n        elSeries.add(renderedPath);\n        var barDataLabels = new BarDataLabels(this);\n        var dataLabels = barDataLabels.handleBarDataLabels({\n          x: x,\n          y: y,\n          y1: y1,\n          y2: y2,\n          i: i,\n          j: j,\n          series: series,\n          realIndex: realIndex,\n          barHeight: barHeight,\n          barWidth: barWidth,\n          barYPosition: barYPosition,\n          renderedPath: renderedPath,\n          visibleSeries: visibleSeries\n        });\n\n        if (dataLabels !== null) {\n          elDataLabelsWrap.add(dataLabels);\n        }\n\n        elSeries.add(elDataLabelsWrap);\n\n        if (elGoalsMarkers) {\n          elSeries.add(elGoalsMarkers);\n        }\n\n        return elSeries;\n      }\n    }, {\n      key: \"drawBarPaths\",\n      value: function drawBarPaths(_ref2) {\n        var indexes = _ref2.indexes,\n            barHeight = _ref2.barHeight,\n            strokeWidth = _ref2.strokeWidth,\n            zeroW = _ref2.zeroW,\n            x = _ref2.x,\n            y = _ref2.y,\n            yDivision = _ref2.yDivision,\n            elSeries = _ref2.elSeries;\n        var w = this.w;\n        var i = indexes.i;\n        var j = indexes.j;\n\n        if (w.globals.isXNumeric) {\n          y = (w.globals.seriesX[i][j] - w.globals.minX) / this.invertedXRatio - barHeight;\n        }\n\n        var barYPosition = y + barHeight * this.visibleI;\n        x = this.barHelpers.getXForValue(this.series[i][j], zeroW);\n        var paths = this.barHelpers.getBarpaths({\n          barYPosition: barYPosition,\n          barHeight: barHeight,\n          x1: zeroW,\n          x2: x,\n          strokeWidth: strokeWidth,\n          series: this.series,\n          realIndex: indexes.realIndex,\n          i: i,\n          j: j,\n          w: w\n        });\n\n        if (!w.globals.isXNumeric) {\n          y = y + yDivision;\n        }\n\n        this.barHelpers.barBackground({\n          j: j,\n          i: i,\n          y1: barYPosition - barHeight * this.visibleI,\n          y2: barHeight * this.seriesLen,\n          elSeries: elSeries\n        });\n        return {\n          pathTo: paths.pathTo,\n          pathFrom: paths.pathFrom,\n          x: x,\n          y: y,\n          goalX: this.barHelpers.getGoalValues('x', zeroW, null, i, j),\n          barYPosition: barYPosition\n        };\n      }\n    }, {\n      key: \"drawColumnPaths\",\n      value: function drawColumnPaths(_ref3) {\n        var indexes = _ref3.indexes,\n            x = _ref3.x,\n            y = _ref3.y,\n            xDivision = _ref3.xDivision,\n            barWidth = _ref3.barWidth,\n            zeroH = _ref3.zeroH,\n            strokeWidth = _ref3.strokeWidth,\n            elSeries = _ref3.elSeries;\n        var w = this.w;\n        var realIndex = indexes.realIndex;\n        var i = indexes.i;\n        var j = indexes.j;\n        var bc = indexes.bc;\n\n        if (w.globals.isXNumeric) {\n          var sxI = realIndex;\n\n          if (!w.globals.seriesX[realIndex].length) {\n            sxI = w.globals.maxValsInArrayIndex;\n          }\n\n          x = (w.globals.seriesX[sxI][j] - w.globals.minX) / this.xRatio - barWidth * this.seriesLen / 2;\n        }\n\n        var barXPosition = x + barWidth * this.visibleI;\n        y = this.barHelpers.getYForValue(this.series[i][j], zeroH);\n        var paths = this.barHelpers.getColumnPaths({\n          barXPosition: barXPosition,\n          barWidth: barWidth,\n          y1: zeroH,\n          y2: y,\n          strokeWidth: strokeWidth,\n          series: this.series,\n          realIndex: indexes.realIndex,\n          i: i,\n          j: j,\n          w: w\n        });\n\n        if (!w.globals.isXNumeric) {\n          x = x + xDivision;\n        }\n\n        this.barHelpers.barBackground({\n          bc: bc,\n          j: j,\n          i: i,\n          x1: barXPosition - strokeWidth / 2 - barWidth * this.visibleI,\n          x2: barWidth * this.seriesLen + strokeWidth / 2,\n          elSeries: elSeries\n        });\n        return {\n          pathTo: paths.pathTo,\n          pathFrom: paths.pathFrom,\n          x: x,\n          y: y,\n          goalY: this.barHelpers.getGoalValues('y', null, zeroH, i, j),\n          barXPosition: barXPosition\n        };\n      }\n      /** getPreviousPath is a common function for bars/columns which is used to get previous paths when data changes.\n       * @memberof Bar\n       * @param {int} realIndex - current iterating i\n       * @param {int} j - current iterating series's j index\n       * @return {string} pathFrom is the string which will be appended in animations\n       **/\n\n    }, {\n      key: \"getPreviousPath\",\n      value: function getPreviousPath(realIndex, j) {\n        var w = this.w;\n        var pathFrom;\n\n        for (var pp = 0; pp < w.globals.previousPaths.length; pp++) {\n          var gpp = w.globals.previousPaths[pp];\n\n          if (gpp.paths && gpp.paths.length > 0 && parseInt(gpp.realIndex, 10) === parseInt(realIndex, 10)) {\n            if (typeof w.globals.previousPaths[pp].paths[j] !== 'undefined') {\n              pathFrom = w.globals.previousPaths[pp].paths[j].d;\n            }\n          }\n        }\n\n        return pathFrom;\n      }\n    }]);\n\n    return Bar;\n  }();\n\n  /**\n   * DateTime Class to manipulate datetime values.\n   *\n   * @module DateTime\n   **/\n\n  var DateTime = /*#__PURE__*/function () {\n    function DateTime(ctx) {\n      _classCallCheck(this, DateTime);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.months31 = [1, 3, 5, 7, 8, 10, 12];\n      this.months30 = [2, 4, 6, 9, 11];\n      this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n    }\n\n    _createClass(DateTime, [{\n      key: \"isValidDate\",\n      value: function isValidDate(date) {\n        return !isNaN(this.parseDate(date));\n      }\n    }, {\n      key: \"getTimeStamp\",\n      value: function getTimeStamp(dateStr) {\n        if (!Date.parse(dateStr)) {\n          return dateStr;\n        }\n\n        var utc = this.w.config.xaxis.labels.datetimeUTC;\n        return !utc ? new Date(dateStr).getTime() : new Date(new Date(dateStr).toISOString().substr(0, 25)).getTime();\n      }\n    }, {\n      key: \"getDate\",\n      value: function getDate(timestamp) {\n        var utc = this.w.config.xaxis.labels.datetimeUTC;\n        return utc ? new Date(new Date(timestamp).toUTCString()) : new Date(timestamp);\n      }\n    }, {\n      key: \"parseDate\",\n      value: function parseDate(dateStr) {\n        var parsed = Date.parse(dateStr);\n\n        if (!isNaN(parsed)) {\n          return this.getTimeStamp(dateStr);\n        }\n\n        var output = Date.parse(dateStr.replace(/-/g, '/').replace(/[a-z]+/gi, ' '));\n        output = this.getTimeStamp(output);\n        return output;\n      } // This fixes the difference of x-axis labels between chrome/safari\n      // Fixes #1726, #1544, #1485, #1255\n\n    }, {\n      key: \"parseDateWithTimezone\",\n      value: function parseDateWithTimezone(dateStr) {\n        return Date.parse(dateStr.replace(/-/g, '/').replace(/[a-z]+/gi, ' '));\n      } // http://stackoverflow.com/questions/14638018/current-time-formatting-with-javascript#answer-14638191\n\n    }, {\n      key: \"formatDate\",\n      value: function formatDate(date, format) {\n        var locale = this.w.globals.locale;\n        var utc = this.w.config.xaxis.labels.datetimeUTC;\n        var MMMM = ['\\x00'].concat(_toConsumableArray(locale.months));\n        var MMM = ['\\x01'].concat(_toConsumableArray(locale.shortMonths));\n        var dddd = ['\\x02'].concat(_toConsumableArray(locale.days));\n        var ddd = ['\\x03'].concat(_toConsumableArray(locale.shortDays));\n\n        function ii(i, len) {\n          var s = i + '';\n          len = len || 2;\n\n          while (s.length < len) {\n            s = '0' + s;\n          }\n\n          return s;\n        }\n\n        var y = utc ? date.getUTCFullYear() : date.getFullYear();\n        format = format.replace(/(^|[^\\\\])yyyy+/g, '$1' + y);\n        format = format.replace(/(^|[^\\\\])yy/g, '$1' + y.toString().substr(2, 2));\n        format = format.replace(/(^|[^\\\\])y/g, '$1' + y);\n        var M = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n        format = format.replace(/(^|[^\\\\])MMMM+/g, '$1' + MMMM[0]);\n        format = format.replace(/(^|[^\\\\])MMM/g, '$1' + MMM[0]);\n        format = format.replace(/(^|[^\\\\])MM/g, '$1' + ii(M));\n        format = format.replace(/(^|[^\\\\])M/g, '$1' + M);\n        var d = utc ? date.getUTCDate() : date.getDate();\n        format = format.replace(/(^|[^\\\\])dddd+/g, '$1' + dddd[0]);\n        format = format.replace(/(^|[^\\\\])ddd/g, '$1' + ddd[0]);\n        format = format.replace(/(^|[^\\\\])dd/g, '$1' + ii(d));\n        format = format.replace(/(^|[^\\\\])d/g, '$1' + d);\n        var H = utc ? date.getUTCHours() : date.getHours();\n        format = format.replace(/(^|[^\\\\])HH+/g, '$1' + ii(H));\n        format = format.replace(/(^|[^\\\\])H/g, '$1' + H);\n        var h = H > 12 ? H - 12 : H === 0 ? 12 : H;\n        format = format.replace(/(^|[^\\\\])hh+/g, '$1' + ii(h));\n        format = format.replace(/(^|[^\\\\])h/g, '$1' + h);\n        var m = utc ? date.getUTCMinutes() : date.getMinutes();\n        format = format.replace(/(^|[^\\\\])mm+/g, '$1' + ii(m));\n        format = format.replace(/(^|[^\\\\])m/g, '$1' + m);\n        var s = utc ? date.getUTCSeconds() : date.getSeconds();\n        format = format.replace(/(^|[^\\\\])ss+/g, '$1' + ii(s));\n        format = format.replace(/(^|[^\\\\])s/g, '$1' + s);\n        var f = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n        format = format.replace(/(^|[^\\\\])fff+/g, '$1' + ii(f, 3));\n        f = Math.round(f / 10);\n        format = format.replace(/(^|[^\\\\])ff/g, '$1' + ii(f));\n        f = Math.round(f / 10);\n        format = format.replace(/(^|[^\\\\])f/g, '$1' + f);\n        var T = H < 12 ? 'AM' : 'PM';\n        format = format.replace(/(^|[^\\\\])TT+/g, '$1' + T);\n        format = format.replace(/(^|[^\\\\])T/g, '$1' + T.charAt(0));\n        var t = T.toLowerCase();\n        format = format.replace(/(^|[^\\\\])tt+/g, '$1' + t);\n        format = format.replace(/(^|[^\\\\])t/g, '$1' + t.charAt(0));\n        var tz = -date.getTimezoneOffset();\n        var K = utc || !tz ? 'Z' : tz > 0 ? '+' : '-';\n\n        if (!utc) {\n          tz = Math.abs(tz);\n          var tzHrs = Math.floor(tz / 60);\n          var tzMin = tz % 60;\n          K += ii(tzHrs) + ':' + ii(tzMin);\n        }\n\n        format = format.replace(/(^|[^\\\\])K/g, '$1' + K);\n        var day = (utc ? date.getUTCDay() : date.getDay()) + 1;\n        format = format.replace(new RegExp(dddd[0], 'g'), dddd[day]);\n        format = format.replace(new RegExp(ddd[0], 'g'), ddd[day]);\n        format = format.replace(new RegExp(MMMM[0], 'g'), MMMM[M]);\n        format = format.replace(new RegExp(MMM[0], 'g'), MMM[M]);\n        format = format.replace(/\\\\(.)/g, '$1');\n        return format;\n      }\n    }, {\n      key: \"getTimeUnitsfromTimestamp\",\n      value: function getTimeUnitsfromTimestamp(minX, maxX, utc) {\n        var w = this.w;\n\n        if (w.config.xaxis.min !== undefined) {\n          minX = w.config.xaxis.min;\n        }\n\n        if (w.config.xaxis.max !== undefined) {\n          maxX = w.config.xaxis.max;\n        }\n\n        var tsMin = this.getDate(minX);\n        var tsMax = this.getDate(maxX);\n        var minD = this.formatDate(tsMin, 'yyyy MM dd HH mm ss fff').split(' ');\n        var maxD = this.formatDate(tsMax, 'yyyy MM dd HH mm ss fff').split(' ');\n        return {\n          minMillisecond: parseInt(minD[6], 10),\n          maxMillisecond: parseInt(maxD[6], 10),\n          minSecond: parseInt(minD[5], 10),\n          maxSecond: parseInt(maxD[5], 10),\n          minMinute: parseInt(minD[4], 10),\n          maxMinute: parseInt(maxD[4], 10),\n          minHour: parseInt(minD[3], 10),\n          maxHour: parseInt(maxD[3], 10),\n          minDate: parseInt(minD[2], 10),\n          maxDate: parseInt(maxD[2], 10),\n          minMonth: parseInt(minD[1], 10) - 1,\n          maxMonth: parseInt(maxD[1], 10) - 1,\n          minYear: parseInt(minD[0], 10),\n          maxYear: parseInt(maxD[0], 10)\n        };\n      }\n    }, {\n      key: \"isLeapYear\",\n      value: function isLeapYear(year) {\n        return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n      }\n    }, {\n      key: \"calculcateLastDaysOfMonth\",\n      value: function calculcateLastDaysOfMonth(month, year, subtract) {\n        var days = this.determineDaysOfMonths(month, year); // whatever days we get, subtract the number of days asked\n\n        return days - subtract;\n      }\n    }, {\n      key: \"determineDaysOfYear\",\n      value: function determineDaysOfYear(year) {\n        var days = 365;\n\n        if (this.isLeapYear(year)) {\n          days = 366;\n        }\n\n        return days;\n      }\n    }, {\n      key: \"determineRemainingDaysOfYear\",\n      value: function determineRemainingDaysOfYear(year, month, date) {\n        var dayOfYear = this.daysCntOfYear[month] + date;\n        if (month > 1 && this.isLeapYear()) dayOfYear++;\n        return dayOfYear;\n      }\n    }, {\n      key: \"determineDaysOfMonths\",\n      value: function determineDaysOfMonths(month, year) {\n        var days = 30;\n        month = Utils$1.monthMod(month);\n\n        switch (true) {\n          case this.months30.indexOf(month) > -1:\n            if (month === 2) {\n              if (this.isLeapYear(year)) {\n                days = 29;\n              } else {\n                days = 28;\n              }\n            }\n\n            break;\n\n          case this.months31.indexOf(month) > -1:\n            days = 31;\n            break;\n\n          default:\n            days = 31;\n            break;\n        }\n\n        return days;\n      }\n    }]);\n\n    return DateTime;\n  }();\n\n  /**\n   * ApexCharts RangeBar Class responsible for drawing Range/Timeline Bars.\n   *\n   * @module RangeBar\n   **/\n\n  var RangeBar = /*#__PURE__*/function (_Bar) {\n    _inherits(RangeBar, _Bar);\n\n    var _super = _createSuper(RangeBar);\n\n    function RangeBar() {\n      _classCallCheck(this, RangeBar);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(RangeBar, [{\n      key: \"draw\",\n      value: function draw(series, seriesIndex) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        this.rangeBarOptions = this.w.config.plotOptions.rangeBar;\n        this.series = series;\n        this.seriesRangeStart = w.globals.seriesRangeStart;\n        this.seriesRangeEnd = w.globals.seriesRangeEnd;\n        this.barHelpers.initVariables(series);\n        var ret = graphics.group({\n          class: 'apexcharts-rangebar-series apexcharts-plot-series'\n        });\n\n        for (var i = 0; i < series.length; i++) {\n          var x = void 0,\n              y = void 0,\n              xDivision = void 0,\n              // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n          yDivision = void 0,\n              // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n          zeroH = void 0,\n              // zeroH is the baseline where 0 meets y axis\n          zeroW = void 0; // zeroW is the baseline where 0 meets x axis\n\n          var realIndex = w.globals.comboCharts ? seriesIndex[i] : i; // el to which series will be drawn\n\n          var elSeries = graphics.group({\n            class: \"apexcharts-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[realIndex]),\n            rel: i + 1,\n            'data:realIndex': realIndex\n          });\n          this.ctx.series.addCollapsedClassToSeries(elSeries, realIndex);\n\n          if (series[i].length > 0) {\n            this.visibleI = this.visibleI + 1;\n          }\n\n          var barHeight = 0;\n          var barWidth = 0;\n\n          if (this.yRatio.length > 1) {\n            this.yaxisIndex = realIndex;\n          }\n\n          var initPositions = this.barHelpers.initialPositions();\n          y = initPositions.y;\n          zeroW = initPositions.zeroW;\n          x = initPositions.x;\n          barWidth = initPositions.barWidth;\n          xDivision = initPositions.xDivision;\n          zeroH = initPositions.zeroH; // eldatalabels\n\n          var elDataLabelsWrap = graphics.group({\n            class: 'apexcharts-datalabels',\n            'data:realIndex': realIndex\n          });\n          var elGoalsMarkers = graphics.group({\n            class: 'apexcharts-rangebar-goals-markers',\n            style: \"pointer-events: none\"\n          });\n\n          for (var j = 0; j < w.globals.dataPoints; j++) {\n            var strokeWidth = this.barHelpers.getStrokeWidth(i, j, realIndex);\n            var y1 = this.seriesRangeStart[i][j];\n            var y2 = this.seriesRangeEnd[i][j];\n            var paths = null;\n            var barYPosition = null;\n            var params = {\n              x: x,\n              y: y,\n              strokeWidth: strokeWidth,\n              elSeries: elSeries\n            };\n            yDivision = initPositions.yDivision;\n            barHeight = initPositions.barHeight;\n\n            if (this.isHorizontal) {\n              barYPosition = y + barHeight * this.visibleI;\n              var seriesLen = this.seriesLen;\n\n              if (w.config.plotOptions.bar.rangeBarGroupRows) {\n                seriesLen = 1;\n              }\n\n              var srty = (yDivision - barHeight * seriesLen) / 2;\n\n              if (typeof w.config.series[i].data[j] === 'undefined') {\n                // no data exists for further indexes, hence we need to get out the innr loop.\n                // As we are iterating over total datapoints, there is a possiblity the series might not have data for j index\n                break;\n              }\n\n              if (w.config.series[i].data[j].x) {\n                var positions = this.detectOverlappingBars({\n                  i: i,\n                  j: j,\n                  barYPosition: barYPosition,\n                  srty: srty,\n                  barHeight: barHeight,\n                  yDivision: yDivision,\n                  initPositions: initPositions\n                });\n                barHeight = positions.barHeight;\n                barYPosition = positions.barYPosition;\n              }\n\n              paths = this.drawRangeBarPaths(_objectSpread2({\n                indexes: {\n                  i: i,\n                  j: j,\n                  realIndex: realIndex\n                },\n                barHeight: barHeight,\n                barYPosition: barYPosition,\n                zeroW: zeroW,\n                yDivision: yDivision,\n                y1: y1,\n                y2: y2\n              }, params));\n              barWidth = paths.barWidth;\n            } else {\n              paths = this.drawRangeColumnPaths(_objectSpread2({\n                indexes: {\n                  i: i,\n                  j: j,\n                  realIndex: realIndex\n                },\n                zeroH: zeroH,\n                barWidth: barWidth,\n                xDivision: xDivision\n              }, params));\n              barHeight = paths.barHeight;\n            }\n\n            var barGoalLine = this.barHelpers.drawGoalLine({\n              barXPosition: paths.barXPosition,\n              barYPosition: barYPosition,\n              goalX: paths.goalX,\n              goalY: paths.goalY,\n              barHeight: barHeight,\n              barWidth: barWidth\n            });\n\n            if (barGoalLine) {\n              elGoalsMarkers.add(barGoalLine);\n            }\n\n            y = paths.y;\n            x = paths.x;\n            var pathFill = this.barHelpers.getPathFillColor(series, i, j, realIndex);\n            var lineFill = w.globals.stroke.colors[realIndex];\n            this.renderSeries({\n              realIndex: realIndex,\n              pathFill: pathFill,\n              lineFill: lineFill,\n              j: j,\n              i: i,\n              x: x,\n              y: y,\n              y1: y1,\n              y2: y2,\n              pathFrom: paths.pathFrom,\n              pathTo: paths.pathTo,\n              strokeWidth: strokeWidth,\n              elSeries: elSeries,\n              series: series,\n              barHeight: barHeight,\n              barYPosition: barYPosition,\n              barWidth: barWidth,\n              elDataLabelsWrap: elDataLabelsWrap,\n              elGoalsMarkers: elGoalsMarkers,\n              visibleSeries: this.visibleI,\n              type: 'rangebar'\n            });\n          }\n\n          ret.add(elSeries);\n        }\n\n        return ret;\n      }\n    }, {\n      key: \"detectOverlappingBars\",\n      value: function detectOverlappingBars(_ref) {\n        var i = _ref.i,\n            j = _ref.j,\n            barYPosition = _ref.barYPosition,\n            srty = _ref.srty,\n            barHeight = _ref.barHeight,\n            yDivision = _ref.yDivision,\n            initPositions = _ref.initPositions;\n        var w = this.w;\n        var overlaps = [];\n        var rangeName = w.config.series[i].data[j].rangeName;\n        var labelX = w.config.series[i].data[j].x;\n        var rowIndex = w.globals.labels.indexOf(labelX);\n        var overlappedIndex = w.globals.seriesRangeBar[i].findIndex(function (tx) {\n          return tx.x === labelX && tx.overlaps.length > 0;\n        });\n\n        if (w.config.plotOptions.bar.rangeBarGroupRows) {\n          barYPosition = srty + yDivision * rowIndex;\n        } else {\n          barYPosition = srty + barHeight * this.visibleI + yDivision * rowIndex;\n        }\n\n        if (overlappedIndex > -1 && !w.config.plotOptions.bar.rangeBarOverlap) {\n          overlaps = w.globals.seriesRangeBar[i][overlappedIndex].overlaps;\n\n          if (overlaps.indexOf(rangeName) > -1) {\n            barHeight = initPositions.barHeight / overlaps.length;\n            barYPosition = barHeight * this.visibleI + yDivision * (100 - parseInt(this.barOptions.barHeight, 10)) / 100 / 2 + barHeight * (this.visibleI + overlaps.indexOf(rangeName)) + yDivision * rowIndex;\n          }\n        }\n\n        return {\n          barYPosition: barYPosition,\n          barHeight: barHeight\n        };\n      }\n    }, {\n      key: \"drawRangeColumnPaths\",\n      value: function drawRangeColumnPaths(_ref2) {\n        var indexes = _ref2.indexes,\n            x = _ref2.x;\n            _ref2.strokeWidth;\n            var xDivision = _ref2.xDivision,\n            barWidth = _ref2.barWidth,\n            zeroH = _ref2.zeroH;\n        var w = this.w;\n        var i = indexes.i;\n        var j = indexes.j;\n        var yRatio = this.yRatio[this.yaxisIndex];\n        var realIndex = indexes.realIndex;\n        var range = this.getRangeValue(realIndex, j);\n        var y1 = Math.min(range.start, range.end);\n        var y2 = Math.max(range.start, range.end);\n\n        if (w.globals.isXNumeric) {\n          x = (w.globals.seriesX[i][j] - w.globals.minX) / this.xRatio - barWidth / 2;\n        }\n\n        var barXPosition = x + barWidth * this.visibleI;\n\n        if (typeof this.series[i][j] === 'undefined' || this.series[i][j] === null) {\n          y1 = zeroH;\n        } else {\n          y1 = zeroH - y1 / yRatio;\n          y2 = zeroH - y2 / yRatio;\n        }\n\n        var barHeight = Math.abs(y2 - y1);\n        var paths = this.barHelpers.getColumnPaths({\n          barXPosition: barXPosition,\n          barWidth: barWidth,\n          y1: y1,\n          y2: y2,\n          strokeWidth: this.strokeWidth,\n          series: this.seriesRangeEnd,\n          realIndex: indexes.realIndex,\n          i: realIndex,\n          j: j,\n          w: w\n        });\n\n        if (!w.globals.isXNumeric) {\n          x = x + xDivision;\n        }\n\n        return {\n          pathTo: paths.pathTo,\n          pathFrom: paths.pathFrom,\n          barHeight: barHeight,\n          x: x,\n          y: y2,\n          goalY: this.barHelpers.getGoalValues('y', null, zeroH, i, j),\n          barXPosition: barXPosition\n        };\n      }\n    }, {\n      key: \"drawRangeBarPaths\",\n      value: function drawRangeBarPaths(_ref3) {\n        var indexes = _ref3.indexes,\n            y = _ref3.y,\n            y1 = _ref3.y1,\n            y2 = _ref3.y2,\n            yDivision = _ref3.yDivision,\n            barHeight = _ref3.barHeight,\n            barYPosition = _ref3.barYPosition,\n            zeroW = _ref3.zeroW;\n        var w = this.w;\n        var x1 = zeroW + y1 / this.invertedYRatio;\n        var x2 = zeroW + y2 / this.invertedYRatio;\n        var barWidth = Math.abs(x2 - x1);\n        var paths = this.barHelpers.getBarpaths({\n          barYPosition: barYPosition,\n          barHeight: barHeight,\n          x1: x1,\n          x2: x2,\n          strokeWidth: this.strokeWidth,\n          series: this.seriesRangeEnd,\n          i: indexes.realIndex,\n          realIndex: indexes.realIndex,\n          j: indexes.j,\n          w: w\n        });\n\n        if (!w.globals.isXNumeric) {\n          y = y + yDivision;\n        }\n\n        return {\n          pathTo: paths.pathTo,\n          pathFrom: paths.pathFrom,\n          barWidth: barWidth,\n          x: x2,\n          goalX: this.barHelpers.getGoalValues('x', zeroW, null, indexes.realIndex, indexes.j),\n          y: y\n        };\n      }\n    }, {\n      key: \"getRangeValue\",\n      value: function getRangeValue(i, j) {\n        var w = this.w;\n        return {\n          start: w.globals.seriesRangeStart[i][j],\n          end: w.globals.seriesRangeEnd[i][j]\n        };\n      }\n    }, {\n      key: \"getTooltipValues\",\n      value: function getTooltipValues(_ref4) {\n        var ctx = _ref4.ctx,\n            seriesIndex = _ref4.seriesIndex,\n            dataPointIndex = _ref4.dataPointIndex,\n            y1 = _ref4.y1,\n            y2 = _ref4.y2,\n            w = _ref4.w;\n        var start = w.globals.seriesRangeStart[seriesIndex][dataPointIndex];\n        var end = w.globals.seriesRangeEnd[seriesIndex][dataPointIndex];\n        var ylabel = w.globals.labels[dataPointIndex];\n        var seriesName = w.config.series[seriesIndex].name ? w.config.series[seriesIndex].name : '';\n        var yLbFormatter = w.config.tooltip.y.formatter;\n        var yLbTitleFormatter = w.config.tooltip.y.title.formatter;\n        var opts = {\n          w: w,\n          seriesIndex: seriesIndex,\n          dataPointIndex: dataPointIndex,\n          start: start,\n          end: end\n        };\n\n        if (typeof yLbTitleFormatter === 'function') {\n          seriesName = yLbTitleFormatter(seriesName, opts);\n        }\n\n        if (Number.isFinite(y1) && Number.isFinite(y2)) {\n          start = y1;\n          end = y2;\n\n          if (w.config.series[seriesIndex].data[dataPointIndex].x) {\n            ylabel = w.config.series[seriesIndex].data[dataPointIndex].x + ':';\n          }\n\n          if (typeof yLbFormatter === 'function') {\n            ylabel = yLbFormatter(ylabel, opts);\n          }\n        }\n\n        var startVal = '';\n        var endVal = '';\n        var color = w.globals.colors[seriesIndex];\n\n        if (w.config.tooltip.x.formatter === undefined) {\n          if (w.config.xaxis.type === 'datetime') {\n            var datetimeObj = new DateTime(ctx);\n            startVal = datetimeObj.formatDate(datetimeObj.getDate(start), w.config.tooltip.x.format);\n            endVal = datetimeObj.formatDate(datetimeObj.getDate(end), w.config.tooltip.x.format);\n          } else {\n            startVal = start;\n            endVal = end;\n          }\n        } else {\n          startVal = w.config.tooltip.x.formatter(start);\n          endVal = w.config.tooltip.x.formatter(end);\n        }\n\n        return {\n          start: start,\n          end: end,\n          startVal: startVal,\n          endVal: endVal,\n          ylabel: ylabel,\n          color: color,\n          seriesName: seriesName\n        };\n      }\n    }, {\n      key: \"buildCustomTooltipHTML\",\n      value: function buildCustomTooltipHTML(_ref5) {\n        var color = _ref5.color,\n            seriesName = _ref5.seriesName,\n            ylabel = _ref5.ylabel,\n            start = _ref5.start,\n            end = _ref5.end;\n        return '<div class=\"apexcharts-tooltip-rangebar\">' + '<div> <span class=\"series-name\" style=\"color: ' + color + '\">' + (seriesName ? seriesName : '') + '</span></div>' + '<div> <span class=\"category\">' + ylabel + ' </span> <span class=\"value start-value\">' + start + '</span> <span class=\"separator\">-</span> <span class=\"value end-value\">' + end + '</span></div>' + '</div>';\n      }\n    }]);\n\n    return RangeBar;\n  }(Bar);\n\n  /**\n   * ApexCharts Default Class for setting default options for all chart types.\n   *\n   * @module Defaults\n   **/\n\n  var Defaults = /*#__PURE__*/function () {\n    function Defaults(opts) {\n      _classCallCheck(this, Defaults);\n\n      this.opts = opts;\n    }\n\n    _createClass(Defaults, [{\n      key: \"line\",\n      value: function line() {\n        return {\n          chart: {\n            animations: {\n              easing: 'swing'\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          stroke: {\n            width: 5,\n            curve: 'straight'\n          },\n          markers: {\n            size: 0,\n            hover: {\n              sizeOffset: 6\n            }\n          },\n          xaxis: {\n            crosshairs: {\n              width: 1\n            }\n          }\n        };\n      }\n    }, {\n      key: \"sparkline\",\n      value: function sparkline(defaults) {\n        this.opts.yaxis[0].show = false;\n        this.opts.yaxis[0].title.text = '';\n        this.opts.yaxis[0].axisBorder.show = false;\n        this.opts.yaxis[0].axisTicks.show = false;\n        this.opts.yaxis[0].floating = true;\n        var ret = {\n          grid: {\n            show: false,\n            padding: {\n              left: 0,\n              right: 0,\n              top: 0,\n              bottom: 0\n            }\n          },\n          legend: {\n            show: false\n          },\n          xaxis: {\n            labels: {\n              show: false\n            },\n            tooltip: {\n              enabled: false\n            },\n            axisBorder: {\n              show: false\n            },\n            axisTicks: {\n              show: false\n            }\n          },\n          chart: {\n            toolbar: {\n              show: false\n            },\n            zoom: {\n              enabled: false\n            }\n          },\n          dataLabels: {\n            enabled: false\n          }\n        };\n        return Utils$1.extend(defaults, ret);\n      }\n    }, {\n      key: \"bar\",\n      value: function bar() {\n        return {\n          chart: {\n            stacked: false,\n            animations: {\n              easing: 'swing'\n            }\n          },\n          plotOptions: {\n            bar: {\n              dataLabels: {\n                position: 'center'\n              }\n            }\n          },\n          dataLabels: {\n            style: {\n              colors: ['#fff']\n            },\n            background: {\n              enabled: false\n            }\n          },\n          stroke: {\n            width: 0,\n            lineCap: 'round'\n          },\n          fill: {\n            opacity: 0.85\n          },\n          legend: {\n            markers: {\n              shape: 'square',\n              radius: 2,\n              size: 8\n            }\n          },\n          tooltip: {\n            shared: false,\n            intersect: true\n          },\n          xaxis: {\n            tooltip: {\n              enabled: false\n            },\n            tickPlacement: 'between',\n            crosshairs: {\n              width: 'barWidth',\n              position: 'back',\n              fill: {\n                type: 'gradient'\n              },\n              dropShadow: {\n                enabled: false\n              },\n              stroke: {\n                width: 0\n              }\n            }\n          }\n        };\n      }\n    }, {\n      key: \"candlestick\",\n      value: function candlestick() {\n        var _this = this;\n\n        return {\n          stroke: {\n            width: 1,\n            colors: ['#333']\n          },\n          fill: {\n            opacity: 1\n          },\n          dataLabels: {\n            enabled: false\n          },\n          tooltip: {\n            shared: true,\n            custom: function custom(_ref) {\n              var seriesIndex = _ref.seriesIndex,\n                  dataPointIndex = _ref.dataPointIndex,\n                  w = _ref.w;\n              return _this._getBoxTooltip(w, seriesIndex, dataPointIndex, ['Open', 'High', '', 'Low', 'Close'], 'candlestick');\n            }\n          },\n          states: {\n            active: {\n              filter: {\n                type: 'none'\n              }\n            }\n          },\n          xaxis: {\n            crosshairs: {\n              width: 1\n            }\n          }\n        };\n      }\n    }, {\n      key: \"boxPlot\",\n      value: function boxPlot() {\n        var _this2 = this;\n\n        return {\n          chart: {\n            animations: {\n              dynamicAnimation: {\n                enabled: false\n              }\n            }\n          },\n          stroke: {\n            width: 1,\n            colors: ['#24292e']\n          },\n          dataLabels: {\n            enabled: false\n          },\n          tooltip: {\n            shared: true,\n            custom: function custom(_ref2) {\n              var seriesIndex = _ref2.seriesIndex,\n                  dataPointIndex = _ref2.dataPointIndex,\n                  w = _ref2.w;\n              return _this2._getBoxTooltip(w, seriesIndex, dataPointIndex, ['Minimum', 'Q1', 'Median', 'Q3', 'Maximum'], 'boxPlot');\n            }\n          },\n          markers: {\n            size: 5,\n            strokeWidth: 1,\n            strokeColors: '#111'\n          },\n          xaxis: {\n            crosshairs: {\n              width: 1\n            }\n          }\n        };\n      }\n    }, {\n      key: \"rangeBar\",\n      value: function rangeBar() {\n        var handleTimelineTooltip = function handleTimelineTooltip(opts) {\n          var rangeCtx = new RangeBar(opts.ctx, null);\n\n          var _rangeCtx$getTooltipV = rangeCtx.getTooltipValues(opts),\n              color = _rangeCtx$getTooltipV.color,\n              seriesName = _rangeCtx$getTooltipV.seriesName,\n              ylabel = _rangeCtx$getTooltipV.ylabel,\n              startVal = _rangeCtx$getTooltipV.startVal,\n              endVal = _rangeCtx$getTooltipV.endVal;\n\n          return rangeCtx.buildCustomTooltipHTML({\n            color: color,\n            seriesName: seriesName,\n            ylabel: ylabel,\n            start: startVal,\n            end: endVal\n          });\n        };\n\n        var handleRangeColumnTooltip = function handleRangeColumnTooltip(opts) {\n          var rangeCtx = new RangeBar(opts.ctx, null);\n\n          var _rangeCtx$getTooltipV2 = rangeCtx.getTooltipValues(opts),\n              color = _rangeCtx$getTooltipV2.color,\n              seriesName = _rangeCtx$getTooltipV2.seriesName,\n              ylabel = _rangeCtx$getTooltipV2.ylabel,\n              start = _rangeCtx$getTooltipV2.start,\n              end = _rangeCtx$getTooltipV2.end;\n\n          return rangeCtx.buildCustomTooltipHTML({\n            color: color,\n            seriesName: seriesName,\n            ylabel: ylabel,\n            start: start,\n            end: end\n          });\n        };\n\n        return {\n          stroke: {\n            width: 0,\n            lineCap: 'square'\n          },\n          plotOptions: {\n            bar: {\n              borderRadius: 0,\n              dataLabels: {\n                position: 'center'\n              }\n            }\n          },\n          dataLabels: {\n            enabled: false,\n            formatter: function formatter(val, _ref3) {\n              _ref3.ctx;\n                  var seriesIndex = _ref3.seriesIndex,\n                  dataPointIndex = _ref3.dataPointIndex,\n                  w = _ref3.w;\n              var start = w.globals.seriesRangeStart[seriesIndex][dataPointIndex];\n              var end = w.globals.seriesRangeEnd[seriesIndex][dataPointIndex];\n              return end - start;\n            },\n            background: {\n              enabled: false\n            },\n            style: {\n              colors: ['#fff']\n            }\n          },\n          tooltip: {\n            shared: false,\n            followCursor: true,\n            custom: function custom(opts) {\n              if (opts.w.config.plotOptions && opts.w.config.plotOptions.bar && opts.w.config.plotOptions.bar.horizontal) {\n                return handleTimelineTooltip(opts);\n              } else {\n                return handleRangeColumnTooltip(opts);\n              }\n            }\n          },\n          xaxis: {\n            tickPlacement: 'between',\n            tooltip: {\n              enabled: false\n            },\n            crosshairs: {\n              stroke: {\n                width: 0\n              }\n            }\n          }\n        };\n      }\n    }, {\n      key: \"area\",\n      value: function area() {\n        return {\n          stroke: {\n            width: 4\n          },\n          fill: {\n            type: 'gradient',\n            gradient: {\n              inverseColors: false,\n              shade: 'light',\n              type: 'vertical',\n              opacityFrom: 0.65,\n              opacityTo: 0.5,\n              stops: [0, 100, 100]\n            }\n          },\n          markers: {\n            size: 0,\n            hover: {\n              sizeOffset: 6\n            }\n          },\n          tooltip: {\n            followCursor: false\n          }\n        };\n      }\n    }, {\n      key: \"brush\",\n      value: function brush(defaults) {\n        var ret = {\n          chart: {\n            toolbar: {\n              autoSelected: 'selection',\n              show: false\n            },\n            zoom: {\n              enabled: false\n            }\n          },\n          dataLabels: {\n            enabled: false\n          },\n          stroke: {\n            width: 1\n          },\n          tooltip: {\n            enabled: false\n          },\n          xaxis: {\n            tooltip: {\n              enabled: false\n            }\n          }\n        };\n        return Utils$1.extend(defaults, ret);\n      }\n    }, {\n      key: \"stacked100\",\n      value: function stacked100(opts) {\n        opts.dataLabels = opts.dataLabels || {};\n        opts.dataLabels.formatter = opts.dataLabels.formatter || undefined;\n        var existingDataLabelFormatter = opts.dataLabels.formatter;\n        opts.yaxis.forEach(function (yaxe, index) {\n          opts.yaxis[index].min = 0;\n          opts.yaxis[index].max = 100;\n        });\n        var isBar = opts.chart.type === 'bar';\n\n        if (isBar) {\n          opts.dataLabels.formatter = existingDataLabelFormatter || function (val) {\n            if (typeof val === 'number') {\n              return val ? val.toFixed(0) + '%' : val;\n            }\n\n            return val;\n          };\n        }\n\n        return opts;\n      } // This function removes the left and right spacing in chart for line/area/scatter if xaxis type = category for those charts by converting xaxis = numeric. Numeric/Datetime xaxis prevents the unnecessary spacing in the left/right of the chart area\n\n    }, {\n      key: \"convertCatToNumeric\",\n      value: function convertCatToNumeric(opts) {\n        opts.xaxis.convertedCatToNumeric = true;\n        return opts;\n      }\n    }, {\n      key: \"convertCatToNumericXaxis\",\n      value: function convertCatToNumericXaxis(opts, ctx, cats) {\n        opts.xaxis.type = 'numeric';\n        opts.xaxis.labels = opts.xaxis.labels || {};\n\n        opts.xaxis.labels.formatter = opts.xaxis.labels.formatter || function (val) {\n          return Utils$1.isNumber(val) ? Math.floor(val) : val;\n        };\n\n        var defaultFormatter = opts.xaxis.labels.formatter;\n        var labels = opts.xaxis.categories && opts.xaxis.categories.length ? opts.xaxis.categories : opts.labels;\n\n        if (cats && cats.length) {\n          labels = cats.map(function (c) {\n            return Array.isArray(c) ? c : String(c);\n          });\n        }\n\n        if (labels && labels.length) {\n          opts.xaxis.labels.formatter = function (val) {\n            return Utils$1.isNumber(val) ? defaultFormatter(labels[Math.floor(val) - 1]) : defaultFormatter(val);\n          };\n        }\n\n        opts.xaxis.categories = [];\n        opts.labels = [];\n        opts.xaxis.tickAmount = opts.xaxis.tickAmount || 'dataPoints';\n        return opts;\n      }\n    }, {\n      key: \"bubble\",\n      value: function bubble() {\n        return {\n          dataLabels: {\n            style: {\n              colors: ['#fff']\n            }\n          },\n          tooltip: {\n            shared: false,\n            intersect: true\n          },\n          xaxis: {\n            crosshairs: {\n              width: 0\n            }\n          },\n          fill: {\n            type: 'solid',\n            gradient: {\n              shade: 'light',\n              inverse: true,\n              shadeIntensity: 0.55,\n              opacityFrom: 0.4,\n              opacityTo: 0.8\n            }\n          }\n        };\n      }\n    }, {\n      key: \"scatter\",\n      value: function scatter() {\n        return {\n          dataLabels: {\n            enabled: false\n          },\n          tooltip: {\n            shared: false,\n            intersect: true\n          },\n          markers: {\n            size: 6,\n            strokeWidth: 1,\n            hover: {\n              sizeOffset: 2\n            }\n          }\n        };\n      }\n    }, {\n      key: \"heatmap\",\n      value: function heatmap() {\n        return {\n          chart: {\n            stacked: false\n          },\n          fill: {\n            opacity: 1\n          },\n          dataLabels: {\n            style: {\n              colors: ['#fff']\n            }\n          },\n          stroke: {\n            colors: ['#fff']\n          },\n          tooltip: {\n            followCursor: true,\n            marker: {\n              show: false\n            },\n            x: {\n              show: false\n            }\n          },\n          legend: {\n            position: 'top',\n            markers: {\n              shape: 'square',\n              size: 10,\n              offsetY: 2\n            }\n          },\n          grid: {\n            padding: {\n              right: 20\n            }\n          }\n        };\n      }\n    }, {\n      key: \"treemap\",\n      value: function treemap() {\n        return {\n          chart: {\n            zoom: {\n              enabled: false\n            }\n          },\n          dataLabels: {\n            style: {\n              fontSize: 14,\n              fontWeight: 600,\n              colors: ['#fff']\n            }\n          },\n          stroke: {\n            show: true,\n            width: 2,\n            colors: ['#fff']\n          },\n          legend: {\n            show: false\n          },\n          fill: {\n            gradient: {\n              stops: [0, 100]\n            }\n          },\n          tooltip: {\n            followCursor: true,\n            x: {\n              show: false\n            }\n          },\n          grid: {\n            padding: {\n              left: 0,\n              right: 0\n            }\n          },\n          xaxis: {\n            crosshairs: {\n              show: false\n            },\n            tooltip: {\n              enabled: false\n            }\n          }\n        };\n      }\n    }, {\n      key: \"pie\",\n      value: function pie() {\n        return {\n          chart: {\n            toolbar: {\n              show: false\n            }\n          },\n          plotOptions: {\n            pie: {\n              donut: {\n                labels: {\n                  show: false\n                }\n              }\n            }\n          },\n          dataLabels: {\n            formatter: function formatter(val) {\n              return val.toFixed(1) + '%';\n            },\n            style: {\n              colors: ['#fff']\n            },\n            background: {\n              enabled: false\n            },\n            dropShadow: {\n              enabled: true\n            }\n          },\n          stroke: {\n            colors: ['#fff']\n          },\n          fill: {\n            opacity: 1,\n            gradient: {\n              shade: 'light',\n              stops: [0, 100]\n            }\n          },\n          tooltip: {\n            theme: 'dark',\n            fillSeriesColor: true\n          },\n          legend: {\n            position: 'right'\n          }\n        };\n      }\n    }, {\n      key: \"donut\",\n      value: function donut() {\n        return {\n          chart: {\n            toolbar: {\n              show: false\n            }\n          },\n          dataLabels: {\n            formatter: function formatter(val) {\n              return val.toFixed(1) + '%';\n            },\n            style: {\n              colors: ['#fff']\n            },\n            background: {\n              enabled: false\n            },\n            dropShadow: {\n              enabled: true\n            }\n          },\n          stroke: {\n            colors: ['#fff']\n          },\n          fill: {\n            opacity: 1,\n            gradient: {\n              shade: 'light',\n              shadeIntensity: 0.35,\n              stops: [80, 100],\n              opacityFrom: 1,\n              opacityTo: 1\n            }\n          },\n          tooltip: {\n            theme: 'dark',\n            fillSeriesColor: true\n          },\n          legend: {\n            position: 'right'\n          }\n        };\n      }\n    }, {\n      key: \"polarArea\",\n      value: function polarArea() {\n        this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount ? this.opts.yaxis[0].tickAmount : 6;\n        return {\n          chart: {\n            toolbar: {\n              show: false\n            }\n          },\n          dataLabels: {\n            formatter: function formatter(val) {\n              return val.toFixed(1) + '%';\n            },\n            enabled: false\n          },\n          stroke: {\n            show: true,\n            width: 2\n          },\n          fill: {\n            opacity: 0.7\n          },\n          tooltip: {\n            theme: 'dark',\n            fillSeriesColor: true\n          },\n          legend: {\n            position: 'right'\n          }\n        };\n      }\n    }, {\n      key: \"radar\",\n      value: function radar() {\n        this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels.offsetY ? this.opts.yaxis[0].labels.offsetY : 6;\n        return {\n          dataLabels: {\n            enabled: false,\n            style: {\n              fontSize: '11px'\n            }\n          },\n          stroke: {\n            width: 2\n          },\n          markers: {\n            size: 3,\n            strokeWidth: 1,\n            strokeOpacity: 1\n          },\n          fill: {\n            opacity: 0.2\n          },\n          tooltip: {\n            shared: false,\n            intersect: true,\n            followCursor: true\n          },\n          grid: {\n            show: false\n          },\n          xaxis: {\n            labels: {\n              formatter: function formatter(val) {\n                return val;\n              },\n              style: {\n                colors: ['#a8a8a8'],\n                fontSize: '11px'\n              }\n            },\n            tooltip: {\n              enabled: false\n            },\n            crosshairs: {\n              show: false\n            }\n          }\n        };\n      }\n    }, {\n      key: \"radialBar\",\n      value: function radialBar() {\n        return {\n          chart: {\n            animations: {\n              dynamicAnimation: {\n                enabled: true,\n                speed: 800\n              }\n            },\n            toolbar: {\n              show: false\n            }\n          },\n          fill: {\n            gradient: {\n              shade: 'dark',\n              shadeIntensity: 0.4,\n              inverseColors: false,\n              type: 'diagonal2',\n              opacityFrom: 1,\n              opacityTo: 1,\n              stops: [70, 98, 100]\n            }\n          },\n          legend: {\n            show: false,\n            position: 'right'\n          },\n          tooltip: {\n            enabled: false,\n            fillSeriesColor: true\n          }\n        };\n      }\n    }, {\n      key: \"_getBoxTooltip\",\n      value: function _getBoxTooltip(w, seriesIndex, dataPointIndex, labels, chartType) {\n        var o = w.globals.seriesCandleO[seriesIndex][dataPointIndex];\n        var h = w.globals.seriesCandleH[seriesIndex][dataPointIndex];\n        var m = w.globals.seriesCandleM[seriesIndex][dataPointIndex];\n        var l = w.globals.seriesCandleL[seriesIndex][dataPointIndex];\n        var c = w.globals.seriesCandleC[seriesIndex][dataPointIndex];\n\n        if (w.config.series[seriesIndex].type && w.config.series[seriesIndex].type !== chartType) {\n          return \"<div class=\\\"apexcharts-custom-tooltip\\\">\\n          \".concat(w.config.series[seriesIndex].name ? w.config.series[seriesIndex].name : 'series-' + (seriesIndex + 1), \": <strong>\").concat(w.globals.series[seriesIndex][dataPointIndex], \"</strong>\\n        </div>\");\n        } else {\n          return \"<div class=\\\"apexcharts-tooltip-box apexcharts-tooltip-\".concat(w.config.chart.type, \"\\\">\") + \"<div>\".concat(labels[0], \": <span class=\\\"value\\\">\") + o + '</span></div>' + \"<div>\".concat(labels[1], \": <span class=\\\"value\\\">\") + h + '</span></div>' + (m ? \"<div>\".concat(labels[2], \": <span class=\\\"value\\\">\") + m + '</span></div>' : '') + \"<div>\".concat(labels[3], \": <span class=\\\"value\\\">\") + l + '</span></div>' + \"<div>\".concat(labels[4], \": <span class=\\\"value\\\">\") + c + '</span></div>' + '</div>';\n        }\n      }\n    }]);\n\n    return Defaults;\n  }();\n\n  /**\n   * ApexCharts Config Class for extending user options with pre-defined ApexCharts config.\n   *\n   * @module Config\n   **/\n\n  var Config = /*#__PURE__*/function () {\n    function Config(opts) {\n      _classCallCheck(this, Config);\n\n      this.opts = opts;\n    }\n\n    _createClass(Config, [{\n      key: \"init\",\n      value: function init(_ref) {\n        var responsiveOverride = _ref.responsiveOverride;\n        var opts = this.opts;\n        var options = new Options();\n        var defaults = new Defaults(opts);\n        this.chartType = opts.chart.type;\n\n        if (this.chartType === 'histogram') {\n          // technically, a histogram can be drawn by a column chart with no spaces in between\n          opts.chart.type = 'bar';\n          opts = Utils$1.extend({\n            plotOptions: {\n              bar: {\n                columnWidth: '99.99%'\n              }\n            }\n          }, opts);\n        }\n\n        opts = this.extendYAxis(opts);\n        opts = this.extendAnnotations(opts);\n        var config = options.init();\n        var newDefaults = {};\n\n        if (opts && _typeof(opts) === 'object') {\n          var chartDefaults = {};\n          var chartTypes = ['line', 'area', 'bar', 'candlestick', 'boxPlot', 'rangeBar', 'histogram', 'bubble', 'scatter', 'heatmap', 'treemap', 'pie', 'polarArea', 'donut', 'radar', 'radialBar'];\n\n          if (chartTypes.indexOf(opts.chart.type) !== -1) {\n            chartDefaults = defaults[opts.chart.type]();\n          } else {\n            chartDefaults = defaults.line();\n          }\n\n          if (opts.chart.brush && opts.chart.brush.enabled) {\n            chartDefaults = defaults.brush(chartDefaults);\n          }\n\n          if (opts.chart.stacked && opts.chart.stackType === '100%') {\n            opts = defaults.stacked100(opts);\n          } // If user has specified a dark theme, make the tooltip dark too\n\n\n          this.checkForDarkTheme(window.Apex); // check global window Apex options\n\n          this.checkForDarkTheme(opts); // check locally passed options\n\n          opts.xaxis = opts.xaxis || window.Apex.xaxis || {}; // an important boolean needs to be set here\n          // otherwise all the charts will have this flag set to true window.Apex.xaxis is set globally\n\n          if (!responsiveOverride) {\n            opts.xaxis.convertedCatToNumeric = false;\n          }\n\n          opts = this.checkForCatToNumericXAxis(this.chartType, chartDefaults, opts);\n\n          if (opts.chart.sparkline && opts.chart.sparkline.enabled || window.Apex.chart && window.Apex.chart.sparkline && window.Apex.chart.sparkline.enabled) {\n            chartDefaults = defaults.sparkline(chartDefaults);\n          }\n\n          newDefaults = Utils$1.extend(config, chartDefaults);\n        } // config should cascade in this fashion\n        // default-config < global-apex-variable-config < user-defined-config\n        // get GLOBALLY defined options and merge with the default config\n\n\n        var mergedWithDefaultConfig = Utils$1.extend(newDefaults, window.Apex); // get the merged config and extend with user defined config\n\n        config = Utils$1.extend(mergedWithDefaultConfig, opts); // some features are not supported. those mismatches should be handled\n\n        config = this.handleUserInputErrors(config);\n        return config;\n      }\n    }, {\n      key: \"checkForCatToNumericXAxis\",\n      value: function checkForCatToNumericXAxis(chartType, chartDefaults, opts) {\n        var defaults = new Defaults(opts);\n        var isBarHorizontal = (chartType === 'bar' || chartType === 'boxPlot') && opts.plotOptions && opts.plotOptions.bar && opts.plotOptions.bar.horizontal;\n        var unsupportedZoom = chartType === 'pie' || chartType === 'polarArea' || chartType === 'donut' || chartType === 'radar' || chartType === 'radialBar' || chartType === 'heatmap';\n        var notNumericXAxis = opts.xaxis.type !== 'datetime' && opts.xaxis.type !== 'numeric';\n        var tickPlacement = opts.xaxis.tickPlacement ? opts.xaxis.tickPlacement : chartDefaults.xaxis && chartDefaults.xaxis.tickPlacement;\n\n        if (!isBarHorizontal && !unsupportedZoom && notNumericXAxis && tickPlacement !== 'between') {\n          opts = defaults.convertCatToNumeric(opts);\n        }\n\n        return opts;\n      }\n    }, {\n      key: \"extendYAxis\",\n      value: function extendYAxis(opts, w) {\n        var options = new Options();\n\n        if (typeof opts.yaxis === 'undefined' || !opts.yaxis || Array.isArray(opts.yaxis) && opts.yaxis.length === 0) {\n          opts.yaxis = {};\n        } // extend global yaxis config (only if object is provided / not an array)\n\n\n        if (opts.yaxis.constructor !== Array && window.Apex.yaxis && window.Apex.yaxis.constructor !== Array) {\n          opts.yaxis = Utils$1.extend(opts.yaxis, window.Apex.yaxis);\n        } // as we can't extend nested object's array with extend, we need to do it first\n        // user can provide either an array or object in yaxis config\n\n\n        if (opts.yaxis.constructor !== Array) {\n          // convert the yaxis to array if user supplied object\n          opts.yaxis = [Utils$1.extend(options.yAxis, opts.yaxis)];\n        } else {\n          opts.yaxis = Utils$1.extendArray(opts.yaxis, options.yAxis);\n        }\n\n        var isLogY = false;\n        opts.yaxis.forEach(function (y) {\n          if (y.logarithmic) {\n            isLogY = true;\n          }\n        });\n        var series = opts.series;\n\n        if (w && !series) {\n          series = w.config.series;\n        } // A logarithmic chart works correctly when each series has a corresponding y-axis\n        // If this is not the case, we manually create yaxis for multi-series log chart\n\n\n        if (isLogY && series.length !== opts.yaxis.length && series.length) {\n          opts.yaxis = series.map(function (s, i) {\n            if (!s.name) {\n              series[i].name = \"series-\".concat(i + 1);\n            }\n\n            if (opts.yaxis[i]) {\n              opts.yaxis[i].seriesName = series[i].name;\n              return opts.yaxis[i];\n            } else {\n              var newYaxis = Utils$1.extend(options.yAxis, opts.yaxis[0]);\n              newYaxis.show = false;\n              return newYaxis;\n            }\n          });\n        }\n\n        if (isLogY && series.length > 1 && series.length !== opts.yaxis.length) {\n          console.warn('A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both.');\n        }\n\n        return opts;\n      } // annotations also accepts array, so we need to extend them manually\n\n    }, {\n      key: \"extendAnnotations\",\n      value: function extendAnnotations(opts) {\n        if (typeof opts.annotations === 'undefined') {\n          opts.annotations = {};\n          opts.annotations.yaxis = [];\n          opts.annotations.xaxis = [];\n          opts.annotations.points = [];\n        }\n\n        opts = this.extendYAxisAnnotations(opts);\n        opts = this.extendXAxisAnnotations(opts);\n        opts = this.extendPointAnnotations(opts);\n        return opts;\n      }\n    }, {\n      key: \"extendYAxisAnnotations\",\n      value: function extendYAxisAnnotations(opts) {\n        var options = new Options();\n        opts.annotations.yaxis = Utils$1.extendArray(typeof opts.annotations.yaxis !== 'undefined' ? opts.annotations.yaxis : [], options.yAxisAnnotation);\n        return opts;\n      }\n    }, {\n      key: \"extendXAxisAnnotations\",\n      value: function extendXAxisAnnotations(opts) {\n        var options = new Options();\n        opts.annotations.xaxis = Utils$1.extendArray(typeof opts.annotations.xaxis !== 'undefined' ? opts.annotations.xaxis : [], options.xAxisAnnotation);\n        return opts;\n      }\n    }, {\n      key: \"extendPointAnnotations\",\n      value: function extendPointAnnotations(opts) {\n        var options = new Options();\n        opts.annotations.points = Utils$1.extendArray(typeof opts.annotations.points !== 'undefined' ? opts.annotations.points : [], options.pointAnnotation);\n        return opts;\n      }\n    }, {\n      key: \"checkForDarkTheme\",\n      value: function checkForDarkTheme(opts) {\n        if (opts.theme && opts.theme.mode === 'dark') {\n          if (!opts.tooltip) {\n            opts.tooltip = {};\n          }\n\n          if (opts.tooltip.theme !== 'light') {\n            opts.tooltip.theme = 'dark';\n          }\n\n          if (!opts.chart.foreColor) {\n            opts.chart.foreColor = '#f6f7f8';\n          }\n\n          if (!opts.chart.background) {\n            opts.chart.background = '#424242';\n          }\n\n          if (!opts.theme.palette) {\n            opts.theme.palette = 'palette4';\n          }\n        }\n      }\n    }, {\n      key: \"handleUserInputErrors\",\n      value: function handleUserInputErrors(opts) {\n        var config = opts; // conflicting tooltip option. intersect makes sure to focus on 1 point at a time. Shared cannot be used along with it\n\n        if (config.tooltip.shared && config.tooltip.intersect) {\n          throw new Error('tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.');\n        }\n\n        if (config.chart.type === 'bar' && config.plotOptions.bar.horizontal) {\n          // No multiple yaxis for bars\n          if (config.yaxis.length > 1) {\n            throw new Error('Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false');\n          } // if yaxis is reversed in horizontal bar chart, you should draw the y-axis on right side\n\n\n          if (config.yaxis[0].reversed) {\n            config.yaxis[0].opposite = true;\n          }\n\n          config.xaxis.tooltip.enabled = false; // no xaxis tooltip for horizontal bar\n\n          config.yaxis[0].tooltip.enabled = false; // no xaxis tooltip for horizontal bar\n\n          config.chart.zoom.enabled = false; // no zooming for horz bars\n        }\n\n        if (config.chart.type === 'bar' || config.chart.type === 'rangeBar') {\n          if (config.tooltip.shared) {\n            if (config.xaxis.crosshairs.width === 'barWidth' && config.series.length > 1) {\n              config.xaxis.crosshairs.width = 'tickWidth';\n            }\n          }\n        }\n\n        if (config.chart.type === 'candlestick' || config.chart.type === 'boxPlot') {\n          if (config.yaxis[0].reversed) {\n            console.warn(\"Reversed y-axis in \".concat(config.chart.type, \" chart is not supported.\"));\n            config.yaxis[0].reversed = false;\n          }\n        } // if user supplied array for stroke width, it will only be applicable to line/area charts, for any other charts, revert back to Number\n\n\n        if (Array.isArray(config.stroke.width)) {\n          if (config.chart.type !== 'line' && config.chart.type !== 'area') {\n            console.warn('stroke.width option accepts array only for line and area charts. Reverted back to Number');\n            config.stroke.width = config.stroke.width[0];\n          }\n        }\n\n        return config;\n      }\n    }]);\n\n    return Config;\n  }();\n\n  var Globals = /*#__PURE__*/function () {\n    function Globals() {\n      _classCallCheck(this, Globals);\n    }\n\n    _createClass(Globals, [{\n      key: \"initGlobalVars\",\n      value: function initGlobalVars(gl) {\n        gl.series = []; // the MAIN series array (y values)\n\n        gl.seriesCandleO = [];\n        gl.seriesCandleH = [];\n        gl.seriesCandleM = [];\n        gl.seriesCandleL = [];\n        gl.seriesCandleC = [];\n        gl.seriesRangeStart = [];\n        gl.seriesRangeEnd = [];\n        gl.seriesRangeBar = [];\n        gl.seriesPercent = [];\n        gl.seriesGoals = [];\n        gl.seriesX = [];\n        gl.seriesZ = [];\n        gl.seriesNames = [];\n        gl.seriesTotals = [];\n        gl.seriesLog = [];\n        gl.seriesColors = [];\n        gl.stackedSeriesTotals = [];\n        gl.seriesXvalues = []; // we will need this in tooltip (it's x position)\n        // when we will have unequal x values, we will need\n        // some way to get x value depending on mouse pointer\n\n        gl.seriesYvalues = []; // we will need this when deciding which series\n        // user hovered on\n\n        gl.labels = [];\n        gl.categoryLabels = [];\n        gl.timescaleLabels = [];\n        gl.noLabelsProvided = false;\n        gl.resizeTimer = null;\n        gl.selectionResizeTimer = null;\n        gl.delayedElements = [];\n        gl.pointsArray = [];\n        gl.dataLabelsRects = [];\n        gl.isXNumeric = false;\n        gl.xaxisLabelsCount = 0;\n        gl.skipLastTimelinelabel = false;\n        gl.skipFirstTimelinelabel = false;\n        gl.isDataXYZ = false;\n        gl.isMultiLineX = false;\n        gl.isMultipleYAxis = false;\n        gl.maxY = -Number.MAX_VALUE;\n        gl.minY = Number.MIN_VALUE;\n        gl.minYArr = [];\n        gl.maxYArr = [];\n        gl.maxX = -Number.MAX_VALUE;\n        gl.minX = Number.MAX_VALUE;\n        gl.initialMaxX = -Number.MAX_VALUE;\n        gl.initialMinX = Number.MAX_VALUE;\n        gl.maxDate = 0;\n        gl.minDate = Number.MAX_VALUE;\n        gl.minZ = Number.MAX_VALUE;\n        gl.maxZ = -Number.MAX_VALUE;\n        gl.minXDiff = Number.MAX_VALUE;\n        gl.yAxisScale = [];\n        gl.xAxisScale = null;\n        gl.xAxisTicksPositions = [];\n        gl.yLabelsCoords = [];\n        gl.yTitleCoords = [];\n        gl.barPadForNumericAxis = 0;\n        gl.padHorizontal = 0;\n        gl.xRange = 0;\n        gl.yRange = [];\n        gl.zRange = 0;\n        gl.dataPoints = 0;\n        gl.xTickAmount = 0;\n      }\n    }, {\n      key: \"globalVars\",\n      value: function globalVars(config) {\n        return {\n          chartID: null,\n          // chart ID - apexcharts-cuid\n          cuid: null,\n          // chart ID - random numbers excluding \"apexcharts\" part\n          events: {\n            beforeMount: [],\n            mounted: [],\n            updated: [],\n            clicked: [],\n            selection: [],\n            dataPointSelection: [],\n            zoomed: [],\n            scrolled: []\n          },\n          colors: [],\n          clientX: null,\n          clientY: null,\n          fill: {\n            colors: []\n          },\n          stroke: {\n            colors: []\n          },\n          dataLabels: {\n            style: {\n              colors: []\n            }\n          },\n          radarPolygons: {\n            fill: {\n              colors: []\n            }\n          },\n          markers: {\n            colors: [],\n            size: config.markers.size,\n            largestSize: 0\n          },\n          animationEnded: false,\n          isTouchDevice: 'ontouchstart' in window || navigator.msMaxTouchPoints,\n          isDirty: false,\n          // chart has been updated after the initial render. This is different than dataChanged property. isDirty means user manually called some method to update\n          isExecCalled: false,\n          // whether user updated the chart through the exec method\n          initialConfig: null,\n          // we will store the first config user has set to go back when user finishes interactions like zooming and come out of it\n          initialSeries: [],\n          lastXAxis: [],\n          lastYAxis: [],\n          columnSeries: null,\n          labels: [],\n          // store the text to draw on x axis\n          // Don't mutate the labels, many things including tooltips depends on it!\n          timescaleLabels: [],\n          // store the timescaleLabels Labels in another variable\n          noLabelsProvided: false,\n          // if user didn't provide any categories/labels or x values, fallback to 1,2,3,4...\n          allSeriesCollapsed: false,\n          collapsedSeries: [],\n          // when user collapses a series, it goes into this array\n          collapsedSeriesIndices: [],\n          // this stores the index of the collapsedSeries instead of whole object for quick access\n          ancillaryCollapsedSeries: [],\n          // when user collapses an \"alwaysVisible\" series, it goes into this array\n          ancillaryCollapsedSeriesIndices: [],\n          // this stores the index of the ancillaryCollapsedSeries whose y-axis is always visible\n          risingSeries: [],\n          // when user re-opens a collapsed series, it goes here\n          dataFormatXNumeric: false,\n          // boolean value to indicate user has passed numeric x values\n          capturedSeriesIndex: -1,\n          capturedDataPointIndex: -1,\n          selectedDataPoints: [],\n          goldenPadding: 35,\n          // this value is used at a lot of places for spacing purpose\n          invalidLogScale: false,\n          // if a user enabled log scale but the data provided is not valid to generate a log scale, turn on this flag\n          ignoreYAxisIndexes: [],\n          // when series are being collapsed in multiple y axes, ignore certain index\n          yAxisSameScaleIndices: [],\n          maxValsInArrayIndex: 0,\n          radialSize: 0,\n          selection: undefined,\n          zoomEnabled: config.chart.toolbar.autoSelected === 'zoom' && config.chart.toolbar.tools.zoom && config.chart.zoom.enabled,\n          panEnabled: config.chart.toolbar.autoSelected === 'pan' && config.chart.toolbar.tools.pan,\n          selectionEnabled: config.chart.toolbar.autoSelected === 'selection' && config.chart.toolbar.tools.selection,\n          yaxis: null,\n          mousedown: false,\n          lastClientPosition: {},\n          // don't reset this variable this the chart is destroyed. It is used to detect right or left mousemove in panning\n          visibleXRange: undefined,\n          yValueDecimal: 0,\n          // are there floating numbers in the series. If yes, this represent the len of the decimals\n          total: 0,\n          SVGNS: 'http://www.w3.org/2000/svg',\n          // svg namespace\n          svgWidth: 0,\n          // the whole svg width\n          svgHeight: 0,\n          // the whole svg height\n          noData: false,\n          // whether there is any data to display or not\n          locale: {},\n          // the current locale values will be preserved here for global access\n          dom: {},\n          // for storing all dom nodes in this particular property\n          memory: {\n            methodsToExec: []\n          },\n          shouldAnimate: true,\n          skipLastTimelinelabel: false,\n          // when last label is cropped, skip drawing it\n          skipFirstTimelinelabel: false,\n          // when first label is cropped, skip drawing it\n          delayedElements: [],\n          // element which appear after animation has finished\n          axisCharts: true,\n          // chart type = line or area or bar\n          // (refer them also as plot charts in the code)\n          isDataXYZ: false,\n          // bool: data was provided in a {[x,y,z]} pattern\n          resized: false,\n          // bool: user has resized\n          resizeTimer: null,\n          // timeout function to make a small delay before\n          // drawing when user resized\n          comboCharts: false,\n          // bool: whether it's a combination of line/column\n          dataChanged: false,\n          // bool: has data changed dynamically\n          previousPaths: [],\n          // array: when data is changed, it will animate from\n          // previous paths\n          allSeriesHasEqualX: true,\n          pointsArray: [],\n          // store the points positions here to draw later on hover\n          // format is - [[x,y],[x,y]... [x,y]]\n          dataLabelsRects: [],\n          // store the positions of datalabels to prevent collision\n          lastDrawnDataLabelsIndexes: [],\n          hasNullValues: false,\n          // bool: whether series contains null values\n          easing: null,\n          // function: animation effect to apply\n          zoomed: false,\n          // whether user has zoomed or not\n          gridWidth: 0,\n          // drawable width of actual graphs (series paths)\n          gridHeight: 0,\n          // drawable height of actual graphs (series paths)\n          rotateXLabels: false,\n          defaultLabels: false,\n          xLabelFormatter: undefined,\n          // formatter for x axis labels\n          yLabelFormatters: [],\n          xaxisTooltipFormatter: undefined,\n          // formatter for x axis tooltip\n          ttKeyFormatter: undefined,\n          ttVal: undefined,\n          ttZFormatter: undefined,\n          LINE_HEIGHT_RATIO: 1.618,\n          xAxisLabelsHeight: 0,\n          xAxisLabelsWidth: 0,\n          yAxisLabelsWidth: 0,\n          scaleX: 1,\n          scaleY: 1,\n          translateX: 0,\n          translateY: 0,\n          translateYAxisX: [],\n          yAxisWidths: [],\n          translateXAxisY: 0,\n          translateXAxisX: 0,\n          tooltip: null\n        };\n      }\n    }, {\n      key: \"init\",\n      value: function init(config) {\n        var globals = this.globalVars(config);\n        this.initGlobalVars(globals);\n        globals.initialConfig = Utils$1.extend({}, config);\n        globals.initialSeries = Utils$1.clone(config.series);\n        globals.lastXAxis = Utils$1.clone(globals.initialConfig.xaxis);\n        globals.lastYAxis = Utils$1.clone(globals.initialConfig.yaxis);\n        return globals;\n      }\n    }]);\n\n    return Globals;\n  }();\n\n  /**\n   * ApexCharts Base Class for extending user options with pre-defined ApexCharts config.\n   *\n   * @module Base\n   **/\n\n  var Base = /*#__PURE__*/function () {\n    function Base(opts) {\n      _classCallCheck(this, Base);\n\n      this.opts = opts;\n    }\n\n    _createClass(Base, [{\n      key: \"init\",\n      value: function init() {\n        var config = new Config(this.opts).init({\n          responsiveOverride: false\n        });\n        var globals = new Globals().init(config);\n        var w = {\n          config: config,\n          globals: globals\n        };\n        return w;\n      }\n    }]);\n\n    return Base;\n  }();\n\n  var Data = /*#__PURE__*/function () {\n    function Data(ctx) {\n      _classCallCheck(this, Data);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.twoDSeries = [];\n      this.threeDSeries = [];\n      this.twoDSeriesX = [];\n      this.seriesGoals = [];\n      this.coreUtils = new CoreUtils(this.ctx);\n    }\n\n    _createClass(Data, [{\n      key: \"isMultiFormat\",\n      value: function isMultiFormat() {\n        return this.isFormatXY() || this.isFormat2DArray();\n      } // given format is [{x, y}, {x, y}]\n\n    }, {\n      key: \"isFormatXY\",\n      value: function isFormatXY() {\n        var series = this.w.config.series.slice();\n        var sr = new Series(this.ctx);\n        this.activeSeriesIndex = sr.getActiveConfigSeriesIndex();\n\n        if (typeof series[this.activeSeriesIndex].data !== 'undefined' && series[this.activeSeriesIndex].data.length > 0 && series[this.activeSeriesIndex].data[0] !== null && typeof series[this.activeSeriesIndex].data[0].x !== 'undefined' && series[this.activeSeriesIndex].data[0] !== null) {\n          return true;\n        }\n      } // given format is [[x, y], [x, y]]\n\n    }, {\n      key: \"isFormat2DArray\",\n      value: function isFormat2DArray() {\n        var series = this.w.config.series.slice();\n        var sr = new Series(this.ctx);\n        this.activeSeriesIndex = sr.getActiveConfigSeriesIndex();\n\n        if (typeof series[this.activeSeriesIndex].data !== 'undefined' && series[this.activeSeriesIndex].data.length > 0 && typeof series[this.activeSeriesIndex].data[0] !== 'undefined' && series[this.activeSeriesIndex].data[0] !== null && series[this.activeSeriesIndex].data[0].constructor === Array) {\n          return true;\n        }\n      }\n    }, {\n      key: \"handleFormat2DArray\",\n      value: function handleFormat2DArray(ser, i) {\n        var cnf = this.w.config;\n        var gl = this.w.globals;\n        var isBoxPlot = cnf.chart.type === 'boxPlot' || cnf.series[i].type === 'boxPlot';\n\n        for (var j = 0; j < ser[i].data.length; j++) {\n          if (typeof ser[i].data[j][1] !== 'undefined') {\n            if (Array.isArray(ser[i].data[j][1]) && ser[i].data[j][1].length === 4 && !isBoxPlot) {\n              // candlestick nested ohlc format\n              this.twoDSeries.push(Utils$1.parseNumber(ser[i].data[j][1][3]));\n            } else if (ser[i].data[j].length >= 5) {\n              // candlestick non-nested ohlc format\n              this.twoDSeries.push(Utils$1.parseNumber(ser[i].data[j][4]));\n            } else {\n              this.twoDSeries.push(Utils$1.parseNumber(ser[i].data[j][1]));\n            }\n\n            gl.dataFormatXNumeric = true;\n          }\n\n          if (cnf.xaxis.type === 'datetime') {\n            // if timestamps are provided and xaxis type is datetime,\n            var ts = new Date(ser[i].data[j][0]);\n            ts = new Date(ts).getTime();\n            this.twoDSeriesX.push(ts);\n          } else {\n            this.twoDSeriesX.push(ser[i].data[j][0]);\n          }\n        }\n\n        for (var _j = 0; _j < ser[i].data.length; _j++) {\n          if (typeof ser[i].data[_j][2] !== 'undefined') {\n            this.threeDSeries.push(ser[i].data[_j][2]);\n            gl.isDataXYZ = true;\n          }\n        }\n      }\n    }, {\n      key: \"handleFormatXY\",\n      value: function handleFormatXY(ser, i) {\n        var cnf = this.w.config;\n        var gl = this.w.globals;\n        var dt = new DateTime(this.ctx);\n        var activeI = i;\n\n        if (gl.collapsedSeriesIndices.indexOf(i) > -1) {\n          // fix #368\n          activeI = this.activeSeriesIndex;\n        } // get series\n\n\n        for (var j = 0; j < ser[i].data.length; j++) {\n          if (typeof ser[i].data[j].y !== 'undefined') {\n            if (Array.isArray(ser[i].data[j].y)) {\n              this.twoDSeries.push(Utils$1.parseNumber(ser[i].data[j].y[ser[i].data[j].y.length - 1]));\n            } else {\n              this.twoDSeries.push(Utils$1.parseNumber(ser[i].data[j].y));\n            }\n          }\n\n          if (typeof ser[i].data[j].goals !== 'undefined' && Array.isArray(ser[i].data[j].goals)) {\n            if (typeof this.seriesGoals[i] === 'undefined') {\n              this.seriesGoals[i] = [];\n            }\n\n            this.seriesGoals[i].push(ser[i].data[j].goals);\n          } else {\n            if (typeof this.seriesGoals[i] === 'undefined') {\n              this.seriesGoals[i] = [];\n            }\n\n            this.seriesGoals[i].push(null);\n          }\n        } // get seriesX\n\n\n        for (var _j2 = 0; _j2 < ser[activeI].data.length; _j2++) {\n          var isXString = typeof ser[activeI].data[_j2].x === 'string';\n          var isXArr = Array.isArray(ser[activeI].data[_j2].x);\n          var isXDate = !isXArr && !!dt.isValidDate(ser[activeI].data[_j2].x.toString());\n\n          if (isXString || isXDate) {\n            // user supplied '01/01/2017' or a date string (a JS date object is not supported)\n            if (isXString || cnf.xaxis.convertedCatToNumeric) {\n              var isRangeColumn = gl.isBarHorizontal && gl.isRangeData;\n\n              if (cnf.xaxis.type === 'datetime' && !isRangeColumn) {\n                this.twoDSeriesX.push(dt.parseDate(ser[activeI].data[_j2].x));\n              } else {\n                // a category and not a numeric x value\n                this.fallbackToCategory = true;\n                this.twoDSeriesX.push(ser[activeI].data[_j2].x);\n              }\n            } else {\n              if (cnf.xaxis.type === 'datetime') {\n                this.twoDSeriesX.push(dt.parseDate(ser[activeI].data[_j2].x.toString()));\n              } else {\n                gl.dataFormatXNumeric = true;\n                gl.isXNumeric = true;\n                this.twoDSeriesX.push(parseFloat(ser[activeI].data[_j2].x));\n              }\n            }\n          } else if (isXArr) {\n            // a multiline label described in array format\n            this.fallbackToCategory = true;\n            this.twoDSeriesX.push(ser[activeI].data[_j2].x);\n          } else {\n            // a numeric value in x property\n            gl.isXNumeric = true;\n            gl.dataFormatXNumeric = true;\n            this.twoDSeriesX.push(ser[activeI].data[_j2].x);\n          }\n        }\n\n        if (ser[i].data[0] && typeof ser[i].data[0].z !== 'undefined') {\n          for (var t = 0; t < ser[i].data.length; t++) {\n            this.threeDSeries.push(ser[i].data[t].z);\n          }\n\n          gl.isDataXYZ = true;\n        }\n      }\n    }, {\n      key: \"handleRangeData\",\n      value: function handleRangeData(ser, i) {\n        var gl = this.w.globals;\n        var range = {};\n\n        if (this.isFormat2DArray()) {\n          range = this.handleRangeDataFormat('array', ser, i);\n        } else if (this.isFormatXY()) {\n          range = this.handleRangeDataFormat('xy', ser, i);\n        }\n\n        gl.seriesRangeStart.push(range.start);\n        gl.seriesRangeEnd.push(range.end);\n        gl.seriesRangeBar.push(range.rangeUniques); // check for overlaps to avoid clashes in a timeline chart\n\n        gl.seriesRangeBar.forEach(function (sr, si) {\n          if (sr) {\n            sr.forEach(function (sarr, sarri) {\n              sarr.y.forEach(function (arr, arri) {\n                for (var sri = 0; sri < sarr.y.length; sri++) {\n                  if (arri !== sri) {\n                    var range1y1 = arr.y1;\n                    var range1y2 = arr.y2;\n                    var range2y1 = sarr.y[sri].y1;\n                    var range2y2 = sarr.y[sri].y2;\n\n                    if (range1y1 <= range2y2 && range2y1 <= range1y2) {\n                      if (sarr.overlaps.indexOf(arr.rangeName) < 0) {\n                        sarr.overlaps.push(arr.rangeName);\n                      }\n\n                      if (sarr.overlaps.indexOf(sarr.y[sri].rangeName) < 0) {\n                        sarr.overlaps.push(sarr.y[sri].rangeName);\n                      }\n                    }\n                  }\n                }\n              });\n            });\n          }\n        });\n        return range;\n      }\n    }, {\n      key: \"handleCandleStickBoxData\",\n      value: function handleCandleStickBoxData(ser, i) {\n        var gl = this.w.globals;\n        var ohlc = {};\n\n        if (this.isFormat2DArray()) {\n          ohlc = this.handleCandleStickBoxDataFormat('array', ser, i);\n        } else if (this.isFormatXY()) {\n          ohlc = this.handleCandleStickBoxDataFormat('xy', ser, i);\n        }\n\n        gl.seriesCandleO[i] = ohlc.o;\n        gl.seriesCandleH[i] = ohlc.h;\n        gl.seriesCandleM[i] = ohlc.m;\n        gl.seriesCandleL[i] = ohlc.l;\n        gl.seriesCandleC[i] = ohlc.c;\n        return ohlc;\n      }\n    }, {\n      key: \"handleRangeDataFormat\",\n      value: function handleRangeDataFormat(format, ser, i) {\n        var rangeStart = [];\n        var rangeEnd = [];\n        var uniqueKeys = ser[i].data.filter(function (thing, index, self) {\n          return index === self.findIndex(function (t) {\n            return t.x === thing.x;\n          });\n        }).map(function (r, index) {\n          return {\n            x: r.x,\n            overlaps: [],\n            y: []\n          };\n        });\n        var err = 'Please provide [Start, End] values in valid format. Read more https://apexcharts.com/docs/series/#rangecharts';\n        var serObj = new Series(this.ctx);\n        var activeIndex = serObj.getActiveConfigSeriesIndex();\n\n        if (format === 'array') {\n          if (ser[activeIndex].data[0][1].length !== 2) {\n            throw new Error(err);\n          }\n\n          for (var j = 0; j < ser[i].data.length; j++) {\n            rangeStart.push(ser[i].data[j][1][0]);\n            rangeEnd.push(ser[i].data[j][1][1]);\n          }\n        } else if (format === 'xy') {\n          if (ser[activeIndex].data[0].y.length !== 2) {\n            throw new Error(err);\n          }\n\n          var _loop = function _loop(_j3) {\n            var id = Utils$1.randomId();\n            var x = ser[i].data[_j3].x;\n            var y = {\n              y1: ser[i].data[_j3].y[0],\n              y2: ser[i].data[_j3].y[1],\n              rangeName: id\n            }; // mutating config object by adding a new property\n            // TODO: As this is specifically for timeline rangebar charts, update the docs mentioning the series only supports xy format\n\n            ser[i].data[_j3].rangeName = id;\n            var uI = uniqueKeys.findIndex(function (t) {\n              return t.x === x;\n            });\n            uniqueKeys[uI].y.push(y);\n            rangeStart.push(y.y1);\n            rangeEnd.push(y.y2);\n          };\n\n          for (var _j3 = 0; _j3 < ser[i].data.length; _j3++) {\n            _loop(_j3);\n          }\n        }\n\n        return {\n          start: rangeStart,\n          end: rangeEnd,\n          rangeUniques: uniqueKeys\n        };\n      }\n    }, {\n      key: \"handleCandleStickBoxDataFormat\",\n      value: function handleCandleStickBoxDataFormat(format, ser, i) {\n        var w = this.w;\n        var isBoxPlot = w.config.chart.type === 'boxPlot' || w.config.series[i].type === 'boxPlot';\n        var serO = [];\n        var serH = [];\n        var serM = [];\n        var serL = [];\n        var serC = [];\n\n        if (format === 'array') {\n          if (isBoxPlot && ser[i].data[0].length === 6 || !isBoxPlot && ser[i].data[0].length === 5) {\n            for (var j = 0; j < ser[i].data.length; j++) {\n              serO.push(ser[i].data[j][1]);\n              serH.push(ser[i].data[j][2]);\n\n              if (isBoxPlot) {\n                serM.push(ser[i].data[j][3]);\n                serL.push(ser[i].data[j][4]);\n                serC.push(ser[i].data[j][5]);\n              } else {\n                serL.push(ser[i].data[j][3]);\n                serC.push(ser[i].data[j][4]);\n              }\n            }\n          } else {\n            for (var _j4 = 0; _j4 < ser[i].data.length; _j4++) {\n              if (Array.isArray(ser[i].data[_j4][1])) {\n                serO.push(ser[i].data[_j4][1][0]);\n                serH.push(ser[i].data[_j4][1][1]);\n\n                if (isBoxPlot) {\n                  serM.push(ser[i].data[_j4][1][2]);\n                  serL.push(ser[i].data[_j4][1][3]);\n                  serC.push(ser[i].data[_j4][1][4]);\n                } else {\n                  serL.push(ser[i].data[_j4][1][2]);\n                  serC.push(ser[i].data[_j4][1][3]);\n                }\n              }\n            }\n          }\n        } else if (format === 'xy') {\n          for (var _j5 = 0; _j5 < ser[i].data.length; _j5++) {\n            if (Array.isArray(ser[i].data[_j5].y)) {\n              serO.push(ser[i].data[_j5].y[0]);\n              serH.push(ser[i].data[_j5].y[1]);\n\n              if (isBoxPlot) {\n                serM.push(ser[i].data[_j5].y[2]);\n                serL.push(ser[i].data[_j5].y[3]);\n                serC.push(ser[i].data[_j5].y[4]);\n              } else {\n                serL.push(ser[i].data[_j5].y[2]);\n                serC.push(ser[i].data[_j5].y[3]);\n              }\n            }\n          }\n        }\n\n        return {\n          o: serO,\n          h: serH,\n          m: serM,\n          l: serL,\n          c: serC\n        };\n      }\n    }, {\n      key: \"parseDataAxisCharts\",\n      value: function parseDataAxisCharts(ser) {\n        var _this = this;\n\n        var ctx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.ctx;\n        var cnf = this.w.config;\n        var gl = this.w.globals;\n        var dt = new DateTime(ctx);\n        var xlabels = cnf.labels.length > 0 ? cnf.labels.slice() : cnf.xaxis.categories.slice();\n        gl.isRangeBar = cnf.chart.type === 'rangeBar' && gl.isBarHorizontal;\n\n        var handleDates = function handleDates() {\n          for (var j = 0; j < xlabels.length; j++) {\n            if (typeof xlabels[j] === 'string') {\n              // user provided date strings\n              var isDate = dt.isValidDate(xlabels[j]);\n\n              if (isDate) {\n                _this.twoDSeriesX.push(dt.parseDate(xlabels[j]));\n              } else {\n                throw new Error('You have provided invalid Date format. Please provide a valid JavaScript Date');\n              }\n            } else {\n              // user provided timestamps\n              _this.twoDSeriesX.push(xlabels[j]);\n            }\n          }\n        };\n\n        for (var i = 0; i < ser.length; i++) {\n          this.twoDSeries = [];\n          this.twoDSeriesX = [];\n          this.threeDSeries = [];\n\n          if (typeof ser[i].data === 'undefined') {\n            console.error(\"It is a possibility that you may have not included 'data' property in series.\");\n            return;\n          }\n\n          if (cnf.chart.type === 'rangeBar' || cnf.chart.type === 'rangeArea' || ser[i].type === 'rangeBar' || ser[i].type === 'rangeArea') {\n            gl.isRangeData = true;\n            this.handleRangeData(ser, i);\n          }\n\n          if (this.isMultiFormat()) {\n            if (this.isFormat2DArray()) {\n              this.handleFormat2DArray(ser, i);\n            } else if (this.isFormatXY()) {\n              this.handleFormatXY(ser, i);\n            }\n\n            if (cnf.chart.type === 'candlestick' || ser[i].type === 'candlestick' || cnf.chart.type === 'boxPlot' || ser[i].type === 'boxPlot') {\n              this.handleCandleStickBoxData(ser, i);\n            }\n\n            gl.series.push(this.twoDSeries);\n            gl.labels.push(this.twoDSeriesX);\n            gl.seriesX.push(this.twoDSeriesX);\n            gl.seriesGoals = this.seriesGoals;\n\n            if (i === this.activeSeriesIndex && !this.fallbackToCategory) {\n              gl.isXNumeric = true;\n            }\n          } else {\n            if (cnf.xaxis.type === 'datetime') {\n              // user didn't supplied [{x,y}] or [[x,y]], but single array in data.\n              // Also labels/categories were supplied differently\n              gl.isXNumeric = true;\n              handleDates();\n              gl.seriesX.push(this.twoDSeriesX);\n            } else if (cnf.xaxis.type === 'numeric') {\n              gl.isXNumeric = true;\n\n              if (xlabels.length > 0) {\n                this.twoDSeriesX = xlabels;\n                gl.seriesX.push(this.twoDSeriesX);\n              }\n            }\n\n            gl.labels.push(this.twoDSeriesX);\n            var singleArray = ser[i].data.map(function (d) {\n              return Utils$1.parseNumber(d);\n            });\n            gl.series.push(singleArray);\n          }\n\n          gl.seriesZ.push(this.threeDSeries);\n\n          if (ser[i].name !== undefined) {\n            gl.seriesNames.push(ser[i].name);\n          } else {\n            gl.seriesNames.push('series-' + parseInt(i + 1, 10));\n          } // overrided default color if user inputs color with series data\n\n\n          if (ser[i].color !== undefined) {\n            gl.seriesColors.push(ser[i].color);\n          } else {\n            gl.seriesColors.push(undefined);\n          }\n        }\n\n        return this.w;\n      }\n    }, {\n      key: \"parseDataNonAxisCharts\",\n      value: function parseDataNonAxisCharts(ser) {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        gl.series = ser.slice();\n        gl.seriesNames = cnf.labels.slice();\n\n        for (var i = 0; i < gl.series.length; i++) {\n          if (gl.seriesNames[i] === undefined) {\n            gl.seriesNames.push('series-' + (i + 1));\n          }\n        }\n\n        return this.w;\n      }\n      /** User possibly set string categories in xaxis.categories or labels prop\n       * Or didn't set xaxis labels at all - in which case we manually do it.\n       * If user passed series data as [[3, 2], [4, 5]] or [{ x: 3, y: 55 }],\n       * this shouldn't be called\n       * @param {array} ser - the series which user passed to the config\n       */\n\n    }, {\n      key: \"handleExternalLabelsData\",\n      value: function handleExternalLabelsData(ser) {\n        var cnf = this.w.config;\n        var gl = this.w.globals;\n\n        if (cnf.xaxis.categories.length > 0) {\n          // user provided labels in xaxis.category prop\n          gl.labels = cnf.xaxis.categories;\n        } else if (cnf.labels.length > 0) {\n          // user provided labels in labels props\n          gl.labels = cnf.labels.slice();\n        } else if (this.fallbackToCategory) {\n          // user provided labels in x prop in [{ x: 3, y: 55 }] data, and those labels are already stored in gl.labels[0], so just re-arrange the gl.labels array\n          gl.labels = gl.labels[0];\n\n          if (gl.seriesRangeBar.length) {\n            gl.seriesRangeBar.map(function (srt) {\n              srt.forEach(function (sr) {\n                if (gl.labels.indexOf(sr.x) < 0 && sr.x) {\n                  gl.labels.push(sr.x);\n                }\n              });\n            });\n            gl.labels = gl.labels.filter(function (elem, pos, arr) {\n              return arr.indexOf(elem) === pos;\n            });\n          }\n\n          if (cnf.xaxis.convertedCatToNumeric) {\n            var defaults = new Defaults(cnf);\n            defaults.convertCatToNumericXaxis(cnf, this.ctx, gl.seriesX[0]);\n\n            this._generateExternalLabels(ser);\n          }\n        } else {\n          this._generateExternalLabels(ser);\n        }\n      }\n    }, {\n      key: \"_generateExternalLabels\",\n      value: function _generateExternalLabels(ser) {\n        var gl = this.w.globals;\n        var cnf = this.w.config; // user didn't provided any labels, fallback to 1-2-3-4-5\n\n        var labelArr = [];\n\n        if (gl.axisCharts) {\n          if (gl.series.length > 0) {\n            for (var i = 0; i < gl.series[gl.maxValsInArrayIndex].length; i++) {\n              labelArr.push(i + 1);\n            }\n          }\n\n          gl.seriesX = []; // create gl.seriesX as it will be used in calculations of x positions\n\n          for (var _i = 0; _i < ser.length; _i++) {\n            gl.seriesX.push(labelArr);\n          } // turn on the isXNumeric flag to allow minX and maxX to function properly\n\n\n          gl.isXNumeric = true;\n        } // no series to pull labels from, put a 0-10 series\n        // possibly, user collapsed all series. Hence we can't work with above calc\n\n\n        if (labelArr.length === 0) {\n          labelArr = gl.axisCharts ? [] : gl.series.map(function (gls, glsi) {\n            return glsi + 1;\n          });\n\n          for (var _i2 = 0; _i2 < ser.length; _i2++) {\n            gl.seriesX.push(labelArr);\n          }\n        } // Finally, pass the labelArr in gl.labels which will be printed on x-axis\n\n\n        gl.labels = labelArr;\n\n        if (cnf.xaxis.convertedCatToNumeric) {\n          gl.categoryLabels = labelArr.map(function (l) {\n            return cnf.xaxis.labels.formatter(l);\n          });\n        } // Turn on this global flag to indicate no labels were provided by user\n\n\n        gl.noLabelsProvided = true;\n      } // Segregate user provided data into appropriate vars\n\n    }, {\n      key: \"parseData\",\n      value: function parseData(ser) {\n        var w = this.w;\n        var cnf = w.config;\n        var gl = w.globals;\n        this.excludeCollapsedSeriesInYAxis(); // If we detected string in X prop of series, we fallback to category x-axis\n\n        this.fallbackToCategory = false;\n        this.ctx.core.resetGlobals();\n        this.ctx.core.isMultipleY();\n\n        if (gl.axisCharts) {\n          // axisCharts includes line / area / column / scatter\n          this.parseDataAxisCharts(ser);\n        } else {\n          // non-axis charts are pie / donut\n          this.parseDataNonAxisCharts(ser);\n        }\n\n        this.coreUtils.getLargestSeries(); // set Null values to 0 in all series when user hides/shows some series\n\n        if (cnf.chart.type === 'bar' && cnf.chart.stacked) {\n          var series = new Series(this.ctx);\n          gl.series = series.setNullSeriesToZeroValues(gl.series);\n        }\n\n        this.coreUtils.getSeriesTotals();\n\n        if (gl.axisCharts) {\n          this.coreUtils.getStackedSeriesTotals();\n        }\n\n        this.coreUtils.getPercentSeries();\n\n        if (!gl.dataFormatXNumeric && (!gl.isXNumeric || cnf.xaxis.type === 'numeric' && cnf.labels.length === 0 && cnf.xaxis.categories.length === 0)) {\n          // x-axis labels couldn't be detected; hence try searching every option in config\n          this.handleExternalLabelsData(ser);\n        } // check for multiline xaxis\n\n\n        var catLabels = this.coreUtils.getCategoryLabels(gl.labels);\n\n        for (var l = 0; l < catLabels.length; l++) {\n          if (Array.isArray(catLabels[l])) {\n            gl.isMultiLineX = true;\n            break;\n          }\n        }\n      }\n    }, {\n      key: \"excludeCollapsedSeriesInYAxis\",\n      value: function excludeCollapsedSeriesInYAxis() {\n        var _this2 = this;\n\n        var w = this.w;\n        w.globals.ignoreYAxisIndexes = w.globals.collapsedSeries.map(function (collapsed, i) {\n          // fix issue #1215\n          // if stacked, not returning collapsed.index to preserve yaxis\n          if (_this2.w.globals.isMultipleYAxis && !w.config.chart.stacked) {\n            return collapsed.index;\n          }\n        });\n      }\n    }]);\n\n    return Data;\n  }();\n\n  /**\n   * ApexCharts Formatter Class for setting value formatters for axes as well as tooltips.\n   *\n   * @module Formatters\n   **/\n\n  var Formatters = /*#__PURE__*/function () {\n    function Formatters(ctx) {\n      _classCallCheck(this, Formatters);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.tooltipKeyFormat = 'dd MMM';\n    }\n\n    _createClass(Formatters, [{\n      key: \"xLabelFormat\",\n      value: function xLabelFormat(fn, val, timestamp, opts) {\n        var w = this.w;\n\n        if (w.config.xaxis.type === 'datetime') {\n          if (w.config.xaxis.labels.formatter === undefined) {\n            // if user has not specified a custom formatter, use the default tooltip.x.format\n            if (w.config.tooltip.x.formatter === undefined) {\n              var datetimeObj = new DateTime(this.ctx);\n              return datetimeObj.formatDate(datetimeObj.getDate(val), w.config.tooltip.x.format);\n            }\n          }\n        }\n\n        return fn(val, timestamp, opts);\n      }\n    }, {\n      key: \"defaultGeneralFormatter\",\n      value: function defaultGeneralFormatter(val) {\n        if (Array.isArray(val)) {\n          return val.map(function (v) {\n            return v;\n          });\n        } else {\n          return val;\n        }\n      }\n    }, {\n      key: \"defaultYFormatter\",\n      value: function defaultYFormatter(v, yaxe, i) {\n        var w = this.w;\n\n        if (Utils$1.isNumber(v)) {\n          if (w.globals.yValueDecimal !== 0) {\n            v = v.toFixed(yaxe.decimalsInFloat !== undefined ? yaxe.decimalsInFloat : w.globals.yValueDecimal);\n          } else if (w.globals.maxYArr[i] - w.globals.minYArr[i] < 5) {\n            v = v.toFixed(1);\n          } else {\n            v = v.toFixed(0);\n          }\n        }\n\n        return v;\n      }\n    }, {\n      key: \"setLabelFormatters\",\n      value: function setLabelFormatters() {\n        var _this = this;\n\n        var w = this.w;\n\n        w.globals.xaxisTooltipFormatter = function (val) {\n          return _this.defaultGeneralFormatter(val);\n        };\n\n        w.globals.ttKeyFormatter = function (val) {\n          return _this.defaultGeneralFormatter(val);\n        };\n\n        w.globals.ttZFormatter = function (val) {\n          return val;\n        };\n\n        w.globals.legendFormatter = function (val) {\n          return _this.defaultGeneralFormatter(val);\n        }; // formatter function will always overwrite format property\n\n\n        if (w.config.xaxis.labels.formatter !== undefined) {\n          w.globals.xLabelFormatter = w.config.xaxis.labels.formatter;\n        } else {\n          w.globals.xLabelFormatter = function (val) {\n            if (Utils$1.isNumber(val)) {\n              if (!w.config.xaxis.convertedCatToNumeric && w.config.xaxis.type === 'numeric') {\n                if (Utils$1.isNumber(w.config.xaxis.decimalsInFloat)) {\n                  return val.toFixed(w.config.xaxis.decimalsInFloat);\n                } else {\n                  var diff = w.globals.maxX - w.globals.minX;\n\n                  if (diff > 0 && diff < 100) {\n                    return val.toFixed(1);\n                  }\n\n                  return val.toFixed(0);\n                }\n              }\n\n              if (w.globals.isBarHorizontal) {\n                var range = w.globals.maxY - w.globals.minYArr;\n\n                if (range < 4) {\n                  return val.toFixed(1);\n                }\n              }\n\n              return val.toFixed(0);\n            }\n\n            return val;\n          };\n        }\n\n        if (typeof w.config.tooltip.x.formatter === 'function') {\n          w.globals.ttKeyFormatter = w.config.tooltip.x.formatter;\n        } else {\n          w.globals.ttKeyFormatter = w.globals.xLabelFormatter;\n        }\n\n        if (typeof w.config.xaxis.tooltip.formatter === 'function') {\n          w.globals.xaxisTooltipFormatter = w.config.xaxis.tooltip.formatter;\n        }\n\n        if (Array.isArray(w.config.tooltip.y)) {\n          w.globals.ttVal = w.config.tooltip.y;\n        } else {\n          if (w.config.tooltip.y.formatter !== undefined) {\n            w.globals.ttVal = w.config.tooltip.y;\n          }\n        }\n\n        if (w.config.tooltip.z.formatter !== undefined) {\n          w.globals.ttZFormatter = w.config.tooltip.z.formatter;\n        } // legend formatter - if user wants to append any global values of series to legend text\n\n\n        if (w.config.legend.formatter !== undefined) {\n          w.globals.legendFormatter = w.config.legend.formatter;\n        } // formatter function will always overwrite format property\n\n\n        w.config.yaxis.forEach(function (yaxe, i) {\n          if (yaxe.labels.formatter !== undefined) {\n            w.globals.yLabelFormatters[i] = yaxe.labels.formatter;\n          } else {\n            w.globals.yLabelFormatters[i] = function (val) {\n              if (!w.globals.xyCharts) return val;\n\n              if (Array.isArray(val)) {\n                return val.map(function (v) {\n                  return _this.defaultYFormatter(v, yaxe, i);\n                });\n              } else {\n                return _this.defaultYFormatter(val, yaxe, i);\n              }\n            };\n          }\n        });\n        return w.globals;\n      }\n    }, {\n      key: \"heatmapLabelFormatters\",\n      value: function heatmapLabelFormatters() {\n        var w = this.w;\n\n        if (w.config.chart.type === 'heatmap') {\n          w.globals.yAxisScale[0].result = w.globals.seriesNames.slice(); //  get the longest string from the labels array and also apply label formatter to it\n\n          var longest = w.globals.seriesNames.reduce(function (a, b) {\n            return a.length > b.length ? a : b;\n          }, 0);\n          w.globals.yAxisScale[0].niceMax = longest;\n          w.globals.yAxisScale[0].niceMin = longest;\n        }\n      }\n    }]);\n\n    return Formatters;\n  }();\n\n  var AxesUtils = /*#__PURE__*/function () {\n    function AxesUtils(ctx) {\n      _classCallCheck(this, AxesUtils);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    } // Based on the formatter function, get the label text and position\n\n\n    _createClass(AxesUtils, [{\n      key: \"getLabel\",\n      value: function getLabel(labels, timescaleLabels, x, i) {\n        var drawnLabels = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n        var fontSize = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '12px';\n        var w = this.w;\n        var rawLabel = typeof labels[i] === 'undefined' ? '' : labels[i];\n        var label = rawLabel;\n        var xlbFormatter = w.globals.xLabelFormatter;\n        var customFormatter = w.config.xaxis.labels.formatter;\n        var isBold = false;\n        var xFormat = new Formatters(this.ctx);\n        var timestamp = rawLabel;\n        label = xFormat.xLabelFormat(xlbFormatter, rawLabel, timestamp, {\n          i: i,\n          dateFormatter: new DateTime(this.ctx).formatDate,\n          w: w\n        });\n\n        if (customFormatter !== undefined) {\n          label = customFormatter(rawLabel, labels[i], {\n            i: i,\n            dateFormatter: new DateTime(this.ctx).formatDate,\n            w: w\n          });\n        }\n\n        var determineHighestUnit = function determineHighestUnit(unit) {\n          var highestUnit = null;\n          timescaleLabels.forEach(function (t) {\n            if (t.unit === 'month') {\n              highestUnit = 'year';\n            } else if (t.unit === 'day') {\n              highestUnit = 'month';\n            } else if (t.unit === 'hour') {\n              highestUnit = 'day';\n            } else if (t.unit === 'minute') {\n              highestUnit = 'hour';\n            }\n          });\n          return highestUnit === unit;\n        };\n\n        if (timescaleLabels.length > 0) {\n          isBold = determineHighestUnit(timescaleLabels[i].unit);\n          x = timescaleLabels[i].position;\n          label = timescaleLabels[i].value;\n        } else {\n          if (w.config.xaxis.type === 'datetime' && customFormatter === undefined) {\n            label = '';\n          }\n        }\n\n        if (typeof label === 'undefined') label = '';\n        label = Array.isArray(label) ? label : label.toString();\n        var graphics = new Graphics(this.ctx);\n        var textRect = {};\n\n        if (w.globals.rotateXLabels) {\n          textRect = graphics.getTextRects(label, parseInt(fontSize, 10), null, \"rotate(\".concat(w.config.xaxis.labels.rotate, \" 0 0)\"), false);\n        } else {\n          textRect = graphics.getTextRects(label, parseInt(fontSize, 10));\n        }\n\n        var allowDuplicatesInTimeScale = !w.config.xaxis.labels.showDuplicates && this.ctx.timeScale;\n\n        if (!Array.isArray(label) && (label.indexOf('NaN') === 0 || label.toLowerCase().indexOf('invalid') === 0 || label.toLowerCase().indexOf('infinity') >= 0 || drawnLabels.indexOf(label) >= 0 && allowDuplicatesInTimeScale)) {\n          label = '';\n        }\n\n        return {\n          x: x,\n          text: label,\n          textRect: textRect,\n          isBold: isBold\n        };\n      }\n    }, {\n      key: \"checkLabelBasedOnTickamount\",\n      value: function checkLabelBasedOnTickamount(i, label, labelsLen) {\n        var w = this.w;\n        var ticks = w.config.xaxis.tickAmount;\n        if (ticks === 'dataPoints') ticks = Math.round(w.globals.gridWidth / 120);\n        if (ticks > labelsLen) return label;\n        var tickMultiple = Math.round(labelsLen / (ticks + 1));\n\n        if (i % tickMultiple === 0) {\n          return label;\n        } else {\n          label.text = '';\n        }\n\n        return label;\n      }\n    }, {\n      key: \"checkForOverflowingLabels\",\n      value: function checkForOverflowingLabels(i, label, labelsLen, drawnLabels, drawnLabelsRects) {\n        var w = this.w;\n\n        if (i === 0) {\n          // check if first label is being truncated\n          if (w.globals.skipFirstTimelinelabel) {\n            label.text = '';\n          }\n        }\n\n        if (i === labelsLen - 1) {\n          // check if last label is being truncated\n          if (w.globals.skipLastTimelinelabel) {\n            label.text = '';\n          }\n        }\n\n        if (w.config.xaxis.labels.hideOverlappingLabels && drawnLabels.length > 0) {\n          var prev = drawnLabelsRects[drawnLabelsRects.length - 1];\n\n          if (label.x < prev.textRect.width / (w.globals.rotateXLabels ? Math.abs(w.config.xaxis.labels.rotate) / 12 : 1.01) + prev.x) {\n            label.text = '';\n          }\n        }\n\n        return label;\n      }\n    }, {\n      key: \"checkForReversedLabels\",\n      value: function checkForReversedLabels(i, labels) {\n        var w = this.w;\n\n        if (w.config.yaxis[i] && w.config.yaxis[i].reversed) {\n          labels.reverse();\n        }\n\n        return labels;\n      }\n    }, {\n      key: \"isYAxisHidden\",\n      value: function isYAxisHidden(index) {\n        var w = this.w;\n        var coreUtils = new CoreUtils(this.ctx);\n        return !w.config.yaxis[index].show || !w.config.yaxis[index].showForNullSeries && coreUtils.isSeriesNull(index) && w.globals.collapsedSeriesIndices.indexOf(index) === -1;\n      } // get the label color for y-axis\n      // realIndex is the actual series index, while i is the tick Index\n\n    }, {\n      key: \"getYAxisForeColor\",\n      value: function getYAxisForeColor(yColors, realIndex) {\n        var w = this.w;\n\n        if (Array.isArray(yColors) && w.globals.yAxisScale[realIndex]) {\n          this.ctx.theme.pushExtraColors(yColors, w.globals.yAxisScale[realIndex].result.length, false);\n        }\n\n        return yColors;\n      }\n    }, {\n      key: \"drawYAxisTicks\",\n      value: function drawYAxisTicks(x, tickAmount, axisBorder, axisTicks, realIndex, labelsDivider, elYaxis) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx); // initial label position = 0;\n\n        var t = w.globals.translateY;\n\n        if (axisTicks.show && tickAmount > 0) {\n          if (w.config.yaxis[realIndex].opposite === true) x = x + axisTicks.width;\n\n          for (var i = tickAmount; i >= 0; i--) {\n            var tY = t + tickAmount / 10 + w.config.yaxis[realIndex].labels.offsetY - 1;\n\n            if (w.globals.isBarHorizontal) {\n              tY = labelsDivider * i;\n            }\n\n            if (w.config.chart.type === 'heatmap') {\n              tY = tY + labelsDivider / 2;\n            }\n\n            var elTick = graphics.drawLine(x + axisBorder.offsetX - axisTicks.width + axisTicks.offsetX, tY + axisTicks.offsetY, x + axisBorder.offsetX + axisTicks.offsetX, tY + axisTicks.offsetY, axisTicks.color);\n            elYaxis.add(elTick);\n            t = t + labelsDivider;\n          }\n        }\n      }\n    }]);\n\n    return AxesUtils;\n  }();\n\n  var Exports = /*#__PURE__*/function () {\n    function Exports(ctx) {\n      _classCallCheck(this, Exports);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Exports, [{\n      key: \"scaleSvgNode\",\n      value: function scaleSvgNode(svg, scale) {\n        // get current both width and height of the svg\n        var svgWidth = parseFloat(svg.getAttributeNS(null, 'width'));\n        var svgHeight = parseFloat(svg.getAttributeNS(null, 'height')); // set new width and height based on the scale\n\n        svg.setAttributeNS(null, 'width', svgWidth * scale);\n        svg.setAttributeNS(null, 'height', svgHeight * scale);\n        svg.setAttributeNS(null, 'viewBox', '0 0 ' + svgWidth + ' ' + svgHeight);\n      }\n    }, {\n      key: \"fixSvgStringForIe11\",\n      value: function fixSvgStringForIe11(svgData) {\n        // IE11 generates broken SVG that we have to fix by using regex\n        if (!Utils$1.isIE11()) {\n          // not IE11 - noop\n          return svgData.replace(/&nbsp;/g, '&#160;');\n        } // replace second occurrence of \"xmlns\" attribute with \"xmlns:xlink\" with correct url + add xmlns:svgjs\n\n\n        var nXmlnsSeen = 0;\n        var result = svgData.replace(/xmlns=\"http:\\/\\/www.w3.org\\/2000\\/svg\"/g, function (match) {\n          nXmlnsSeen++;\n          return nXmlnsSeen === 2 ? 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:svgjs=\"http://svgjs.dev\"' : match;\n        }); // remove the invalid empty namespace declarations\n\n        result = result.replace(/xmlns:NS\\d+=\"\"/g, ''); // remove these broken namespaces from attributes\n\n        result = result.replace(/NS\\d+:(\\w+:\\w+=\")/g, '$1');\n        return result;\n      }\n    }, {\n      key: \"getSvgString\",\n      value: function getSvgString(scale) {\n        var svgString = this.w.globals.dom.Paper.svg(); // in case the scale is different than 1, the svg needs to be rescaled\n\n        if (scale !== 1) {\n          // clone the svg node so it remains intact in the UI\n          var svgNode = this.w.globals.dom.Paper.node.cloneNode(true); // scale the image\n\n          this.scaleSvgNode(svgNode, scale); // get the string representation of the svgNode\n\n          svgString = new XMLSerializer().serializeToString(svgNode);\n        }\n\n        return this.fixSvgStringForIe11(svgString);\n      }\n    }, {\n      key: \"cleanup\",\n      value: function cleanup() {\n        var w = this.w; // hide some elements to avoid printing them on exported svg\n\n        var xcrosshairs = w.globals.dom.baseEl.getElementsByClassName('apexcharts-xcrosshairs');\n        var ycrosshairs = w.globals.dom.baseEl.getElementsByClassName('apexcharts-ycrosshairs');\n        var zoomSelectionRects = w.globals.dom.baseEl.querySelectorAll('.apexcharts-zoom-rect, .apexcharts-selection-rect');\n        Array.prototype.forEach.call(zoomSelectionRects, function (z) {\n          z.setAttribute('width', 0);\n        });\n\n        if (xcrosshairs && xcrosshairs[0]) {\n          xcrosshairs[0].setAttribute('x', -500);\n          xcrosshairs[0].setAttribute('x1', -500);\n          xcrosshairs[0].setAttribute('x2', -500);\n        }\n\n        if (ycrosshairs && ycrosshairs[0]) {\n          ycrosshairs[0].setAttribute('y', -100);\n          ycrosshairs[0].setAttribute('y1', -100);\n          ycrosshairs[0].setAttribute('y2', -100);\n        }\n      }\n    }, {\n      key: \"svgUrl\",\n      value: function svgUrl() {\n        this.cleanup();\n        var svgData = this.getSvgString();\n        var svgBlob = new Blob([svgData], {\n          type: 'image/svg+xml;charset=utf-8'\n        });\n        return URL.createObjectURL(svgBlob);\n      }\n    }, {\n      key: \"dataURI\",\n      value: function dataURI(options) {\n        var _this = this;\n\n        return new Promise(function (resolve) {\n          var w = _this.w;\n          var scale = options ? options.scale || options.width / w.globals.svgWidth : 1;\n\n          _this.cleanup();\n\n          var canvas = document.createElement('canvas');\n          canvas.width = w.globals.svgWidth * scale;\n          canvas.height = parseInt(w.globals.dom.elWrap.style.height, 10) * scale; // because of resizeNonAxisCharts\n\n          var canvasBg = w.config.chart.background === 'transparent' ? '#fff' : w.config.chart.background;\n          var ctx = canvas.getContext('2d');\n          ctx.fillStyle = canvasBg;\n          ctx.fillRect(0, 0, canvas.width * scale, canvas.height * scale);\n\n          var svgData = _this.getSvgString(scale);\n\n          if (window.canvg && Utils$1.isIE11()) {\n            // use canvg as a polyfill to workaround ie11 considering a canvas with loaded svg 'unsafe'\n            // without ignoreClear we lose our background color; without ignoreDimensions some grid lines become invisible\n            var v = window.canvg.Canvg.fromString(ctx, svgData, {\n              ignoreClear: true,\n              ignoreDimensions: true\n            }); // render the svg to canvas\n\n            v.start();\n            var blob = canvas.msToBlob(); // dispose - missing this will cause a memory leak\n\n            v.stop();\n            resolve({\n              blob: blob\n            });\n          } else {\n            var svgUrl = 'data:image/svg+xml,' + encodeURIComponent(svgData);\n            var img = new Image();\n            img.crossOrigin = 'anonymous';\n\n            img.onload = function () {\n              ctx.drawImage(img, 0, 0);\n\n              if (canvas.msToBlob) {\n                // IE and Edge can't navigate to data urls, so we return the blob instead\n                var _blob = canvas.msToBlob();\n\n                resolve({\n                  blob: _blob\n                });\n              } else {\n                var imgURI = canvas.toDataURL('image/png');\n                resolve({\n                  imgURI: imgURI\n                });\n              }\n            };\n\n            img.src = svgUrl;\n          }\n        });\n      }\n    }, {\n      key: \"exportToSVG\",\n      value: function exportToSVG() {\n        this.triggerDownload(this.svgUrl(), this.w.config.chart.toolbar.export.svg.filename, '.svg');\n      }\n    }, {\n      key: \"exportToPng\",\n      value: function exportToPng() {\n        var _this2 = this;\n\n        this.dataURI().then(function (_ref) {\n          var imgURI = _ref.imgURI,\n              blob = _ref.blob;\n\n          if (blob) {\n            navigator.msSaveOrOpenBlob(blob, _this2.w.globals.chartID + '.png');\n          } else {\n            _this2.triggerDownload(imgURI, _this2.w.config.chart.toolbar.export.png.filename, '.png');\n          }\n        });\n      }\n    }, {\n      key: \"exportToCSV\",\n      value: function exportToCSV(_ref2) {\n        var _this3 = this;\n\n        var series = _ref2.series,\n            columnDelimiter = _ref2.columnDelimiter,\n            _ref2$lineDelimiter = _ref2.lineDelimiter,\n            lineDelimiter = _ref2$lineDelimiter === void 0 ? '\\n' : _ref2$lineDelimiter;\n        var w = this.w;\n        var columns = [];\n        var rows = [];\n        var result = '';\n        var universalBOM = \"\\uFEFF\";\n\n        var isTimeStamp = function isTimeStamp(num) {\n          return w.config.xaxis.type === 'datetime' && String(num).length >= 10;\n        };\n\n        var dataFormat = new Data(this.ctx);\n        var axesUtils = new AxesUtils(this.ctx);\n\n        var getCat = function getCat(i) {\n          var cat = ''; // pie / donut/ radial\n\n          if (!w.globals.axisCharts) {\n            cat = w.config.labels[i];\n          } else {\n            // xy charts\n            // non datetime\n            if (w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) {\n              if (w.globals.isBarHorizontal) {\n                var lbFormatter = w.globals.yLabelFormatters[0];\n                var sr = new Series(_this3.ctx);\n                var activeSeries = sr.getActiveConfigSeriesIndex();\n                cat = lbFormatter(w.globals.labels[i], {\n                  seriesIndex: activeSeries,\n                  dataPointIndex: i,\n                  w: w\n                });\n              } else {\n                cat = axesUtils.getLabel(w.globals.labels, w.globals.timescaleLabels, 0, i).text;\n              }\n            } // datetime, but labels specified in categories or labels\n\n\n            if (w.config.xaxis.type === 'datetime') {\n              if (w.config.xaxis.categories.length) {\n                cat = w.config.xaxis.categories[i];\n              } else if (w.config.labels.length) {\n                cat = w.config.labels[i];\n              }\n            }\n          }\n\n          if (Array.isArray(cat)) {\n            cat = cat.join(' ');\n          }\n\n          return Utils$1.isNumber(cat) ? cat : cat.split(columnDelimiter).join('');\n        };\n\n        var handleAxisRowsColumns = function handleAxisRowsColumns(s, sI) {\n          if (columns.length && sI === 0) {\n            rows.push(columns.join(columnDelimiter));\n          }\n\n          if (s.data && s.data.length) {\n            for (var i = 0; i < s.data.length; i++) {\n              columns = [];\n              var cat = getCat(i);\n\n              if (!cat) {\n                if (dataFormat.isFormatXY()) {\n                  cat = series[sI].data[i].x;\n                } else if (dataFormat.isFormat2DArray()) {\n                  cat = series[sI].data[i] ? series[sI].data[i][0] : '';\n                }\n              }\n\n              if (sI === 0) {\n                columns.push(isTimeStamp(cat) ? w.config.chart.toolbar.export.csv.dateFormatter(cat) : Utils$1.isNumber(cat) ? cat : cat.split(columnDelimiter).join(''));\n\n                for (var ci = 0; ci < w.globals.series.length; ci++) {\n                  columns.push(w.globals.series[ci][i]);\n                }\n              }\n\n              if (w.config.chart.type === 'candlestick' || s.type && s.type === 'candlestick') {\n                columns.pop();\n                columns.push(w.globals.seriesCandleO[sI][i]);\n                columns.push(w.globals.seriesCandleH[sI][i]);\n                columns.push(w.globals.seriesCandleL[sI][i]);\n                columns.push(w.globals.seriesCandleC[sI][i]);\n              }\n\n              if (w.config.chart.type === 'boxPlot' || s.type && s.type === 'boxPlot') {\n                columns.pop();\n                columns.push(w.globals.seriesCandleO[sI][i]);\n                columns.push(w.globals.seriesCandleH[sI][i]);\n                columns.push(w.globals.seriesCandleM[sI][i]);\n                columns.push(w.globals.seriesCandleL[sI][i]);\n                columns.push(w.globals.seriesCandleC[sI][i]);\n              }\n\n              if (w.config.chart.type === 'rangeBar') {\n                columns.pop();\n                columns.push(w.globals.seriesRangeStart[sI][i]);\n                columns.push(w.globals.seriesRangeEnd[sI][i]);\n              }\n\n              if (columns.length) {\n                rows.push(columns.join(columnDelimiter));\n              }\n            }\n          }\n        };\n\n        columns.push(w.config.chart.toolbar.export.csv.headerCategory);\n        series.map(function (s, sI) {\n          var sname = s.name ? s.name : \"series-\".concat(sI);\n\n          if (w.globals.axisCharts) {\n            columns.push(sname.split(columnDelimiter).join('') ? sname.split(columnDelimiter).join('') : \"series-\".concat(sI));\n          }\n        });\n\n        if (!w.globals.axisCharts) {\n          columns.push(w.config.chart.toolbar.export.csv.headerValue);\n          rows.push(columns.join(columnDelimiter));\n        }\n\n        series.map(function (s, sI) {\n          if (w.globals.axisCharts) {\n            handleAxisRowsColumns(s, sI);\n          } else {\n            columns = [];\n            columns.push(w.globals.labels[sI].split(columnDelimiter).join(''));\n            columns.push(w.globals.series[sI]);\n            rows.push(columns.join(columnDelimiter));\n          }\n        });\n        result += rows.join(lineDelimiter);\n        this.triggerDownload('data:text/csv; charset=utf-8,' + encodeURIComponent(universalBOM + result), w.config.chart.toolbar.export.csv.filename, '.csv');\n      }\n    }, {\n      key: \"triggerDownload\",\n      value: function triggerDownload(href, filename, ext) {\n        var downloadLink = document.createElement('a');\n        downloadLink.href = href;\n        downloadLink.download = (filename ? filename : this.w.globals.chartID) + ext;\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n      }\n    }]);\n\n    return Exports;\n  }();\n\n  /**\n   * ApexCharts XAxis Class for drawing X-Axis.\n   *\n   * @module XAxis\n   **/\n\n  var XAxis = /*#__PURE__*/function () {\n    function XAxis(ctx) {\n      _classCallCheck(this, XAxis);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.axesUtils = new AxesUtils(ctx);\n      this.xaxisLabels = w.globals.labels.slice();\n\n      if (w.globals.timescaleLabels.length > 0 && !w.globals.isBarHorizontal) {\n        //  timeline labels are there and chart is not rangeabr timeline\n        this.xaxisLabels = w.globals.timescaleLabels.slice();\n      }\n\n      if (w.config.xaxis.overwriteCategories) {\n        this.xaxisLabels = w.config.xaxis.overwriteCategories;\n      }\n\n      this.drawnLabels = [];\n      this.drawnLabelsRects = [];\n\n      if (w.config.xaxis.position === 'top') {\n        this.offY = 0;\n      } else {\n        this.offY = w.globals.gridHeight + 1;\n      }\n\n      this.offY = this.offY + w.config.xaxis.axisBorder.offsetY;\n      this.isCategoryBarHorizontal = w.config.chart.type === 'bar' && w.config.plotOptions.bar.horizontal;\n      this.xaxisFontSize = w.config.xaxis.labels.style.fontSize;\n      this.xaxisFontFamily = w.config.xaxis.labels.style.fontFamily;\n      this.xaxisForeColors = w.config.xaxis.labels.style.colors;\n      this.xaxisBorderWidth = w.config.xaxis.axisBorder.width;\n\n      if (this.isCategoryBarHorizontal) {\n        this.xaxisBorderWidth = w.config.yaxis[0].axisBorder.width.toString();\n      }\n\n      if (this.xaxisBorderWidth.indexOf('%') > -1) {\n        this.xaxisBorderWidth = w.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10) / 100;\n      } else {\n        this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10);\n      }\n\n      this.xaxisBorderHeight = w.config.xaxis.axisBorder.height; // For bars, we will only consider single y xais,\n      // as we are not providing multiple yaxis for bar charts\n\n      this.yaxis = w.config.yaxis[0];\n    }\n\n    _createClass(XAxis, [{\n      key: \"drawXaxis\",\n      value: function drawXaxis() {\n        var _this = this;\n\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var elXaxis = graphics.group({\n          class: 'apexcharts-xaxis',\n          transform: \"translate(\".concat(w.config.xaxis.offsetX, \", \").concat(w.config.xaxis.offsetY, \")\")\n        });\n        var elXaxisTexts = graphics.group({\n          class: 'apexcharts-xaxis-texts-g',\n          transform: \"translate(\".concat(w.globals.translateXAxisX, \", \").concat(w.globals.translateXAxisY, \")\")\n        });\n        elXaxis.add(elXaxisTexts);\n        var colWidth; // initial x Position (keep adding column width in the loop)\n\n        var xPos = w.globals.padHorizontal;\n        var labels = [];\n\n        for (var i = 0; i < this.xaxisLabels.length; i++) {\n          labels.push(this.xaxisLabels[i]);\n        }\n\n        var labelsLen = labels.length;\n\n        if (w.globals.isXNumeric) {\n          var len = labelsLen > 1 ? labelsLen - 1 : labelsLen;\n          colWidth = w.globals.gridWidth / len;\n          xPos = xPos + colWidth / 2 + w.config.xaxis.labels.offsetX;\n        } else {\n          colWidth = w.globals.gridWidth / labels.length;\n          xPos = xPos + colWidth + w.config.xaxis.labels.offsetX;\n        }\n\n        var _loop = function _loop(_i) {\n          var x = xPos - colWidth / 2 + w.config.xaxis.labels.offsetX;\n\n          if (_i === 0 && labelsLen === 1 && colWidth / 2 === xPos && w.globals.dataPoints === 1) {\n            // single datapoint\n            x = w.globals.gridWidth / 2;\n          }\n\n          var label = _this.axesUtils.getLabel(labels, w.globals.timescaleLabels, x, _i, _this.drawnLabels, _this.xaxisFontSize);\n\n          var offsetYCorrection = 28;\n\n          if (w.globals.rotateXLabels) {\n            offsetYCorrection = 22;\n          }\n\n          var isCategoryTickAmounts = typeof w.config.xaxis.tickAmount !== 'undefined' && w.config.xaxis.tickAmount !== 'dataPoints' && w.config.xaxis.type !== 'datetime';\n\n          if (isCategoryTickAmounts) {\n            label = _this.axesUtils.checkLabelBasedOnTickamount(_i, label, labelsLen);\n          } else {\n            label = _this.axesUtils.checkForOverflowingLabels(_i, label, labelsLen, _this.drawnLabels, _this.drawnLabelsRects);\n          }\n\n          var getCatForeColor = function getCatForeColor() {\n            return w.config.xaxis.convertedCatToNumeric ? _this.xaxisForeColors[w.globals.minX + _i - 1] : _this.xaxisForeColors[_i];\n          };\n\n          if (label.text) {\n            w.globals.xaxisLabelsCount++;\n          }\n\n          if (w.config.xaxis.labels.show) {\n            var elText = graphics.drawText({\n              x: label.x,\n              y: _this.offY + w.config.xaxis.labels.offsetY + offsetYCorrection - (w.config.xaxis.position === 'top' ? w.globals.xAxisHeight + w.config.xaxis.axisTicks.height - 2 : 0),\n              text: label.text,\n              textAnchor: 'middle',\n              fontWeight: label.isBold ? 600 : w.config.xaxis.labels.style.fontWeight,\n              fontSize: _this.xaxisFontSize,\n              fontFamily: _this.xaxisFontFamily,\n              foreColor: Array.isArray(_this.xaxisForeColors) ? getCatForeColor() : _this.xaxisForeColors,\n              isPlainText: false,\n              cssClass: 'apexcharts-xaxis-label ' + w.config.xaxis.labels.style.cssClass\n            });\n            elXaxisTexts.add(elText);\n            var elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title');\n            elTooltipTitle.textContent = Array.isArray(label.text) ? label.text.join(' ') : label.text;\n            elText.node.appendChild(elTooltipTitle);\n\n            if (label.text !== '') {\n              _this.drawnLabels.push(label.text);\n\n              _this.drawnLabelsRects.push(label);\n            }\n          }\n\n          xPos = xPos + colWidth;\n        };\n\n        for (var _i = 0; _i <= labelsLen - 1; _i++) {\n          _loop(_i);\n        }\n\n        if (w.config.xaxis.title.text !== undefined) {\n          var elXaxisTitle = graphics.group({\n            class: 'apexcharts-xaxis-title'\n          });\n          var elXAxisTitleText = graphics.drawText({\n            x: w.globals.gridWidth / 2 + w.config.xaxis.title.offsetX,\n            y: this.offY + parseFloat(this.xaxisFontSize) + w.globals.xAxisLabelsHeight + w.config.xaxis.title.offsetY,\n            text: w.config.xaxis.title.text,\n            textAnchor: 'middle',\n            fontSize: w.config.xaxis.title.style.fontSize,\n            fontFamily: w.config.xaxis.title.style.fontFamily,\n            fontWeight: w.config.xaxis.title.style.fontWeight,\n            foreColor: w.config.xaxis.title.style.color,\n            cssClass: 'apexcharts-xaxis-title-text ' + w.config.xaxis.title.style.cssClass\n          });\n          elXaxisTitle.add(elXAxisTitleText);\n          elXaxis.add(elXaxisTitle);\n        }\n\n        if (w.config.xaxis.axisBorder.show) {\n          var offX = w.globals.barPadForNumericAxis;\n          var elHorzLine = graphics.drawLine(w.globals.padHorizontal + w.config.xaxis.axisBorder.offsetX - offX, this.offY, this.xaxisBorderWidth + offX, this.offY, w.config.xaxis.axisBorder.color, 0, this.xaxisBorderHeight);\n          elXaxis.add(elHorzLine);\n        }\n\n        return elXaxis;\n      } // this actually becomes the vertical axis (for bar charts)\n\n    }, {\n      key: \"drawXaxisInversed\",\n      value: function drawXaxisInversed(realIndex) {\n        var _this2 = this;\n\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var translateYAxisX = w.config.yaxis[0].opposite ? w.globals.translateYAxisX[realIndex] : 0;\n        var elYaxis = graphics.group({\n          class: 'apexcharts-yaxis apexcharts-xaxis-inversed',\n          rel: realIndex\n        });\n        var elYaxisTexts = graphics.group({\n          class: 'apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g',\n          transform: 'translate(' + translateYAxisX + ', 0)'\n        });\n        elYaxis.add(elYaxisTexts);\n        var colHeight; // initial x Position (keep adding column width in the loop)\n\n        var yPos;\n        var labels = [];\n\n        if (w.config.yaxis[realIndex].show) {\n          for (var i = 0; i < this.xaxisLabels.length; i++) {\n            labels.push(this.xaxisLabels[i]);\n          }\n        }\n\n        colHeight = w.globals.gridHeight / labels.length;\n        yPos = -(colHeight / 2.2);\n        var lbFormatter = w.globals.yLabelFormatters[0];\n        var ylabels = w.config.yaxis[0].labels;\n\n        if (ylabels.show) {\n          var _loop2 = function _loop2(_i2) {\n            var label = typeof labels[_i2] === 'undefined' ? '' : labels[_i2];\n            label = lbFormatter(label, {\n              seriesIndex: realIndex,\n              dataPointIndex: _i2,\n              w: w\n            });\n\n            var yColors = _this2.axesUtils.getYAxisForeColor(ylabels.style.colors, realIndex);\n\n            var getForeColor = function getForeColor() {\n              return Array.isArray(yColors) ? yColors[_i2] : yColors;\n            };\n\n            var multiY = 0;\n\n            if (Array.isArray(label)) {\n              multiY = label.length / 2 * parseInt(ylabels.style.fontSize, 10);\n            }\n\n            var elLabel = graphics.drawText({\n              x: ylabels.offsetX - 15,\n              y: yPos + colHeight + ylabels.offsetY - multiY,\n              text: label,\n              textAnchor: _this2.yaxis.opposite ? 'start' : 'end',\n              foreColor: getForeColor(),\n              fontSize: ylabels.style.fontSize,\n              fontFamily: ylabels.style.fontFamily,\n              fontWeight: ylabels.style.fontWeight,\n              isPlainText: false,\n              cssClass: 'apexcharts-yaxis-label ' + ylabels.style.cssClass\n            });\n            elYaxisTexts.add(elLabel);\n            var elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title');\n            elTooltipTitle.textContent = Array.isArray(label) ? label.join(' ') : label;\n            elLabel.node.appendChild(elTooltipTitle);\n\n            if (w.config.yaxis[realIndex].labels.rotate !== 0) {\n              var labelRotatingCenter = graphics.rotateAroundCenter(elLabel.node);\n              elLabel.node.setAttribute('transform', \"rotate(\".concat(w.config.yaxis[realIndex].labels.rotate, \" 0 \").concat(labelRotatingCenter.y, \")\"));\n            }\n\n            yPos = yPos + colHeight;\n          };\n\n          for (var _i2 = 0; _i2 <= labels.length - 1; _i2++) {\n            _loop2(_i2);\n          }\n        }\n\n        if (w.config.yaxis[0].title.text !== undefined) {\n          var elXaxisTitle = graphics.group({\n            class: 'apexcharts-yaxis-title apexcharts-xaxis-title-inversed',\n            transform: 'translate(' + translateYAxisX + ', 0)'\n          });\n          var elXAxisTitleText = graphics.drawText({\n            x: 0,\n            y: w.globals.gridHeight / 2,\n            text: w.config.yaxis[0].title.text,\n            textAnchor: 'middle',\n            foreColor: w.config.yaxis[0].title.style.color,\n            fontSize: w.config.yaxis[0].title.style.fontSize,\n            fontWeight: w.config.yaxis[0].title.style.fontWeight,\n            fontFamily: w.config.yaxis[0].title.style.fontFamily,\n            cssClass: 'apexcharts-yaxis-title-text ' + w.config.yaxis[0].title.style.cssClass\n          });\n          elXaxisTitle.add(elXAxisTitleText);\n          elYaxis.add(elXaxisTitle);\n        }\n\n        var offX = 0;\n\n        if (this.isCategoryBarHorizontal && w.config.yaxis[0].opposite) {\n          offX = w.globals.gridWidth;\n        }\n\n        var axisBorder = w.config.xaxis.axisBorder;\n\n        if (axisBorder.show) {\n          var elVerticalLine = graphics.drawLine(w.globals.padHorizontal + axisBorder.offsetX + offX, 1 + axisBorder.offsetY, w.globals.padHorizontal + axisBorder.offsetX + offX, w.globals.gridHeight + axisBorder.offsetY, axisBorder.color, 0);\n          elYaxis.add(elVerticalLine);\n        }\n\n        if (w.config.yaxis[0].axisTicks.show) {\n          this.axesUtils.drawYAxisTicks(offX, labels.length, w.config.yaxis[0].axisBorder, w.config.yaxis[0].axisTicks, 0, colHeight, elYaxis);\n        }\n\n        return elYaxis;\n      }\n    }, {\n      key: \"drawXaxisTicks\",\n      value: function drawXaxisTicks(x1, appendToElement) {\n        var w = this.w;\n        var x2 = x1;\n        if (x1 < 0 || x1 - 2 > w.globals.gridWidth) return;\n        var y1 = this.offY + w.config.xaxis.axisTicks.offsetY;\n        var y2 = y1 + w.config.xaxis.axisTicks.height;\n\n        if (w.config.xaxis.position === 'top') {\n          y2 = y1 - w.config.xaxis.axisTicks.height;\n        }\n\n        if (w.config.xaxis.axisTicks.show) {\n          var graphics = new Graphics(this.ctx);\n          var line = graphics.drawLine(x1 + w.config.xaxis.axisTicks.offsetX, y1 + w.config.xaxis.offsetY, x2 + w.config.xaxis.axisTicks.offsetX, y2 + w.config.xaxis.offsetY, w.config.xaxis.axisTicks.color); // we are not returning anything, but appending directly to the element passed in param\n\n          appendToElement.add(line);\n          line.node.classList.add('apexcharts-xaxis-tick');\n        }\n      }\n    }, {\n      key: \"getXAxisTicksPositions\",\n      value: function getXAxisTicksPositions() {\n        var w = this.w;\n        var xAxisTicksPositions = [];\n        var xCount = this.xaxisLabels.length;\n        var x1 = w.globals.padHorizontal;\n\n        if (w.globals.timescaleLabels.length > 0) {\n          for (var i = 0; i < xCount; i++) {\n            x1 = this.xaxisLabels[i].position;\n            xAxisTicksPositions.push(x1);\n          }\n        } else {\n          var xCountForCategoryCharts = xCount;\n\n          for (var _i3 = 0; _i3 < xCountForCategoryCharts; _i3++) {\n            var x1Count = xCountForCategoryCharts;\n\n            if (w.globals.isXNumeric && w.config.chart.type !== 'bar') {\n              x1Count -= 1;\n            }\n\n            x1 = x1 + w.globals.gridWidth / x1Count;\n            xAxisTicksPositions.push(x1);\n          }\n        }\n\n        return xAxisTicksPositions;\n      } // to rotate x-axis labels or to put ... for longer text in xaxis\n\n    }, {\n      key: \"xAxisLabelCorrections\",\n      value: function xAxisLabelCorrections() {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var xAxis = w.globals.dom.baseEl.querySelector('.apexcharts-xaxis-texts-g');\n        var xAxisTexts = w.globals.dom.baseEl.querySelectorAll('.apexcharts-xaxis-texts-g text');\n        var yAxisTextsInversed = w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxis-inversed text');\n        var xAxisTextsInversed = w.globals.dom.baseEl.querySelectorAll('.apexcharts-xaxis-inversed-texts-g text tspan');\n\n        if (w.globals.rotateXLabels || w.config.xaxis.labels.rotateAlways) {\n          for (var xat = 0; xat < xAxisTexts.length; xat++) {\n            var textRotatingCenter = graphics.rotateAroundCenter(xAxisTexts[xat]);\n            textRotatingCenter.y = textRotatingCenter.y - 1; // + tickWidth/4;\n\n            textRotatingCenter.x = textRotatingCenter.x + 1;\n            xAxisTexts[xat].setAttribute('transform', \"rotate(\".concat(w.config.xaxis.labels.rotate, \" \").concat(textRotatingCenter.x, \" \").concat(textRotatingCenter.y, \")\"));\n            xAxisTexts[xat].setAttribute('text-anchor', \"end\");\n            var offsetHeight = 10;\n            xAxis.setAttribute('transform', \"translate(0, \".concat(-offsetHeight, \")\"));\n            var tSpan = xAxisTexts[xat].childNodes;\n\n            if (w.config.xaxis.labels.trim) {\n              Array.prototype.forEach.call(tSpan, function (ts) {\n                graphics.placeTextWithEllipsis(ts, ts.textContent, w.globals.xAxisLabelsHeight - (w.config.legend.position === 'bottom' ? 20 : 10));\n              });\n            }\n          }\n        } else {\n          (function () {\n            var width = w.globals.gridWidth / (w.globals.labels.length + 1);\n\n            for (var _xat = 0; _xat < xAxisTexts.length; _xat++) {\n              var _tSpan = xAxisTexts[_xat].childNodes;\n\n              if (w.config.xaxis.labels.trim && w.config.xaxis.type !== 'datetime') {\n                Array.prototype.forEach.call(_tSpan, function (ts) {\n                  graphics.placeTextWithEllipsis(ts, ts.textContent, width);\n                });\n              }\n            }\n          })();\n        }\n\n        if (yAxisTextsInversed.length > 0) {\n          // truncate rotated y axis in bar chart (x axis)\n          var firstLabelPosX = yAxisTextsInversed[yAxisTextsInversed.length - 1].getBBox();\n          var lastLabelPosX = yAxisTextsInversed[0].getBBox();\n\n          if (firstLabelPosX.x < -20) {\n            yAxisTextsInversed[yAxisTextsInversed.length - 1].parentNode.removeChild(yAxisTextsInversed[yAxisTextsInversed.length - 1]);\n          }\n\n          if (lastLabelPosX.x + lastLabelPosX.width > w.globals.gridWidth && !w.globals.isBarHorizontal) {\n            yAxisTextsInversed[0].parentNode.removeChild(yAxisTextsInversed[0]);\n          } // truncate rotated x axis in bar chart (y axis)\n\n\n          for (var _xat2 = 0; _xat2 < xAxisTextsInversed.length; _xat2++) {\n            graphics.placeTextWithEllipsis(xAxisTextsInversed[_xat2], xAxisTextsInversed[_xat2].textContent, w.config.yaxis[0].labels.maxWidth - parseFloat(w.config.yaxis[0].title.style.fontSize) * 2 - 20);\n          }\n        }\n      } // renderXAxisBands() {\n      //   let w = this.w;\n      //   let plotBand = document.createElementNS(w.globals.SVGNS, 'rect')\n      //   w.globals.dom.elGraphical.add(plotBand)\n      // }\n\n    }]);\n\n    return XAxis;\n  }();\n\n  /**\n   * ApexCharts Grid Class for drawing Cartesian Grid.\n   *\n   * @module Grid\n   **/\n\n  var Grid = /*#__PURE__*/function () {\n    function Grid(ctx) {\n      _classCallCheck(this, Grid);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.xaxisLabels = w.globals.labels.slice();\n      this.axesUtils = new AxesUtils(ctx);\n      this.isRangeBar = w.globals.seriesRangeBar.length;\n\n      if (w.globals.timescaleLabels.length > 0) {\n        //  timescaleLabels labels are there\n        this.xaxisLabels = w.globals.timescaleLabels.slice();\n      }\n    } // when using sparklines or when showing no grid, we need to have a grid area which is reused at many places for other calculations as well\n\n\n    _createClass(Grid, [{\n      key: \"drawGridArea\",\n      value: function drawGridArea() {\n        var elGrid = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n\n        if (elGrid === null) {\n          elGrid = graphics.group({\n            class: 'apexcharts-grid'\n          });\n        }\n\n        var elVerticalLine = graphics.drawLine(w.globals.padHorizontal, 1, w.globals.padHorizontal, w.globals.gridHeight, 'transparent');\n        var elHorzLine = graphics.drawLine(w.globals.padHorizontal, w.globals.gridHeight, w.globals.gridWidth, w.globals.gridHeight, 'transparent');\n        elGrid.add(elHorzLine);\n        elGrid.add(elVerticalLine);\n        return elGrid;\n      }\n    }, {\n      key: \"drawGrid\",\n      value: function drawGrid() {\n        var gl = this.w.globals;\n        var elgrid = null;\n\n        if (gl.axisCharts) {\n          // grid is drawn after xaxis and yaxis are drawn\n          elgrid = this.renderGrid();\n          this.drawGridArea(elgrid.el);\n        }\n\n        return elgrid;\n      } // This mask will clip off overflowing graphics from the drawable area\n\n    }, {\n      key: \"createGridMask\",\n      value: function createGridMask() {\n        var w = this.w;\n        var gl = w.globals;\n        var graphics = new Graphics(this.ctx);\n        var strokeSize = Array.isArray(w.config.stroke.width) ? 0 : w.config.stroke.width;\n\n        if (Array.isArray(w.config.stroke.width)) {\n          var strokeMaxSize = 0;\n          w.config.stroke.width.forEach(function (m) {\n            strokeMaxSize = Math.max(strokeMaxSize, m);\n          });\n          strokeSize = strokeMaxSize;\n        }\n\n        gl.dom.elGridRectMask = document.createElementNS(gl.SVGNS, 'clipPath');\n        gl.dom.elGridRectMask.setAttribute('id', \"gridRectMask\".concat(gl.cuid));\n        gl.dom.elGridRectMarkerMask = document.createElementNS(gl.SVGNS, 'clipPath');\n        gl.dom.elGridRectMarkerMask.setAttribute('id', \"gridRectMarkerMask\".concat(gl.cuid));\n        gl.dom.elForecastMask = document.createElementNS(gl.SVGNS, 'clipPath');\n        gl.dom.elForecastMask.setAttribute('id', \"forecastMask\".concat(gl.cuid));\n        gl.dom.elNonForecastMask = document.createElementNS(gl.SVGNS, 'clipPath');\n        gl.dom.elNonForecastMask.setAttribute('id', \"nonForecastMask\".concat(gl.cuid)); // let barHalfWidth = 0\n\n        var type = w.config.chart.type;\n        var hasBar = type === 'bar' || type === 'rangeBar' || type === 'candlestick' || type === 'boxPlot' || w.globals.comboBarCount > 0;\n        var barWidthLeft = 0;\n        var barWidthRight = 0;\n\n        if (hasBar && w.globals.isXNumeric && !w.globals.isBarHorizontal) {\n          barWidthLeft = w.config.grid.padding.left;\n          barWidthRight = w.config.grid.padding.right;\n\n          if (gl.barPadForNumericAxis > barWidthLeft) {\n            barWidthLeft = gl.barPadForNumericAxis;\n            barWidthRight = gl.barPadForNumericAxis;\n          }\n        }\n\n        gl.dom.elGridRect = graphics.drawRect(-strokeSize / 2 - barWidthLeft - 2, -strokeSize / 2, gl.gridWidth + strokeSize + barWidthRight + barWidthLeft + 4, gl.gridHeight + strokeSize, 0, '#fff');\n        var coreUtils = new CoreUtils(this);\n        coreUtils.getLargestMarkerSize();\n        var markerSize = w.globals.markers.largestSize + 1;\n        gl.dom.elGridRectMarker = graphics.drawRect(-markerSize * 2, -markerSize * 2, gl.gridWidth + markerSize * 4, gl.gridHeight + markerSize * 4, 0, '#fff');\n        gl.dom.elGridRectMask.appendChild(gl.dom.elGridRect.node);\n        gl.dom.elGridRectMarkerMask.appendChild(gl.dom.elGridRectMarker.node);\n        var defs = gl.dom.baseEl.querySelector('defs');\n        defs.appendChild(gl.dom.elGridRectMask);\n        defs.appendChild(gl.dom.elForecastMask);\n        defs.appendChild(gl.dom.elNonForecastMask);\n        defs.appendChild(gl.dom.elGridRectMarkerMask);\n      }\n    }, {\n      key: \"_drawGridLines\",\n      value: function _drawGridLines(_ref) {\n        var i = _ref.i,\n            x1 = _ref.x1,\n            y1 = _ref.y1,\n            x2 = _ref.x2,\n            y2 = _ref.y2,\n            xCount = _ref.xCount,\n            parent = _ref.parent;\n        var w = this.w;\n\n        var shouldDraw = function shouldDraw() {\n          if (i === 0 && w.globals.skipFirstTimelinelabel) {\n            return false;\n          }\n\n          if (i === xCount - 1 && w.globals.skipLastTimelinelabel && !w.config.xaxis.labels.formatter) {\n            return false;\n          }\n\n          if (w.config.chart.type === 'radar') {\n            return false;\n          }\n\n          return true;\n        };\n\n        if (shouldDraw()) {\n          if (w.config.grid.xaxis.lines.show) {\n            this._drawGridLine({\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              parent: parent\n            });\n          }\n\n          var xAxis = new XAxis(this.ctx);\n          xAxis.drawXaxisTicks(x1, this.elg);\n        }\n      }\n    }, {\n      key: \"_drawGridLine\",\n      value: function _drawGridLine(_ref2) {\n        var x1 = _ref2.x1,\n            y1 = _ref2.y1,\n            x2 = _ref2.x2,\n            y2 = _ref2.y2,\n            parent = _ref2.parent;\n        var w = this.w;\n        var isHorzLine = parent.node.classList.contains('apexcharts-gridlines-horizontal');\n        var strokeDashArray = w.config.grid.strokeDashArray;\n        var offX = w.globals.barPadForNumericAxis;\n        var graphics = new Graphics(this);\n        var line = graphics.drawLine(x1 - (isHorzLine ? offX : 0), y1, x2 + (isHorzLine ? offX : 0), y2, w.config.grid.borderColor, strokeDashArray);\n        line.node.classList.add('apexcharts-gridline');\n        parent.add(line);\n      }\n    }, {\n      key: \"_drawGridBandRect\",\n      value: function _drawGridBandRect(_ref3) {\n        var c = _ref3.c,\n            x1 = _ref3.x1,\n            y1 = _ref3.y1,\n            x2 = _ref3.x2,\n            y2 = _ref3.y2,\n            type = _ref3.type;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var offX = w.globals.barPadForNumericAxis;\n        if (type === 'column' && w.config.xaxis.type === 'datetime') return;\n        var color = w.config.grid[type].colors[c];\n        var rect = graphics.drawRect(x1 - (type === 'row' ? offX : 0), y1, x2 + (type === 'row' ? offX * 2 : 0), y2, 0, color, w.config.grid[type].opacity);\n        this.elg.add(rect);\n        rect.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\"));\n        rect.node.classList.add(\"apexcharts-grid-\".concat(type));\n      }\n    }, {\n      key: \"_drawXYLines\",\n      value: function _drawXYLines(_ref4) {\n        var _this = this;\n\n        var xCount = _ref4.xCount,\n            tickAmount = _ref4.tickAmount;\n        var w = this.w;\n\n        var datetimeLines = function datetimeLines(_ref5) {\n          var xC = _ref5.xC,\n              x1 = _ref5.x1,\n              y1 = _ref5.y1,\n              x2 = _ref5.x2,\n              y2 = _ref5.y2;\n\n          for (var i = 0; i < xC; i++) {\n            x1 = _this.xaxisLabels[i].position;\n            x2 = _this.xaxisLabels[i].position;\n\n            _this._drawGridLines({\n              i: i,\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              xCount: xCount,\n              parent: _this.elgridLinesV\n            });\n          }\n        };\n\n        var categoryLines = function categoryLines(_ref6) {\n          var xC = _ref6.xC,\n              x1 = _ref6.x1,\n              y1 = _ref6.y1,\n              x2 = _ref6.x2,\n              y2 = _ref6.y2;\n\n          if (typeof w.config.xaxis.tickAmount !== 'undefined' && w.config.xaxis.tickAmount !== 'dataPoints') {\n            // user has specified tickamount in a category x-axis chart\n            var visibleLabels = w.globals.dom.baseEl.querySelectorAll('.apexcharts-text.apexcharts-xaxis-label tspan:not(:empty)');\n            visibleLabels.forEach(function (d, i) {\n              var textRect = d.getBBox();\n\n              _this._drawGridLines({\n                i: i,\n                x1: textRect.x + textRect.width / 2,\n                y1: y1,\n                x2: textRect.x + textRect.width / 2,\n                y2: y2,\n                xCount: xCount,\n                parent: _this.elgridLinesV\n              });\n            });\n          } else {\n            for (var i = 0; i < xC + (w.globals.isXNumeric ? 0 : 1); i++) {\n              if (i === 0 && xC === 1 && w.globals.dataPoints === 1) {\n                // single datapoint\n                x1 = w.globals.gridWidth / 2;\n                x2 = x1;\n              }\n\n              _this._drawGridLines({\n                i: i,\n                x1: x1,\n                y1: y1,\n                x2: x2,\n                y2: y2,\n                xCount: xCount,\n                parent: _this.elgridLinesV\n              });\n\n              x1 = x1 + w.globals.gridWidth / (w.globals.isXNumeric ? xC - 1 : xC);\n              x2 = x1;\n            }\n          }\n        }; // draw vertical lines\n\n\n        if (w.config.grid.xaxis.lines.show || w.config.xaxis.axisTicks.show) {\n          var x1 = w.globals.padHorizontal;\n          var y1 = 0;\n          var x2;\n          var y2 = w.globals.gridHeight;\n\n          if (w.globals.timescaleLabels.length) {\n            datetimeLines({\n              xC: xCount,\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2\n            });\n          } else {\n            if (w.globals.isXNumeric) {\n              xCount = w.globals.xAxisScale.result.length;\n            }\n\n            if (w.config.xaxis.convertedCatToNumeric) {\n              // in case of a convertedCatToNumeric, some labels might be skipped due to hideOverLapping labels, hence use this var to get the visible ticks\n              xCount = w.globals.xaxisLabelsCount;\n            }\n\n            categoryLines({\n              xC: xCount,\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2\n            });\n          }\n        } // draw horizontal lines\n\n\n        if (w.config.grid.yaxis.lines.show) {\n          var _x = 0;\n          var _y = 0;\n          var _y2 = 0;\n          var _x2 = w.globals.gridWidth;\n          var tA = tickAmount + 1;\n\n          if (this.isRangeBar) {\n            tA = w.globals.labels.length;\n          }\n\n          for (var i = 0; i < tA + (this.isRangeBar ? 1 : 0); i++) {\n            this._drawGridLine({\n              x1: _x,\n              y1: _y,\n              x2: _x2,\n              y2: _y2,\n              parent: this.elgridLinesH\n            });\n\n            _y = _y + w.globals.gridHeight / (this.isRangeBar ? tA : tickAmount);\n            _y2 = _y;\n          }\n        }\n      }\n    }, {\n      key: \"_drawInvertedXYLines\",\n      value: function _drawInvertedXYLines(_ref7) {\n        var xCount = _ref7.xCount;\n        var w = this.w; // draw vertical lines\n\n        if (w.config.grid.xaxis.lines.show || w.config.xaxis.axisTicks.show) {\n          var x1 = w.globals.padHorizontal;\n          var y1 = 0;\n          var x2;\n          var y2 = w.globals.gridHeight;\n\n          for (var i = 0; i < xCount + 1; i++) {\n            if (w.config.grid.xaxis.lines.show) {\n              this._drawGridLine({\n                x1: x1,\n                y1: y1,\n                x2: x2,\n                y2: y2,\n                parent: this.elgridLinesV\n              });\n            }\n\n            var xAxis = new XAxis(this.ctx);\n            xAxis.drawXaxisTicks(x1, this.elg);\n            x1 = x1 + w.globals.gridWidth / xCount + 0.3;\n            x2 = x1;\n          }\n        } // draw horizontal lines\n\n\n        if (w.config.grid.yaxis.lines.show) {\n          var _x3 = 0;\n          var _y3 = 0;\n          var _y4 = 0;\n          var _x4 = w.globals.gridWidth;\n\n          for (var _i = 0; _i < w.globals.dataPoints + 1; _i++) {\n            this._drawGridLine({\n              x1: _x3,\n              y1: _y3,\n              x2: _x4,\n              y2: _y4,\n              parent: this.elgridLinesH\n            });\n\n            _y3 = _y3 + w.globals.gridHeight / w.globals.dataPoints;\n            _y4 = _y3;\n          }\n        }\n      } // actual grid rendering\n\n    }, {\n      key: \"renderGrid\",\n      value: function renderGrid() {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        this.elg = graphics.group({\n          class: 'apexcharts-grid'\n        });\n        this.elgridLinesH = graphics.group({\n          class: 'apexcharts-gridlines-horizontal'\n        });\n        this.elgridLinesV = graphics.group({\n          class: 'apexcharts-gridlines-vertical'\n        });\n        this.elg.add(this.elgridLinesH);\n        this.elg.add(this.elgridLinesV);\n\n        if (!w.config.grid.show) {\n          this.elgridLinesV.hide();\n          this.elgridLinesH.hide();\n        }\n\n        var yTickAmount = w.globals.yAxisScale.length ? w.globals.yAxisScale[0].result.length - 1 : 5;\n\n        for (var i = 0; i < w.globals.series.length; i++) {\n          if (typeof w.globals.yAxisScale[i] !== 'undefined') {\n            yTickAmount = w.globals.yAxisScale[i].result.length - 1;\n          }\n\n          if (yTickAmount > 2) break;\n        }\n\n        var xCount;\n\n        if (!w.globals.isBarHorizontal || this.isRangeBar) {\n          xCount = this.xaxisLabels.length;\n\n          if (this.isRangeBar) {\n            yTickAmount = w.globals.labels.length;\n\n            if (w.config.xaxis.tickAmount && w.config.xaxis.labels.formatter) {\n              xCount = w.config.xaxis.tickAmount;\n            }\n          }\n\n          this._drawXYLines({\n            xCount: xCount,\n            tickAmount: yTickAmount\n          });\n        } else {\n          xCount = yTickAmount; // for horizontal bar chart, get the xaxis tickamount\n\n          yTickAmount = w.globals.xTickAmount;\n\n          this._drawInvertedXYLines({\n            xCount: xCount,\n            tickAmount: yTickAmount\n          });\n        }\n\n        this.drawGridBands(xCount, yTickAmount);\n        return {\n          el: this.elg,\n          xAxisTickWidth: w.globals.gridWidth / xCount\n        };\n      }\n    }, {\n      key: \"drawGridBands\",\n      value: function drawGridBands(xCount, tickAmount) {\n        var w = this.w; // rows background bands\n\n        if (w.config.grid.row.colors !== undefined && w.config.grid.row.colors.length > 0) {\n          var x1 = 0;\n          var y1 = 0;\n          var y2 = w.globals.gridHeight / tickAmount;\n          var x2 = w.globals.gridWidth;\n\n          for (var i = 0, c = 0; i < tickAmount; i++, c++) {\n            if (c >= w.config.grid.row.colors.length) {\n              c = 0;\n            }\n\n            this._drawGridBandRect({\n              c: c,\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2,\n              type: 'row'\n            });\n\n            y1 = y1 + w.globals.gridHeight / tickAmount;\n          }\n        } // columns background bands\n\n\n        if (w.config.grid.column.colors !== undefined && w.config.grid.column.colors.length > 0) {\n          var xc = !w.globals.isBarHorizontal && (w.config.xaxis.type === 'category' || w.config.xaxis.convertedCatToNumeric) ? xCount - 1 : xCount;\n          var _x5 = w.globals.padHorizontal;\n          var _y5 = 0;\n\n          var _x6 = w.globals.padHorizontal + w.globals.gridWidth / xc;\n\n          var _y6 = w.globals.gridHeight;\n\n          for (var _i2 = 0, _c = 0; _i2 < xCount; _i2++, _c++) {\n            if (_c >= w.config.grid.column.colors.length) {\n              _c = 0;\n            }\n\n            this._drawGridBandRect({\n              c: _c,\n              x1: _x5,\n              y1: _y5,\n              x2: _x6,\n              y2: _y6,\n              type: 'column'\n            });\n\n            _x5 = _x5 + w.globals.gridWidth / xc;\n          }\n        }\n      }\n    }]);\n\n    return Grid;\n  }();\n\n  var Range$1 = /*#__PURE__*/function () {\n    function Range(ctx) {\n      _classCallCheck(this, Range);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    } // http://stackoverflow.com/questions/326679/choosing-an-attractive-linear-scale-for-a-graphs-y-axiss\n    // This routine creates the Y axis values for a graph.\n\n\n    _createClass(Range, [{\n      key: \"niceScale\",\n      value: function niceScale(yMin, yMax) {\n        var ticks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n        var index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n        var NO_MIN_MAX_PROVIDED = arguments.length > 4 ? arguments[4] : undefined;\n        var w = this.w; // Determine Range\n\n        var range = Math.abs(yMax - yMin);\n        ticks = this._adjustTicksForSmallRange(ticks, index, range);\n\n        if (ticks === 'dataPoints') {\n          ticks = w.globals.dataPoints - 1;\n        }\n\n        if (yMin === Number.MIN_VALUE && yMax === 0 || !Utils$1.isNumber(yMin) && !Utils$1.isNumber(yMax) || yMin === Number.MIN_VALUE && yMax === -Number.MAX_VALUE) {\n          // when all values are 0\n          yMin = 0;\n          yMax = ticks;\n          var linearScale = this.linearScale(yMin, yMax, ticks);\n          return linearScale;\n        }\n\n        if (yMin > yMax) {\n          // if somehow due to some wrong config, user sent max less than min,\n          // adjust the min/max again\n          console.warn('axis.min cannot be greater than axis.max');\n          yMax = yMin + 0.1;\n        } else if (yMin === yMax) {\n          // If yMin and yMax are identical, then\n          // adjust the yMin and yMax values to actually\n          // make a graph. Also avoids division by zero errors.\n          yMin = yMin === 0 ? 0 : yMin - 0.5; // some small value\n\n          yMax = yMax === 0 ? 2 : yMax + 0.5; // some small value\n        } // Calculate Min amd Max graphical labels and graph\n        // increments.  The number of ticks defaults to\n        // 10 which is the SUGGESTED value.  Any tick value\n        // entered is used as a suggested value which is\n        // adjusted to be a 'pretty' value.\n        //\n        // Output will be an array of the Y axis values that\n        // encompass the Y values.\n\n\n        var result = [];\n\n        if (range < 1 && NO_MIN_MAX_PROVIDED && (w.config.chart.type === 'candlestick' || w.config.series[index].type === 'candlestick' || w.config.chart.type === 'boxPlot' || w.config.series[index].type === 'boxPlot' || w.globals.isRangeData)) {\n          /* fix https://github.com/apexcharts/apexcharts.js/issues/430 */\n          yMax = yMax * 1.01;\n        }\n\n        var tiks = ticks + 1; // Adjust ticks if needed\n\n        if (tiks < 2) {\n          tiks = 2;\n        } else if (tiks > 2) {\n          tiks -= 2;\n        } // Get raw step value\n\n\n        var tempStep = range / tiks; // Calculate pretty step value\n\n        var mag = Math.floor(Utils$1.log10(tempStep));\n        var magPow = Math.pow(10, mag);\n        var magMsd = Math.round(tempStep / magPow);\n\n        if (magMsd < 1) {\n          magMsd = 1;\n        }\n\n        var stepSize = magMsd * magPow; // build Y label array.\n        // Lower and upper bounds calculations\n\n        var lb = stepSize * Math.floor(yMin / stepSize);\n        var ub = stepSize * Math.ceil(yMax / stepSize); // Build array\n\n        var val = lb;\n\n        if (NO_MIN_MAX_PROVIDED && range > 2) {\n          while (1) {\n            result.push(val);\n            val += stepSize;\n\n            if (val > ub) {\n              break;\n            }\n          }\n\n          return {\n            result: result,\n            niceMin: result[0],\n            niceMax: result[result.length - 1]\n          };\n        } else {\n          result = [];\n          var v = yMin;\n          result.push(v);\n          var valuesDivider = Math.abs(yMax - yMin) / ticks;\n\n          for (var i = 0; i <= ticks; i++) {\n            v = v + valuesDivider;\n            result.push(v);\n          }\n\n          if (result[result.length - 2] >= yMax) {\n            result.pop();\n          }\n\n          return {\n            result: result,\n            niceMin: result[0],\n            niceMax: result[result.length - 1]\n          };\n        }\n      }\n    }, {\n      key: \"linearScale\",\n      value: function linearScale(yMin, yMax) {\n        var ticks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n        var index = arguments.length > 3 ? arguments[3] : undefined;\n        var range = Math.abs(yMax - yMin);\n        ticks = this._adjustTicksForSmallRange(ticks, index, range);\n\n        if (ticks === 'dataPoints') {\n          ticks = this.w.globals.dataPoints - 1;\n        }\n\n        var step = range / ticks;\n\n        if (ticks === Number.MAX_VALUE) {\n          ticks = 10;\n          step = 1;\n        }\n\n        var result = [];\n        var v = yMin;\n\n        while (ticks >= 0) {\n          result.push(v);\n          v = v + step;\n          ticks -= 1;\n        }\n\n        return {\n          result: result,\n          niceMin: result[0],\n          niceMax: result[result.length - 1]\n        };\n      }\n    }, {\n      key: \"logarithmicScale\",\n      value: function logarithmicScale(yMax, base) {\n        var logs = [];\n        var ticks = Math.ceil(Math.log(yMax) / Math.log(base)) + 1; // Get powers of base up to our max, and then one more\n\n        for (var i = 0; i < ticks; i++) {\n          logs.push(Math.pow(base, i));\n        }\n\n        return {\n          result: logs,\n          niceMin: logs[0],\n          niceMax: logs[logs.length - 1]\n        };\n      }\n    }, {\n      key: \"_adjustTicksForSmallRange\",\n      value: function _adjustTicksForSmallRange(ticks, index, range) {\n        var newTicks = ticks;\n\n        if (typeof index !== 'undefined' && this.w.config.yaxis[index].labels.formatter && this.w.config.yaxis[index].tickAmount === undefined) {\n          var formattedVal = this.w.config.yaxis[index].labels.formatter(1);\n\n          if (Utils$1.isNumber(Number(formattedVal)) && !Utils$1.isFloat(formattedVal)) {\n            newTicks = Math.ceil(range);\n          }\n        }\n\n        return newTicks < ticks ? newTicks : ticks;\n      }\n    }, {\n      key: \"setYScaleForIndex\",\n      value: function setYScaleForIndex(index, minY, maxY) {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        var y = gl.isBarHorizontal ? cnf.xaxis : cnf.yaxis[index];\n\n        if (typeof gl.yAxisScale[index] === 'undefined') {\n          gl.yAxisScale[index] = [];\n        }\n\n        var diff = Math.abs(maxY - minY);\n\n        if (y.logarithmic && diff <= 5) {\n          gl.invalidLogScale = true;\n        }\n\n        if (y.logarithmic && diff > 5) {\n          gl.allSeriesCollapsed = false;\n          gl.yAxisScale[index] = this.logarithmicScale(maxY, y.logBase);\n        } else {\n          if (maxY === -Number.MAX_VALUE || !Utils$1.isNumber(maxY)) {\n            // no data in the chart. Either all series collapsed or user passed a blank array\n            gl.yAxisScale[index] = this.linearScale(0, 5, 5);\n          } else {\n            // there is some data. Turn off the allSeriesCollapsed flag\n            gl.allSeriesCollapsed = false;\n\n            if ((y.min !== undefined || y.max !== undefined) && !y.forceNiceScale) {\n              // fix https://github.com/apexcharts/apexcharts.js/issues/492\n              gl.yAxisScale[index] = this.linearScale(minY, maxY, y.tickAmount, index);\n            } else {\n              var noMinMaxProvided = cnf.yaxis[index].max === undefined && cnf.yaxis[index].min === undefined || cnf.yaxis[index].forceNiceScale;\n              gl.yAxisScale[index] = this.niceScale(minY, maxY, y.tickAmount ? y.tickAmount : diff < 5 && diff > 1 ? diff + 1 : 5, index, // fix https://github.com/apexcharts/apexcharts.js/issues/397\n              noMinMaxProvided);\n            }\n          }\n        }\n      }\n    }, {\n      key: \"setXScale\",\n      value: function setXScale(minX, maxX) {\n        var w = this.w;\n        var gl = w.globals;\n        var x = w.config.xaxis;\n        var diff = Math.abs(maxX - minX);\n\n        if (maxX === -Number.MAX_VALUE || !Utils$1.isNumber(maxX)) {\n          // no data in the chart. Either all series collapsed or user passed a blank array\n          gl.xAxisScale = this.linearScale(0, 5, 5);\n        } else {\n          gl.xAxisScale = this.linearScale(minX, maxX, x.tickAmount ? x.tickAmount : diff < 5 && diff > 1 ? diff + 1 : 5, 0);\n        }\n\n        return gl.xAxisScale;\n      }\n    }, {\n      key: \"setMultipleYScales\",\n      value: function setMultipleYScales() {\n        var _this = this;\n\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        var minYArr = gl.minYArr.concat([]);\n        var maxYArr = gl.maxYArr.concat([]);\n        var scalesIndices = []; // here, we loop through the yaxis array and find the item which has \"seriesName\" property\n\n        cnf.yaxis.forEach(function (yaxe, i) {\n          var index = i;\n          cnf.series.forEach(function (s, si) {\n            // if seriesName matches and that series is not collapsed, we use that scale\n            // fix issue #1215\n            // proceed even if si is in gl.collapsedSeriesIndices\n            if (s.name === yaxe.seriesName) {\n              index = si;\n\n              if (i !== si) {\n                scalesIndices.push({\n                  index: si,\n                  similarIndex: i,\n                  alreadyExists: true\n                });\n              } else {\n                scalesIndices.push({\n                  index: si\n                });\n              }\n            }\n          });\n          var minY = minYArr[index];\n          var maxY = maxYArr[index];\n\n          _this.setYScaleForIndex(i, minY, maxY);\n        });\n        this.sameScaleInMultipleAxes(minYArr, maxYArr, scalesIndices);\n      }\n    }, {\n      key: \"sameScaleInMultipleAxes\",\n      value: function sameScaleInMultipleAxes(minYArr, maxYArr, scalesIndices) {\n        var _this2 = this;\n\n        var cnf = this.w.config;\n        var gl = this.w.globals; // we got the scalesIndices array in the above code, but we need to filter out the items which doesn't have same scales\n\n        var similarIndices = [];\n        scalesIndices.forEach(function (scale) {\n          if (scale.alreadyExists) {\n            if (typeof similarIndices[scale.index] === 'undefined') {\n              similarIndices[scale.index] = [];\n            }\n\n            similarIndices[scale.index].push(scale.index);\n            similarIndices[scale.index].push(scale.similarIndex);\n          }\n        });\n\n        function intersect(a, b) {\n          return a.filter(function (value) {\n            return b.indexOf(value) !== -1;\n          });\n        }\n\n        gl.yAxisSameScaleIndices = similarIndices;\n        similarIndices.forEach(function (si, i) {\n          similarIndices.forEach(function (sj, j) {\n            if (i !== j) {\n              if (intersect(si, sj).length > 0) {\n                similarIndices[i] = similarIndices[i].concat(similarIndices[j]);\n              }\n            }\n          });\n        }); // then, we remove duplicates from the similarScale array\n\n        var uniqueSimilarIndices = similarIndices.map(function (item) {\n          return item.filter(function (i, pos) {\n            return item.indexOf(i) === pos;\n          });\n        }); // sort further to remove whole duplicate arrays later\n\n        var sortedIndices = uniqueSimilarIndices.map(function (s) {\n          return s.sort();\n        }); // remove undefined items\n\n        similarIndices = similarIndices.filter(function (s) {\n          return !!s;\n        });\n        var indices = sortedIndices.slice();\n        var stringIndices = indices.map(function (ind) {\n          return JSON.stringify(ind);\n        });\n        indices = indices.filter(function (ind, p) {\n          return stringIndices.indexOf(JSON.stringify(ind)) === p;\n        });\n        var sameScaleMinYArr = [];\n        var sameScaleMaxYArr = [];\n        minYArr.forEach(function (minYValue, yi) {\n          indices.forEach(function (scale, i) {\n            // we compare only the yIndex which exists in the indices array\n            if (scale.indexOf(yi) > -1) {\n              if (typeof sameScaleMinYArr[i] === 'undefined') {\n                sameScaleMinYArr[i] = [];\n                sameScaleMaxYArr[i] = [];\n              }\n\n              sameScaleMinYArr[i].push({\n                key: yi,\n                value: minYValue\n              });\n              sameScaleMaxYArr[i].push({\n                key: yi,\n                value: maxYArr[yi]\n              });\n            }\n          });\n        });\n        var sameScaleMin = Array.apply(null, Array(indices.length)).map(Number.prototype.valueOf, Number.MIN_VALUE);\n        var sameScaleMax = Array.apply(null, Array(indices.length)).map(Number.prototype.valueOf, -Number.MAX_VALUE);\n        sameScaleMinYArr.forEach(function (s, i) {\n          s.forEach(function (sc, j) {\n            sameScaleMin[i] = Math.min(sc.value, sameScaleMin[i]);\n          });\n        });\n        sameScaleMaxYArr.forEach(function (s, i) {\n          s.forEach(function (sc, j) {\n            sameScaleMax[i] = Math.max(sc.value, sameScaleMax[i]);\n          });\n        });\n        minYArr.forEach(function (min, i) {\n          sameScaleMaxYArr.forEach(function (s, si) {\n            var minY = sameScaleMin[si];\n            var maxY = sameScaleMax[si];\n\n            if (cnf.chart.stacked) {\n              // for stacked charts, we need to add the values\n              maxY = 0;\n              s.forEach(function (ind, k) {\n                // fix incorrectly adjust y scale issue #1215\n                if (ind.value !== -Number.MAX_VALUE) {\n                  maxY += ind.value;\n                }\n\n                if (minY !== Number.MIN_VALUE) {\n                  minY += sameScaleMinYArr[si][k].value;\n                }\n              });\n            }\n\n            s.forEach(function (ind, k) {\n              if (s[k].key === i) {\n                if (cnf.yaxis[i].min !== undefined) {\n                  if (typeof cnf.yaxis[i].min === 'function') {\n                    minY = cnf.yaxis[i].min(gl.minY);\n                  } else {\n                    minY = cnf.yaxis[i].min;\n                  }\n                }\n\n                if (cnf.yaxis[i].max !== undefined) {\n                  if (typeof cnf.yaxis[i].max === 'function') {\n                    maxY = cnf.yaxis[i].max(gl.maxY);\n                  } else {\n                    maxY = cnf.yaxis[i].max;\n                  }\n                }\n\n                _this2.setYScaleForIndex(i, minY, maxY);\n              }\n            });\n          });\n        });\n      } // experimental feature which scales the y-axis to a min/max based on x-axis range\n\n    }, {\n      key: \"autoScaleY\",\n      value: function autoScaleY(ctx, yaxis, e) {\n        if (!ctx) {\n          ctx = this;\n        }\n\n        var w = ctx.w;\n\n        if (w.globals.isMultipleYAxis || w.globals.collapsedSeries.length) {\n          // The autoScale option for multiple y-axis is turned off as it leads to buggy behavior.\n          // Also, when a series is collapsed, it results in incorrect behavior. Hence turned it off for that too - fixes apexcharts.js#795\n          console.warn('autoScaleYaxis is not supported in a multi-yaxis chart.');\n          return yaxis;\n        }\n\n        var seriesX = w.globals.seriesX[0];\n        var isStacked = w.config.chart.stacked;\n        yaxis.forEach(function (yaxe, yi) {\n          var firstXIndex = 0;\n\n          for (var xi = 0; xi < seriesX.length; xi++) {\n            if (seriesX[xi] >= e.xaxis.min) {\n              firstXIndex = xi;\n              break;\n            }\n          }\n\n          var initialMin = w.globals.minYArr[yi];\n          var initialMax = w.globals.maxYArr[yi];\n          var min, max;\n          var stackedSer = w.globals.stackedSeriesTotals;\n          w.globals.series.forEach(function (serie, sI) {\n            var firstValue = serie[firstXIndex];\n\n            if (isStacked) {\n              firstValue = stackedSer[firstXIndex];\n              min = max = firstValue;\n              stackedSer.forEach(function (y, yI) {\n                if (seriesX[yI] <= e.xaxis.max && seriesX[yI] >= e.xaxis.min) {\n                  if (y > max && y !== null) max = y;\n                  if (serie[yI] < min && serie[yI] !== null) min = serie[yI];\n                }\n              });\n            } else {\n              min = max = firstValue;\n              serie.forEach(function (y, yI) {\n                if (seriesX[yI] <= e.xaxis.max && seriesX[yI] >= e.xaxis.min) {\n                  var valMin = y;\n                  var valMax = y;\n                  w.globals.series.forEach(function (wS, wSI) {\n                    if (y !== null) {\n                      valMin = Math.min(wS[yI], valMin);\n                      valMax = Math.max(wS[yI], valMax);\n                    }\n                  });\n                  if (valMax > max && valMax !== null) max = valMax;\n                  if (valMin < min && valMin !== null) min = valMin;\n                }\n              });\n            }\n\n            if (min === undefined && max === undefined) {\n              min = initialMin;\n              max = initialMax;\n            }\n\n            min *= min < 0 ? 1.1 : 0.9;\n            max *= max < 0 ? 0.9 : 1.1;\n\n            if (max < 0 && max < initialMax) {\n              max = initialMax;\n            }\n\n            if (min < 0 && min > initialMin) {\n              min = initialMin;\n            }\n\n            if (yaxis.length > 1) {\n              yaxis[sI].min = yaxe.min === undefined ? min : yaxe.min;\n              yaxis[sI].max = yaxe.max === undefined ? max : yaxe.max;\n            } else {\n              yaxis[0].min = yaxe.min === undefined ? min : yaxe.min;\n              yaxis[0].max = yaxe.max === undefined ? max : yaxe.max;\n            }\n          });\n        });\n        return yaxis;\n      }\n    }]);\n\n    return Range;\n  }();\n\n  /**\n   * Range is used to generates values between min and max.\n   *\n   * @module Range\n   **/\n\n  var Range = /*#__PURE__*/function () {\n    function Range(ctx) {\n      _classCallCheck(this, Range);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.scales = new Range$1(ctx);\n    }\n\n    _createClass(Range, [{\n      key: \"init\",\n      value: function init() {\n        this.setYRange();\n        this.setXRange();\n        this.setZRange();\n      }\n    }, {\n      key: \"getMinYMaxY\",\n      value: function getMinYMaxY(startingIndex) {\n        var lowestY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;\n        var highestY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -Number.MAX_VALUE;\n        var len = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n        var cnf = this.w.config;\n        var gl = this.w.globals;\n        var maxY = -Number.MAX_VALUE;\n        var minY = Number.MIN_VALUE;\n\n        if (len === null) {\n          len = startingIndex + 1;\n        }\n\n        var series = gl.series;\n        var seriesMin = series;\n        var seriesMax = series;\n\n        if (cnf.chart.type === 'candlestick') {\n          seriesMin = gl.seriesCandleL;\n          seriesMax = gl.seriesCandleH;\n        } else if (cnf.chart.type === 'boxPlot') {\n          seriesMin = gl.seriesCandleO;\n          seriesMax = gl.seriesCandleC;\n        } else if (gl.isRangeData) {\n          seriesMin = gl.seriesRangeStart;\n          seriesMax = gl.seriesRangeEnd;\n        }\n\n        for (var i = startingIndex; i < len; i++) {\n          gl.dataPoints = Math.max(gl.dataPoints, series[i].length);\n\n          for (var j = 0; j < gl.series[i].length; j++) {\n            var val = series[i][j];\n\n            if (val !== null && Utils$1.isNumber(val)) {\n              if (typeof seriesMax[i][j] !== 'undefined') {\n                maxY = Math.max(maxY, seriesMax[i][j]);\n                lowestY = Math.min(lowestY, seriesMax[i][j]);\n              }\n\n              if (typeof seriesMin[i][j] !== 'undefined') {\n                lowestY = Math.min(lowestY, seriesMin[i][j]);\n                highestY = Math.max(highestY, seriesMin[i][j]);\n              }\n\n              if (this.w.config.chart.type === 'candlestick' || this.w.config.chart.type === 'boxPlot') {\n                if (typeof gl.seriesCandleC[i][j] !== 'undefined') {\n                  maxY = Math.max(maxY, gl.seriesCandleO[i][j]);\n                  maxY = Math.max(maxY, gl.seriesCandleH[i][j]);\n                  maxY = Math.max(maxY, gl.seriesCandleL[i][j]);\n                  maxY = Math.max(maxY, gl.seriesCandleC[i][j]);\n\n                  if (this.w.config.chart.type === 'boxPlot') {\n                    maxY = Math.max(maxY, gl.seriesCandleM[i][j]);\n                  }\n                } // there is a combo chart and the specified series in not either candlestick or boxplot, find the max there\n\n\n                if (cnf.series[i].type && (cnf.series[i].type !== 'candlestick' || cnf.series[i].type !== 'boxPlot')) {\n                  maxY = Math.max(maxY, gl.series[i][j]);\n                  lowestY = Math.min(lowestY, gl.series[i][j]);\n                }\n\n                highestY = maxY;\n              }\n\n              if (gl.seriesGoals[i] && gl.seriesGoals[i][j] && Array.isArray(gl.seriesGoals[i][j])) {\n                gl.seriesGoals[i][j].forEach(function (g) {\n                  if (minY !== Number.MIN_VALUE) {\n                    minY = Math.min(minY, g.value);\n                    lowestY = minY;\n                  }\n\n                  maxY = Math.max(maxY, g.value);\n                  highestY = maxY;\n                });\n              }\n\n              if (Utils$1.isFloat(val)) {\n                val = Utils$1.noExponents(val);\n                gl.yValueDecimal = Math.max(gl.yValueDecimal, val.toString().split('.')[1].length);\n              }\n\n              if (minY > seriesMin[i][j] && seriesMin[i][j] < 0) {\n                minY = seriesMin[i][j];\n              }\n            } else {\n              gl.hasNullValues = true;\n            }\n          }\n        }\n\n        if (cnf.chart.type === 'rangeBar' && gl.seriesRangeStart.length && gl.isBarHorizontal) {\n          minY = lowestY;\n        }\n\n        if (cnf.chart.type === 'bar') {\n          if (minY < 0 && maxY < 0) {\n            // all negative values in a bar chart, hence make the max to 0\n            maxY = 0;\n          }\n\n          if (minY === Number.MIN_VALUE) {\n            minY = 0;\n          }\n        }\n\n        return {\n          minY: minY,\n          maxY: maxY,\n          lowestY: lowestY,\n          highestY: highestY\n        };\n      }\n    }, {\n      key: \"setYRange\",\n      value: function setYRange() {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        gl.maxY = -Number.MAX_VALUE;\n        gl.minY = Number.MIN_VALUE;\n        var lowestYInAllSeries = Number.MAX_VALUE;\n\n        if (gl.isMultipleYAxis) {\n          // we need to get minY and maxY for multiple y axis\n          for (var i = 0; i < gl.series.length; i++) {\n            var minYMaxYArr = this.getMinYMaxY(i, lowestYInAllSeries, null, i + 1);\n            gl.minYArr.push(minYMaxYArr.minY);\n            gl.maxYArr.push(minYMaxYArr.maxY);\n            lowestYInAllSeries = minYMaxYArr.lowestY;\n          }\n        } // and then, get the minY and maxY from all series\n\n\n        var minYMaxY = this.getMinYMaxY(0, lowestYInAllSeries, null, gl.series.length);\n        gl.minY = minYMaxY.minY;\n        gl.maxY = minYMaxY.maxY;\n        lowestYInAllSeries = minYMaxY.lowestY;\n\n        if (cnf.chart.stacked) {\n          this._setStackedMinMax();\n        } // if the numbers are too big, reduce the range\n        // for eg, if number is between 100000-110000, putting 0 as the lowest value is not so good idea. So change the gl.minY for line/area/candlesticks/boxPlot\n\n\n        if (cnf.chart.type === 'line' || cnf.chart.type === 'area' || cnf.chart.type === 'candlestick' || cnf.chart.type === 'boxPlot' || cnf.chart.type === 'rangeBar' && !gl.isBarHorizontal) {\n          if (gl.minY === Number.MIN_VALUE && lowestYInAllSeries !== -Number.MAX_VALUE && lowestYInAllSeries !== gl.maxY // single value possibility\n          ) {\n            var diff = gl.maxY - lowestYInAllSeries;\n\n            if (lowestYInAllSeries >= 0 && lowestYInAllSeries <= 10 || cnf.yaxis[0].min !== undefined || cnf.yaxis[0].max !== undefined) {\n              // if minY is already 0/low value, we don't want to go negatives here - so this check is essential.\n              diff = 0;\n            }\n\n            gl.minY = lowestYInAllSeries - diff * 5 / 100;\n            /* fix https://github.com/apexcharts/apexcharts.js/issues/614 */\n\n            /* fix https://github.com/apexcharts/apexcharts.js/issues/968 */\n\n            if (lowestYInAllSeries > 0 && gl.minY < 0) {\n              gl.minY = 0;\n            }\n            /* fix https://github.com/apexcharts/apexcharts.js/issues/426 */\n\n\n            gl.maxY = gl.maxY + diff * 5 / 100;\n          }\n        }\n\n        cnf.yaxis.forEach(function (yaxe, index) {\n          // override all min/max values by user defined values (y axis)\n          if (yaxe.max !== undefined) {\n            if (typeof yaxe.max === 'number') {\n              gl.maxYArr[index] = yaxe.max;\n            } else if (typeof yaxe.max === 'function') {\n              // fixes apexcharts.js/issues/2098\n              gl.maxYArr[index] = yaxe.max(gl.isMultipleYAxis ? gl.maxYArr[index] : gl.maxY);\n            } // gl.maxY is for single y-axis chart, it will be ignored in multi-yaxis\n\n\n            gl.maxY = gl.maxYArr[index];\n          }\n\n          if (yaxe.min !== undefined) {\n            if (typeof yaxe.min === 'number') {\n              gl.minYArr[index] = yaxe.min;\n            } else if (typeof yaxe.min === 'function') {\n              // fixes apexcharts.js/issues/2098\n              gl.minYArr[index] = yaxe.min(gl.isMultipleYAxis ? gl.minYArr[index] === Number.MIN_VALUE ? 0 : gl.minYArr[index] : gl.minY);\n            } // gl.minY is for single y-axis chart, it will be ignored in multi-yaxis\n\n\n            gl.minY = gl.minYArr[index];\n          }\n        }); // for horizontal bar charts, we need to check xaxis min/max as user may have specified there\n\n        if (gl.isBarHorizontal) {\n          var minmax = ['min', 'max'];\n          minmax.forEach(function (m) {\n            if (cnf.xaxis[m] !== undefined && typeof cnf.xaxis[m] === 'number') {\n              m === 'min' ? gl.minY = cnf.xaxis[m] : gl.maxY = cnf.xaxis[m];\n            }\n          });\n        } // for multi y-axis we need different scales for each\n\n\n        if (gl.isMultipleYAxis) {\n          this.scales.setMultipleYScales();\n          gl.minY = lowestYInAllSeries;\n          gl.yAxisScale.forEach(function (scale, i) {\n            gl.minYArr[i] = scale.niceMin;\n            gl.maxYArr[i] = scale.niceMax;\n          });\n        } else {\n          this.scales.setYScaleForIndex(0, gl.minY, gl.maxY);\n          gl.minY = gl.yAxisScale[0].niceMin;\n          gl.maxY = gl.yAxisScale[0].niceMax;\n          gl.minYArr[0] = gl.yAxisScale[0].niceMin;\n          gl.maxYArr[0] = gl.yAxisScale[0].niceMax;\n        }\n\n        return {\n          minY: gl.minY,\n          maxY: gl.maxY,\n          minYArr: gl.minYArr,\n          maxYArr: gl.maxYArr,\n          yAxisScale: gl.yAxisScale\n        };\n      }\n    }, {\n      key: \"setXRange\",\n      value: function setXRange() {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        var isXNumeric = cnf.xaxis.type === 'numeric' || cnf.xaxis.type === 'datetime' || cnf.xaxis.type === 'category' && !gl.noLabelsProvided || gl.noLabelsProvided || gl.isXNumeric;\n\n        var getInitialMinXMaxX = function getInitialMinXMaxX() {\n          for (var i = 0; i < gl.series.length; i++) {\n            if (gl.labels[i]) {\n              for (var j = 0; j < gl.labels[i].length; j++) {\n                if (gl.labels[i][j] !== null && Utils$1.isNumber(gl.labels[i][j])) {\n                  gl.maxX = Math.max(gl.maxX, gl.labels[i][j]);\n                  gl.initialMaxX = Math.max(gl.maxX, gl.labels[i][j]);\n                  gl.minX = Math.min(gl.minX, gl.labels[i][j]);\n                  gl.initialMinX = Math.min(gl.minX, gl.labels[i][j]);\n                }\n              }\n            }\n          }\n        }; // minX maxX starts here\n\n\n        if (gl.isXNumeric) {\n          getInitialMinXMaxX();\n        }\n\n        if (gl.noLabelsProvided) {\n          if (cnf.xaxis.categories.length === 0) {\n            gl.maxX = gl.labels[gl.labels.length - 1];\n            gl.initialMaxX = gl.labels[gl.labels.length - 1];\n            gl.minX = 1;\n            gl.initialMinX = 1;\n          }\n        }\n\n        if (gl.isXNumeric || gl.noLabelsProvided || gl.dataFormatXNumeric) {\n          var ticks;\n\n          if (cnf.xaxis.tickAmount === undefined) {\n            ticks = Math.round(gl.svgWidth / 150); // no labels provided and total number of dataPoints is less than 30\n\n            if (cnf.xaxis.type === 'numeric' && gl.dataPoints < 30) {\n              ticks = gl.dataPoints - 1;\n            } // this check is for when ticks exceeds total datapoints and that would result in duplicate labels\n\n\n            if (ticks > gl.dataPoints && gl.dataPoints !== 0) {\n              ticks = gl.dataPoints - 1;\n            }\n          } else if (cnf.xaxis.tickAmount === 'dataPoints') {\n            if (gl.series.length > 1) {\n              ticks = gl.series[gl.maxValsInArrayIndex].length - 1;\n            }\n\n            if (gl.isXNumeric) {\n              ticks = gl.maxX - gl.minX - 1;\n            }\n          } else {\n            ticks = cnf.xaxis.tickAmount;\n          }\n\n          gl.xTickAmount = ticks; // override all min/max values by user defined values (x axis)\n\n          if (cnf.xaxis.max !== undefined && typeof cnf.xaxis.max === 'number') {\n            gl.maxX = cnf.xaxis.max;\n          }\n\n          if (cnf.xaxis.min !== undefined && typeof cnf.xaxis.min === 'number') {\n            gl.minX = cnf.xaxis.min;\n          } // if range is provided, adjust the new minX\n\n\n          if (cnf.xaxis.range !== undefined) {\n            gl.minX = gl.maxX - cnf.xaxis.range;\n          }\n\n          if (gl.minX !== Number.MAX_VALUE && gl.maxX !== -Number.MAX_VALUE) {\n            if (cnf.xaxis.convertedCatToNumeric && !gl.dataFormatXNumeric) {\n              var catScale = [];\n\n              for (var i = gl.minX - 1; i < gl.maxX; i++) {\n                catScale.push(i + 1);\n              }\n\n              gl.xAxisScale = {\n                result: catScale,\n                niceMin: catScale[0],\n                niceMax: catScale[catScale.length - 1]\n              };\n            } else {\n              gl.xAxisScale = this.scales.setXScale(gl.minX, gl.maxX);\n            }\n          } else {\n            gl.xAxisScale = this.scales.linearScale(1, ticks, ticks);\n\n            if (gl.noLabelsProvided && gl.labels.length > 0) {\n              gl.xAxisScale = this.scales.linearScale(1, gl.labels.length, ticks - 1); // this is the only place seriesX is again mutated\n\n              gl.seriesX = gl.labels.slice();\n            }\n          } // we will still store these labels as the count for this will be different (to draw grid and labels placement)\n\n\n          if (isXNumeric) {\n            gl.labels = gl.xAxisScale.result.slice();\n          }\n        }\n\n        if (gl.isBarHorizontal && gl.labels.length) {\n          gl.xTickAmount = gl.labels.length;\n        } // single dataPoint\n\n\n        this._handleSingleDataPoint(); // minimum x difference to calculate bar width in numeric bars\n\n\n        this._getMinXDiff();\n\n        return {\n          minX: gl.minX,\n          maxX: gl.maxX\n        };\n      }\n    }, {\n      key: \"setZRange\",\n      value: function setZRange() {\n        // minZ, maxZ starts here\n        var gl = this.w.globals;\n        if (!gl.isDataXYZ) return;\n\n        for (var i = 0; i < gl.series.length; i++) {\n          if (typeof gl.seriesZ[i] !== 'undefined') {\n            for (var j = 0; j < gl.seriesZ[i].length; j++) {\n              if (gl.seriesZ[i][j] !== null && Utils$1.isNumber(gl.seriesZ[i][j])) {\n                gl.maxZ = Math.max(gl.maxZ, gl.seriesZ[i][j]);\n                gl.minZ = Math.min(gl.minZ, gl.seriesZ[i][j]);\n              }\n            }\n          }\n        }\n      }\n    }, {\n      key: \"_handleSingleDataPoint\",\n      value: function _handleSingleDataPoint() {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n\n        if (gl.minX === gl.maxX) {\n          var datetimeObj = new DateTime(this.ctx);\n\n          if (cnf.xaxis.type === 'datetime') {\n            var newMinX = datetimeObj.getDate(gl.minX);\n\n            if (cnf.xaxis.labels.datetimeUTC) {\n              newMinX.setUTCDate(newMinX.getUTCDate() - 2);\n            } else {\n              newMinX.setDate(newMinX.getDate() - 2);\n            }\n\n            gl.minX = new Date(newMinX).getTime();\n            var newMaxX = datetimeObj.getDate(gl.maxX);\n\n            if (cnf.xaxis.labels.datetimeUTC) {\n              newMaxX.setUTCDate(newMaxX.getUTCDate() + 2);\n            } else {\n              newMaxX.setDate(newMaxX.getDate() + 2);\n            }\n\n            gl.maxX = new Date(newMaxX).getTime();\n            console.log(gl.minX, gl.maxX);\n          } else if (cnf.xaxis.type === 'numeric' || cnf.xaxis.type === 'category' && !gl.noLabelsProvided) {\n            gl.minX = gl.minX - 2;\n            gl.initialMinX = gl.minX;\n            gl.maxX = gl.maxX + 2;\n            gl.initialMaxX = gl.maxX;\n          }\n        }\n      }\n    }, {\n      key: \"_getMinXDiff\",\n      value: function _getMinXDiff() {\n        var gl = this.w.globals;\n\n        if (gl.isXNumeric) {\n          // get the least x diff if numeric x axis is present\n          gl.seriesX.forEach(function (sX, i) {\n            if (sX.length === 1) {\n              // a small hack to prevent overlapping multiple bars when there is just 1 datapoint in bar series.\n              // fix #811\n              sX.push(gl.seriesX[gl.maxValsInArrayIndex][gl.seriesX[gl.maxValsInArrayIndex].length - 1]);\n            } // fix #983 (clone the array to avoid side effects)\n\n\n            var seriesX = sX.slice();\n            seriesX.sort(function (a, b) {\n              return a - b;\n            });\n            seriesX.forEach(function (s, j) {\n              if (j > 0) {\n                var xDiff = s - seriesX[j - 1];\n\n                if (xDiff > 0) {\n                  gl.minXDiff = Math.min(xDiff, gl.minXDiff);\n                }\n              }\n            });\n\n            if (gl.dataPoints === 1 && gl.minXDiff === Number.MAX_VALUE) {\n              // fixes apexcharts.js #1221\n              gl.minXDiff = 0.5;\n            }\n          });\n        }\n      }\n    }, {\n      key: \"_setStackedMinMax\",\n      value: function _setStackedMinMax() {\n        var gl = this.w.globals; // for stacked charts, we calculate each series's parallel values. i.e, series[0][j] + series[1][j] .... [series[i.length][j]] and get the max out of it\n\n        var stackedPoss = [];\n        var stackedNegs = [];\n\n        if (gl.series.length) {\n          for (var j = 0; j < gl.series[gl.maxValsInArrayIndex].length; j++) {\n            var poss = 0;\n            var negs = 0;\n\n            for (var i = 0; i < gl.series.length; i++) {\n              if (gl.series[i][j] !== null && Utils$1.isNumber(gl.series[i][j])) {\n                // 0.0001 fixes #185 when values are very small\n                gl.series[i][j] > 0 ? poss = poss + parseFloat(gl.series[i][j]) + 0.0001 : negs = negs + parseFloat(gl.series[i][j]);\n              }\n\n              if (i === gl.series.length - 1) {\n                // push all the totals to the array for future use\n                stackedPoss.push(poss);\n                stackedNegs.push(negs);\n              }\n            }\n          }\n        } // get the max/min out of the added parallel values\n\n\n        for (var z = 0; z < stackedPoss.length; z++) {\n          gl.maxY = Math.max(gl.maxY, stackedPoss[z]);\n          gl.minY = Math.min(gl.minY, stackedNegs[z]);\n        }\n      }\n    }]);\n\n    return Range;\n  }();\n\n  /**\n   * ApexCharts YAxis Class for drawing Y-Axis.\n   *\n   * @module YAxis\n   **/\n\n  var YAxis = /*#__PURE__*/function () {\n    function YAxis(ctx) {\n      _classCallCheck(this, YAxis);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.xaxisFontSize = w.config.xaxis.labels.style.fontSize;\n      this.axisFontFamily = w.config.xaxis.labels.style.fontFamily;\n      this.xaxisForeColors = w.config.xaxis.labels.style.colors;\n      this.isCategoryBarHorizontal = w.config.chart.type === 'bar' && w.config.plotOptions.bar.horizontal;\n      this.xAxisoffX = 0;\n\n      if (w.config.xaxis.position === 'bottom') {\n        this.xAxisoffX = w.globals.gridHeight;\n      }\n\n      this.drawnLabels = [];\n      this.axesUtils = new AxesUtils(ctx);\n    }\n\n    _createClass(YAxis, [{\n      key: \"drawYaxis\",\n      value: function drawYaxis(realIndex) {\n        var _this = this;\n\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var yaxisStyle = w.config.yaxis[realIndex].labels.style;\n        var yaxisFontSize = yaxisStyle.fontSize;\n        var yaxisFontFamily = yaxisStyle.fontFamily;\n        var yaxisFontWeight = yaxisStyle.fontWeight;\n        var elYaxis = graphics.group({\n          class: 'apexcharts-yaxis',\n          rel: realIndex,\n          transform: 'translate(' + w.globals.translateYAxisX[realIndex] + ', 0)'\n        });\n\n        if (this.axesUtils.isYAxisHidden(realIndex)) {\n          return elYaxis;\n        }\n\n        var elYaxisTexts = graphics.group({\n          class: 'apexcharts-yaxis-texts-g'\n        });\n        elYaxis.add(elYaxisTexts);\n        var tickAmount = w.globals.yAxisScale[realIndex].result.length - 1; // labelsDivider is simply svg height/number of ticks\n\n        var labelsDivider = w.globals.gridHeight / tickAmount; // initial label position = 0;\n\n        var l = w.globals.translateY;\n        var lbFormatter = w.globals.yLabelFormatters[realIndex];\n        var labels = w.globals.yAxisScale[realIndex].result.slice();\n        labels = this.axesUtils.checkForReversedLabels(realIndex, labels);\n        var firstLabel = '';\n\n        if (w.config.yaxis[realIndex].labels.show) {\n          var _loop = function _loop(i) {\n            var val = labels[i];\n            val = lbFormatter(val, i, w);\n            var xPad = w.config.yaxis[realIndex].labels.padding;\n\n            if (w.config.yaxis[realIndex].opposite && w.config.yaxis.length !== 0) {\n              xPad = xPad * -1;\n            }\n\n            var yColors = _this.axesUtils.getYAxisForeColor(yaxisStyle.colors, realIndex);\n\n            var getForeColor = function getForeColor() {\n              return Array.isArray(yColors) ? yColors[i] : yColors;\n            };\n\n            var label = graphics.drawText({\n              x: xPad,\n              y: l + tickAmount / 10 + w.config.yaxis[realIndex].labels.offsetY + 1,\n              text: val,\n              textAnchor: w.config.yaxis[realIndex].opposite ? 'start' : 'end',\n              fontSize: yaxisFontSize,\n              fontFamily: yaxisFontFamily,\n              fontWeight: yaxisFontWeight,\n              foreColor: getForeColor(),\n              isPlainText: false,\n              cssClass: 'apexcharts-yaxis-label ' + yaxisStyle.cssClass\n            });\n\n            if (i === tickAmount) {\n              firstLabel = label;\n            }\n\n            elYaxisTexts.add(label);\n            var elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title');\n            elTooltipTitle.textContent = Array.isArray(val) ? val.join(' ') : val;\n            label.node.appendChild(elTooltipTitle);\n\n            if (w.config.yaxis[realIndex].labels.rotate !== 0) {\n              var firstabelRotatingCenter = graphics.rotateAroundCenter(firstLabel.node);\n              var labelRotatingCenter = graphics.rotateAroundCenter(label.node);\n              label.node.setAttribute('transform', \"rotate(\".concat(w.config.yaxis[realIndex].labels.rotate, \" \").concat(firstabelRotatingCenter.x, \" \").concat(labelRotatingCenter.y, \")\"));\n            }\n\n            l = l + labelsDivider;\n          };\n\n          for (var i = tickAmount; i >= 0; i--) {\n            _loop(i);\n          }\n        }\n\n        if (w.config.yaxis[realIndex].title.text !== undefined) {\n          var elYaxisTitle = graphics.group({\n            class: 'apexcharts-yaxis-title'\n          });\n          var _x = 0;\n\n          if (w.config.yaxis[realIndex].opposite) {\n            _x = w.globals.translateYAxisX[realIndex];\n          }\n\n          var elYAxisTitleText = graphics.drawText({\n            x: _x,\n            y: w.globals.gridHeight / 2 + w.globals.translateY + w.config.yaxis[realIndex].title.offsetY,\n            text: w.config.yaxis[realIndex].title.text,\n            textAnchor: 'end',\n            foreColor: w.config.yaxis[realIndex].title.style.color,\n            fontSize: w.config.yaxis[realIndex].title.style.fontSize,\n            fontWeight: w.config.yaxis[realIndex].title.style.fontWeight,\n            fontFamily: w.config.yaxis[realIndex].title.style.fontFamily,\n            cssClass: 'apexcharts-yaxis-title-text ' + w.config.yaxis[realIndex].title.style.cssClass\n          });\n          elYaxisTitle.add(elYAxisTitleText);\n          elYaxis.add(elYaxisTitle);\n        }\n\n        var axisBorder = w.config.yaxis[realIndex].axisBorder;\n        var x = 31 + axisBorder.offsetX;\n\n        if (w.config.yaxis[realIndex].opposite) {\n          x = -31 - axisBorder.offsetX;\n        }\n\n        if (axisBorder.show) {\n          var elVerticalLine = graphics.drawLine(x, w.globals.translateY + axisBorder.offsetY - 2, x, w.globals.gridHeight + w.globals.translateY + axisBorder.offsetY + 2, axisBorder.color, 0, axisBorder.width);\n          elYaxis.add(elVerticalLine);\n        }\n\n        if (w.config.yaxis[realIndex].axisTicks.show) {\n          this.axesUtils.drawYAxisTicks(x, tickAmount, axisBorder, w.config.yaxis[realIndex].axisTicks, realIndex, labelsDivider, elYaxis);\n        }\n\n        return elYaxis;\n      } // This actually becomes horizontal axis (for bar charts)\n\n    }, {\n      key: \"drawYaxisInversed\",\n      value: function drawYaxisInversed(realIndex) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var elXaxis = graphics.group({\n          class: 'apexcharts-xaxis apexcharts-yaxis-inversed'\n        });\n        var elXaxisTexts = graphics.group({\n          class: 'apexcharts-xaxis-texts-g',\n          transform: \"translate(\".concat(w.globals.translateXAxisX, \", \").concat(w.globals.translateXAxisY, \")\")\n        });\n        elXaxis.add(elXaxisTexts);\n        var tickAmount = w.globals.yAxisScale[realIndex].result.length - 1; // labelsDivider is simply svg width/number of ticks\n\n        var labelsDivider = w.globals.gridWidth / tickAmount + 0.1; // initial label position;\n\n        var l = labelsDivider + w.config.xaxis.labels.offsetX;\n        var lbFormatter = w.globals.xLabelFormatter;\n        var labels = w.globals.yAxisScale[realIndex].result.slice();\n        var timescaleLabels = w.globals.timescaleLabels;\n\n        if (timescaleLabels.length > 0) {\n          this.xaxisLabels = timescaleLabels.slice();\n          labels = timescaleLabels.slice();\n          tickAmount = labels.length;\n        }\n\n        labels = this.axesUtils.checkForReversedLabels(realIndex, labels);\n        var tl = timescaleLabels.length;\n\n        if (w.config.xaxis.labels.show) {\n          for (var i = tl ? 0 : tickAmount; tl ? i < tl : i >= 0; tl ? i++ : i--) {\n            var val = labels[i];\n            val = lbFormatter(val, i, w);\n            var x = w.globals.gridWidth + w.globals.padHorizontal - (l - labelsDivider + w.config.xaxis.labels.offsetX);\n\n            if (timescaleLabels.length) {\n              var label = this.axesUtils.getLabel(labels, timescaleLabels, x, i, this.drawnLabels, this.xaxisFontSize);\n              x = label.x;\n              val = label.text;\n              this.drawnLabels.push(label.text);\n\n              if (i === 0 && w.globals.skipFirstTimelinelabel) {\n                val = '';\n              }\n\n              if (i === labels.length - 1 && w.globals.skipLastTimelinelabel) {\n                val = '';\n              }\n            }\n\n            var elTick = graphics.drawText({\n              x: x,\n              y: this.xAxisoffX + w.config.xaxis.labels.offsetY + 30 - (w.config.xaxis.position === 'top' ? w.globals.xAxisHeight + w.config.xaxis.axisTicks.height - 2 : 0),\n              text: val,\n              textAnchor: 'middle',\n              foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[realIndex] : this.xaxisForeColors,\n              fontSize: this.xaxisFontSize,\n              fontFamily: this.xaxisFontFamily,\n              fontWeight: w.config.xaxis.labels.style.fontWeight,\n              isPlainText: false,\n              cssClass: 'apexcharts-xaxis-label ' + w.config.xaxis.labels.style.cssClass\n            });\n            elXaxisTexts.add(elTick);\n            elTick.tspan(val);\n            var elTooltipTitle = document.createElementNS(w.globals.SVGNS, 'title');\n            elTooltipTitle.textContent = val;\n            elTick.node.appendChild(elTooltipTitle);\n            l = l + labelsDivider;\n          }\n        }\n\n        this.inversedYAxisTitleText(elXaxis);\n        this.inversedYAxisBorder(elXaxis);\n        return elXaxis;\n      }\n    }, {\n      key: \"inversedYAxisBorder\",\n      value: function inversedYAxisBorder(parent) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var axisBorder = w.config.xaxis.axisBorder;\n\n        if (axisBorder.show) {\n          var lineCorrection = 0;\n\n          if (w.config.chart.type === 'bar' && w.globals.isXNumeric) {\n            lineCorrection = lineCorrection - 15;\n          }\n\n          var elHorzLine = graphics.drawLine(w.globals.padHorizontal + lineCorrection + axisBorder.offsetX, this.xAxisoffX, w.globals.gridWidth, this.xAxisoffX, axisBorder.color, 0, axisBorder.height);\n          parent.add(elHorzLine);\n        }\n      }\n    }, {\n      key: \"inversedYAxisTitleText\",\n      value: function inversedYAxisTitleText(parent) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n\n        if (w.config.xaxis.title.text !== undefined) {\n          var elYaxisTitle = graphics.group({\n            class: 'apexcharts-xaxis-title apexcharts-yaxis-title-inversed'\n          });\n          var elYAxisTitleText = graphics.drawText({\n            x: w.globals.gridWidth / 2 + w.config.xaxis.title.offsetX,\n            y: this.xAxisoffX + parseFloat(this.xaxisFontSize) + parseFloat(w.config.xaxis.title.style.fontSize) + w.config.xaxis.title.offsetY + 20,\n            text: w.config.xaxis.title.text,\n            textAnchor: 'middle',\n            fontSize: w.config.xaxis.title.style.fontSize,\n            fontFamily: w.config.xaxis.title.style.fontFamily,\n            fontWeight: w.config.xaxis.title.style.fontWeight,\n            foreColor: w.config.xaxis.title.style.color,\n            cssClass: 'apexcharts-xaxis-title-text ' + w.config.xaxis.title.style.cssClass\n          });\n          elYaxisTitle.add(elYAxisTitleText);\n          parent.add(elYaxisTitle);\n        }\n      }\n    }, {\n      key: \"yAxisTitleRotate\",\n      value: function yAxisTitleRotate(realIndex, yAxisOpposite) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var yAxisLabelsCoord = {\n          width: 0,\n          height: 0\n        };\n        var yAxisTitleCoord = {\n          width: 0,\n          height: 0\n        };\n        var elYAxisLabelsWrap = w.globals.dom.baseEl.querySelector(\" .apexcharts-yaxis[rel='\".concat(realIndex, \"'] .apexcharts-yaxis-texts-g\"));\n\n        if (elYAxisLabelsWrap !== null) {\n          yAxisLabelsCoord = elYAxisLabelsWrap.getBoundingClientRect();\n        }\n\n        var yAxisTitle = w.globals.dom.baseEl.querySelector(\".apexcharts-yaxis[rel='\".concat(realIndex, \"'] .apexcharts-yaxis-title text\"));\n\n        if (yAxisTitle !== null) {\n          yAxisTitleCoord = yAxisTitle.getBoundingClientRect();\n        }\n\n        if (yAxisTitle !== null) {\n          var x = this.xPaddingForYAxisTitle(realIndex, yAxisLabelsCoord, yAxisTitleCoord, yAxisOpposite);\n          yAxisTitle.setAttribute('x', x.xPos - (yAxisOpposite ? 10 : 0));\n        }\n\n        if (yAxisTitle !== null) {\n          var titleRotatingCenter = graphics.rotateAroundCenter(yAxisTitle);\n          yAxisTitle.setAttribute('transform', \"rotate(\".concat(yAxisOpposite ? w.config.yaxis[realIndex].title.rotate * -1 : w.config.yaxis[realIndex].title.rotate, \" \").concat(titleRotatingCenter.x, \" \").concat(titleRotatingCenter.y, \")\"));\n        }\n      }\n    }, {\n      key: \"xPaddingForYAxisTitle\",\n      value: function xPaddingForYAxisTitle(realIndex, yAxisLabelsCoord, yAxisTitleCoord, yAxisOpposite) {\n        var w = this.w;\n        var oppositeAxisCount = 0;\n        var x = 0;\n        var padd = 10;\n\n        if (w.config.yaxis[realIndex].title.text === undefined || realIndex < 0) {\n          return {\n            xPos: x,\n            padd: 0\n          };\n        }\n\n        if (yAxisOpposite) {\n          x = yAxisLabelsCoord.width + w.config.yaxis[realIndex].title.offsetX + yAxisTitleCoord.width / 2 + padd / 2;\n          oppositeAxisCount += 1;\n\n          if (oppositeAxisCount === 0) {\n            x = x - padd / 2;\n          }\n        } else {\n          x = yAxisLabelsCoord.width * -1 + w.config.yaxis[realIndex].title.offsetX + padd / 2 + yAxisTitleCoord.width / 2;\n\n          if (w.globals.isBarHorizontal) {\n            padd = 25;\n            x = yAxisLabelsCoord.width * -1 - w.config.yaxis[realIndex].title.offsetX - padd;\n          }\n        }\n\n        return {\n          xPos: x,\n          padd: padd\n        };\n      } // sets the x position of the y-axis by counting the labels width, title width and any offset\n\n    }, {\n      key: \"setYAxisXPosition\",\n      value: function setYAxisXPosition(yaxisLabelCoords, yTitleCoords) {\n        var w = this.w;\n        var xLeft = 0;\n        var xRight = 0;\n        var leftOffsetX = 18;\n        var rightOffsetX = 1;\n\n        if (w.config.yaxis.length > 1) {\n          this.multipleYs = true;\n        }\n\n        w.config.yaxis.map(function (yaxe, index) {\n          var shouldNotDrawAxis = w.globals.ignoreYAxisIndexes.indexOf(index) > -1 || !yaxe.show || yaxe.floating || yaxisLabelCoords[index].width === 0;\n          var axisWidth = yaxisLabelCoords[index].width + yTitleCoords[index].width;\n\n          if (!yaxe.opposite) {\n            xLeft = w.globals.translateX - leftOffsetX;\n\n            if (!shouldNotDrawAxis) {\n              leftOffsetX = leftOffsetX + axisWidth + 20;\n            }\n\n            w.globals.translateYAxisX[index] = xLeft + yaxe.labels.offsetX;\n          } else {\n            if (w.globals.isBarHorizontal) {\n              xRight = w.globals.gridWidth + w.globals.translateX - 1;\n              w.globals.translateYAxisX[index] = xRight - yaxe.labels.offsetX;\n            } else {\n              xRight = w.globals.gridWidth + w.globals.translateX + rightOffsetX;\n\n              if (!shouldNotDrawAxis) {\n                rightOffsetX = rightOffsetX + axisWidth + 20;\n              }\n\n              w.globals.translateYAxisX[index] = xRight - yaxe.labels.offsetX + 20;\n            }\n          }\n        });\n      }\n    }, {\n      key: \"setYAxisTextAlignments\",\n      value: function setYAxisTextAlignments() {\n        var w = this.w;\n        var yaxis = w.globals.dom.baseEl.getElementsByClassName(\"apexcharts-yaxis\");\n        yaxis = Utils$1.listToArray(yaxis);\n        yaxis.forEach(function (y, index) {\n          var yaxe = w.config.yaxis[index]; // proceed only if user has specified alignment\n\n          if (yaxe && yaxe.labels.align !== undefined) {\n            var yAxisInner = w.globals.dom.baseEl.querySelector(\".apexcharts-yaxis[rel='\".concat(index, \"'] .apexcharts-yaxis-texts-g\"));\n            var yAxisTexts = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-yaxis[rel='\".concat(index, \"'] .apexcharts-yaxis-label\"));\n            yAxisTexts = Utils$1.listToArray(yAxisTexts);\n            var rect = yAxisInner.getBoundingClientRect();\n\n            if (yaxe.labels.align === 'left') {\n              yAxisTexts.forEach(function (label, lI) {\n                label.setAttribute('text-anchor', 'start');\n              });\n\n              if (!yaxe.opposite) {\n                yAxisInner.setAttribute('transform', \"translate(-\".concat(rect.width, \", 0)\"));\n              }\n            } else if (yaxe.labels.align === 'center') {\n              yAxisTexts.forEach(function (label, lI) {\n                label.setAttribute('text-anchor', 'middle');\n              });\n              yAxisInner.setAttribute('transform', \"translate(\".concat(rect.width / 2 * (!yaxe.opposite ? -1 : 1), \", 0)\"));\n            } else if (yaxe.labels.align === 'right') {\n              yAxisTexts.forEach(function (label, lI) {\n                label.setAttribute('text-anchor', 'end');\n              });\n\n              if (yaxe.opposite) {\n                yAxisInner.setAttribute('transform', \"translate(\".concat(rect.width, \", 0)\"));\n              }\n            }\n          }\n        });\n      }\n    }]);\n\n    return YAxis;\n  }();\n\n  var Events = /*#__PURE__*/function () {\n    function Events(ctx) {\n      _classCallCheck(this, Events);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.documentEvent = Utils$1.bind(this.documentEvent, this);\n    }\n\n    _createClass(Events, [{\n      key: \"addEventListener\",\n      value: function addEventListener(name, handler) {\n        var w = this.w;\n\n        if (w.globals.events.hasOwnProperty(name)) {\n          w.globals.events[name].push(handler);\n        } else {\n          w.globals.events[name] = [handler];\n        }\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(name, handler) {\n        var w = this.w;\n\n        if (!w.globals.events.hasOwnProperty(name)) {\n          return;\n        }\n\n        var index = w.globals.events[name].indexOf(handler);\n\n        if (index !== -1) {\n          w.globals.events[name].splice(index, 1);\n        }\n      }\n    }, {\n      key: \"fireEvent\",\n      value: function fireEvent(name, args) {\n        var w = this.w;\n\n        if (!w.globals.events.hasOwnProperty(name)) {\n          return;\n        }\n\n        if (!args || !args.length) {\n          args = [];\n        }\n\n        var evs = w.globals.events[name];\n        var l = evs.length;\n\n        for (var i = 0; i < l; i++) {\n          evs[i].apply(null, args);\n        }\n      }\n    }, {\n      key: \"setupEventHandlers\",\n      value: function setupEventHandlers() {\n        var _this = this;\n\n        var w = this.w;\n        var me = this.ctx;\n        var clickableArea = w.globals.dom.baseEl.querySelector(w.globals.chartClass);\n        this.ctx.eventList.forEach(function (event) {\n          clickableArea.addEventListener(event, function (e) {\n            var opts = Object.assign({}, w, {\n              seriesIndex: w.globals.capturedSeriesIndex,\n              dataPointIndex: w.globals.capturedDataPointIndex\n            });\n\n            if (e.type === 'mousemove' || e.type === 'touchmove') {\n              if (typeof w.config.chart.events.mouseMove === 'function') {\n                w.config.chart.events.mouseMove(e, me, opts);\n              }\n            } else if (e.type === 'mouseleave' || e.type === 'touchleave') {\n              if (typeof w.config.chart.events.mouseLeave === 'function') {\n                w.config.chart.events.mouseLeave(e, me, opts);\n              }\n            } else if (e.type === 'mouseup' && e.which === 1 || e.type === 'touchend') {\n              if (typeof w.config.chart.events.click === 'function') {\n                w.config.chart.events.click(e, me, opts);\n              }\n\n              me.ctx.events.fireEvent('click', [e, me, opts]);\n            }\n          }, {\n            capture: false,\n            passive: true\n          });\n        });\n        this.ctx.eventList.forEach(function (event) {\n          w.globals.dom.baseEl.addEventListener(event, _this.documentEvent, {\n            passive: true\n          });\n        });\n        this.ctx.core.setupBrushHandler();\n      }\n    }, {\n      key: \"documentEvent\",\n      value: function documentEvent(e) {\n        var w = this.w;\n        var target = e.target.className;\n\n        if (e.type === 'click') {\n          var elMenu = w.globals.dom.baseEl.querySelector('.apexcharts-menu');\n\n          if (elMenu && elMenu.classList.contains('apexcharts-menu-open') && target !== 'apexcharts-menu-icon') {\n            elMenu.classList.remove('apexcharts-menu-open');\n          }\n        }\n\n        w.globals.clientX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX;\n        w.globals.clientY = e.type === 'touchmove' ? e.touches[0].clientY : e.clientY;\n      }\n    }]);\n\n    return Events;\n  }();\n\n  var Localization = /*#__PURE__*/function () {\n    function Localization(ctx) {\n      _classCallCheck(this, Localization);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Localization, [{\n      key: \"setCurrentLocaleValues\",\n      value: function setCurrentLocaleValues(localeName) {\n        var locales = this.w.config.chart.locales; // check if user has specified locales in global Apex variable\n        // if yes - then extend those with local chart's locale\n\n        if (window.Apex.chart && window.Apex.chart.locales && window.Apex.chart.locales.length > 0) {\n          locales = this.w.config.chart.locales.concat(window.Apex.chart.locales);\n        } // find the locale from the array of locales which user has set (either by chart.defaultLocale or by calling setLocale() method.)\n\n\n        var selectedLocale = locales.filter(function (c) {\n          return c.name === localeName;\n        })[0];\n\n        if (selectedLocale) {\n          // create a complete locale object by extending defaults so you don't get undefined errors.\n          var ret = Utils$1.extend(en, selectedLocale); // store these locale options in global var for ease access\n\n          this.w.globals.locale = ret.options;\n        } else {\n          throw new Error('Wrong locale name provided. Please make sure you set the correct locale name in options');\n        }\n      }\n    }]);\n\n    return Localization;\n  }();\n\n  var Axes = /*#__PURE__*/function () {\n    function Axes(ctx) {\n      _classCallCheck(this, Axes);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Axes, [{\n      key: \"drawAxis\",\n      value: function drawAxis(type, xyRatios) {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        var xAxis = new XAxis(this.ctx);\n        var yAxis = new YAxis(this.ctx);\n\n        if (gl.axisCharts && type !== 'radar') {\n          var elXaxis, elYaxis;\n\n          if (gl.isBarHorizontal) {\n            elYaxis = yAxis.drawYaxisInversed(0);\n            elXaxis = xAxis.drawXaxisInversed(0);\n            gl.dom.elGraphical.add(elXaxis);\n            gl.dom.elGraphical.add(elYaxis);\n          } else {\n            elXaxis = xAxis.drawXaxis();\n            gl.dom.elGraphical.add(elXaxis);\n            cnf.yaxis.map(function (yaxe, index) {\n              if (gl.ignoreYAxisIndexes.indexOf(index) === -1) {\n                elYaxis = yAxis.drawYaxis(index);\n                gl.dom.Paper.add(elYaxis);\n              }\n            });\n          }\n        }\n      }\n    }]);\n\n    return Axes;\n  }();\n\n  var Crosshairs = /*#__PURE__*/function () {\n    function Crosshairs(ctx) {\n      _classCallCheck(this, Crosshairs);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Crosshairs, [{\n      key: \"drawXCrosshairs\",\n      value: function drawXCrosshairs() {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var filters = new Filters(this.ctx);\n        var crosshairGradient = w.config.xaxis.crosshairs.fill.gradient;\n        var crosshairShadow = w.config.xaxis.crosshairs.dropShadow;\n        var fillType = w.config.xaxis.crosshairs.fill.type;\n        var gradientFrom = crosshairGradient.colorFrom;\n        var gradientTo = crosshairGradient.colorTo;\n        var opacityFrom = crosshairGradient.opacityFrom;\n        var opacityTo = crosshairGradient.opacityTo;\n        var stops = crosshairGradient.stops;\n        var shadow = 'none';\n        var dropShadow = crosshairShadow.enabled;\n        var shadowLeft = crosshairShadow.left;\n        var shadowTop = crosshairShadow.top;\n        var shadowBlur = crosshairShadow.blur;\n        var shadowColor = crosshairShadow.color;\n        var shadowOpacity = crosshairShadow.opacity;\n        var xcrosshairsFill = w.config.xaxis.crosshairs.fill.color;\n\n        if (w.config.xaxis.crosshairs.show) {\n          if (fillType === 'gradient') {\n            xcrosshairsFill = graphics.drawGradient('vertical', gradientFrom, gradientTo, opacityFrom, opacityTo, null, stops, null);\n          }\n\n          var xcrosshairs = graphics.drawRect();\n\n          if (w.config.xaxis.crosshairs.width === 1) {\n            // to prevent drawing 2 lines, convert rect to line\n            xcrosshairs = graphics.drawLine();\n          }\n\n          var gridHeight = w.globals.gridHeight;\n\n          if (!Utils$1.isNumber(gridHeight) || gridHeight < 0) {\n            gridHeight = 0;\n          }\n\n          var crosshairsWidth = w.config.xaxis.crosshairs.width;\n\n          if (!Utils$1.isNumber(crosshairsWidth) || crosshairsWidth < 0) {\n            crosshairsWidth = 0;\n          }\n\n          xcrosshairs.attr({\n            class: 'apexcharts-xcrosshairs',\n            x: 0,\n            y: 0,\n            y2: gridHeight,\n            width: crosshairsWidth,\n            height: gridHeight,\n            fill: xcrosshairsFill,\n            filter: shadow,\n            'fill-opacity': w.config.xaxis.crosshairs.opacity,\n            stroke: w.config.xaxis.crosshairs.stroke.color,\n            'stroke-width': w.config.xaxis.crosshairs.stroke.width,\n            'stroke-dasharray': w.config.xaxis.crosshairs.stroke.dashArray\n          });\n\n          if (dropShadow) {\n            xcrosshairs = filters.dropShadow(xcrosshairs, {\n              left: shadowLeft,\n              top: shadowTop,\n              blur: shadowBlur,\n              color: shadowColor,\n              opacity: shadowOpacity\n            });\n          }\n\n          w.globals.dom.elGraphical.add(xcrosshairs);\n        }\n      }\n    }, {\n      key: \"drawYCrosshairs\",\n      value: function drawYCrosshairs() {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var crosshair = w.config.yaxis[0].crosshairs;\n        var offX = w.globals.barPadForNumericAxis;\n\n        if (w.config.yaxis[0].crosshairs.show) {\n          var ycrosshairs = graphics.drawLine(-offX, 0, w.globals.gridWidth + offX, 0, crosshair.stroke.color, crosshair.stroke.dashArray, crosshair.stroke.width);\n          ycrosshairs.attr({\n            class: 'apexcharts-ycrosshairs'\n          });\n          w.globals.dom.elGraphical.add(ycrosshairs);\n        } // draw an invisible crosshair to help in positioning the yaxis tooltip\n\n\n        var ycrosshairsHidden = graphics.drawLine(-offX, 0, w.globals.gridWidth + offX, 0, crosshair.stroke.color, 0, 0);\n        ycrosshairsHidden.attr({\n          class: 'apexcharts-ycrosshairs-hidden'\n        });\n        w.globals.dom.elGraphical.add(ycrosshairsHidden);\n      }\n    }]);\n\n    return Crosshairs;\n  }();\n\n  /**\n   * ApexCharts Responsive Class to override options for different screen sizes.\n   *\n   * @module Responsive\n   **/\n\n  var Responsive = /*#__PURE__*/function () {\n    function Responsive(ctx) {\n      _classCallCheck(this, Responsive);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    } // the opts parameter if not null has to be set overriding everything\n    // as the opts is set by user externally\n\n\n    _createClass(Responsive, [{\n      key: \"checkResponsiveConfig\",\n      value: function checkResponsiveConfig(opts) {\n        var _this = this;\n\n        var w = this.w;\n        var cnf = w.config; // check if responsive config exists\n\n        if (cnf.responsive.length === 0) return;\n        var res = cnf.responsive.slice();\n        res.sort(function (a, b) {\n          return a.breakpoint > b.breakpoint ? 1 : b.breakpoint > a.breakpoint ? -1 : 0;\n        }).reverse();\n        var config = new Config({});\n\n        var iterateResponsiveOptions = function iterateResponsiveOptions() {\n          var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          var largestBreakpoint = res[0].breakpoint;\n          var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n          if (width > largestBreakpoint) {\n            var options = CoreUtils.extendArrayProps(config, w.globals.initialConfig, w);\n            newOptions = Utils$1.extend(options, newOptions);\n            newOptions = Utils$1.extend(w.config, newOptions);\n\n            _this.overrideResponsiveOptions(newOptions);\n          } else {\n            for (var i = 0; i < res.length; i++) {\n              if (width < res[i].breakpoint) {\n                newOptions = CoreUtils.extendArrayProps(config, res[i].options, w);\n                newOptions = Utils$1.extend(w.config, newOptions);\n\n                _this.overrideResponsiveOptions(newOptions);\n              }\n            }\n          }\n        };\n\n        if (opts) {\n          var options = CoreUtils.extendArrayProps(config, opts, w);\n          options = Utils$1.extend(w.config, options);\n          options = Utils$1.extend(options, opts);\n          iterateResponsiveOptions(options);\n        } else {\n          iterateResponsiveOptions({});\n        }\n      }\n    }, {\n      key: \"overrideResponsiveOptions\",\n      value: function overrideResponsiveOptions(newOptions) {\n        var newConfig = new Config(newOptions).init({\n          responsiveOverride: true\n        });\n        this.w.config = newConfig;\n      }\n    }]);\n\n    return Responsive;\n  }();\n\n  /**\n   * ApexCharts Theme Class for setting the colors and palettes.\n   *\n   * @module Theme\n   **/\n\n  var Theme = /*#__PURE__*/function () {\n    function Theme(ctx) {\n      _classCallCheck(this, Theme);\n\n      this.ctx = ctx;\n      this.colors = [];\n      this.w = ctx.w;\n      var w = this.w;\n      this.isColorFn = false;\n      this.isHeatmapDistributed = w.config.chart.type === 'treemap' && w.config.plotOptions.treemap.distributed || w.config.chart.type === 'heatmap' && w.config.plotOptions.heatmap.distributed;\n      this.isBarDistributed = w.config.plotOptions.bar.distributed && (w.config.chart.type === 'bar' || w.config.chart.type === 'rangeBar');\n    }\n\n    _createClass(Theme, [{\n      key: \"init\",\n      value: function init() {\n        this.setDefaultColors();\n      }\n    }, {\n      key: \"setDefaultColors\",\n      value: function setDefaultColors() {\n        var _this = this;\n\n        var w = this.w;\n        var utils = new Utils$1();\n        w.globals.dom.elWrap.classList.add(\"apexcharts-theme-\".concat(w.config.theme.mode));\n\n        if (w.config.colors === undefined) {\n          w.globals.colors = this.predefined();\n        } else {\n          w.globals.colors = w.config.colors; // if user provided a function in colors, we need to eval here\n\n          if (Array.isArray(w.config.colors) && w.config.colors.length > 0 && typeof w.config.colors[0] === 'function') {\n            w.globals.colors = w.config.series.map(function (s, i) {\n              var c = w.config.colors[i];\n              if (!c) c = w.config.colors[0];\n\n              if (typeof c === 'function') {\n                _this.isColorFn = true;\n                return c({\n                  value: w.globals.axisCharts ? w.globals.series[i][0] ? w.globals.series[i][0] : 0 : w.globals.series[i],\n                  seriesIndex: i,\n                  dataPointIndex: i,\n                  w: w\n                });\n              }\n\n              return c;\n            });\n          }\n        } // user defined colors in series array\n\n\n        w.globals.seriesColors.map(function (c, i) {\n          if (c) {\n            w.globals.colors[i] = c;\n          }\n        });\n\n        if (w.config.theme.monochrome.enabled) {\n          var monoArr = [];\n          var glsCnt = w.globals.series.length;\n\n          if (this.isBarDistributed || this.isHeatmapDistributed) {\n            glsCnt = w.globals.series[0].length * w.globals.series.length;\n          }\n\n          var mainColor = w.config.theme.monochrome.color;\n          var part = 1 / (glsCnt / w.config.theme.monochrome.shadeIntensity);\n          var shade = w.config.theme.monochrome.shadeTo;\n          var percent = 0;\n\n          for (var gsl = 0; gsl < glsCnt; gsl++) {\n            var newColor = void 0;\n\n            if (shade === 'dark') {\n              newColor = utils.shadeColor(percent * -1, mainColor);\n              percent = percent + part;\n            } else {\n              newColor = utils.shadeColor(percent, mainColor);\n              percent = percent + part;\n            }\n\n            monoArr.push(newColor);\n          }\n\n          w.globals.colors = monoArr.slice();\n        }\n\n        var defaultColors = w.globals.colors.slice(); // if user specified fewer colors than no. of series, push the same colors again\n\n        this.pushExtraColors(w.globals.colors);\n        var colorTypes = ['fill', 'stroke'];\n        colorTypes.forEach(function (c) {\n          if (w.config[c].colors === undefined) {\n            w.globals[c].colors = _this.isColorFn ? w.config.colors : defaultColors;\n          } else {\n            w.globals[c].colors = w.config[c].colors.slice();\n          }\n\n          _this.pushExtraColors(w.globals[c].colors);\n        });\n\n        if (w.config.dataLabels.style.colors === undefined) {\n          w.globals.dataLabels.style.colors = defaultColors;\n        } else {\n          w.globals.dataLabels.style.colors = w.config.dataLabels.style.colors.slice();\n        }\n\n        this.pushExtraColors(w.globals.dataLabels.style.colors, 50);\n\n        if (w.config.plotOptions.radar.polygons.fill.colors === undefined) {\n          w.globals.radarPolygons.fill.colors = [w.config.theme.mode === 'dark' ? '#424242' : 'none'];\n        } else {\n          w.globals.radarPolygons.fill.colors = w.config.plotOptions.radar.polygons.fill.colors.slice();\n        }\n\n        this.pushExtraColors(w.globals.radarPolygons.fill.colors, 20); // The point colors\n\n        if (w.config.markers.colors === undefined) {\n          w.globals.markers.colors = defaultColors;\n        } else {\n          w.globals.markers.colors = w.config.markers.colors.slice();\n        }\n\n        this.pushExtraColors(w.globals.markers.colors);\n      } // When the number of colors provided is less than the number of series, this method\n      // will push same colors to the list\n      // params:\n      // distributed is only valid for distributed column/bar charts\n\n    }, {\n      key: \"pushExtraColors\",\n      value: function pushExtraColors(colorSeries, length) {\n        var distributed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var w = this.w;\n        var len = length || w.globals.series.length;\n\n        if (distributed === null) {\n          distributed = this.isBarDistributed || this.isHeatmapDistributed || w.config.chart.type === 'heatmap' && w.config.plotOptions.heatmap.colorScale.inverse;\n        }\n\n        if (distributed && w.globals.series.length) {\n          len = w.globals.series[w.globals.maxValsInArrayIndex].length * w.globals.series.length;\n        }\n\n        if (colorSeries.length < len) {\n          var diff = len - colorSeries.length;\n\n          for (var i = 0; i < diff; i++) {\n            colorSeries.push(colorSeries[i]);\n          }\n        }\n      }\n    }, {\n      key: \"updateThemeOptions\",\n      value: function updateThemeOptions(options) {\n        options.chart = options.chart || {};\n        options.tooltip = options.tooltip || {};\n        var mode = options.theme.mode || 'light';\n        var palette = options.theme.palette ? options.theme.palette : mode === 'dark' ? 'palette4' : 'palette1';\n        var foreColor = options.chart.foreColor ? options.chart.foreColor : mode === 'dark' ? '#f6f7f8' : '#373d3f';\n        options.tooltip.theme = mode;\n        options.chart.foreColor = foreColor;\n        options.theme.palette = palette;\n        return options;\n      }\n    }, {\n      key: \"predefined\",\n      value: function predefined() {\n        var palette = this.w.config.theme.palette; // D6E3F8, FCEFEF, DCE0D9, A5978B, EDDDD4, D6E3F8, FEF5EF\n\n        switch (palette) {\n          case 'palette1':\n            this.colors = ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0'];\n            break;\n\n          case 'palette2':\n            this.colors = ['#3f51b5', '#03a9f4', '#4caf50', '#f9ce1d', '#FF9800'];\n            break;\n\n          case 'palette3':\n            this.colors = ['#33b2df', '#546E7A', '#d4526e', '#13d8aa', '#A5978B'];\n            break;\n\n          case 'palette4':\n            this.colors = ['#4ecdc4', '#c7f464', '#81D4FA', '#fd6a6a', '#546E7A'];\n            break;\n\n          case 'palette5':\n            this.colors = ['#2b908f', '#f9a3a4', '#90ee7e', '#fa4443', '#69d2e7'];\n            break;\n\n          case 'palette6':\n            this.colors = ['#449DD1', '#F86624', '#EA3546', '#662E9B', '#C5D86D'];\n            break;\n\n          case 'palette7':\n            this.colors = ['#D7263D', '#1B998B', '#2E294E', '#F46036', '#E2C044'];\n            break;\n\n          case 'palette8':\n            this.colors = ['#662E9B', '#F86624', '#F9C80E', '#EA3546', '#43BCCD'];\n            break;\n\n          case 'palette9':\n            this.colors = ['#5C4742', '#A5978B', '#8D5B4C', '#5A2A27', '#C4BBAF'];\n            break;\n\n          case 'palette10':\n            this.colors = ['#A300D6', '#7D02EB', '#5653FE', '#2983FF', '#00B1F2'];\n            break;\n\n          default:\n            this.colors = ['#008FFB', '#00E396', '#FEB019', '#FF4560', '#775DD0'];\n            break;\n        }\n\n        return this.colors;\n      }\n    }]);\n\n    return Theme;\n  }();\n\n  var TitleSubtitle = /*#__PURE__*/function () {\n    function TitleSubtitle(ctx) {\n      _classCallCheck(this, TitleSubtitle);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(TitleSubtitle, [{\n      key: \"draw\",\n      value: function draw() {\n        this.drawTitleSubtitle('title');\n        this.drawTitleSubtitle('subtitle');\n      }\n    }, {\n      key: \"drawTitleSubtitle\",\n      value: function drawTitleSubtitle(type) {\n        var w = this.w;\n        var tsConfig = type === 'title' ? w.config.title : w.config.subtitle;\n        var x = w.globals.svgWidth / 2;\n        var y = tsConfig.offsetY;\n        var textAnchor = 'middle';\n\n        if (tsConfig.align === 'left') {\n          x = 10;\n          textAnchor = 'start';\n        } else if (tsConfig.align === 'right') {\n          x = w.globals.svgWidth - 10;\n          textAnchor = 'end';\n        }\n\n        x = x + tsConfig.offsetX;\n        y = y + parseInt(tsConfig.style.fontSize, 10) + tsConfig.margin / 2;\n\n        if (tsConfig.text !== undefined) {\n          var graphics = new Graphics(this.ctx);\n          var titleText = graphics.drawText({\n            x: x,\n            y: y,\n            text: tsConfig.text,\n            textAnchor: textAnchor,\n            fontSize: tsConfig.style.fontSize,\n            fontFamily: tsConfig.style.fontFamily,\n            fontWeight: tsConfig.style.fontWeight,\n            foreColor: tsConfig.style.color,\n            opacity: 1\n          });\n          titleText.node.setAttribute('class', \"apexcharts-\".concat(type, \"-text\"));\n          w.globals.dom.Paper.add(titleText);\n        }\n      }\n    }]);\n\n    return TitleSubtitle;\n  }();\n\n  var Helpers$2 = /*#__PURE__*/function () {\n    function Helpers(dCtx) {\n      _classCallCheck(this, Helpers);\n\n      this.w = dCtx.w;\n      this.dCtx = dCtx;\n    }\n    /**\n     * Get Chart Title/Subtitle Dimensions\n     * @memberof Dimensions\n     * @return {{width, height}}\n     **/\n\n\n    _createClass(Helpers, [{\n      key: \"getTitleSubtitleCoords\",\n      value: function getTitleSubtitleCoords(type) {\n        var w = this.w;\n        var width = 0;\n        var height = 0;\n        var floating = type === 'title' ? w.config.title.floating : w.config.subtitle.floating;\n        var el = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(type, \"-text\"));\n\n        if (el !== null && !floating) {\n          var coord = el.getBoundingClientRect();\n          width = coord.width;\n          height = w.globals.axisCharts ? coord.height + 5 : coord.height;\n        }\n\n        return {\n          width: width,\n          height: height\n        };\n      }\n    }, {\n      key: \"getLegendsRect\",\n      value: function getLegendsRect() {\n        var w = this.w;\n        var elLegendWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend');\n\n        if (!w.config.legend.height && (w.config.legend.position === 'top' || w.config.legend.position === 'bottom')) {\n          // avoid legend to take up all the space\n          elLegendWrap.style.maxHeight = w.globals.svgHeight / 2 + 'px';\n        }\n\n        var lgRect = Object.assign({}, Utils$1.getBoundingClientRect(elLegendWrap));\n\n        if (elLegendWrap !== null && !w.config.legend.floating && w.config.legend.show) {\n          this.dCtx.lgRect = {\n            x: lgRect.x,\n            y: lgRect.y,\n            height: lgRect.height,\n            width: lgRect.height === 0 ? 0 : lgRect.width\n          };\n        } else {\n          this.dCtx.lgRect = {\n            x: 0,\n            y: 0,\n            height: 0,\n            width: 0\n          };\n        } // if legend takes up all of the chart space, we need to restrict it.\n\n\n        if (w.config.legend.position === 'left' || w.config.legend.position === 'right') {\n          if (this.dCtx.lgRect.width * 1.5 > w.globals.svgWidth) {\n            this.dCtx.lgRect.width = w.globals.svgWidth / 1.5;\n          }\n        }\n\n        return this.dCtx.lgRect;\n      }\n    }, {\n      key: \"getLargestStringFromMultiArr\",\n      value: function getLargestStringFromMultiArr(val, arr) {\n        var w = this.w;\n        var valArr = val;\n\n        if (w.globals.isMultiLineX) {\n          // if the xaxis labels has multiline texts (array)\n          var maxArrs = arr.map(function (xl, idx) {\n            return Array.isArray(xl) ? xl.length : 1;\n          });\n          var maxArrLen = Math.max.apply(Math, _toConsumableArray(maxArrs));\n          var maxArrIndex = maxArrs.indexOf(maxArrLen);\n          valArr = arr[maxArrIndex];\n        }\n\n        return valArr;\n      }\n    }]);\n\n    return Helpers;\n  }();\n\n  var DimXAxis = /*#__PURE__*/function () {\n    function DimXAxis(dCtx) {\n      _classCallCheck(this, DimXAxis);\n\n      this.w = dCtx.w;\n      this.dCtx = dCtx;\n    }\n    /**\n     * Get X Axis Dimensions\n     * @memberof Dimensions\n     * @return {{width, height}}\n     **/\n\n\n    _createClass(DimXAxis, [{\n      key: \"getxAxisLabelsCoords\",\n      value: function getxAxisLabelsCoords() {\n        var w = this.w;\n        var xaxisLabels = w.globals.labels.slice();\n\n        if (w.config.xaxis.convertedCatToNumeric && xaxisLabels.length === 0) {\n          xaxisLabels = w.globals.categoryLabels;\n        }\n\n        var rect;\n\n        if (w.globals.timescaleLabels.length > 0) {\n          var coords = this.getxAxisTimeScaleLabelsCoords();\n          rect = {\n            width: coords.width,\n            height: coords.height\n          };\n          w.globals.rotateXLabels = false;\n        } else {\n          this.dCtx.lgWidthForSideLegends = (w.config.legend.position === 'left' || w.config.legend.position === 'right') && !w.config.legend.floating ? this.dCtx.lgRect.width : 0; // get the longest string from the labels array and also apply label formatter\n\n          var xlbFormatter = w.globals.xLabelFormatter; // prevent changing xaxisLabels to avoid issues in multi-yaxes - fix #522\n\n          var val = Utils$1.getLargestStringFromArr(xaxisLabels);\n          var valArr = this.dCtx.dimHelpers.getLargestStringFromMultiArr(val, xaxisLabels); // the labels gets changed for bar charts\n\n          if (w.globals.isBarHorizontal) {\n            val = w.globals.yAxisScale[0].result.reduce(function (a, b) {\n              return a.length > b.length ? a : b;\n            }, 0);\n            valArr = val;\n          }\n\n          var xFormat = new Formatters(this.dCtx.ctx);\n          var timestamp = val;\n          val = xFormat.xLabelFormat(xlbFormatter, val, timestamp, {\n            i: undefined,\n            dateFormatter: new DateTime(this.dCtx.ctx).formatDate,\n            w: w\n          });\n          valArr = xFormat.xLabelFormat(xlbFormatter, valArr, timestamp, {\n            i: undefined,\n            dateFormatter: new DateTime(this.dCtx.ctx).formatDate,\n            w: w\n          });\n\n          if (w.config.xaxis.convertedCatToNumeric && typeof val === 'undefined' || String(val).trim() === '') {\n            val = '1';\n            valArr = val;\n          }\n\n          var graphics = new Graphics(this.dCtx.ctx);\n          var xLabelrect = graphics.getTextRects(val, w.config.xaxis.labels.style.fontSize);\n          var xArrLabelrect = xLabelrect;\n\n          if (val !== valArr) {\n            xArrLabelrect = graphics.getTextRects(valArr, w.config.xaxis.labels.style.fontSize);\n          }\n\n          rect = {\n            width: xLabelrect.width >= xArrLabelrect.width ? xLabelrect.width : xArrLabelrect.width,\n            height: xLabelrect.height >= xArrLabelrect.height ? xLabelrect.height : xArrLabelrect.height\n          };\n\n          if (rect.width * xaxisLabels.length > w.globals.svgWidth - this.dCtx.lgWidthForSideLegends - this.dCtx.yAxisWidth - this.dCtx.gridPad.left - this.dCtx.gridPad.right && w.config.xaxis.labels.rotate !== 0 || w.config.xaxis.labels.rotateAlways) {\n            if (!w.globals.isBarHorizontal) {\n              w.globals.rotateXLabels = true;\n\n              var getRotatedTextRects = function getRotatedTextRects(text) {\n                return graphics.getTextRects(text, w.config.xaxis.labels.style.fontSize, w.config.xaxis.labels.style.fontFamily, \"rotate(\".concat(w.config.xaxis.labels.rotate, \" 0 0)\"), false);\n              };\n\n              xLabelrect = getRotatedTextRects(val);\n\n              if (val !== valArr) {\n                xArrLabelrect = getRotatedTextRects(valArr);\n              }\n\n              rect.height = (xLabelrect.height > xArrLabelrect.height ? xLabelrect.height : xArrLabelrect.height) / 1.5;\n              rect.width = xLabelrect.width > xArrLabelrect.width ? xLabelrect.width : xArrLabelrect.width;\n            }\n          } else {\n            w.globals.rotateXLabels = false;\n          }\n        }\n\n        if (!w.config.xaxis.labels.show) {\n          rect = {\n            width: 0,\n            height: 0\n          };\n        }\n\n        return {\n          width: rect.width,\n          height: rect.height\n        };\n      }\n      /**\n       * Get X Axis Title Dimensions\n       * @memberof Dimensions\n       * @return {{width, height}}\n       **/\n\n    }, {\n      key: \"getxAxisTitleCoords\",\n      value: function getxAxisTitleCoords() {\n        var w = this.w;\n        var width = 0;\n        var height = 0;\n\n        if (w.config.xaxis.title.text !== undefined) {\n          var graphics = new Graphics(this.dCtx.ctx);\n          var rect = graphics.getTextRects(w.config.xaxis.title.text, w.config.xaxis.title.style.fontSize);\n          width = rect.width;\n          height = rect.height;\n        }\n\n        return {\n          width: width,\n          height: height\n        };\n      }\n    }, {\n      key: \"getxAxisTimeScaleLabelsCoords\",\n      value: function getxAxisTimeScaleLabelsCoords() {\n        var w = this.w;\n        var rect;\n        this.dCtx.timescaleLabels = w.globals.timescaleLabels.slice();\n        var labels = this.dCtx.timescaleLabels.map(function (label) {\n          return label.value;\n        }); //  get the longest string from the labels array and also apply label formatter to it\n\n        var val = labels.reduce(function (a, b) {\n          // if undefined, maybe user didn't pass the datetime(x) values\n          if (typeof a === 'undefined') {\n            console.error('You have possibly supplied invalid Date format. Please supply a valid JavaScript Date');\n            return 0;\n          } else {\n            return a.length > b.length ? a : b;\n          }\n        }, 0);\n        var graphics = new Graphics(this.dCtx.ctx);\n        rect = graphics.getTextRects(val, w.config.xaxis.labels.style.fontSize);\n        var totalWidthRotated = rect.width * 1.05 * labels.length;\n\n        if (totalWidthRotated > w.globals.gridWidth && w.config.xaxis.labels.rotate !== 0) {\n          w.globals.overlappingXLabels = true;\n        }\n\n        return rect;\n      } // In certain cases, the last labels gets cropped in xaxis.\n      // Hence, we add some additional padding based on the label length to avoid the last label being cropped or we don't draw it at all\n\n    }, {\n      key: \"additionalPaddingXLabels\",\n      value: function additionalPaddingXLabels(xaxisLabelCoords) {\n        var _this = this;\n\n        var w = this.w;\n        var gl = w.globals;\n        var cnf = w.config;\n        var xtype = cnf.xaxis.type;\n        var lbWidth = xaxisLabelCoords.width;\n        gl.skipLastTimelinelabel = false;\n        gl.skipFirstTimelinelabel = false;\n        var isBarOpposite = w.config.yaxis[0].opposite && w.globals.isBarHorizontal;\n\n        var isCollapsed = function isCollapsed(i) {\n          return gl.collapsedSeriesIndices.indexOf(i) !== -1;\n        };\n\n        var rightPad = function rightPad(yaxe) {\n          if (_this.dCtx.timescaleLabels && _this.dCtx.timescaleLabels.length) {\n            // for timeline labels, we take the last label and check if it exceeds gridWidth\n            var firstimescaleLabel = _this.dCtx.timescaleLabels[0];\n            var lastTimescaleLabel = _this.dCtx.timescaleLabels[_this.dCtx.timescaleLabels.length - 1];\n            var lastLabelPosition = lastTimescaleLabel.position + lbWidth / 1.75 - _this.dCtx.yAxisWidthRight;\n            var firstLabelPosition = firstimescaleLabel.position - lbWidth / 1.75 + _this.dCtx.yAxisWidthLeft;\n            var lgRightRectWidth = w.config.legend.position === 'right' && _this.dCtx.lgRect.width > 0 ? _this.dCtx.lgRect.width : 0;\n\n            if (lastLabelPosition > gl.svgWidth - gl.translateX - lgRightRectWidth) {\n              gl.skipLastTimelinelabel = true;\n            }\n\n            if (firstLabelPosition < -((!yaxe.show || yaxe.floating) && (cnf.chart.type === 'bar' || cnf.chart.type === 'candlestick' || cnf.chart.type === 'rangeBar' || cnf.chart.type === 'boxPlot') ? lbWidth / 1.75 : 10)) {\n              gl.skipFirstTimelinelabel = true;\n            }\n          } else if (xtype === 'datetime') {\n            // If user has enabled DateTime, but uses own's formatter\n            if (_this.dCtx.gridPad.right < lbWidth && !gl.rotateXLabels) {\n              gl.skipLastTimelinelabel = true;\n            }\n          } else if (xtype !== 'datetime') {\n            if (_this.dCtx.gridPad.right < lbWidth / 2 - _this.dCtx.yAxisWidthRight && !gl.rotateXLabels && !w.config.xaxis.labels.trim && (w.config.xaxis.tickPlacement !== 'between' || w.globals.isBarHorizontal)) {\n              _this.dCtx.xPadRight = lbWidth / 2 + 1;\n            }\n          }\n        };\n\n        var padYAxe = function padYAxe(yaxe, i) {\n          if (isCollapsed(i)) return; // the code below causes issue apexcharts.js#1989\n          // after testing with other use-cases, this has no actual value, hence commented\n          // if (xtype !== 'datetime') {\n          //   if (\n          //     this.dCtx.gridPad.left < lbWidth / 2 - this.dCtx.yAxisWidthLeft &&\n          //     !gl.rotateXLabels &&\n          //     !cnf.xaxis.labels.trim\n          //   ) {\n          //     this.dCtx.xPadLeft = lbWidth / 2 + 1\n          //   }\n          // }\n\n          rightPad(yaxe);\n        };\n\n        cnf.yaxis.forEach(function (yaxe, i) {\n          if (isBarOpposite) {\n            if (_this.dCtx.gridPad.left < lbWidth) {\n              _this.dCtx.xPadLeft = lbWidth / 2 + 1;\n            }\n\n            _this.dCtx.xPadRight = lbWidth / 2 + 1;\n          } else {\n            padYAxe(yaxe, i);\n          }\n        });\n      }\n    }]);\n\n    return DimXAxis;\n  }();\n\n  var DimYAxis = /*#__PURE__*/function () {\n    function DimYAxis(dCtx) {\n      _classCallCheck(this, DimYAxis);\n\n      this.w = dCtx.w;\n      this.dCtx = dCtx;\n    }\n    /**\n     * Get Y Axis Dimensions\n     * @memberof Dimensions\n     * @return {{width, height}}\n     **/\n\n\n    _createClass(DimYAxis, [{\n      key: \"getyAxisLabelsCoords\",\n      value: function getyAxisLabelsCoords() {\n        var _this = this;\n\n        var w = this.w;\n        var width = 0;\n        var height = 0;\n        var ret = [];\n        var labelPad = 10;\n        var axesUtils = new AxesUtils(this.dCtx.ctx);\n        w.config.yaxis.map(function (yaxe, index) {\n          var yS = w.globals.yAxisScale[index];\n          var yAxisMinWidth = 0;\n          if (!axesUtils.isYAxisHidden(index) && yaxe.labels.show && yaxe.labels.minWidth !== undefined) yAxisMinWidth = yaxe.labels.minWidth;\n\n          if (!axesUtils.isYAxisHidden(index) && yaxe.labels.show && yS.result.length) {\n            var lbFormatter = w.globals.yLabelFormatters[index];\n            var minV = yS.niceMin === Number.MIN_VALUE ? 0 : yS.niceMin;\n            var longestStr = String(minV).length > String(yS.niceMax).length ? minV : yS.niceMax; // the second parameter -1 is the index of tick which user can use in the formatter\n\n            var val = lbFormatter(longestStr, {\n              seriesIndex: index,\n              dataPointIndex: -1,\n              w: w\n            });\n            var valArr = val; // if user has specified a custom formatter, and the result is null or empty, we need to discard the formatter and take the value as it is.\n\n            if (typeof val === 'undefined' || val.length === 0) {\n              val = longestStr;\n            }\n\n            if (w.globals.isBarHorizontal) {\n              labelPad = 0;\n              var barYaxisLabels = w.globals.labels.slice(); //  get the longest string from the labels array and also apply label formatter to it\n\n              val = Utils$1.getLargestStringFromArr(barYaxisLabels);\n              val = lbFormatter(val, {\n                seriesIndex: index,\n                dataPointIndex: -1,\n                w: w\n              });\n              valArr = _this.dCtx.dimHelpers.getLargestStringFromMultiArr(val, barYaxisLabels);\n            }\n\n            var graphics = new Graphics(_this.dCtx.ctx);\n            var rotateStr = 'rotate('.concat(yaxe.labels.rotate, ' 0 0)');\n            var rect = graphics.getTextRects(val, yaxe.labels.style.fontSize, yaxe.labels.style.fontFamily, rotateStr, false);\n            var arrLabelrect = rect;\n\n            if (val !== valArr) {\n              arrLabelrect = graphics.getTextRects(valArr, yaxe.labels.style.fontSize, yaxe.labels.style.fontFamily, rotateStr, false);\n            }\n\n            ret.push({\n              width: (yAxisMinWidth > arrLabelrect.width || yAxisMinWidth > rect.width ? yAxisMinWidth : arrLabelrect.width > rect.width ? arrLabelrect.width : rect.width) + labelPad,\n              height: arrLabelrect.height > rect.height ? arrLabelrect.height : rect.height\n            });\n          } else {\n            ret.push({\n              width: width,\n              height: height\n            });\n          }\n        });\n        return ret;\n      }\n      /**\n       * Get Y Axis Dimensions\n       * @memberof Dimensions\n       * @return {{width, height}}\n       **/\n\n    }, {\n      key: \"getyAxisTitleCoords\",\n      value: function getyAxisTitleCoords() {\n        var _this2 = this;\n\n        var w = this.w;\n        var ret = [];\n        w.config.yaxis.map(function (yaxe, index) {\n          if (yaxe.show && yaxe.title.text !== undefined) {\n            var graphics = new Graphics(_this2.dCtx.ctx);\n            var rotateStr = 'rotate('.concat(yaxe.title.rotate, ' 0 0)');\n            var rect = graphics.getTextRects(yaxe.title.text, yaxe.title.style.fontSize, yaxe.title.style.fontFamily, rotateStr, false);\n            ret.push({\n              width: rect.width,\n              height: rect.height\n            });\n          } else {\n            ret.push({\n              width: 0,\n              height: 0\n            });\n          }\n        });\n        return ret;\n      }\n    }, {\n      key: \"getTotalYAxisWidth\",\n      value: function getTotalYAxisWidth() {\n        var w = this.w;\n        var yAxisWidth = 0;\n        var yAxisWidthLeft = 0;\n        var yAxisWidthRight = 0;\n        var padding = w.globals.yAxisScale.length > 1 ? 10 : 0;\n        var axesUtils = new AxesUtils(this.dCtx.ctx);\n\n        var isHiddenYAxis = function isHiddenYAxis(index) {\n          return w.globals.ignoreYAxisIndexes.indexOf(index) > -1;\n        };\n\n        var padForLabelTitle = function padForLabelTitle(coord, index) {\n          var floating = w.config.yaxis[index].floating;\n          var width = 0;\n\n          if (coord.width > 0 && !floating) {\n            width = coord.width + padding;\n\n            if (isHiddenYAxis(index)) {\n              width = width - coord.width - padding;\n            }\n          } else {\n            width = floating || axesUtils.isYAxisHidden(index) ? 0 : 5;\n          }\n\n          w.config.yaxis[index].opposite ? yAxisWidthRight = yAxisWidthRight + width : yAxisWidthLeft = yAxisWidthLeft + width;\n          yAxisWidth = yAxisWidth + width;\n        };\n\n        w.globals.yLabelsCoords.map(function (yLabelCoord, index) {\n          padForLabelTitle(yLabelCoord, index);\n        });\n        w.globals.yTitleCoords.map(function (yTitleCoord, index) {\n          padForLabelTitle(yTitleCoord, index);\n        });\n\n        if (w.globals.isBarHorizontal && !w.config.yaxis[0].floating) {\n          yAxisWidth = w.globals.yLabelsCoords[0].width + w.globals.yTitleCoords[0].width + 15;\n        }\n\n        this.dCtx.yAxisWidthLeft = yAxisWidthLeft;\n        this.dCtx.yAxisWidthRight = yAxisWidthRight;\n        return yAxisWidth;\n      }\n    }]);\n\n    return DimYAxis;\n  }();\n\n  var DimGrid = /*#__PURE__*/function () {\n    function DimGrid(dCtx) {\n      _classCallCheck(this, DimGrid);\n\n      this.w = dCtx.w;\n      this.dCtx = dCtx;\n    }\n\n    _createClass(DimGrid, [{\n      key: \"gridPadForColumnsInNumericAxis\",\n      value: function gridPadForColumnsInNumericAxis(gridWidth) {\n        var w = this.w;\n\n        if (w.globals.noData || w.globals.allSeriesCollapsed) {\n          return 0;\n        }\n\n        var hasBar = function hasBar(type) {\n          return type === 'bar' || type === 'rangeBar' || type === 'candlestick' || type === 'boxPlot';\n        };\n\n        var type = w.config.chart.type;\n        var barWidth = 0;\n        var seriesLen = hasBar(type) ? w.config.series.length : 1;\n\n        if (w.globals.comboBarCount > 0) {\n          seriesLen = w.globals.comboBarCount;\n        }\n\n        w.globals.collapsedSeries.forEach(function (c) {\n          if (hasBar(c.type)) {\n            seriesLen = seriesLen - 1;\n          }\n        });\n\n        if (w.config.chart.stacked) {\n          seriesLen = 1;\n        }\n\n        var barsPresent = hasBar(type) || w.globals.comboBarCount > 0;\n\n        if (barsPresent && w.globals.isXNumeric && !w.globals.isBarHorizontal && seriesLen > 0) {\n          var xRatio = 0;\n          var xRange = Math.abs(w.globals.initialMaxX - w.globals.initialMinX);\n\n          if (xRange <= 3) {\n            xRange = w.globals.dataPoints;\n          }\n\n          xRatio = xRange / gridWidth;\n          var xDivision; // max barwidth should be equal to minXDiff to avoid overlap\n\n          if (w.globals.minXDiff && w.globals.minXDiff / xRatio > 0) {\n            xDivision = w.globals.minXDiff / xRatio;\n          }\n\n          if (xDivision > gridWidth / 2) {\n            xDivision = xDivision / 2;\n          }\n\n          barWidth = xDivision / seriesLen * parseInt(w.config.plotOptions.bar.columnWidth, 10) / 100;\n\n          if (barWidth < 1) {\n            barWidth = 1;\n          }\n\n          barWidth = barWidth / (seriesLen > 1 ? 1 : 1.5) + 5;\n          w.globals.barPadForNumericAxis = barWidth;\n        }\n\n        return barWidth;\n      }\n    }, {\n      key: \"gridPadFortitleSubtitle\",\n      value: function gridPadFortitleSubtitle() {\n        var _this = this;\n\n        var w = this.w;\n        var gl = w.globals;\n        var gridShrinkOffset = this.dCtx.isSparkline || !w.globals.axisCharts ? 0 : 10;\n        var titleSubtitle = ['title', 'subtitle'];\n        titleSubtitle.forEach(function (t) {\n          if (w.config[t].text !== undefined) {\n            gridShrinkOffset += w.config[t].margin;\n          } else {\n            gridShrinkOffset += _this.dCtx.isSparkline || !w.globals.axisCharts ? 0 : 5;\n          }\n        });\n\n        if (w.config.legend.show && w.config.legend.position === 'bottom' && !w.config.legend.floating && !w.globals.axisCharts) {\n          gridShrinkOffset += 10;\n        }\n\n        var titleCoords = this.dCtx.dimHelpers.getTitleSubtitleCoords('title');\n        var subtitleCoords = this.dCtx.dimHelpers.getTitleSubtitleCoords('subtitle');\n        gl.gridHeight = gl.gridHeight - titleCoords.height - subtitleCoords.height - gridShrinkOffset;\n        gl.translateY = gl.translateY + titleCoords.height + subtitleCoords.height + gridShrinkOffset;\n      }\n    }, {\n      key: \"setGridXPosForDualYAxis\",\n      value: function setGridXPosForDualYAxis(yTitleCoords, yaxisLabelCoords) {\n        var w = this.w;\n        var axesUtils = new AxesUtils(this.dCtx.ctx);\n        w.config.yaxis.map(function (yaxe, index) {\n          if (w.globals.ignoreYAxisIndexes.indexOf(index) === -1 && !yaxe.floating && !axesUtils.isYAxisHidden(index)) {\n            if (yaxe.opposite) {\n              w.globals.translateX = w.globals.translateX - (yaxisLabelCoords[index].width + yTitleCoords[index].width) - parseInt(w.config.yaxis[index].labels.style.fontSize, 10) / 1.2 - 12;\n            } // fixes apexcharts.js#1599\n\n\n            if (w.globals.translateX < 2) {\n              w.globals.translateX = 2;\n            }\n          }\n        });\n      }\n    }]);\n\n    return DimGrid;\n  }();\n\n  /**\n   * ApexCharts Dimensions Class for calculating rects of all elements that are drawn and will be drawn.\n   *\n   * @module Dimensions\n   **/\n\n  var Dimensions = /*#__PURE__*/function () {\n    function Dimensions(ctx) {\n      _classCallCheck(this, Dimensions);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.lgRect = {};\n      this.yAxisWidth = 0;\n      this.yAxisWidthLeft = 0;\n      this.yAxisWidthRight = 0;\n      this.xAxisHeight = 0;\n      this.isSparkline = this.w.config.chart.sparkline.enabled;\n      this.dimHelpers = new Helpers$2(this);\n      this.dimYAxis = new DimYAxis(this);\n      this.dimXAxis = new DimXAxis(this);\n      this.dimGrid = new DimGrid(this);\n      this.lgWidthForSideLegends = 0;\n      this.gridPad = this.w.config.grid.padding;\n      this.xPadRight = 0;\n      this.xPadLeft = 0;\n    }\n    /**\n     * @memberof Dimensions\n     * @param {object} w - chart context\n     **/\n\n\n    _createClass(Dimensions, [{\n      key: \"plotCoords\",\n      value: function plotCoords() {\n        var w = this.w;\n        var gl = w.globals;\n        this.lgRect = this.dimHelpers.getLegendsRect();\n\n        if (gl.axisCharts) {\n          // for line / area / scatter / column\n          this.setDimensionsForAxisCharts();\n        } else {\n          // for pie / donuts / circle\n          this.setDimensionsForNonAxisCharts();\n        }\n\n        this.dimGrid.gridPadFortitleSubtitle(); // after calculating everything, apply padding set by user\n\n        gl.gridHeight = gl.gridHeight - this.gridPad.top - this.gridPad.bottom;\n        gl.gridWidth = gl.gridWidth - this.gridPad.left - this.gridPad.right - this.xPadRight - this.xPadLeft;\n        var barWidth = this.dimGrid.gridPadForColumnsInNumericAxis(gl.gridWidth);\n        gl.gridWidth = gl.gridWidth - barWidth * 2;\n        gl.translateX = gl.translateX + this.gridPad.left + this.xPadLeft + (barWidth > 0 ? barWidth + 4 : 0);\n        gl.translateY = gl.translateY + this.gridPad.top;\n      }\n    }, {\n      key: \"setDimensionsForAxisCharts\",\n      value: function setDimensionsForAxisCharts() {\n        var _this = this;\n\n        var w = this.w;\n        var gl = w.globals;\n        var yaxisLabelCoords = this.dimYAxis.getyAxisLabelsCoords();\n        var yTitleCoords = this.dimYAxis.getyAxisTitleCoords();\n        w.globals.yLabelsCoords = [];\n        w.globals.yTitleCoords = [];\n        w.config.yaxis.map(function (yaxe, index) {\n          // store the labels and titles coords in global vars\n          w.globals.yLabelsCoords.push({\n            width: yaxisLabelCoords[index].width,\n            index: index\n          });\n          w.globals.yTitleCoords.push({\n            width: yTitleCoords[index].width,\n            index: index\n          });\n        });\n        this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth();\n        var xaxisLabelCoords = this.dimXAxis.getxAxisLabelsCoords();\n        var xtitleCoords = this.dimXAxis.getxAxisTitleCoords();\n        this.conditionalChecksForAxisCoords(xaxisLabelCoords, xtitleCoords);\n        gl.translateXAxisY = w.globals.rotateXLabels ? this.xAxisHeight / 8 : -4;\n        gl.translateXAxisX = w.globals.rotateXLabels && w.globals.isXNumeric && w.config.xaxis.labels.rotate <= -45 ? -this.xAxisWidth / 4 : 0;\n\n        if (w.globals.isBarHorizontal) {\n          gl.rotateXLabels = false;\n          gl.translateXAxisY = -1 * (parseInt(w.config.xaxis.labels.style.fontSize, 10) / 1.5);\n        }\n\n        gl.translateXAxisY = gl.translateXAxisY + w.config.xaxis.labels.offsetY;\n        gl.translateXAxisX = gl.translateXAxisX + w.config.xaxis.labels.offsetX;\n        var yAxisWidth = this.yAxisWidth;\n        var xAxisHeight = this.xAxisHeight;\n        gl.xAxisLabelsHeight = this.xAxisHeight - xtitleCoords.height;\n        gl.xAxisLabelsWidth = this.xAxisWidth;\n        gl.xAxisHeight = this.xAxisHeight;\n        var translateY = 10;\n\n        if (w.config.chart.type === 'radar' || this.isSparkline) {\n          yAxisWidth = 0;\n          xAxisHeight = gl.goldenPadding;\n        }\n\n        if (this.isSparkline) {\n          this.lgRect = {\n            height: 0,\n            width: 0\n          };\n        }\n\n        if (this.isSparkline || w.config.chart.type === 'treemap') {\n          yAxisWidth = 0;\n          xAxisHeight = 0;\n          translateY = 0;\n        }\n\n        if (!this.isSparkline) {\n          this.dimXAxis.additionalPaddingXLabels(xaxisLabelCoords);\n        }\n\n        var legendTopBottom = function legendTopBottom() {\n          gl.translateX = yAxisWidth;\n          gl.gridHeight = gl.svgHeight - _this.lgRect.height - xAxisHeight - (!_this.isSparkline && w.config.chart.type !== 'treemap' ? w.globals.rotateXLabels ? 10 : 15 : 0);\n          gl.gridWidth = gl.svgWidth - yAxisWidth;\n        };\n\n        if (w.config.xaxis.position === 'top') translateY = gl.xAxisHeight - w.config.xaxis.axisTicks.height - 5;\n\n        switch (w.config.legend.position) {\n          case 'bottom':\n            gl.translateY = translateY;\n            legendTopBottom();\n            break;\n\n          case 'top':\n            gl.translateY = this.lgRect.height + translateY;\n            legendTopBottom();\n            break;\n\n          case 'left':\n            gl.translateY = translateY;\n            gl.translateX = this.lgRect.width + yAxisWidth;\n            gl.gridHeight = gl.svgHeight - xAxisHeight - 12;\n            gl.gridWidth = gl.svgWidth - this.lgRect.width - yAxisWidth;\n            break;\n\n          case 'right':\n            gl.translateY = translateY;\n            gl.translateX = yAxisWidth;\n            gl.gridHeight = gl.svgHeight - xAxisHeight - 12;\n            gl.gridWidth = gl.svgWidth - this.lgRect.width - yAxisWidth - 5;\n            break;\n\n          default:\n            throw new Error('Legend position not supported');\n        }\n\n        this.dimGrid.setGridXPosForDualYAxis(yTitleCoords, yaxisLabelCoords); // after drawing everything, set the Y axis positions\n\n        var objyAxis = new YAxis(this.ctx);\n        objyAxis.setYAxisXPosition(yaxisLabelCoords, yTitleCoords);\n      }\n    }, {\n      key: \"setDimensionsForNonAxisCharts\",\n      value: function setDimensionsForNonAxisCharts() {\n        var w = this.w;\n        var gl = w.globals;\n        var cnf = w.config;\n        var xPad = 0;\n\n        if (w.config.legend.show && !w.config.legend.floating) {\n          xPad = 20;\n        }\n\n        var type = cnf.chart.type === 'pie' || cnf.chart.type === 'polarArea' || cnf.chart.type === 'donut' ? 'pie' : 'radialBar';\n        var offY = cnf.plotOptions[type].offsetY;\n        var offX = cnf.plotOptions[type].offsetX;\n\n        if (!cnf.legend.show || cnf.legend.floating) {\n          gl.gridHeight = gl.svgHeight - cnf.grid.padding.left + cnf.grid.padding.right;\n          gl.gridWidth = gl.gridHeight;\n          gl.translateY = offY;\n          gl.translateX = offX + (gl.svgWidth - gl.gridWidth) / 2;\n          return;\n        }\n\n        switch (cnf.legend.position) {\n          case 'bottom':\n            gl.gridHeight = gl.svgHeight - this.lgRect.height - gl.goldenPadding;\n            gl.gridWidth = gl.svgWidth;\n            gl.translateY = offY - 10;\n            gl.translateX = offX + (gl.svgWidth - gl.gridWidth) / 2;\n            break;\n\n          case 'top':\n            gl.gridHeight = gl.svgHeight - this.lgRect.height - gl.goldenPadding;\n            gl.gridWidth = gl.svgWidth;\n            gl.translateY = this.lgRect.height + offY + 10;\n            gl.translateX = offX + (gl.svgWidth - gl.gridWidth) / 2;\n            break;\n\n          case 'left':\n            gl.gridWidth = gl.svgWidth - this.lgRect.width - xPad;\n            gl.gridHeight = cnf.chart.height !== 'auto' ? gl.svgHeight : gl.gridWidth;\n            gl.translateY = offY;\n            gl.translateX = offX + this.lgRect.width + xPad;\n            break;\n\n          case 'right':\n            gl.gridWidth = gl.svgWidth - this.lgRect.width - xPad - 5;\n            gl.gridHeight = cnf.chart.height !== 'auto' ? gl.svgHeight : gl.gridWidth;\n            gl.translateY = offY;\n            gl.translateX = offX + 10;\n            break;\n\n          default:\n            throw new Error('Legend position not supported');\n        }\n      }\n    }, {\n      key: \"conditionalChecksForAxisCoords\",\n      value: function conditionalChecksForAxisCoords(xaxisLabelCoords, xtitleCoords) {\n        var w = this.w;\n        var baseXAxisHeight = xaxisLabelCoords.height + xtitleCoords.height;\n        var xAxisHeightMultiplicate = w.globals.isMultiLineX ? 1.2 : w.globals.LINE_HEIGHT_RATIO;\n        var rotatedXAxisOffset = w.globals.rotateXLabels ? 22 : 10;\n        var rotatedXAxisLegendOffset = w.globals.rotateXLabels && w.config.legend.position === 'bottom';\n        var additionalOffset = rotatedXAxisLegendOffset ? 10 : 0;\n        this.xAxisHeight = baseXAxisHeight * xAxisHeightMultiplicate + rotatedXAxisOffset + additionalOffset;\n        this.xAxisWidth = xaxisLabelCoords.width;\n\n        if (this.xAxisHeight - xtitleCoords.height > w.config.xaxis.labels.maxHeight) {\n          this.xAxisHeight = w.config.xaxis.labels.maxHeight;\n        }\n\n        if (w.config.xaxis.labels.minHeight && this.xAxisHeight < w.config.xaxis.labels.minHeight) {\n          this.xAxisHeight = w.config.xaxis.labels.minHeight;\n        }\n\n        if (w.config.xaxis.floating) {\n          this.xAxisHeight = 0;\n        }\n\n        var minYAxisWidth = 0;\n        var maxYAxisWidth = 0;\n        w.config.yaxis.forEach(function (y) {\n          minYAxisWidth += y.labels.minWidth;\n          maxYAxisWidth += y.labels.maxWidth;\n        });\n\n        if (this.yAxisWidth < minYAxisWidth) {\n          this.yAxisWidth = minYAxisWidth;\n        }\n\n        if (this.yAxisWidth > maxYAxisWidth) {\n          this.yAxisWidth = maxYAxisWidth;\n        }\n      }\n    }]);\n\n    return Dimensions;\n  }();\n\n  var Helpers$1 = /*#__PURE__*/function () {\n    function Helpers(lgCtx) {\n      _classCallCheck(this, Helpers);\n\n      this.w = lgCtx.w;\n      this.lgCtx = lgCtx;\n    }\n\n    _createClass(Helpers, [{\n      key: \"getLegendStyles\",\n      value: function getLegendStyles() {\n        var stylesheet = document.createElement('style');\n        stylesheet.setAttribute('type', 'text/css');\n        var text = \"\\t\\n    \\t\\n      .apexcharts-legend {\\t\\n        display: flex;\\t\\n        overflow: auto;\\t\\n        padding: 0 10px;\\t\\n      }\\t\\n      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {\\t\\n        flex-wrap: wrap\\t\\n      }\\t\\n      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\\t\\n        flex-direction: column;\\t\\n        bottom: 0;\\t\\n      }\\t\\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\\t\\n        justify-content: flex-start;\\t\\n      }\\t\\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {\\t\\n        justify-content: center;  \\t\\n      }\\t\\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {\\t\\n        justify-content: flex-end;\\t\\n      }\\t\\n      .apexcharts-legend-series {\\t\\n        cursor: pointer;\\t\\n        line-height: normal;\\t\\n      }\\t\\n      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{\\t\\n        display: flex;\\t\\n        align-items: center;\\t\\n      }\\t\\n      .apexcharts-legend-text {\\t\\n        position: relative;\\t\\n        font-size: 14px;\\t\\n      }\\t\\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\\t\\n        pointer-events: none;\\t\\n      }\\t\\n      .apexcharts-legend-marker {\\t\\n        position: relative;\\t\\n        display: inline-block;\\t\\n        cursor: pointer;\\t\\n        margin-right: 3px;\\t\\n        border-style: solid;\\n      }\\t\\n      \\t\\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\\t\\n        display: inline-block;\\t\\n      }\\t\\n      .apexcharts-legend-series.apexcharts-no-click {\\t\\n        cursor: auto;\\t\\n      }\\t\\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\\t\\n        display: none !important;\\t\\n      }\\t\\n      .apexcharts-inactive-legend {\\t\\n        opacity: 0.45;\\t\\n      }\";\n        var rules = document.createTextNode(text);\n        stylesheet.appendChild(rules);\n        return stylesheet;\n      }\n    }, {\n      key: \"getLegendBBox\",\n      value: function getLegendBBox() {\n        var w = this.w;\n        var currLegendsWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend');\n        var currLegendsWrapRect = currLegendsWrap.getBoundingClientRect();\n        var currLegendsWrapWidth = currLegendsWrapRect.width;\n        var currLegendsWrapHeight = currLegendsWrapRect.height;\n        return {\n          clwh: currLegendsWrapHeight,\n          clww: currLegendsWrapWidth\n        };\n      }\n    }, {\n      key: \"appendToForeignObject\",\n      value: function appendToForeignObject() {\n        var gl = this.w.globals;\n        gl.dom.elLegendForeign = document.createElementNS(gl.SVGNS, 'foreignObject');\n        var elForeign = gl.dom.elLegendForeign;\n        elForeign.setAttribute('x', 0);\n        elForeign.setAttribute('y', 0);\n        elForeign.setAttribute('width', gl.svgWidth);\n        elForeign.setAttribute('height', gl.svgHeight);\n        gl.dom.elLegendWrap.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n        elForeign.appendChild(gl.dom.elLegendWrap);\n        elForeign.appendChild(this.getLegendStyles()); //gl.dom.elGraphical.node.insertAdjacentElement('afterend', elForeign)\n        // the above line causes issue #1907\n\n        gl.dom.Paper.node.insertBefore(elForeign, gl.dom.elGraphical.node);\n      }\n    }, {\n      key: \"toggleDataSeries\",\n      value: function toggleDataSeries(seriesCnt, isHidden) {\n        var _this = this;\n\n        var w = this.w;\n\n        if (w.globals.axisCharts || w.config.chart.type === 'radialBar') {\n          w.globals.resized = true; // we don't want initial animations again\n\n          var seriesEl = null;\n          var realIndex = null; // yes, make it null. 1 series will rise at a time\n\n          w.globals.risingSeries = [];\n\n          if (w.globals.axisCharts) {\n            seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[data\\\\:realIndex='\".concat(seriesCnt, \"']\"));\n            realIndex = parseInt(seriesEl.getAttribute('data:realIndex'), 10);\n          } else {\n            seriesEl = w.globals.dom.baseEl.querySelector(\".apexcharts-series[rel='\".concat(seriesCnt + 1, \"']\"));\n            realIndex = parseInt(seriesEl.getAttribute('rel'), 10) - 1;\n          }\n\n          if (isHidden) {\n            var seriesToMakeVisible = [{\n              cs: w.globals.collapsedSeries,\n              csi: w.globals.collapsedSeriesIndices\n            }, {\n              cs: w.globals.ancillaryCollapsedSeries,\n              csi: w.globals.ancillaryCollapsedSeriesIndices\n            }];\n            seriesToMakeVisible.forEach(function (r) {\n              _this.riseCollapsedSeries(r.cs, r.csi, realIndex);\n            });\n          } else {\n            this.hideSeries({\n              seriesEl: seriesEl,\n              realIndex: realIndex\n            });\n          }\n        } else {\n          // for non-axis charts i.e pie / donuts\n          var _seriesEl = w.globals.dom.Paper.select(\" .apexcharts-series[rel='\".concat(seriesCnt + 1, \"'] path\"));\n\n          var type = w.config.chart.type;\n\n          if (type === 'pie' || type === 'polarArea' || type === 'donut') {\n            var dataLabels = w.config.plotOptions.pie.donut.labels;\n            var graphics = new Graphics(this.lgCtx.ctx);\n            graphics.pathMouseDown(_seriesEl.members[0], null);\n            this.lgCtx.ctx.pie.printDataLabelsInner(_seriesEl.members[0].node, dataLabels);\n          }\n\n          _seriesEl.fire('click');\n        }\n      }\n    }, {\n      key: \"hideSeries\",\n      value: function hideSeries(_ref) {\n        var seriesEl = _ref.seriesEl,\n            realIndex = _ref.realIndex;\n        var w = this.w;\n        var series = Utils$1.clone(w.config.series);\n\n        if (w.globals.axisCharts) {\n          var shouldNotHideYAxis = false;\n\n          if (w.config.yaxis[realIndex] && w.config.yaxis[realIndex].show && w.config.yaxis[realIndex].showAlways) {\n            shouldNotHideYAxis = true;\n\n            if (w.globals.ancillaryCollapsedSeriesIndices.indexOf(realIndex) < 0) {\n              w.globals.ancillaryCollapsedSeries.push({\n                index: realIndex,\n                data: series[realIndex].data.slice(),\n                type: seriesEl.parentNode.className.baseVal.split('-')[1]\n              });\n              w.globals.ancillaryCollapsedSeriesIndices.push(realIndex);\n            }\n          }\n\n          if (!shouldNotHideYAxis) {\n            w.globals.collapsedSeries.push({\n              index: realIndex,\n              data: series[realIndex].data.slice(),\n              type: seriesEl.parentNode.className.baseVal.split('-')[1]\n            });\n            w.globals.collapsedSeriesIndices.push(realIndex);\n            var removeIndexOfRising = w.globals.risingSeries.indexOf(realIndex);\n            w.globals.risingSeries.splice(removeIndexOfRising, 1);\n          }\n        } else {\n          w.globals.collapsedSeries.push({\n            index: realIndex,\n            data: series[realIndex]\n          });\n          w.globals.collapsedSeriesIndices.push(realIndex);\n        }\n\n        var seriesChildren = seriesEl.childNodes;\n\n        for (var sc = 0; sc < seriesChildren.length; sc++) {\n          if (seriesChildren[sc].classList.contains('apexcharts-series-markers-wrap')) {\n            if (seriesChildren[sc].classList.contains('apexcharts-hide')) {\n              seriesChildren[sc].classList.remove('apexcharts-hide');\n            } else {\n              seriesChildren[sc].classList.add('apexcharts-hide');\n            }\n          }\n        }\n\n        w.globals.allSeriesCollapsed = w.globals.collapsedSeries.length === w.config.series.length;\n        series = this._getSeriesBasedOnCollapsedState(series);\n\n        this.lgCtx.ctx.updateHelpers._updateSeries(series, w.config.chart.animations.dynamicAnimation.enabled);\n      }\n    }, {\n      key: \"riseCollapsedSeries\",\n      value: function riseCollapsedSeries(collapsedSeries, seriesIndices, realIndex) {\n        var w = this.w;\n        var series = Utils$1.clone(w.config.series);\n\n        if (collapsedSeries.length > 0) {\n          for (var c = 0; c < collapsedSeries.length; c++) {\n            if (collapsedSeries[c].index === realIndex) {\n              if (w.globals.axisCharts) {\n                series[realIndex].data = collapsedSeries[c].data.slice();\n                collapsedSeries.splice(c, 1);\n                seriesIndices.splice(c, 1);\n                w.globals.risingSeries.push(realIndex);\n              } else {\n                series[realIndex] = collapsedSeries[c].data;\n                collapsedSeries.splice(c, 1);\n                seriesIndices.splice(c, 1);\n                w.globals.risingSeries.push(realIndex);\n              }\n            }\n          }\n\n          series = this._getSeriesBasedOnCollapsedState(series);\n\n          this.lgCtx.ctx.updateHelpers._updateSeries(series, w.config.chart.animations.dynamicAnimation.enabled);\n        }\n      }\n    }, {\n      key: \"_getSeriesBasedOnCollapsedState\",\n      value: function _getSeriesBasedOnCollapsedState(series) {\n        var w = this.w;\n\n        if (w.globals.axisCharts) {\n          series.forEach(function (s, sI) {\n            if (w.globals.collapsedSeriesIndices.indexOf(sI) > -1) {\n              series[sI].data = [];\n            }\n          });\n        } else {\n          series.forEach(function (s, sI) {\n            if (w.globals.collapsedSeriesIndices.indexOf(sI) > -1) {\n              series[sI] = 0;\n            }\n          });\n        }\n\n        return series;\n      }\n    }]);\n\n    return Helpers;\n  }();\n\n  /**\n   * ApexCharts Legend Class to draw legend.\n   *\n   * @module Legend\n   **/\n\n  var Legend = /*#__PURE__*/function () {\n    function Legend(ctx, opts) {\n      _classCallCheck(this, Legend);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.onLegendClick = this.onLegendClick.bind(this);\n      this.onLegendHovered = this.onLegendHovered.bind(this);\n      this.isBarsDistributed = this.w.config.chart.type === 'bar' && this.w.config.plotOptions.bar.distributed && this.w.config.series.length === 1;\n      this.legendHelpers = new Helpers$1(this);\n    }\n\n    _createClass(Legend, [{\n      key: \"init\",\n      value: function init() {\n        var w = this.w;\n        var gl = w.globals;\n        var cnf = w.config;\n        var showLegendAlways = cnf.legend.showForSingleSeries && gl.series.length === 1 || this.isBarsDistributed || gl.series.length > 1;\n\n        if ((showLegendAlways || !gl.axisCharts) && cnf.legend.show) {\n          while (gl.dom.elLegendWrap.firstChild) {\n            gl.dom.elLegendWrap.removeChild(gl.dom.elLegendWrap.firstChild);\n          }\n\n          this.drawLegends();\n\n          if (!Utils$1.isIE11()) {\n            this.legendHelpers.appendToForeignObject();\n          } else {\n            // IE11 doesn't supports foreignObject, hence append it to <head>\n            document.getElementsByTagName('head')[0].appendChild(this.legendHelpers.getLegendStyles());\n          }\n\n          if (cnf.legend.position === 'bottom' || cnf.legend.position === 'top') {\n            this.legendAlignHorizontal();\n          } else if (cnf.legend.position === 'right' || cnf.legend.position === 'left') {\n            this.legendAlignVertical();\n          }\n        }\n      }\n    }, {\n      key: \"drawLegends\",\n      value: function drawLegends() {\n        var me = this;\n        var w = this.w;\n        var fontFamily = w.config.legend.fontFamily;\n        var legendNames = w.globals.seriesNames;\n        var fillcolor = w.globals.colors.slice();\n\n        if (w.config.chart.type === 'heatmap') {\n          var ranges = w.config.plotOptions.heatmap.colorScale.ranges;\n          legendNames = ranges.map(function (colorScale) {\n            return colorScale.name ? colorScale.name : colorScale.from + ' - ' + colorScale.to;\n          });\n          fillcolor = ranges.map(function (color) {\n            return color.color;\n          });\n        } else if (this.isBarsDistributed) {\n          legendNames = w.globals.labels.slice();\n        }\n\n        if (w.config.legend.customLegendItems.length) {\n          legendNames = w.config.legend.customLegendItems;\n        }\n\n        var legendFormatter = w.globals.legendFormatter;\n        var isLegendInversed = w.config.legend.inverseOrder;\n\n        for (var i = isLegendInversed ? legendNames.length - 1 : 0; isLegendInversed ? i >= 0 : i <= legendNames.length - 1; isLegendInversed ? i-- : i++) {\n          var text = legendFormatter(legendNames[i], {\n            seriesIndex: i,\n            w: w\n          });\n          var collapsedSeries = false;\n          var ancillaryCollapsedSeries = false;\n\n          if (w.globals.collapsedSeries.length > 0) {\n            for (var c = 0; c < w.globals.collapsedSeries.length; c++) {\n              if (w.globals.collapsedSeries[c].index === i) {\n                collapsedSeries = true;\n              }\n            }\n          }\n\n          if (w.globals.ancillaryCollapsedSeriesIndices.length > 0) {\n            for (var _c = 0; _c < w.globals.ancillaryCollapsedSeriesIndices.length; _c++) {\n              if (w.globals.ancillaryCollapsedSeriesIndices[_c] === i) {\n                ancillaryCollapsedSeries = true;\n              }\n            }\n          }\n\n          var elMarker = document.createElement('span');\n          elMarker.classList.add('apexcharts-legend-marker');\n          var mOffsetX = w.config.legend.markers.offsetX;\n          var mOffsetY = w.config.legend.markers.offsetY;\n          var mHeight = w.config.legend.markers.height;\n          var mWidth = w.config.legend.markers.width;\n          var mBorderWidth = w.config.legend.markers.strokeWidth;\n          var mBorderColor = w.config.legend.markers.strokeColor;\n          var mBorderRadius = w.config.legend.markers.radius;\n          var mStyle = elMarker.style;\n          mStyle.background = fillcolor[i];\n          mStyle.color = fillcolor[i];\n          mStyle.setProperty('background', fillcolor[i], 'important'); // override fill color with custom legend.markers.fillColors\n\n          if (w.config.legend.markers.fillColors && w.config.legend.markers.fillColors[i]) {\n            mStyle.background = w.config.legend.markers.fillColors[i];\n          } // override with data color\n\n\n          if (w.globals.seriesColors[i] !== undefined) {\n            mStyle.background = w.globals.seriesColors[i];\n            mStyle.color = w.globals.seriesColors[i];\n          }\n\n          mStyle.height = Array.isArray(mHeight) ? parseFloat(mHeight[i]) + 'px' : parseFloat(mHeight) + 'px';\n          mStyle.width = Array.isArray(mWidth) ? parseFloat(mWidth[i]) + 'px' : parseFloat(mWidth) + 'px';\n          mStyle.left = (Array.isArray(mOffsetX) ? parseFloat(mOffsetX[i]) : parseFloat(mOffsetX)) + 'px';\n          mStyle.top = (Array.isArray(mOffsetY) ? parseFloat(mOffsetY[i]) : parseFloat(mOffsetY)) + 'px';\n          mStyle.borderWidth = Array.isArray(mBorderWidth) ? mBorderWidth[i] : mBorderWidth;\n          mStyle.borderColor = Array.isArray(mBorderColor) ? mBorderColor[i] : mBorderColor;\n          mStyle.borderRadius = Array.isArray(mBorderRadius) ? parseFloat(mBorderRadius[i]) + 'px' : parseFloat(mBorderRadius) + 'px';\n\n          if (w.config.legend.markers.customHTML) {\n            if (Array.isArray(w.config.legend.markers.customHTML)) {\n              if (w.config.legend.markers.customHTML[i]) {\n                elMarker.innerHTML = w.config.legend.markers.customHTML[i]();\n              }\n            } else {\n              elMarker.innerHTML = w.config.legend.markers.customHTML();\n            }\n          }\n\n          Graphics.setAttrs(elMarker, {\n            rel: i + 1,\n            'data:collapsed': collapsedSeries || ancillaryCollapsedSeries\n          });\n\n          if (collapsedSeries || ancillaryCollapsedSeries) {\n            elMarker.classList.add('apexcharts-inactive-legend');\n          }\n\n          var elLegend = document.createElement('div');\n          var elLegendText = document.createElement('span');\n          elLegendText.classList.add('apexcharts-legend-text');\n          elLegendText.innerHTML = Array.isArray(text) ? text.join(' ') : text;\n          var textColor = w.config.legend.labels.useSeriesColors ? w.globals.colors[i] : w.config.legend.labels.colors;\n\n          if (!textColor) {\n            textColor = w.config.chart.foreColor;\n          }\n\n          elLegendText.style.color = textColor;\n          elLegendText.style.fontSize = parseFloat(w.config.legend.fontSize) + 'px';\n          elLegendText.style.fontWeight = w.config.legend.fontWeight;\n          elLegendText.style.fontFamily = fontFamily || w.config.chart.fontFamily;\n          Graphics.setAttrs(elLegendText, {\n            rel: i + 1,\n            i: i,\n            'data:default-text': encodeURIComponent(text),\n            'data:collapsed': collapsedSeries || ancillaryCollapsedSeries\n          });\n          elLegend.appendChild(elMarker);\n          elLegend.appendChild(elLegendText);\n          var coreUtils = new CoreUtils(this.ctx);\n\n          if (!w.config.legend.showForZeroSeries) {\n            var total = coreUtils.getSeriesTotalByIndex(i);\n\n            if (total === 0 && coreUtils.seriesHaveSameValues(i) && !coreUtils.isSeriesNull(i) && w.globals.collapsedSeriesIndices.indexOf(i) === -1 && w.globals.ancillaryCollapsedSeriesIndices.indexOf(i) === -1) {\n              elLegend.classList.add('apexcharts-hidden-zero-series');\n            }\n          }\n\n          if (!w.config.legend.showForNullSeries) {\n            if (coreUtils.isSeriesNull(i) && w.globals.collapsedSeriesIndices.indexOf(i) === -1 && w.globals.ancillaryCollapsedSeriesIndices.indexOf(i) === -1) {\n              elLegend.classList.add('apexcharts-hidden-null-series');\n            }\n          }\n\n          w.globals.dom.elLegendWrap.appendChild(elLegend);\n          w.globals.dom.elLegendWrap.classList.add(\"apexcharts-align-\".concat(w.config.legend.horizontalAlign));\n          w.globals.dom.elLegendWrap.classList.add('apx-legend-position-' + w.config.legend.position);\n          elLegend.classList.add('apexcharts-legend-series');\n          elLegend.style.margin = \"\".concat(w.config.legend.itemMargin.vertical, \"px \").concat(w.config.legend.itemMargin.horizontal, \"px\");\n          w.globals.dom.elLegendWrap.style.width = w.config.legend.width ? w.config.legend.width + 'px' : '';\n          w.globals.dom.elLegendWrap.style.height = w.config.legend.height ? w.config.legend.height + 'px' : '';\n          Graphics.setAttrs(elLegend, {\n            rel: i + 1,\n            seriesName: Utils$1.escapeString(legendNames[i]),\n            'data:collapsed': collapsedSeries || ancillaryCollapsedSeries\n          });\n\n          if (collapsedSeries || ancillaryCollapsedSeries) {\n            elLegend.classList.add('apexcharts-inactive-legend');\n          }\n\n          if (!w.config.legend.onItemClick.toggleDataSeries) {\n            elLegend.classList.add('apexcharts-no-click');\n          }\n        }\n\n        w.globals.dom.elWrap.addEventListener('click', me.onLegendClick, true);\n\n        if (w.config.legend.onItemHover.highlightDataSeries && w.config.legend.customLegendItems.length === 0) {\n          w.globals.dom.elWrap.addEventListener('mousemove', me.onLegendHovered, true);\n          w.globals.dom.elWrap.addEventListener('mouseout', me.onLegendHovered, true);\n        }\n      }\n    }, {\n      key: \"setLegendWrapXY\",\n      value: function setLegendWrapXY(offsetX, offsetY) {\n        var w = this.w;\n        var elLegendWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend');\n        var legendRect = elLegendWrap.getBoundingClientRect();\n        var x = 0;\n        var y = 0;\n\n        if (w.config.legend.position === 'bottom') {\n          y = y + (w.globals.svgHeight - legendRect.height / 2);\n        } else if (w.config.legend.position === 'top') {\n          var dim = new Dimensions(this.ctx);\n          var titleH = dim.dimHelpers.getTitleSubtitleCoords('title').height;\n          var subtitleH = dim.dimHelpers.getTitleSubtitleCoords('subtitle').height;\n          y = y + (titleH > 0 ? titleH - 10 : 0) + (subtitleH > 0 ? subtitleH - 10 : 0);\n        }\n\n        elLegendWrap.style.position = 'absolute';\n        x = x + offsetX + w.config.legend.offsetX;\n        y = y + offsetY + w.config.legend.offsetY;\n        elLegendWrap.style.left = x + 'px';\n        elLegendWrap.style.top = y + 'px';\n\n        if (w.config.legend.position === 'bottom') {\n          elLegendWrap.style.top = 'auto';\n          elLegendWrap.style.bottom = 5 - w.config.legend.offsetY + 'px';\n        } else if (w.config.legend.position === 'right') {\n          elLegendWrap.style.left = 'auto';\n          elLegendWrap.style.right = 25 + w.config.legend.offsetX + 'px';\n        }\n\n        var fixedHeigthWidth = ['width', 'height'];\n        fixedHeigthWidth.forEach(function (hw) {\n          if (elLegendWrap.style[hw]) {\n            elLegendWrap.style[hw] = parseInt(w.config.legend[hw], 10) + 'px';\n          }\n        });\n      }\n    }, {\n      key: \"legendAlignHorizontal\",\n      value: function legendAlignHorizontal() {\n        var w = this.w;\n        var elLegendWrap = w.globals.dom.baseEl.querySelector('.apexcharts-legend');\n        elLegendWrap.style.right = 0;\n        var lRect = this.legendHelpers.getLegendBBox();\n        var dimensions = new Dimensions(this.ctx);\n        var titleRect = dimensions.dimHelpers.getTitleSubtitleCoords('title');\n        var subtitleRect = dimensions.dimHelpers.getTitleSubtitleCoords('subtitle');\n        var offsetX = 20;\n        var offsetY = 0; // the whole legend box is set to bottom\n\n        if (w.config.legend.position === 'bottom') {\n          offsetY = -lRect.clwh / 1.8;\n        } else if (w.config.legend.position === 'top') {\n          offsetY = titleRect.height + subtitleRect.height + w.config.title.margin + w.config.subtitle.margin - 10;\n        }\n\n        this.setLegendWrapXY(offsetX, offsetY);\n      }\n    }, {\n      key: \"legendAlignVertical\",\n      value: function legendAlignVertical() {\n        var w = this.w;\n        var lRect = this.legendHelpers.getLegendBBox();\n        var offsetY = 20;\n        var offsetX = 0;\n\n        if (w.config.legend.position === 'left') {\n          offsetX = 20;\n        }\n\n        if (w.config.legend.position === 'right') {\n          offsetX = w.globals.svgWidth - lRect.clww - 10;\n        }\n\n        this.setLegendWrapXY(offsetX, offsetY);\n      }\n    }, {\n      key: \"onLegendHovered\",\n      value: function onLegendHovered(e) {\n        var w = this.w;\n        var hoverOverLegend = e.target.classList.contains('apexcharts-legend-text') || e.target.classList.contains('apexcharts-legend-marker');\n\n        if (w.config.chart.type !== 'heatmap' && !this.isBarsDistributed) {\n          if (!e.target.classList.contains('apexcharts-inactive-legend') && hoverOverLegend) {\n            var series = new Series(this.ctx);\n            series.toggleSeriesOnHover(e, e.target);\n          }\n        } else {\n          // for heatmap handling\n          if (hoverOverLegend) {\n            var seriesCnt = parseInt(e.target.getAttribute('rel'), 10) - 1;\n            this.ctx.events.fireEvent('legendHover', [this.ctx, seriesCnt, this.w]);\n\n            var _series = new Series(this.ctx);\n\n            _series.highlightRangeInSeries(e, e.target);\n          }\n        }\n      }\n    }, {\n      key: \"onLegendClick\",\n      value: function onLegendClick(e) {\n        var w = this.w;\n        if (w.config.legend.customLegendItems.length) return;\n\n        if (e.target.classList.contains('apexcharts-legend-text') || e.target.classList.contains('apexcharts-legend-marker')) {\n          var seriesCnt = parseInt(e.target.getAttribute('rel'), 10) - 1;\n          var isHidden = e.target.getAttribute('data:collapsed') === 'true';\n          var legendClick = this.w.config.chart.events.legendClick;\n\n          if (typeof legendClick === 'function') {\n            legendClick(this.ctx, seriesCnt, this.w);\n          }\n\n          this.ctx.events.fireEvent('legendClick', [this.ctx, seriesCnt, this.w]);\n          var markerClick = this.w.config.legend.markers.onClick;\n\n          if (typeof markerClick === 'function' && e.target.classList.contains('apexcharts-legend-marker')) {\n            markerClick(this.ctx, seriesCnt, this.w);\n            this.ctx.events.fireEvent('legendMarkerClick', [this.ctx, seriesCnt, this.w]);\n          } // for now - just prevent click on heatmap legend - and allow hover only\n\n\n          var clickAllowed = w.config.chart.type !== 'treemap' && w.config.chart.type !== 'heatmap' && !this.isBarsDistributed;\n\n          if (clickAllowed && w.config.legend.onItemClick.toggleDataSeries) {\n            this.legendHelpers.toggleDataSeries(seriesCnt, isHidden);\n          }\n        }\n      }\n    }]);\n\n    return Legend;\n  }();\n\n  var icoPan = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n    <defs>\\n        <path d=\\\"M0 0h24v24H0z\\\" id=\\\"a\\\"/>\\n    </defs>\\n    <clipPath id=\\\"b\\\">\\n        <use overflow=\\\"visible\\\" xlink:href=\\\"#a\\\"/>\\n    </clipPath>\\n    <path clip-path=\\\"url(#b)\\\" d=\\\"M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z\\\"/>\\n</svg>\";\n\n  var icoZoom = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n    <path d=\\\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\\\"/>\\n    <path d=\\\"M0 0h24v24H0V0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z\\\"/>\\n</svg>\";\n\n  var icoReset = \"<svg fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <path d=\\\"M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z\\\"/>\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n</svg>\";\n\n  var icoZoomIn = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\\\"/>\\n</svg>\\n\";\n\n  var icoZoomOut = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\\\"/>\\n</svg>\\n\";\n\n  var icoSelect = \"<svg fill=\\\"#6E8192\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n    <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n    <path d=\\\"M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z\\\"/>\\n</svg>\";\n\n  var icoMenu = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\"><path fill=\\\"none\\\" d=\\\"M0 0h24v24H0V0z\\\"/><path d=\\\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\\\"/></svg>\";\n\n  /**\n   * ApexCharts Toolbar Class for creating toolbar in axis based charts.\n   *\n   * @module Toolbar\n   **/\n\n  var Toolbar = /*#__PURE__*/function () {\n    function Toolbar(ctx) {\n      _classCallCheck(this, Toolbar);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.ev = this.w.config.chart.events;\n      this.selectedClass = 'apexcharts-selected';\n      this.localeValues = this.w.globals.locale.toolbar;\n      this.minX = w.globals.minX;\n      this.maxX = w.globals.maxX;\n    }\n\n    _createClass(Toolbar, [{\n      key: \"createToolbar\",\n      value: function createToolbar() {\n        var _this = this;\n\n        var w = this.w;\n\n        var createDiv = function createDiv() {\n          return document.createElement('div');\n        };\n\n        var elToolbarWrap = createDiv();\n        elToolbarWrap.setAttribute('class', 'apexcharts-toolbar');\n        elToolbarWrap.style.top = w.config.chart.toolbar.offsetY + 'px';\n        elToolbarWrap.style.right = -w.config.chart.toolbar.offsetX + 3 + 'px';\n        w.globals.dom.elWrap.appendChild(elToolbarWrap);\n        this.elZoom = createDiv();\n        this.elZoomIn = createDiv();\n        this.elZoomOut = createDiv();\n        this.elPan = createDiv();\n        this.elSelection = createDiv();\n        this.elZoomReset = createDiv();\n        this.elMenuIcon = createDiv();\n        this.elMenu = createDiv();\n        this.elCustomIcons = [];\n        this.t = w.config.chart.toolbar.tools;\n\n        if (Array.isArray(this.t.customIcons)) {\n          for (var i = 0; i < this.t.customIcons.length; i++) {\n            this.elCustomIcons.push(createDiv());\n          }\n        }\n\n        var toolbarControls = [];\n\n        var appendZoomControl = function appendZoomControl(type, el, ico) {\n          var tool = type.toLowerCase();\n\n          if (_this.t[tool] && w.config.chart.zoom.enabled) {\n            toolbarControls.push({\n              el: el,\n              icon: typeof _this.t[tool] === 'string' ? _this.t[tool] : ico,\n              title: _this.localeValues[type],\n              class: \"apexcharts-\".concat(tool, \"-icon\")\n            });\n          }\n        };\n\n        appendZoomControl('zoomIn', this.elZoomIn, icoZoomIn);\n        appendZoomControl('zoomOut', this.elZoomOut, icoZoomOut);\n\n        var zoomSelectionCtrls = function zoomSelectionCtrls(z) {\n          if (_this.t[z] && w.config.chart[z].enabled) {\n            toolbarControls.push({\n              el: z === 'zoom' ? _this.elZoom : _this.elSelection,\n              icon: typeof _this.t[z] === 'string' ? _this.t[z] : z === 'zoom' ? icoZoom : icoSelect,\n              title: _this.localeValues[z === 'zoom' ? 'selectionZoom' : 'selection'],\n              class: w.globals.isTouchDevice ? 'apexcharts-element-hidden' : \"apexcharts-\".concat(z, \"-icon\")\n            });\n          }\n        };\n\n        zoomSelectionCtrls('zoom');\n        zoomSelectionCtrls('selection');\n\n        if (this.t.pan && w.config.chart.zoom.enabled) {\n          toolbarControls.push({\n            el: this.elPan,\n            icon: typeof this.t.pan === 'string' ? this.t.pan : icoPan,\n            title: this.localeValues.pan,\n            class: w.globals.isTouchDevice ? 'apexcharts-element-hidden' : 'apexcharts-pan-icon'\n          });\n        }\n\n        appendZoomControl('reset', this.elZoomReset, icoReset);\n\n        if (this.t.download) {\n          toolbarControls.push({\n            el: this.elMenuIcon,\n            icon: typeof this.t.download === 'string' ? this.t.download : icoMenu,\n            title: this.localeValues.menu,\n            class: 'apexcharts-menu-icon'\n          });\n        }\n\n        for (var _i = 0; _i < this.elCustomIcons.length; _i++) {\n          toolbarControls.push({\n            el: this.elCustomIcons[_i],\n            icon: this.t.customIcons[_i].icon,\n            title: this.t.customIcons[_i].title,\n            index: this.t.customIcons[_i].index,\n            class: 'apexcharts-toolbar-custom-icon ' + this.t.customIcons[_i].class\n          });\n        }\n\n        toolbarControls.forEach(function (t, index) {\n          if (t.index) {\n            Utils$1.moveIndexInArray(toolbarControls, index, t.index);\n          }\n        });\n\n        for (var _i2 = 0; _i2 < toolbarControls.length; _i2++) {\n          Graphics.setAttrs(toolbarControls[_i2].el, {\n            class: toolbarControls[_i2].class,\n            title: toolbarControls[_i2].title\n          });\n          toolbarControls[_i2].el.innerHTML = toolbarControls[_i2].icon;\n          elToolbarWrap.appendChild(toolbarControls[_i2].el);\n        }\n\n        this._createHamburgerMenu(elToolbarWrap);\n\n        if (w.globals.zoomEnabled) {\n          this.elZoom.classList.add(this.selectedClass);\n        } else if (w.globals.panEnabled) {\n          this.elPan.classList.add(this.selectedClass);\n        } else if (w.globals.selectionEnabled) {\n          this.elSelection.classList.add(this.selectedClass);\n        }\n\n        this.addToolbarEventListeners();\n      }\n    }, {\n      key: \"_createHamburgerMenu\",\n      value: function _createHamburgerMenu(parent) {\n        this.elMenuItems = [];\n        parent.appendChild(this.elMenu);\n        Graphics.setAttrs(this.elMenu, {\n          class: 'apexcharts-menu'\n        });\n        var menuItems = [{\n          name: 'exportSVG',\n          title: this.localeValues.exportToSVG\n        }, {\n          name: 'exportPNG',\n          title: this.localeValues.exportToPNG\n        }, {\n          name: 'exportCSV',\n          title: this.localeValues.exportToCSV\n        }];\n\n        if (!this.w.globals.allSeriesHasEqualX) {\n          // if it is a multi series, and all series have variable x values, export CSV won't work\n          menuItems.splice(2, 1);\n        }\n\n        for (var i = 0; i < menuItems.length; i++) {\n          this.elMenuItems.push(document.createElement('div'));\n          this.elMenuItems[i].innerHTML = menuItems[i].title;\n          Graphics.setAttrs(this.elMenuItems[i], {\n            class: \"apexcharts-menu-item \".concat(menuItems[i].name),\n            title: menuItems[i].title\n          });\n          this.elMenu.appendChild(this.elMenuItems[i]);\n        }\n      }\n    }, {\n      key: \"addToolbarEventListeners\",\n      value: function addToolbarEventListeners() {\n        var _this2 = this;\n\n        this.elZoomReset.addEventListener('click', this.handleZoomReset.bind(this));\n        this.elSelection.addEventListener('click', this.toggleZoomSelection.bind(this, 'selection'));\n        this.elZoom.addEventListener('click', this.toggleZoomSelection.bind(this, 'zoom'));\n        this.elZoomIn.addEventListener('click', this.handleZoomIn.bind(this));\n        this.elZoomOut.addEventListener('click', this.handleZoomOut.bind(this));\n        this.elPan.addEventListener('click', this.togglePanning.bind(this));\n        this.elMenuIcon.addEventListener('click', this.toggleMenu.bind(this));\n        this.elMenuItems.forEach(function (m) {\n          if (m.classList.contains('exportSVG')) {\n            m.addEventListener('click', _this2.handleDownload.bind(_this2, 'svg'));\n          } else if (m.classList.contains('exportPNG')) {\n            m.addEventListener('click', _this2.handleDownload.bind(_this2, 'png'));\n          } else if (m.classList.contains('exportCSV')) {\n            m.addEventListener('click', _this2.handleDownload.bind(_this2, 'csv'));\n          }\n        });\n\n        for (var i = 0; i < this.t.customIcons.length; i++) {\n          this.elCustomIcons[i].addEventListener('click', this.t.customIcons[i].click.bind(this, this.ctx, this.ctx.w));\n        }\n      }\n    }, {\n      key: \"toggleZoomSelection\",\n      value: function toggleZoomSelection(type) {\n        var charts = this.ctx.getSyncedCharts();\n        charts.forEach(function (ch) {\n          ch.ctx.toolbar.toggleOtherControls();\n          var el = type === 'selection' ? ch.ctx.toolbar.elSelection : ch.ctx.toolbar.elZoom;\n          var enabledType = type === 'selection' ? 'selectionEnabled' : 'zoomEnabled';\n          ch.w.globals[enabledType] = !ch.w.globals[enabledType];\n\n          if (!el.classList.contains(ch.ctx.toolbar.selectedClass)) {\n            el.classList.add(ch.ctx.toolbar.selectedClass);\n          } else {\n            el.classList.remove(ch.ctx.toolbar.selectedClass);\n          }\n        });\n      }\n    }, {\n      key: \"getToolbarIconsReference\",\n      value: function getToolbarIconsReference() {\n        var w = this.w;\n\n        if (!this.elZoom) {\n          this.elZoom = w.globals.dom.baseEl.querySelector('.apexcharts-zoom-icon');\n        }\n\n        if (!this.elPan) {\n          this.elPan = w.globals.dom.baseEl.querySelector('.apexcharts-pan-icon');\n        }\n\n        if (!this.elSelection) {\n          this.elSelection = w.globals.dom.baseEl.querySelector('.apexcharts-selection-icon');\n        }\n      }\n    }, {\n      key: \"enableZoomPanFromToolbar\",\n      value: function enableZoomPanFromToolbar(type) {\n        this.toggleOtherControls();\n        type === 'pan' ? this.w.globals.panEnabled = true : this.w.globals.zoomEnabled = true;\n        var el = type === 'pan' ? this.elPan : this.elZoom;\n        var el2 = type === 'pan' ? this.elZoom : this.elPan;\n\n        if (el) {\n          el.classList.add(this.selectedClass);\n        }\n\n        if (el2) {\n          el2.classList.remove(this.selectedClass);\n        }\n      }\n    }, {\n      key: \"togglePanning\",\n      value: function togglePanning() {\n        var charts = this.ctx.getSyncedCharts();\n        charts.forEach(function (ch) {\n          ch.ctx.toolbar.toggleOtherControls();\n          ch.w.globals.panEnabled = !ch.w.globals.panEnabled;\n\n          if (!ch.ctx.toolbar.elPan.classList.contains(ch.ctx.toolbar.selectedClass)) {\n            ch.ctx.toolbar.elPan.classList.add(ch.ctx.toolbar.selectedClass);\n          } else {\n            ch.ctx.toolbar.elPan.classList.remove(ch.ctx.toolbar.selectedClass);\n          }\n        });\n      }\n    }, {\n      key: \"toggleOtherControls\",\n      value: function toggleOtherControls() {\n        var _this3 = this;\n\n        var w = this.w;\n        w.globals.panEnabled = false;\n        w.globals.zoomEnabled = false;\n        w.globals.selectionEnabled = false;\n        this.getToolbarIconsReference();\n        var toggleEls = [this.elPan, this.elSelection, this.elZoom];\n        toggleEls.forEach(function (el) {\n          if (el) {\n            el.classList.remove(_this3.selectedClass);\n          }\n        });\n      }\n    }, {\n      key: \"handleZoomIn\",\n      value: function handleZoomIn() {\n        var w = this.w;\n\n        if (w.globals.isRangeBar) {\n          this.minX = w.globals.minY;\n          this.maxX = w.globals.maxY;\n        }\n\n        var centerX = (this.minX + this.maxX) / 2;\n        var newMinX = (this.minX + centerX) / 2;\n        var newMaxX = (this.maxX + centerX) / 2;\n\n        var newMinXMaxX = this._getNewMinXMaxX(newMinX, newMaxX);\n\n        if (!w.globals.disableZoomIn) {\n          this.zoomUpdateOptions(newMinXMaxX.minX, newMinXMaxX.maxX);\n        }\n      }\n    }, {\n      key: \"handleZoomOut\",\n      value: function handleZoomOut() {\n        var w = this.w;\n\n        if (w.globals.isRangeBar) {\n          this.minX = w.globals.minY;\n          this.maxX = w.globals.maxY;\n        } // avoid zooming out beyond 1000 which may result in NaN values being printed on x-axis\n\n\n        if (w.config.xaxis.type === 'datetime' && new Date(this.minX).getUTCFullYear() < 1000) {\n          return;\n        }\n\n        var centerX = (this.minX + this.maxX) / 2;\n        var newMinX = this.minX - (centerX - this.minX);\n        var newMaxX = this.maxX - (centerX - this.maxX);\n\n        var newMinXMaxX = this._getNewMinXMaxX(newMinX, newMaxX);\n\n        if (!w.globals.disableZoomOut) {\n          this.zoomUpdateOptions(newMinXMaxX.minX, newMinXMaxX.maxX);\n        }\n      }\n    }, {\n      key: \"_getNewMinXMaxX\",\n      value: function _getNewMinXMaxX(newMinX, newMaxX) {\n        var shouldFloor = this.w.config.xaxis.convertedCatToNumeric;\n        return {\n          minX: shouldFloor ? Math.floor(newMinX) : newMinX,\n          maxX: shouldFloor ? Math.floor(newMaxX) : newMaxX\n        };\n      }\n    }, {\n      key: \"zoomUpdateOptions\",\n      value: function zoomUpdateOptions(newMinX, newMaxX) {\n        var w = this.w;\n\n        if (newMinX === undefined && newMaxX === undefined) {\n          this.handleZoomReset();\n          return;\n        }\n\n        if (w.config.xaxis.convertedCatToNumeric) {\n          // in category charts, avoid zooming out beyond min and max\n          if (newMinX < 1) {\n            newMinX = 1;\n            newMaxX = w.globals.dataPoints;\n          }\n\n          if (newMaxX - newMinX < 2) {\n            return;\n          }\n        }\n\n        var xaxis = {\n          min: newMinX,\n          max: newMaxX\n        };\n        var beforeZoomRange = this.getBeforeZoomRange(xaxis);\n\n        if (beforeZoomRange) {\n          xaxis = beforeZoomRange.xaxis;\n        }\n\n        var options = {\n          xaxis: xaxis\n        };\n        var yaxis = Utils$1.clone(w.globals.initialConfig.yaxis);\n\n        if (w.config.chart.zoom.autoScaleYaxis) {\n          var scale = new Range$1(this.ctx);\n          yaxis = scale.autoScaleY(this.ctx, yaxis, {\n            xaxis: xaxis\n          });\n        }\n\n        if (!w.config.chart.group) {\n          // if chart in a group, prevent yaxis update here\n          // fix issue #650\n          options.yaxis = yaxis;\n        }\n\n        this.w.globals.zoomed = true;\n\n        this.ctx.updateHelpers._updateOptions(options, false, this.w.config.chart.animations.dynamicAnimation.enabled);\n\n        this.zoomCallback(xaxis, yaxis);\n      }\n    }, {\n      key: \"zoomCallback\",\n      value: function zoomCallback(xaxis, yaxis) {\n        if (typeof this.ev.zoomed === 'function') {\n          this.ev.zoomed(this.ctx, {\n            xaxis: xaxis,\n            yaxis: yaxis\n          });\n        }\n      }\n    }, {\n      key: \"getBeforeZoomRange\",\n      value: function getBeforeZoomRange(xaxis, yaxis) {\n        var newRange = null;\n\n        if (typeof this.ev.beforeZoom === 'function') {\n          newRange = this.ev.beforeZoom(this, {\n            xaxis: xaxis,\n            yaxis: yaxis\n          });\n        }\n\n        return newRange;\n      }\n    }, {\n      key: \"toggleMenu\",\n      value: function toggleMenu() {\n        var _this4 = this;\n\n        window.setTimeout(function () {\n          if (_this4.elMenu.classList.contains('apexcharts-menu-open')) {\n            _this4.elMenu.classList.remove('apexcharts-menu-open');\n          } else {\n            _this4.elMenu.classList.add('apexcharts-menu-open');\n          }\n        }, 0);\n      }\n    }, {\n      key: \"handleDownload\",\n      value: function handleDownload(type) {\n        var w = this.w;\n        var exprt = new Exports(this.ctx);\n\n        switch (type) {\n          case 'svg':\n            exprt.exportToSVG(this.ctx);\n            break;\n\n          case 'png':\n            exprt.exportToPng(this.ctx);\n            break;\n\n          case 'csv':\n            exprt.exportToCSV({\n              series: w.config.series,\n              columnDelimiter: w.config.chart.toolbar.export.csv.columnDelimiter\n            });\n            break;\n        }\n      }\n    }, {\n      key: \"handleZoomReset\",\n      value: function handleZoomReset(e) {\n        var charts = this.ctx.getSyncedCharts();\n        charts.forEach(function (ch) {\n          var w = ch.w; // forget lastXAxis min/max as reset button isn't resetting the x-axis completely if zoomX is called before\n\n          w.globals.lastXAxis.min = undefined;\n          w.globals.lastXAxis.max = undefined;\n          ch.updateHelpers.revertDefaultAxisMinMax();\n\n          if (typeof w.config.chart.events.beforeResetZoom === 'function') {\n            // here, user get an option to control xaxis and yaxis when resetZoom is called\n            // at this point, whatever is returned from w.config.chart.events.beforeResetZoom\n            // is set as the new xaxis/yaxis min/max\n            var resetZoomRange = w.config.chart.events.beforeResetZoom(ch, w);\n\n            if (resetZoomRange) {\n              ch.updateHelpers.revertDefaultAxisMinMax(resetZoomRange);\n            }\n          }\n\n          if (typeof w.config.chart.events.zoomed === 'function') {\n            ch.ctx.toolbar.zoomCallback({\n              min: w.config.xaxis.min,\n              max: w.config.xaxis.max\n            });\n          }\n\n          w.globals.zoomed = false; // if user has some series collapsed before hitting zoom reset button,\n          // those series should stay collapsed\n\n          var series = ch.ctx.series.emptyCollapsedSeries(Utils$1.clone(w.globals.initialSeries));\n\n          ch.updateHelpers._updateSeries(series, w.config.chart.animations.dynamicAnimation.enabled);\n        });\n      }\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        this.elZoom = null;\n        this.elZoomIn = null;\n        this.elZoomOut = null;\n        this.elPan = null;\n        this.elSelection = null;\n        this.elZoomReset = null;\n        this.elMenuIcon = null;\n      }\n    }]);\n\n    return Toolbar;\n  }();\n\n  /**\n   * ApexCharts Zoom Class for handling zooming and panning on axes based charts.\n   *\n   * @module ZoomPanSelection\n   **/\n\n  var ZoomPanSelection = /*#__PURE__*/function (_Toolbar) {\n    _inherits(ZoomPanSelection, _Toolbar);\n\n    var _super = _createSuper(ZoomPanSelection);\n\n    function ZoomPanSelection(ctx) {\n      var _this;\n\n      _classCallCheck(this, ZoomPanSelection);\n\n      _this = _super.call(this, ctx);\n      _this.ctx = ctx;\n      _this.w = ctx.w;\n      _this.dragged = false;\n      _this.graphics = new Graphics(_this.ctx);\n      _this.eventList = ['mousedown', 'mouseleave', 'mousemove', 'touchstart', 'touchmove', 'mouseup', 'touchend'];\n      _this.clientX = 0;\n      _this.clientY = 0;\n      _this.startX = 0;\n      _this.endX = 0;\n      _this.dragX = 0;\n      _this.startY = 0;\n      _this.endY = 0;\n      _this.dragY = 0;\n      _this.moveDirection = 'none';\n      return _this;\n    }\n\n    _createClass(ZoomPanSelection, [{\n      key: \"init\",\n      value: function init(_ref) {\n        var _this2 = this;\n\n        var xyRatios = _ref.xyRatios;\n        var w = this.w;\n        var me = this;\n        this.xyRatios = xyRatios;\n        this.zoomRect = this.graphics.drawRect(0, 0, 0, 0);\n        this.selectionRect = this.graphics.drawRect(0, 0, 0, 0);\n        this.gridRect = w.globals.dom.baseEl.querySelector('.apexcharts-grid');\n        this.zoomRect.node.classList.add('apexcharts-zoom-rect');\n        this.selectionRect.node.classList.add('apexcharts-selection-rect');\n        w.globals.dom.elGraphical.add(this.zoomRect);\n        w.globals.dom.elGraphical.add(this.selectionRect);\n\n        if (w.config.chart.selection.type === 'x') {\n          this.slDraggableRect = this.selectionRect.draggable({\n            minX: 0,\n            minY: 0,\n            maxX: w.globals.gridWidth,\n            maxY: w.globals.gridHeight\n          }).on('dragmove', this.selectionDragging.bind(this, 'dragging'));\n        } else if (w.config.chart.selection.type === 'y') {\n          this.slDraggableRect = this.selectionRect.draggable({\n            minX: 0,\n            maxX: w.globals.gridWidth\n          }).on('dragmove', this.selectionDragging.bind(this, 'dragging'));\n        } else {\n          this.slDraggableRect = this.selectionRect.draggable().on('dragmove', this.selectionDragging.bind(this, 'dragging'));\n        }\n\n        this.preselectedSelection();\n        this.hoverArea = w.globals.dom.baseEl.querySelector(\"\".concat(w.globals.chartClass, \" .apexcharts-svg\"));\n        this.hoverArea.classList.add('apexcharts-zoomable');\n        this.eventList.forEach(function (event) {\n          _this2.hoverArea.addEventListener(event, me.svgMouseEvents.bind(me, xyRatios), {\n            capture: false,\n            passive: true\n          });\n        });\n      } // remove the event listeners which were previously added on hover area\n\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        if (this.slDraggableRect) {\n          this.slDraggableRect.draggable(false);\n          this.slDraggableRect.off();\n          this.selectionRect.off();\n        }\n\n        this.selectionRect = null;\n        this.zoomRect = null;\n        this.gridRect = null;\n      }\n    }, {\n      key: \"svgMouseEvents\",\n      value: function svgMouseEvents(xyRatios, e) {\n        var w = this.w;\n        var me = this;\n        var toolbar = this.ctx.toolbar;\n        var zoomtype = w.globals.zoomEnabled ? w.config.chart.zoom.type : w.config.chart.selection.type;\n        var autoSelected = w.config.chart.toolbar.autoSelected;\n\n        if (e.shiftKey) {\n          this.shiftWasPressed = true;\n          toolbar.enableZoomPanFromToolbar(autoSelected === 'pan' ? 'zoom' : 'pan');\n        } else {\n          if (this.shiftWasPressed) {\n            toolbar.enableZoomPanFromToolbar(autoSelected);\n            this.shiftWasPressed = false;\n          }\n        }\n\n        if (!e.target) return;\n        var tc = e.target.classList;\n        var pc;\n\n        if (e.target.parentNode && e.target.parentNode !== null) {\n          pc = e.target.parentNode.classList;\n        }\n\n        var falsePositives = tc.contains('apexcharts-selection-rect') || tc.contains('apexcharts-legend-marker') || tc.contains('apexcharts-legend-text') || pc && pc.contains('apexcharts-toolbar');\n        if (falsePositives) return;\n        me.clientX = e.type === 'touchmove' || e.type === 'touchstart' ? e.touches[0].clientX : e.type === 'touchend' ? e.changedTouches[0].clientX : e.clientX;\n        me.clientY = e.type === 'touchmove' || e.type === 'touchstart' ? e.touches[0].clientY : e.type === 'touchend' ? e.changedTouches[0].clientY : e.clientY;\n\n        if (e.type === 'mousedown' && e.which === 1) {\n          var gridRectDim = me.gridRect.getBoundingClientRect();\n          me.startX = me.clientX - gridRectDim.left;\n          me.startY = me.clientY - gridRectDim.top;\n          me.dragged = false;\n          me.w.globals.mousedown = true;\n        }\n\n        if (e.type === 'mousemove' && e.which === 1 || e.type === 'touchmove') {\n          me.dragged = true;\n\n          if (w.globals.panEnabled) {\n            w.globals.selection = null;\n\n            if (me.w.globals.mousedown) {\n              me.panDragging({\n                context: me,\n                zoomtype: zoomtype,\n                xyRatios: xyRatios\n              });\n            }\n          } else {\n            if (me.w.globals.mousedown && w.globals.zoomEnabled || me.w.globals.mousedown && w.globals.selectionEnabled) {\n              me.selection = me.selectionDrawing({\n                context: me,\n                zoomtype: zoomtype\n              });\n            }\n          }\n        }\n\n        if (e.type === 'mouseup' || e.type === 'touchend' || e.type === 'mouseleave') {\n          // we will be calling getBoundingClientRect on each mousedown/mousemove/mouseup\n          var _gridRectDim = me.gridRect.getBoundingClientRect();\n\n          if (me.w.globals.mousedown) {\n            // user released the drag, now do all the calculations\n            me.endX = me.clientX - _gridRectDim.left;\n            me.endY = me.clientY - _gridRectDim.top;\n            me.dragX = Math.abs(me.endX - me.startX);\n            me.dragY = Math.abs(me.endY - me.startY);\n\n            if (w.globals.zoomEnabled || w.globals.selectionEnabled) {\n              me.selectionDrawn({\n                context: me,\n                zoomtype: zoomtype\n              });\n            }\n\n            if (w.globals.panEnabled && w.config.xaxis.convertedCatToNumeric) {\n              me.delayedPanScrolled();\n            }\n          }\n\n          if (w.globals.zoomEnabled) {\n            me.hideSelectionRect(this.selectionRect);\n          }\n\n          me.dragged = false;\n          me.w.globals.mousedown = false;\n        }\n\n        this.makeSelectionRectDraggable();\n      }\n    }, {\n      key: \"makeSelectionRectDraggable\",\n      value: function makeSelectionRectDraggable() {\n        var w = this.w;\n        if (!this.selectionRect) return;\n        var rectDim = this.selectionRect.node.getBoundingClientRect();\n\n        if (rectDim.width > 0 && rectDim.height > 0) {\n          this.slDraggableRect.selectize({\n            points: 'l, r',\n            pointSize: 8,\n            pointType: 'rect'\n          }).resize({\n            constraint: {\n              minX: 0,\n              minY: 0,\n              maxX: w.globals.gridWidth,\n              maxY: w.globals.gridHeight\n            }\n          }).on('resizing', this.selectionDragging.bind(this, 'resizing'));\n        }\n      }\n    }, {\n      key: \"preselectedSelection\",\n      value: function preselectedSelection() {\n        var w = this.w;\n        var xyRatios = this.xyRatios;\n\n        if (!w.globals.zoomEnabled) {\n          if (typeof w.globals.selection !== 'undefined' && w.globals.selection !== null) {\n            this.drawSelectionRect(w.globals.selection);\n          } else {\n            if (w.config.chart.selection.xaxis.min !== undefined && w.config.chart.selection.xaxis.max !== undefined) {\n              var x = (w.config.chart.selection.xaxis.min - w.globals.minX) / xyRatios.xRatio;\n              var width = w.globals.gridWidth - (w.globals.maxX - w.config.chart.selection.xaxis.max) / xyRatios.xRatio - x;\n              var selectionRect = {\n                x: x,\n                y: 0,\n                width: width,\n                height: w.globals.gridHeight,\n                translateX: 0,\n                translateY: 0,\n                selectionEnabled: true\n              };\n              this.drawSelectionRect(selectionRect);\n              this.makeSelectionRectDraggable();\n\n              if (typeof w.config.chart.events.selection === 'function') {\n                w.config.chart.events.selection(this.ctx, {\n                  xaxis: {\n                    min: w.config.chart.selection.xaxis.min,\n                    max: w.config.chart.selection.xaxis.max\n                  },\n                  yaxis: {}\n                });\n              }\n            }\n          }\n        }\n      }\n    }, {\n      key: \"drawSelectionRect\",\n      value: function drawSelectionRect(_ref2) {\n        var x = _ref2.x,\n            y = _ref2.y,\n            width = _ref2.width,\n            height = _ref2.height,\n            _ref2$translateX = _ref2.translateX,\n            translateX = _ref2$translateX === void 0 ? 0 : _ref2$translateX,\n            _ref2$translateY = _ref2.translateY,\n            translateY = _ref2$translateY === void 0 ? 0 : _ref2$translateY;\n        var w = this.w;\n        var zoomRect = this.zoomRect;\n        var selectionRect = this.selectionRect;\n\n        if (this.dragged || w.globals.selection !== null) {\n          var scalingAttrs = {\n            transform: 'translate(' + translateX + ', ' + translateY + ')'\n          }; // change styles based on zoom or selection\n          // zoom is Enabled and user has dragged, so draw blue rect\n\n          if (w.globals.zoomEnabled && this.dragged) {\n            if (width < 0) width = 1; // fixes apexcharts.js#1168\n\n            zoomRect.attr({\n              x: x,\n              y: y,\n              width: width,\n              height: height,\n              fill: w.config.chart.zoom.zoomedArea.fill.color,\n              'fill-opacity': w.config.chart.zoom.zoomedArea.fill.opacity,\n              stroke: w.config.chart.zoom.zoomedArea.stroke.color,\n              'stroke-width': w.config.chart.zoom.zoomedArea.stroke.width,\n              'stroke-opacity': w.config.chart.zoom.zoomedArea.stroke.opacity\n            });\n            Graphics.setAttrs(zoomRect.node, scalingAttrs);\n          } // selection is enabled\n\n\n          if (w.globals.selectionEnabled) {\n            selectionRect.attr({\n              x: x,\n              y: y,\n              width: width > 0 ? width : 0,\n              height: height > 0 ? height : 0,\n              fill: w.config.chart.selection.fill.color,\n              'fill-opacity': w.config.chart.selection.fill.opacity,\n              stroke: w.config.chart.selection.stroke.color,\n              'stroke-width': w.config.chart.selection.stroke.width,\n              'stroke-dasharray': w.config.chart.selection.stroke.dashArray,\n              'stroke-opacity': w.config.chart.selection.stroke.opacity\n            });\n            Graphics.setAttrs(selectionRect.node, scalingAttrs);\n          }\n        }\n      }\n    }, {\n      key: \"hideSelectionRect\",\n      value: function hideSelectionRect(rect) {\n        if (rect) {\n          rect.attr({\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n          });\n        }\n      }\n    }, {\n      key: \"selectionDrawing\",\n      value: function selectionDrawing(_ref3) {\n        var context = _ref3.context,\n            zoomtype = _ref3.zoomtype;\n        var w = this.w;\n        var me = context;\n        var gridRectDim = this.gridRect.getBoundingClientRect();\n        var startX = me.startX - 1;\n        var startY = me.startY;\n        var inversedX = false;\n        var inversedY = false;\n        var selectionWidth = me.clientX - gridRectDim.left - startX;\n        var selectionHeight = me.clientY - gridRectDim.top - startY;\n        var selectionRect = {};\n\n        if (Math.abs(selectionWidth + startX) > w.globals.gridWidth) {\n          // user dragged the mouse outside drawing area to the right\n          selectionWidth = w.globals.gridWidth - startX;\n        } else if (me.clientX - gridRectDim.left < 0) {\n          // user dragged the mouse outside drawing area to the left\n          selectionWidth = startX;\n        } // inverse selection X\n\n\n        if (startX > me.clientX - gridRectDim.left) {\n          inversedX = true;\n          selectionWidth = Math.abs(selectionWidth);\n        } // inverse selection Y\n\n\n        if (startY > me.clientY - gridRectDim.top) {\n          inversedY = true;\n          selectionHeight = Math.abs(selectionHeight);\n        }\n\n        if (zoomtype === 'x') {\n          selectionRect = {\n            x: inversedX ? startX - selectionWidth : startX,\n            y: 0,\n            width: selectionWidth,\n            height: w.globals.gridHeight\n          };\n        } else if (zoomtype === 'y') {\n          selectionRect = {\n            x: 0,\n            y: inversedY ? startY - selectionHeight : startY,\n            width: w.globals.gridWidth,\n            height: selectionHeight\n          };\n        } else {\n          selectionRect = {\n            x: inversedX ? startX - selectionWidth : startX,\n            y: inversedY ? startY - selectionHeight : startY,\n            width: selectionWidth,\n            height: selectionHeight\n          };\n        }\n\n        me.drawSelectionRect(selectionRect);\n        me.selectionDragging('resizing');\n        return selectionRect;\n      }\n    }, {\n      key: \"selectionDragging\",\n      value: function selectionDragging(type, e) {\n        var _this3 = this;\n\n        var w = this.w;\n        var xyRatios = this.xyRatios;\n        var selRect = this.selectionRect;\n        var timerInterval = 0;\n\n        if (type === 'resizing') {\n          timerInterval = 30;\n        } // update selection when selection rect is dragged\n\n\n        var getSelAttr = function getSelAttr(attr) {\n          return parseFloat(selRect.node.getAttribute(attr));\n        };\n\n        var draggedProps = {\n          x: getSelAttr('x'),\n          y: getSelAttr('y'),\n          width: getSelAttr('width'),\n          height: getSelAttr('height')\n        };\n        w.globals.selection = draggedProps; // update selection ends\n\n        if (typeof w.config.chart.events.selection === 'function' && w.globals.selectionEnabled) {\n          // a small debouncer is required when resizing to avoid freezing the chart\n          clearTimeout(this.w.globals.selectionResizeTimer);\n          this.w.globals.selectionResizeTimer = window.setTimeout(function () {\n            var gridRectDim = _this3.gridRect.getBoundingClientRect();\n\n            var selectionRect = selRect.node.getBoundingClientRect();\n            var minX = w.globals.xAxisScale.niceMin + (selectionRect.left - gridRectDim.left) * xyRatios.xRatio;\n            var maxX = w.globals.xAxisScale.niceMin + (selectionRect.right - gridRectDim.left) * xyRatios.xRatio;\n            var minY = w.globals.yAxisScale[0].niceMin + (gridRectDim.bottom - selectionRect.bottom) * xyRatios.yRatio[0];\n            var maxY = w.globals.yAxisScale[0].niceMax - (selectionRect.top - gridRectDim.top) * xyRatios.yRatio[0];\n            var xyAxis = {\n              xaxis: {\n                min: minX,\n                max: maxX\n              },\n              yaxis: {\n                min: minY,\n                max: maxY\n              }\n            };\n            w.config.chart.events.selection(_this3.ctx, xyAxis);\n\n            if (w.config.chart.brush.enabled && w.config.chart.events.brushScrolled !== undefined) {\n              w.config.chart.events.brushScrolled(_this3.ctx, xyAxis);\n            }\n          }, timerInterval);\n        }\n      }\n    }, {\n      key: \"selectionDrawn\",\n      value: function selectionDrawn(_ref4) {\n        var context = _ref4.context,\n            zoomtype = _ref4.zoomtype;\n        var w = this.w;\n        var me = context;\n        var xyRatios = this.xyRatios;\n        var toolbar = this.ctx.toolbar;\n\n        if (me.startX > me.endX) {\n          var tempX = me.startX;\n          me.startX = me.endX;\n          me.endX = tempX;\n        }\n\n        if (me.startY > me.endY) {\n          var tempY = me.startY;\n          me.startY = me.endY;\n          me.endY = tempY;\n        }\n\n        var xLowestValue = undefined;\n        var xHighestValue = undefined;\n\n        if (!w.globals.isRangeBar) {\n          xLowestValue = w.globals.xAxisScale.niceMin + me.startX * xyRatios.xRatio;\n          xHighestValue = w.globals.xAxisScale.niceMin + me.endX * xyRatios.xRatio;\n        } else {\n          xLowestValue = w.globals.yAxisScale[0].niceMin + me.startX * xyRatios.invertedYRatio;\n          xHighestValue = w.globals.yAxisScale[0].niceMin + me.endX * xyRatios.invertedYRatio;\n        } // TODO: we will consider the 1st y axis values here for getting highest and lowest y\n\n\n        var yHighestValue = [];\n        var yLowestValue = [];\n        w.config.yaxis.forEach(function (yaxe, index) {\n          yHighestValue.push(w.globals.yAxisScale[index].niceMax - xyRatios.yRatio[index] * me.startY);\n          yLowestValue.push(w.globals.yAxisScale[index].niceMax - xyRatios.yRatio[index] * me.endY);\n        });\n\n        if (me.dragged && (me.dragX > 10 || me.dragY > 10) && xLowestValue !== xHighestValue) {\n          if (w.globals.zoomEnabled) {\n            var yaxis = Utils$1.clone(w.globals.initialConfig.yaxis);\n            var xaxis = Utils$1.clone(w.globals.initialConfig.xaxis);\n            w.globals.zoomed = true;\n\n            if (w.config.xaxis.convertedCatToNumeric) {\n              xLowestValue = Math.floor(xLowestValue);\n              xHighestValue = Math.floor(xHighestValue);\n\n              if (xLowestValue < 1) {\n                xLowestValue = 1;\n                xHighestValue = w.globals.dataPoints;\n              }\n\n              if (xHighestValue - xLowestValue < 2) {\n                xHighestValue = xLowestValue + 1;\n              }\n            }\n\n            if (zoomtype === 'xy' || zoomtype === 'x') {\n              xaxis = {\n                min: xLowestValue,\n                max: xHighestValue\n              };\n            }\n\n            if (zoomtype === 'xy' || zoomtype === 'y') {\n              yaxis.forEach(function (yaxe, index) {\n                yaxis[index].min = yLowestValue[index];\n                yaxis[index].max = yHighestValue[index];\n              });\n            }\n\n            if (w.config.chart.zoom.autoScaleYaxis) {\n              var scale = new Range$1(me.ctx);\n              yaxis = scale.autoScaleY(me.ctx, yaxis, {\n                xaxis: xaxis\n              });\n            }\n\n            if (toolbar) {\n              var beforeZoomRange = toolbar.getBeforeZoomRange(xaxis, yaxis);\n\n              if (beforeZoomRange) {\n                xaxis = beforeZoomRange.xaxis ? beforeZoomRange.xaxis : xaxis;\n                yaxis = beforeZoomRange.yaxis ? beforeZoomRange.yaxis : yaxis;\n              }\n            }\n\n            var options = {\n              xaxis: xaxis\n            };\n\n            if (!w.config.chart.group) {\n              // if chart in a group, prevent yaxis update here\n              // fix issue #650\n              options.yaxis = yaxis;\n            }\n\n            me.ctx.updateHelpers._updateOptions(options, false, me.w.config.chart.animations.dynamicAnimation.enabled);\n\n            if (typeof w.config.chart.events.zoomed === 'function') {\n              toolbar.zoomCallback(xaxis, yaxis);\n            }\n          } else if (w.globals.selectionEnabled) {\n            var _yaxis = null;\n            var _xaxis = null;\n            _xaxis = {\n              min: xLowestValue,\n              max: xHighestValue\n            };\n\n            if (zoomtype === 'xy' || zoomtype === 'y') {\n              _yaxis = Utils$1.clone(w.config.yaxis);\n\n              _yaxis.forEach(function (yaxe, index) {\n                _yaxis[index].min = yLowestValue[index];\n                _yaxis[index].max = yHighestValue[index];\n              });\n            }\n\n            w.globals.selection = me.selection;\n\n            if (typeof w.config.chart.events.selection === 'function') {\n              w.config.chart.events.selection(me.ctx, {\n                xaxis: _xaxis,\n                yaxis: _yaxis\n              });\n            }\n          }\n        }\n      }\n    }, {\n      key: \"panDragging\",\n      value: function panDragging(_ref5) {\n        var context = _ref5.context;\n        var w = this.w;\n        var me = context; // check to make sure there is data to compare against\n\n        if (typeof w.globals.lastClientPosition.x !== 'undefined') {\n          // get the change from last position to this position\n          var deltaX = w.globals.lastClientPosition.x - me.clientX;\n          var deltaY = w.globals.lastClientPosition.y - me.clientY; // check which direction had the highest amplitude and then figure out direction by checking if the value is greater or less than zero\n\n          if (Math.abs(deltaX) > Math.abs(deltaY) && deltaX > 0) {\n            this.moveDirection = 'left';\n          } else if (Math.abs(deltaX) > Math.abs(deltaY) && deltaX < 0) {\n            this.moveDirection = 'right';\n          } else if (Math.abs(deltaY) > Math.abs(deltaX) && deltaY > 0) {\n            this.moveDirection = 'up';\n          } else if (Math.abs(deltaY) > Math.abs(deltaX) && deltaY < 0) {\n            this.moveDirection = 'down';\n          }\n        } // set the new last position to the current for next time (to get the position of drag)\n\n\n        w.globals.lastClientPosition = {\n          x: me.clientX,\n          y: me.clientY\n        };\n        var xLowestValue = w.globals.isRangeBar ? w.globals.minY : w.globals.minX;\n        var xHighestValue = w.globals.isRangeBar ? w.globals.maxY : w.globals.maxX; // on a category, we don't pan continuosly as it causes bugs\n\n        if (!w.config.xaxis.convertedCatToNumeric) {\n          me.panScrolled(xLowestValue, xHighestValue);\n        }\n      }\n    }, {\n      key: \"delayedPanScrolled\",\n      value: function delayedPanScrolled() {\n        var w = this.w;\n        var newMinX = w.globals.minX;\n        var newMaxX = w.globals.maxX;\n        var centerX = (w.globals.maxX - w.globals.minX) / 2;\n\n        if (this.moveDirection === 'left') {\n          newMinX = w.globals.minX + centerX;\n          newMaxX = w.globals.maxX + centerX;\n        } else if (this.moveDirection === 'right') {\n          newMinX = w.globals.minX - centerX;\n          newMaxX = w.globals.maxX - centerX;\n        }\n\n        newMinX = Math.floor(newMinX);\n        newMaxX = Math.floor(newMaxX);\n        this.updateScrolledChart({\n          xaxis: {\n            min: newMinX,\n            max: newMaxX\n          }\n        }, newMinX, newMaxX);\n      }\n    }, {\n      key: \"panScrolled\",\n      value: function panScrolled(xLowestValue, xHighestValue) {\n        var w = this.w;\n        var xyRatios = this.xyRatios;\n        var yaxis = Utils$1.clone(w.globals.initialConfig.yaxis);\n        var xRatio = xyRatios.xRatio;\n        var minX = w.globals.minX;\n        var maxX = w.globals.maxX;\n\n        if (w.globals.isRangeBar) {\n          xRatio = xyRatios.invertedYRatio;\n          minX = w.globals.minY;\n          maxX = w.globals.maxY;\n        }\n\n        if (this.moveDirection === 'left') {\n          xLowestValue = minX + w.globals.gridWidth / 15 * xRatio;\n          xHighestValue = maxX + w.globals.gridWidth / 15 * xRatio;\n        } else if (this.moveDirection === 'right') {\n          xLowestValue = minX - w.globals.gridWidth / 15 * xRatio;\n          xHighestValue = maxX - w.globals.gridWidth / 15 * xRatio;\n        }\n\n        if (!w.globals.isRangeBar) {\n          if (xLowestValue < w.globals.initialMinX || xHighestValue > w.globals.initialMaxX) {\n            xLowestValue = minX;\n            xHighestValue = maxX;\n          }\n        }\n\n        var xaxis = {\n          min: xLowestValue,\n          max: xHighestValue\n        };\n\n        if (w.config.chart.zoom.autoScaleYaxis) {\n          var scale = new Range$1(this.ctx);\n          yaxis = scale.autoScaleY(this.ctx, yaxis, {\n            xaxis: xaxis\n          });\n        }\n\n        var options = {\n          xaxis: {\n            min: xLowestValue,\n            max: xHighestValue\n          }\n        };\n\n        if (!w.config.chart.group) {\n          // if chart in a group, prevent yaxis update here\n          // fix issue #650\n          options.yaxis = yaxis;\n        }\n\n        this.updateScrolledChart(options, xLowestValue, xHighestValue);\n      }\n    }, {\n      key: \"updateScrolledChart\",\n      value: function updateScrolledChart(options, xLowestValue, xHighestValue) {\n        var w = this.w;\n\n        this.ctx.updateHelpers._updateOptions(options, false, false);\n\n        if (typeof w.config.chart.events.scrolled === 'function') {\n          w.config.chart.events.scrolled(this.ctx, {\n            xaxis: {\n              min: xLowestValue,\n              max: xHighestValue\n            }\n          });\n        }\n      }\n    }]);\n\n    return ZoomPanSelection;\n  }(Toolbar);\n\n  /**\n   * ApexCharts Tooltip.Utils Class to support Tooltip functionality.\n   *\n   * @module Tooltip.Utils\n   **/\n\n  var Utils = /*#__PURE__*/function () {\n    function Utils(tooltipContext) {\n      _classCallCheck(this, Utils);\n\n      this.w = tooltipContext.w;\n      this.ttCtx = tooltipContext;\n      this.ctx = tooltipContext.ctx;\n    }\n    /**\n     ** When hovering over series, you need to capture which series is being hovered on.\n     ** This function will return both capturedseries index as well as inner index of that series\n     * @memberof Utils\n     * @param {object}\n     * - hoverArea = the rect on which user hovers\n     * - elGrid = dimensions of the hover rect (it can be different than hoverarea)\n     */\n\n\n    _createClass(Utils, [{\n      key: \"getNearestValues\",\n      value: function getNearestValues(_ref) {\n        var hoverArea = _ref.hoverArea,\n            elGrid = _ref.elGrid,\n            clientX = _ref.clientX,\n            clientY = _ref.clientY;\n        var w = this.w;\n        var seriesBound = elGrid.getBoundingClientRect();\n        var hoverWidth = seriesBound.width;\n        var hoverHeight = seriesBound.height;\n        var xDivisor = hoverWidth / (w.globals.dataPoints - 1);\n        var yDivisor = hoverHeight / w.globals.dataPoints;\n        var hasBars = this.hasBars();\n\n        if ((w.globals.comboCharts || hasBars) && !w.config.xaxis.convertedCatToNumeric) {\n          xDivisor = hoverWidth / w.globals.dataPoints;\n        }\n\n        var hoverX = clientX - seriesBound.left - w.globals.barPadForNumericAxis;\n        var hoverY = clientY - seriesBound.top;\n        var notInRect = hoverX < 0 || hoverY < 0 || hoverX > hoverWidth || hoverY > hoverHeight;\n\n        if (notInRect) {\n          hoverArea.classList.remove('hovering-zoom');\n          hoverArea.classList.remove('hovering-pan');\n        } else {\n          if (w.globals.zoomEnabled) {\n            hoverArea.classList.remove('hovering-pan');\n            hoverArea.classList.add('hovering-zoom');\n          } else if (w.globals.panEnabled) {\n            hoverArea.classList.remove('hovering-zoom');\n            hoverArea.classList.add('hovering-pan');\n          }\n        }\n\n        var j = Math.round(hoverX / xDivisor);\n        var jHorz = Math.floor(hoverY / yDivisor);\n\n        if (hasBars && !w.config.xaxis.convertedCatToNumeric) {\n          j = Math.ceil(hoverX / xDivisor);\n          j = j - 1;\n        }\n\n        var capturedSeries = null;\n        var closest = null;\n        var seriesXValArr = [];\n        var seriesYValArr = [];\n\n        for (var s = 0; s < w.globals.seriesXvalues.length; s++) {\n          seriesXValArr.push([w.globals.seriesXvalues[s][0] - 0.000001].concat(w.globals.seriesXvalues[s]));\n        }\n\n        seriesXValArr = seriesXValArr.map(function (seriesXVal) {\n          return seriesXVal.filter(function (s) {\n            return s;\n          });\n        });\n        seriesYValArr = w.globals.seriesYvalues.map(function (seriesYVal) {\n          return seriesYVal.filter(function (s) {\n            return Utils$1.isNumber(s);\n          });\n        }); // if X axis type is not category and tooltip is not shared, then we need to find the cursor position and get the nearest value\n\n        if (w.globals.isXNumeric) {\n          // Change origin of cursor position so that we can compute the relative nearest point to the cursor on our chart\n          // we only need to scale because all points are relative to the bounds.left and bounds.top => origin is virtually (0, 0)\n          var chartGridEl = this.ttCtx.getElGrid();\n          var chartGridElBoundingRect = chartGridEl.getBoundingClientRect();\n          var transformedHoverX = hoverX * (chartGridElBoundingRect.width / hoverWidth);\n          var transformedHoverY = hoverY * (chartGridElBoundingRect.height / hoverHeight);\n          closest = this.closestInMultiArray(transformedHoverX, transformedHoverY, seriesXValArr, seriesYValArr);\n          capturedSeries = closest.index;\n          j = closest.j;\n\n          if (capturedSeries !== null) {\n            // initial push, it should be a little smaller than the 1st val\n            seriesXValArr = w.globals.seriesXvalues[capturedSeries];\n            closest = this.closestInArray(transformedHoverX, seriesXValArr);\n            j = closest.index;\n          }\n        }\n\n        w.globals.capturedSeriesIndex = capturedSeries === null ? -1 : capturedSeries;\n        if (!j || j < 1) j = 0;\n\n        if (w.globals.isBarHorizontal) {\n          w.globals.capturedDataPointIndex = jHorz;\n        } else {\n          w.globals.capturedDataPointIndex = j;\n        }\n\n        return {\n          capturedSeries: capturedSeries,\n          j: w.globals.isBarHorizontal ? jHorz : j,\n          hoverX: hoverX,\n          hoverY: hoverY\n        };\n      }\n    }, {\n      key: \"closestInMultiArray\",\n      value: function closestInMultiArray(hoverX, hoverY, Xarrays, Yarrays) {\n        var w = this.w;\n        var activeIndex = 0;\n        var currIndex = null;\n        var j = -1;\n\n        if (w.globals.series.length > 1) {\n          activeIndex = this.getFirstActiveXArray(Xarrays);\n        } else {\n          currIndex = 0;\n        }\n\n        var currY = Yarrays[activeIndex][0];\n        var currX = Xarrays[activeIndex][0];\n        var diffX = Math.abs(hoverX - currX);\n        var diffY = Math.abs(hoverY - currY);\n        var diff = diffY + diffX;\n        Yarrays.map(function (arrY, arrIndex) {\n          arrY.map(function (y, innerKey) {\n            var newdiffY = Math.abs(hoverY - Yarrays[arrIndex][innerKey]);\n            var newdiffX = Math.abs(hoverX - Xarrays[arrIndex][innerKey]);\n            var newdiff = newdiffX + newdiffY;\n\n            if (newdiff < diff) {\n              diff = newdiff;\n              diffX = newdiffX;\n              diffY = newdiffY;\n              currIndex = arrIndex;\n              j = innerKey;\n            }\n          });\n        });\n        return {\n          index: currIndex,\n          j: j\n        };\n      }\n    }, {\n      key: \"getFirstActiveXArray\",\n      value: function getFirstActiveXArray(Xarrays) {\n        var activeIndex = 0;\n        var firstActiveSeriesIndex = Xarrays.map(function (xarr, index) {\n          return xarr.length > 0 ? index : -1;\n        });\n\n        for (var a = 0; a < firstActiveSeriesIndex.length; a++) {\n          if (firstActiveSeriesIndex[a] !== -1) {\n            activeIndex = firstActiveSeriesIndex[a];\n            break;\n          }\n        }\n\n        return activeIndex;\n      }\n    }, {\n      key: \"closestInArray\",\n      value: function closestInArray(val, arr) {\n        var curr = arr[0];\n        var currIndex = null;\n        var diff = Math.abs(val - curr);\n\n        for (var i = 0; i < arr.length; i++) {\n          var newdiff = Math.abs(val - arr[i]);\n\n          if (newdiff < diff) {\n            diff = newdiff;\n            currIndex = i;\n          }\n        }\n\n        return {\n          index: currIndex\n        };\n      }\n      /**\n       * When there are multiple series, it is possible to have different x values for each series.\n       * But it may be possible in those multiple series, that there is same x value for 2 or more\n       * series.\n       * @memberof Utils\n       * @param {int}\n       * - j = is the inner index of series -> (series[i][j])\n       * @return {bool}\n       */\n\n    }, {\n      key: \"isXoverlap\",\n      value: function isXoverlap(j) {\n        var w = this.w;\n        var xSameForAllSeriesJArr = [];\n        var seriesX = w.globals.seriesX.filter(function (s) {\n          return typeof s[0] !== 'undefined';\n        });\n\n        if (seriesX.length > 0) {\n          for (var i = 0; i < seriesX.length - 1; i++) {\n            if (typeof seriesX[i][j] !== 'undefined' && typeof seriesX[i + 1][j] !== 'undefined') {\n              if (seriesX[i][j] !== seriesX[i + 1][j]) {\n                xSameForAllSeriesJArr.push('unEqual');\n              }\n            }\n          }\n        }\n\n        if (xSameForAllSeriesJArr.length === 0) {\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"isInitialSeriesSameLen\",\n      value: function isInitialSeriesSameLen() {\n        var sameLen = true;\n        var initialSeries = this.w.globals.initialSeries;\n\n        for (var i = 0; i < initialSeries.length - 1; i++) {\n          if (initialSeries[i].data.length !== initialSeries[i + 1].data.length) {\n            sameLen = false;\n            break;\n          }\n        }\n\n        return sameLen;\n      }\n    }, {\n      key: \"getBarsHeight\",\n      value: function getBarsHeight(allbars) {\n        var bars = _toConsumableArray(allbars);\n\n        var totalHeight = bars.reduce(function (acc, bar) {\n          return acc + bar.getBBox().height;\n        }, 0);\n        return totalHeight;\n      }\n    }, {\n      key: \"getElMarkers\",\n      value: function getElMarkers() {\n        return this.w.globals.dom.baseEl.querySelectorAll(' .apexcharts-series-markers');\n      }\n    }, {\n      key: \"getAllMarkers\",\n      value: function getAllMarkers() {\n        // first get all marker parents. This parent class contains series-index\n        // which helps to sort the markers as they are dynamic\n        var markersWraps = this.w.globals.dom.baseEl.querySelectorAll('.apexcharts-series-markers-wrap');\n        markersWraps = _toConsumableArray(markersWraps);\n        markersWraps.sort(function (a, b) {\n          return Number(b.getAttribute('data:realIndex')) < Number(a.getAttribute('data:realIndex')) ? 0 : -1;\n        });\n        var markers = [];\n        markersWraps.forEach(function (m) {\n          markers.push(m.querySelector('.apexcharts-marker'));\n        });\n        return markers;\n      }\n    }, {\n      key: \"hasMarkers\",\n      value: function hasMarkers() {\n        var markers = this.getElMarkers();\n        return markers.length > 0;\n      }\n    }, {\n      key: \"getElBars\",\n      value: function getElBars() {\n        return this.w.globals.dom.baseEl.querySelectorAll('.apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series');\n      }\n    }, {\n      key: \"hasBars\",\n      value: function hasBars() {\n        var bars = this.getElBars();\n        return bars.length > 0;\n      }\n    }, {\n      key: \"getHoverMarkerSize\",\n      value: function getHoverMarkerSize(index) {\n        var w = this.w;\n        var hoverSize = w.config.markers.hover.size;\n\n        if (hoverSize === undefined) {\n          hoverSize = w.globals.markers.size[index] + w.config.markers.hover.sizeOffset;\n        }\n\n        return hoverSize;\n      }\n    }, {\n      key: \"toggleAllTooltipSeriesGroups\",\n      value: function toggleAllTooltipSeriesGroups(state) {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n\n        if (ttCtx.allTooltipSeriesGroups.length === 0) {\n          ttCtx.allTooltipSeriesGroups = w.globals.dom.baseEl.querySelectorAll('.apexcharts-tooltip-series-group');\n        }\n\n        var allTooltipSeriesGroups = ttCtx.allTooltipSeriesGroups;\n\n        for (var i = 0; i < allTooltipSeriesGroups.length; i++) {\n          if (state === 'enable') {\n            allTooltipSeriesGroups[i].classList.add('apexcharts-active');\n            allTooltipSeriesGroups[i].style.display = w.config.tooltip.items.display;\n          } else {\n            allTooltipSeriesGroups[i].classList.remove('apexcharts-active');\n            allTooltipSeriesGroups[i].style.display = 'none';\n          }\n        }\n      }\n    }]);\n\n    return Utils;\n  }();\n\n  /**\n   * ApexCharts Tooltip.Labels Class to draw texts on the tooltip.\n   * This file deals with printing actual text on the tooltip.\n   *\n   * @module Tooltip.Labels\n   **/\n\n  var Labels = /*#__PURE__*/function () {\n    function Labels(tooltipContext) {\n      _classCallCheck(this, Labels);\n\n      this.w = tooltipContext.w;\n      this.ctx = tooltipContext.ctx;\n      this.ttCtx = tooltipContext;\n      this.tooltipUtil = new Utils(tooltipContext);\n    }\n\n    _createClass(Labels, [{\n      key: \"drawSeriesTexts\",\n      value: function drawSeriesTexts(_ref) {\n        var _ref$shared = _ref.shared,\n            shared = _ref$shared === void 0 ? true : _ref$shared,\n            ttItems = _ref.ttItems,\n            _ref$i = _ref.i,\n            i = _ref$i === void 0 ? 0 : _ref$i,\n            _ref$j = _ref.j,\n            j = _ref$j === void 0 ? null : _ref$j,\n            y1 = _ref.y1,\n            y2 = _ref.y2,\n            e = _ref.e;\n        var w = this.w;\n\n        if (w.config.tooltip.custom !== undefined) {\n          this.handleCustomTooltip({\n            i: i,\n            j: j,\n            y1: y1,\n            y2: y2,\n            w: w\n          });\n        } else {\n          this.toggleActiveInactiveSeries(shared);\n        }\n\n        var values = this.getValuesToPrint({\n          i: i,\n          j: j\n        });\n        this.printLabels({\n          i: i,\n          j: j,\n          values: values,\n          ttItems: ttItems,\n          shared: shared,\n          e: e\n        }); // Re-calculate tooltip dimensions now that we have drawn the text\n\n        var tooltipEl = this.ttCtx.getElTooltip();\n        this.ttCtx.tooltipRect.ttWidth = tooltipEl.getBoundingClientRect().width;\n        this.ttCtx.tooltipRect.ttHeight = tooltipEl.getBoundingClientRect().height;\n      }\n    }, {\n      key: \"printLabels\",\n      value: function printLabels(_ref2) {\n        var _this = this;\n\n        var i = _ref2.i,\n            j = _ref2.j,\n            values = _ref2.values,\n            ttItems = _ref2.ttItems,\n            shared = _ref2.shared,\n            e = _ref2.e;\n        var w = this.w;\n        var val;\n        var goalVals = [];\n\n        var hasGoalValues = function hasGoalValues(gi) {\n          return w.globals.seriesGoals[gi] && w.globals.seriesGoals[gi][j] && Array.isArray(w.globals.seriesGoals[gi][j]);\n        };\n\n        var xVal = values.xVal,\n            zVal = values.zVal,\n            xAxisTTVal = values.xAxisTTVal;\n        var seriesName = '';\n        var pColor = w.globals.colors[i]; // The pColor here is for the markers inside tooltip\n\n        if (j !== null && w.config.plotOptions.bar.distributed) {\n          pColor = w.globals.colors[j];\n        }\n\n        var _loop = function _loop(t, inverset) {\n          var f = _this.getFormatters(i);\n\n          seriesName = _this.getSeriesName({\n            fn: f.yLbTitleFormatter,\n            index: i,\n            seriesIndex: i,\n            j: j\n          });\n\n          if (w.config.chart.type === 'treemap') {\n            seriesName = f.yLbTitleFormatter(String(w.config.series[i].data[j].x), {\n              series: w.globals.series,\n              seriesIndex: i,\n              dataPointIndex: j,\n              w: w\n            });\n          }\n\n          var tIndex = w.config.tooltip.inverseOrder ? inverset : t;\n\n          if (w.globals.axisCharts) {\n            var getValBySeriesIndex = function getValBySeriesIndex(index) {\n              return f.yLbFormatter(w.globals.series[index][j], {\n                series: w.globals.series,\n                seriesIndex: index,\n                dataPointIndex: j,\n                w: w\n              });\n            };\n\n            if (shared) {\n              f = _this.getFormatters(tIndex);\n              seriesName = _this.getSeriesName({\n                fn: f.yLbTitleFormatter,\n                index: tIndex,\n                seriesIndex: i,\n                j: j\n              });\n              pColor = w.globals.colors[tIndex];\n              val = getValBySeriesIndex(tIndex);\n\n              if (hasGoalValues(tIndex)) {\n                goalVals = w.globals.seriesGoals[tIndex][j].map(function (goal) {\n                  return {\n                    attrs: goal,\n                    val: f.yLbFormatter(goal.value, {\n                      seriesIndex: tIndex,\n                      dataPointIndex: j,\n                      w: w\n                    })\n                  };\n                });\n              }\n            } else {\n              if (e && e.target && e.target.getAttribute('fill')) {\n                pColor = e.target.getAttribute('fill');\n              }\n\n              val = getValBySeriesIndex(i);\n\n              if (hasGoalValues(i) && Array.isArray(w.globals.seriesGoals[i][j])) {\n                goalVals = w.globals.seriesGoals[i][j].map(function (goal) {\n                  return {\n                    attrs: goal,\n                    val: f.yLbFormatter(goal.value, {\n                      seriesIndex: i,\n                      dataPointIndex: j,\n                      w: w\n                    })\n                  };\n                });\n              }\n            }\n          } // for pie / donuts\n\n\n          if (j === null) {\n            val = f.yLbFormatter(w.globals.series[i], _objectSpread2(_objectSpread2({}, w), {}, {\n              seriesIndex: i,\n              dataPointIndex: i\n            }));\n          }\n\n          _this.DOMHandling({\n            i: i,\n            t: tIndex,\n            j: j,\n            ttItems: ttItems,\n            values: {\n              val: val,\n              goalVals: goalVals,\n              xVal: xVal,\n              xAxisTTVal: xAxisTTVal,\n              zVal: zVal\n            },\n            seriesName: seriesName,\n            shared: shared,\n            pColor: pColor\n          });\n        };\n\n        for (var t = 0, inverset = w.globals.series.length - 1; t < w.globals.series.length; t++, inverset--) {\n          _loop(t, inverset);\n        }\n      }\n    }, {\n      key: \"getFormatters\",\n      value: function getFormatters(i) {\n        var w = this.w;\n        var yLbFormatter = w.globals.yLabelFormatters[i];\n        var yLbTitleFormatter;\n\n        if (w.globals.ttVal !== undefined) {\n          if (Array.isArray(w.globals.ttVal)) {\n            yLbFormatter = w.globals.ttVal[i] && w.globals.ttVal[i].formatter;\n            yLbTitleFormatter = w.globals.ttVal[i] && w.globals.ttVal[i].title && w.globals.ttVal[i].title.formatter;\n          } else {\n            yLbFormatter = w.globals.ttVal.formatter;\n\n            if (typeof w.globals.ttVal.title.formatter === 'function') {\n              yLbTitleFormatter = w.globals.ttVal.title.formatter;\n            }\n          }\n        } else {\n          yLbTitleFormatter = w.config.tooltip.y.title.formatter;\n        }\n\n        if (typeof yLbFormatter !== 'function') {\n          if (w.globals.yLabelFormatters[0]) {\n            yLbFormatter = w.globals.yLabelFormatters[0];\n          } else {\n            yLbFormatter = function yLbFormatter(label) {\n              return label;\n            };\n          }\n        }\n\n        if (typeof yLbTitleFormatter !== 'function') {\n          yLbTitleFormatter = function yLbTitleFormatter(label) {\n            return label;\n          };\n        }\n\n        return {\n          yLbFormatter: yLbFormatter,\n          yLbTitleFormatter: yLbTitleFormatter\n        };\n      }\n    }, {\n      key: \"getSeriesName\",\n      value: function getSeriesName(_ref3) {\n        var fn = _ref3.fn,\n            index = _ref3.index,\n            seriesIndex = _ref3.seriesIndex,\n            j = _ref3.j;\n        var w = this.w;\n        return fn(String(w.globals.seriesNames[index]), {\n          series: w.globals.series,\n          seriesIndex: seriesIndex,\n          dataPointIndex: j,\n          w: w\n        });\n      }\n    }, {\n      key: \"DOMHandling\",\n      value: function DOMHandling(_ref4) {\n        _ref4.i;\n            var t = _ref4.t,\n            j = _ref4.j,\n            ttItems = _ref4.ttItems,\n            values = _ref4.values,\n            seriesName = _ref4.seriesName,\n            shared = _ref4.shared,\n            pColor = _ref4.pColor;\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var val = values.val,\n            goalVals = values.goalVals,\n            xVal = values.xVal,\n            xAxisTTVal = values.xAxisTTVal,\n            zVal = values.zVal;\n        var ttItemsChildren = null;\n        ttItemsChildren = ttItems[t].children;\n\n        if (w.config.tooltip.fillSeriesColor) {\n          ttItems[t].style.backgroundColor = pColor;\n          ttItemsChildren[0].style.display = 'none';\n        }\n\n        if (ttCtx.showTooltipTitle) {\n          if (ttCtx.tooltipTitle === null) {\n            // get it once if null, and store it in class property\n            ttCtx.tooltipTitle = w.globals.dom.baseEl.querySelector('.apexcharts-tooltip-title');\n          }\n\n          ttCtx.tooltipTitle.innerHTML = xVal;\n        } // if xaxis tooltip is constructed, we need to replace the innerHTML\n\n\n        if (ttCtx.isXAxisTooltipEnabled) {\n          ttCtx.xaxisTooltipText.innerHTML = xAxisTTVal !== '' ? xAxisTTVal : xVal;\n        }\n\n        var ttYLabel = ttItems[t].querySelector('.apexcharts-tooltip-text-y-label');\n\n        if (ttYLabel) {\n          ttYLabel.innerHTML = seriesName ? seriesName : '';\n        }\n\n        var ttYVal = ttItems[t].querySelector('.apexcharts-tooltip-text-y-value');\n\n        if (ttYVal) {\n          ttYVal.innerHTML = typeof val !== 'undefined' ? val : '';\n        }\n\n        if (ttItemsChildren[0] && ttItemsChildren[0].classList.contains('apexcharts-tooltip-marker')) {\n          if (w.config.tooltip.marker.fillColors && Array.isArray(w.config.tooltip.marker.fillColors)) {\n            pColor = w.config.tooltip.marker.fillColors[t];\n          }\n\n          ttItemsChildren[0].style.backgroundColor = pColor;\n        }\n\n        if (!w.config.tooltip.marker.show) {\n          ttItemsChildren[0].style.display = 'none';\n        }\n\n        var ttGLabel = ttItems[t].querySelector('.apexcharts-tooltip-text-goals-label');\n        var ttGVal = ttItems[t].querySelector('.apexcharts-tooltip-text-goals-value');\n\n        if (goalVals.length && w.globals.seriesGoals[t]) {\n          var createGoalsHtml = function createGoalsHtml() {\n            var gLabels = '<div >';\n            var gVals = '<div>';\n            goalVals.forEach(function (goal, gi) {\n              gLabels += \" <div style=\\\"display: flex\\\"><span class=\\\"apexcharts-tooltip-marker\\\" style=\\\"background-color: \".concat(goal.attrs.strokeColor, \"; height: 3px; border-radius: 0; top: 5px;\\\"></span> \").concat(goal.attrs.name, \"</div>\");\n              gVals += \"<div>\".concat(goal.val, \"</div>\");\n            });\n            ttGLabel.innerHTML = gLabels + \"</div>\";\n            ttGVal.innerHTML = gVals + \"</div>\";\n          };\n\n          if (shared) {\n            if (w.globals.seriesGoals[t][j] && Array.isArray(w.globals.seriesGoals[t][j])) {\n              createGoalsHtml();\n            } else {\n              ttGLabel.innerHTML = '';\n              ttGVal.innerHTML = '';\n            }\n          } else {\n            createGoalsHtml();\n          }\n        } else {\n          ttGLabel.innerHTML = '';\n          ttGVal.innerHTML = '';\n        }\n\n        if (zVal !== null) {\n          var ttZLabel = ttItems[t].querySelector('.apexcharts-tooltip-text-z-label');\n          ttZLabel.innerHTML = w.config.tooltip.z.title;\n          var ttZVal = ttItems[t].querySelector('.apexcharts-tooltip-text-z-value');\n          ttZVal.innerHTML = typeof zVal !== 'undefined' ? zVal : '';\n        }\n\n        if (shared && ttItemsChildren[0]) {\n          // hide when no Val or series collapsed\n          if (typeof val === 'undefined' || val === null || w.globals.collapsedSeriesIndices.indexOf(t) > -1) {\n            ttItemsChildren[0].parentNode.style.display = 'none';\n          } else {\n            ttItemsChildren[0].parentNode.style.display = w.config.tooltip.items.display;\n          } // TODO: issue #1240 needs to be looked at again. commenting it because this also hides single series values with 0 in it (shared tooltip)\n          // if (w.globals.stackedSeriesTotals[j] === 0) {\n          //   // shared tooltip and all values are null, so we need to hide the x value too\n          //   let allYZeroForJ = false\n          //   for (let si = 1; si < w.globals.seriesYvalues.length; si++) {\n          //     if (\n          //       w.globals.seriesYvalues[si][j] ===\n          //       w.globals.seriesYvalues[si - 1][j]\n          //     ) {\n          //       allYZeroForJ = true\n          //     }\n          //   }\n          //   if (allYZeroForJ) {\n          //     ttCtx.tooltipTitle.style.display = 'none'\n          //   } else {\n          //     ttCtx.tooltipTitle.style.display = w.config.tooltip.items.display\n          //   }\n          // } else {\n          //   ttCtx.tooltipTitle.style.display = w.config.tooltip.items.display\n          // }\n\n        }\n      }\n    }, {\n      key: \"toggleActiveInactiveSeries\",\n      value: function toggleActiveInactiveSeries(shared) {\n        var w = this.w;\n\n        if (shared) {\n          // make all tooltips active\n          this.tooltipUtil.toggleAllTooltipSeriesGroups('enable');\n        } else {\n          // disable all tooltip text groups\n          this.tooltipUtil.toggleAllTooltipSeriesGroups('disable'); // enable the first tooltip text group\n\n          var firstTooltipSeriesGroup = w.globals.dom.baseEl.querySelector('.apexcharts-tooltip-series-group');\n\n          if (firstTooltipSeriesGroup) {\n            firstTooltipSeriesGroup.classList.add('apexcharts-active');\n            firstTooltipSeriesGroup.style.display = w.config.tooltip.items.display;\n          }\n        }\n      }\n    }, {\n      key: \"getValuesToPrint\",\n      value: function getValuesToPrint(_ref5) {\n        var i = _ref5.i,\n            j = _ref5.j;\n        var w = this.w;\n        var filteredSeriesX = this.ctx.series.filteredSeriesX();\n        var xVal = '';\n        var xAxisTTVal = '';\n        var zVal = null;\n        var val = null;\n        var customFormatterOpts = {\n          series: w.globals.series,\n          seriesIndex: i,\n          dataPointIndex: j,\n          w: w\n        };\n        var zFormatter = w.globals.ttZFormatter;\n\n        if (j === null) {\n          val = w.globals.series[i];\n        } else {\n          if (w.globals.isXNumeric && w.config.chart.type !== 'treemap') {\n            xVal = filteredSeriesX[i][j];\n\n            if (filteredSeriesX[i].length === 0) {\n              // a series (possibly the first one) might be collapsed, so get the next active index\n              var firstActiveSeriesIndex = this.tooltipUtil.getFirstActiveXArray(filteredSeriesX);\n              xVal = filteredSeriesX[firstActiveSeriesIndex][j];\n            }\n          } else {\n            xVal = typeof w.globals.labels[j] !== 'undefined' ? w.globals.labels[j] : '';\n          }\n        }\n\n        var bufferXVal = xVal;\n\n        if (w.globals.isXNumeric && w.config.xaxis.type === 'datetime') {\n          var xFormat = new Formatters(this.ctx);\n          xVal = xFormat.xLabelFormat(w.globals.ttKeyFormatter, bufferXVal, bufferXVal, {\n            i: undefined,\n            dateFormatter: new DateTime(this.ctx).formatDate,\n            w: this.w\n          });\n        } else {\n          if (w.globals.isBarHorizontal) {\n            xVal = w.globals.yLabelFormatters[0](bufferXVal, customFormatterOpts);\n          } else {\n            xVal = w.globals.xLabelFormatter(bufferXVal, customFormatterOpts);\n          }\n        } // override default x-axis formatter with tooltip formatter\n\n\n        if (w.config.tooltip.x.formatter !== undefined) {\n          xVal = w.globals.ttKeyFormatter(bufferXVal, customFormatterOpts);\n        }\n\n        if (w.globals.seriesZ.length > 0 && w.globals.seriesZ[i].length > 0) {\n          zVal = zFormatter(w.globals.seriesZ[i][j], w);\n        }\n\n        if (typeof w.config.xaxis.tooltip.formatter === 'function') {\n          xAxisTTVal = w.globals.xaxisTooltipFormatter(bufferXVal, customFormatterOpts);\n        } else {\n          xAxisTTVal = xVal;\n        }\n\n        return {\n          val: Array.isArray(val) ? val.join(' ') : val,\n          xVal: Array.isArray(xVal) ? xVal.join(' ') : xVal,\n          xAxisTTVal: Array.isArray(xAxisTTVal) ? xAxisTTVal.join(' ') : xAxisTTVal,\n          zVal: zVal\n        };\n      }\n    }, {\n      key: \"handleCustomTooltip\",\n      value: function handleCustomTooltip(_ref6) {\n        var i = _ref6.i,\n            j = _ref6.j,\n            y1 = _ref6.y1,\n            y2 = _ref6.y2,\n            w = _ref6.w;\n        var tooltipEl = this.ttCtx.getElTooltip();\n        var fn = w.config.tooltip.custom;\n\n        if (Array.isArray(fn) && fn[i]) {\n          fn = fn[i];\n        } // override everything with a custom html tooltip and replace it\n\n\n        tooltipEl.innerHTML = fn({\n          ctx: this.ctx,\n          series: w.globals.series,\n          seriesIndex: i,\n          dataPointIndex: j,\n          y1: y1,\n          y2: y2,\n          w: w\n        });\n      }\n    }]);\n\n    return Labels;\n  }();\n\n  /**\n   * ApexCharts Tooltip.Position Class to move the tooltip based on x and y position.\n   *\n   * @module Tooltip.Position\n   **/\n\n  var Position = /*#__PURE__*/function () {\n    function Position(tooltipContext) {\n      _classCallCheck(this, Position);\n\n      this.ttCtx = tooltipContext;\n      this.ctx = tooltipContext.ctx;\n      this.w = tooltipContext.w;\n    }\n    /**\n     * This will move the crosshair (the vertical/horz line that moves along with mouse)\n     * Along with this, this function also calls the xaxisMove function\n     * @memberof Position\n     * @param {int} - cx = point's x position, wherever point's x is, you need to move crosshair\n     */\n\n\n    _createClass(Position, [{\n      key: \"moveXCrosshairs\",\n      value: function moveXCrosshairs(cx) {\n        var j = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var ttCtx = this.ttCtx;\n        var w = this.w;\n        var xcrosshairs = ttCtx.getElXCrosshairs();\n        var x = cx - ttCtx.xcrosshairsWidth / 2;\n        var tickAmount = w.globals.labels.slice().length;\n\n        if (j !== null) {\n          x = w.globals.gridWidth / tickAmount * j;\n        }\n\n        if (xcrosshairs !== null && !w.globals.isBarHorizontal) {\n          xcrosshairs.setAttribute('x', x);\n          xcrosshairs.setAttribute('x1', x);\n          xcrosshairs.setAttribute('x2', x);\n          xcrosshairs.setAttribute('y2', w.globals.gridHeight);\n          xcrosshairs.classList.add('apexcharts-active');\n        }\n\n        if (x < 0) {\n          x = 0;\n        }\n\n        if (x > w.globals.gridWidth) {\n          x = w.globals.gridWidth;\n        }\n\n        if (ttCtx.isXAxisTooltipEnabled) {\n          var tx = x;\n\n          if (w.config.xaxis.crosshairs.width === 'tickWidth' || w.config.xaxis.crosshairs.width === 'barWidth') {\n            tx = x + ttCtx.xcrosshairsWidth / 2;\n          }\n\n          this.moveXAxisTooltip(tx);\n        }\n      }\n      /**\n       * This will move the crosshair (the vertical/horz line that moves along with mouse)\n       * Along with this, this function also calls the xaxisMove function\n       * @memberof Position\n       * @param {int} - cx = point's x position, wherever point's x is, you need to move crosshair\n       */\n\n    }, {\n      key: \"moveYCrosshairs\",\n      value: function moveYCrosshairs(cy) {\n        var ttCtx = this.ttCtx;\n\n        if (ttCtx.ycrosshairs !== null) {\n          Graphics.setAttrs(ttCtx.ycrosshairs, {\n            y1: cy,\n            y2: cy\n          });\n        }\n\n        if (ttCtx.ycrosshairsHidden !== null) {\n          Graphics.setAttrs(ttCtx.ycrosshairsHidden, {\n            y1: cy,\n            y2: cy\n          });\n        }\n      }\n      /**\n       ** AxisTooltip is the small rectangle which appears on x axis with x value, when user moves\n       * @memberof Position\n       * @param {int} - cx = point's x position, wherever point's x is, you need to move\n       */\n\n    }, {\n      key: \"moveXAxisTooltip\",\n      value: function moveXAxisTooltip(cx) {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n\n        if (ttCtx.xaxisTooltip !== null && ttCtx.xcrosshairsWidth !== 0) {\n          ttCtx.xaxisTooltip.classList.add('apexcharts-active');\n          var cy = ttCtx.xaxisOffY + w.config.xaxis.tooltip.offsetY + w.globals.translateY + 1 + w.config.xaxis.offsetY;\n          var xaxisTTText = ttCtx.xaxisTooltip.getBoundingClientRect();\n          var xaxisTTTextWidth = xaxisTTText.width;\n          cx = cx - xaxisTTTextWidth / 2;\n\n          if (!isNaN(cx)) {\n            cx = cx + w.globals.translateX;\n            var textRect = 0;\n            var graphics = new Graphics(this.ctx);\n            textRect = graphics.getTextRects(ttCtx.xaxisTooltipText.innerHTML);\n            ttCtx.xaxisTooltipText.style.minWidth = textRect.width + 'px';\n            ttCtx.xaxisTooltip.style.left = cx + 'px';\n            ttCtx.xaxisTooltip.style.top = cy + 'px';\n          }\n        }\n      }\n    }, {\n      key: \"moveYAxisTooltip\",\n      value: function moveYAxisTooltip(index) {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n\n        if (ttCtx.yaxisTTEls === null) {\n          ttCtx.yaxisTTEls = w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxistooltip');\n        }\n\n        var ycrosshairsHiddenRectY1 = parseInt(ttCtx.ycrosshairsHidden.getAttribute('y1'), 10);\n        var cy = w.globals.translateY + ycrosshairsHiddenRectY1;\n        var yAxisTTRect = ttCtx.yaxisTTEls[index].getBoundingClientRect();\n        var yAxisTTHeight = yAxisTTRect.height;\n        var cx = w.globals.translateYAxisX[index] - 2;\n\n        if (w.config.yaxis[index].opposite) {\n          cx = cx - 26;\n        }\n\n        cy = cy - yAxisTTHeight / 2;\n\n        if (w.globals.ignoreYAxisIndexes.indexOf(index) === -1) {\n          ttCtx.yaxisTTEls[index].classList.add('apexcharts-active');\n          ttCtx.yaxisTTEls[index].style.top = cy + 'px';\n          ttCtx.yaxisTTEls[index].style.left = cx + w.config.yaxis[index].tooltip.offsetX + 'px';\n        } else {\n          ttCtx.yaxisTTEls[index].classList.remove('apexcharts-active');\n        }\n      }\n      /**\n       ** moves the whole tooltip by changing x, y attrs\n       * @memberof Position\n       * @param {int} - cx = point's x position, wherever point's x is, you need to move tooltip\n       * @param {int} - cy = point's y position, wherever point's y is, you need to move tooltip\n       * @param {int} - r = point's radius\n       */\n\n    }, {\n      key: \"moveTooltip\",\n      value: function moveTooltip(cx, cy) {\n        var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var tooltipEl = ttCtx.getElTooltip();\n        var tooltipRect = ttCtx.tooltipRect;\n        var pointR = r !== null ? parseFloat(r) : 1;\n        var x = parseFloat(cx) + pointR + 5;\n        var y = parseFloat(cy) + pointR / 2; // - tooltipRect.ttHeight / 2\n\n        if (x > w.globals.gridWidth / 2) {\n          x = x - tooltipRect.ttWidth - pointR - 15;\n        }\n\n        if (x > w.globals.gridWidth - tooltipRect.ttWidth - 10) {\n          x = w.globals.gridWidth - tooltipRect.ttWidth;\n        }\n\n        if (x < -20) {\n          x = -20;\n        }\n\n        if (w.config.tooltip.followCursor) {\n          var elGrid = ttCtx.getElGrid();\n          var seriesBound = elGrid.getBoundingClientRect();\n          y = ttCtx.e.clientY + w.globals.translateY - seriesBound.top - tooltipRect.ttHeight / 2;\n        } else {\n          if (w.globals.isBarHorizontal) {\n            // non follow shared tooltip in a horizontal bar chart\n            y = y - tooltipRect.ttHeight;\n          } else {\n            if (tooltipRect.ttHeight / 2 + y > w.globals.gridHeight) {\n              y = w.globals.gridHeight - tooltipRect.ttHeight + w.globals.translateY;\n            }\n\n            if (y < 0) {\n              y = 0;\n            }\n          }\n        }\n\n        if (!isNaN(x)) {\n          x = x + w.globals.translateX;\n          tooltipEl.style.left = x + 'px';\n          tooltipEl.style.top = y + 'px';\n        }\n      }\n    }, {\n      key: \"moveMarkers\",\n      value: function moveMarkers(i, j) {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n\n        if (w.globals.markers.size[i] > 0) {\n          var allPoints = w.globals.dom.baseEl.querySelectorAll(\" .apexcharts-series[data\\\\:realIndex='\".concat(i, \"'] .apexcharts-marker\"));\n\n          for (var p = 0; p < allPoints.length; p++) {\n            if (parseInt(allPoints[p].getAttribute('rel'), 10) === j) {\n              ttCtx.marker.resetPointsSize();\n              ttCtx.marker.enlargeCurrentPoint(j, allPoints[p]);\n            }\n          }\n        } else {\n          ttCtx.marker.resetPointsSize();\n          this.moveDynamicPointOnHover(j, i);\n        }\n      } // This function is used when you need to show markers/points only on hover -\n      // DIFFERENT X VALUES in multiple series\n\n    }, {\n      key: \"moveDynamicPointOnHover\",\n      value: function moveDynamicPointOnHover(j, capturedSeries) {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var cx = 0;\n        var cy = 0;\n        var pointsArr = w.globals.pointsArray;\n        var hoverSize = ttCtx.tooltipUtil.getHoverMarkerSize(capturedSeries);\n        var serType = w.config.series[capturedSeries].type;\n\n        if (serType && (serType === 'column' || serType === 'candlestick' || serType === 'boxPlot')) {\n          // fix error mentioned in #811\n          return;\n        }\n\n        cx = pointsArr[capturedSeries][j][0];\n        cy = pointsArr[capturedSeries][j][1] ? pointsArr[capturedSeries][j][1] : 0;\n        var point = w.globals.dom.baseEl.querySelector(\".apexcharts-series[data\\\\:realIndex='\".concat(capturedSeries, \"'] .apexcharts-series-markers circle\"));\n\n        if (point && cy < w.globals.gridHeight && cy > 0) {\n          point.setAttribute('r', hoverSize);\n          point.setAttribute('cx', cx);\n          point.setAttribute('cy', cy);\n        } // point.style.opacity = w.config.markers.hover.opacity\n\n\n        this.moveXCrosshairs(cx);\n\n        if (!ttCtx.fixedTooltip) {\n          this.moveTooltip(cx, cy, hoverSize);\n        }\n      } // This function is used when you need to show markers/points only on hover -\n      // SAME X VALUES in multiple series\n\n    }, {\n      key: \"moveDynamicPointsOnHover\",\n      value: function moveDynamicPointsOnHover(j) {\n        var ttCtx = this.ttCtx;\n        var w = ttCtx.w;\n        var cx = 0;\n        var cy = 0;\n        var activeSeries = 0;\n        var pointsArr = w.globals.pointsArray;\n        var series = new Series(this.ctx);\n        activeSeries = series.getActiveConfigSeriesIndex(true);\n        var hoverSize = ttCtx.tooltipUtil.getHoverMarkerSize(activeSeries);\n\n        if (pointsArr[activeSeries]) {\n          cx = pointsArr[activeSeries][j][0];\n          cy = pointsArr[activeSeries][j][1];\n        }\n\n        var points = ttCtx.tooltipUtil.getAllMarkers();\n\n        if (points !== null) {\n          for (var p = 0; p < w.globals.series.length; p++) {\n            var pointArr = pointsArr[p];\n\n            if (w.globals.comboCharts) {\n              // in a combo chart, if column charts are present, markers will not match with the number of series, hence this patch to push a null value in points array\n              if (typeof pointArr === 'undefined') {\n                // nodelist to array\n                points.splice(p, 0, null);\n              }\n            }\n\n            if (pointArr && pointArr.length) {\n              var pcy = pointsArr[p][j][1];\n              points[p].setAttribute('cx', cx);\n\n              if (pcy !== null && !isNaN(pcy) && pcy < w.globals.gridHeight && pcy > 0) {\n                points[p] && points[p].setAttribute('r', hoverSize);\n                points[p] && points[p].setAttribute('cy', pcy);\n              } else {\n                points[p] && points[p].setAttribute('r', 0);\n              }\n            }\n          }\n        }\n\n        this.moveXCrosshairs(cx);\n\n        if (!ttCtx.fixedTooltip) {\n          var tcy = cy || w.globals.gridHeight;\n          this.moveTooltip(cx, tcy, hoverSize);\n        }\n      }\n    }, {\n      key: \"moveStickyTooltipOverBars\",\n      value: function moveStickyTooltipOverBars(j) {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var barLen = w.globals.columnSeries ? w.globals.columnSeries.length : w.globals.series.length;\n        var i = barLen >= 2 && barLen % 2 === 0 ? Math.floor(barLen / 2) : Math.floor(barLen / 2) + 1;\n\n        if (w.globals.isBarHorizontal) {\n          var series = new Series(this.ctx);\n          i = series.getActiveConfigSeriesIndex(false, 'desc') + 1;\n        }\n\n        var jBar = w.globals.dom.baseEl.querySelector(\".apexcharts-bar-series .apexcharts-series[rel='\".concat(i, \"'] path[j='\").concat(j, \"'], .apexcharts-candlestick-series .apexcharts-series[rel='\").concat(i, \"'] path[j='\").concat(j, \"'], .apexcharts-boxPlot-series .apexcharts-series[rel='\").concat(i, \"'] path[j='\").concat(j, \"'], .apexcharts-rangebar-series .apexcharts-series[rel='\").concat(i, \"'] path[j='\").concat(j, \"']\"));\n        var bcx = jBar ? parseFloat(jBar.getAttribute('cx')) : 0;\n        var bcy = jBar ? parseFloat(jBar.getAttribute('cy')) : 0;\n        var bw = jBar ? parseFloat(jBar.getAttribute('barWidth')) : 0;\n        var bh = jBar ? parseFloat(jBar.getAttribute('barHeight')) : 0;\n        var elGrid = ttCtx.getElGrid();\n        var seriesBound = elGrid.getBoundingClientRect();\n        var isBoxOrCandle = jBar.classList.contains('apexcharts-candlestick-area') || jBar.classList.contains('apexcharts-boxPlot-area');\n\n        if (w.globals.isXNumeric) {\n          if (jBar && !isBoxOrCandle) {\n            bcx = bcx - (barLen % 2 !== 0 ? bw / 2 : 0);\n          }\n\n          if (jBar && // fixes apexcharts.js#2354\n          isBoxOrCandle && w.globals.comboCharts) {\n            bcx = bcx - bw / 2;\n          }\n        } else {\n          if (!w.globals.isBarHorizontal) {\n            bcx = ttCtx.xAxisTicksPositions[j - 1] + ttCtx.dataPointsDividedWidth / 2;\n\n            if (isNaN(bcx)) {\n              bcx = ttCtx.xAxisTicksPositions[j] - ttCtx.dataPointsDividedWidth / 2;\n            }\n          }\n        }\n\n        if (!w.globals.isBarHorizontal) {\n          bcy = ttCtx.e.clientY - seriesBound.top - ttCtx.tooltipRect.ttHeight / 2;\n        } else {\n          bcy = bcy + bh / 3;\n        }\n\n        if (!w.globals.isBarHorizontal) {\n          this.moveXCrosshairs(bcx);\n        }\n\n        if (!ttCtx.fixedTooltip) {\n          var tcy = bcy || w.globals.gridHeight;\n          this.moveTooltip(bcx, tcy);\n        }\n      }\n    }]);\n\n    return Position;\n  }();\n\n  /**\n   * ApexCharts Tooltip.Marker Class to draw texts on the tooltip.\n   * This file deals with the markers that appear near tooltip in line/area charts.\n   * These markers helps the user to associate the data-points and the values\n   * that are shown in the tooltip\n   *\n   * @module Tooltip.Marker\n   **/\n\n  var Marker = /*#__PURE__*/function () {\n    function Marker(tooltipContext) {\n      _classCallCheck(this, Marker);\n\n      this.w = tooltipContext.w;\n      this.ttCtx = tooltipContext;\n      this.ctx = tooltipContext.ctx;\n      this.tooltipPosition = new Position(tooltipContext);\n    }\n\n    _createClass(Marker, [{\n      key: \"drawDynamicPoints\",\n      value: function drawDynamicPoints() {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var marker = new Markers(this.ctx);\n        var elsSeries = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series');\n        elsSeries = _toConsumableArray(elsSeries);\n\n        if (w.config.chart.stacked) {\n          elsSeries.sort(function (a, b) {\n            return parseFloat(a.getAttribute('data:realIndex')) - parseFloat(b.getAttribute('data:realIndex'));\n          });\n        }\n\n        for (var i = 0; i < elsSeries.length; i++) {\n          var pointsMain = elsSeries[i].querySelector(\".apexcharts-series-markers-wrap\");\n\n          if (pointsMain !== null) {\n            // it can be null as we have tooltips in donut/bar charts\n            var point = void 0;\n            var PointClasses = \"apexcharts-marker w\".concat((Math.random() + 1).toString(36).substring(4));\n\n            if ((w.config.chart.type === 'line' || w.config.chart.type === 'area') && !w.globals.comboCharts && !w.config.tooltip.intersect) {\n              PointClasses += ' no-pointer-events';\n            }\n\n            var elPointOptions = marker.getMarkerConfig({\n              cssClass: PointClasses,\n              seriesIndex: Number(pointsMain.getAttribute('data:realIndex')) // fixes apexcharts/apexcharts.js #1427\n\n            });\n            point = graphics.drawMarker(0, 0, elPointOptions);\n            point.node.setAttribute('default-marker-size', 0);\n            var elPointsG = document.createElementNS(w.globals.SVGNS, 'g');\n            elPointsG.classList.add('apexcharts-series-markers');\n            elPointsG.appendChild(point.node);\n            pointsMain.appendChild(elPointsG);\n          }\n        }\n      }\n    }, {\n      key: \"enlargeCurrentPoint\",\n      value: function enlargeCurrentPoint(rel, point) {\n        var x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n        var y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n        var w = this.w;\n\n        if (w.config.chart.type !== 'bubble') {\n          this.newPointSize(rel, point);\n        }\n\n        var cx = point.getAttribute('cx');\n        var cy = point.getAttribute('cy');\n\n        if (x !== null && y !== null) {\n          cx = x;\n          cy = y;\n        }\n\n        this.tooltipPosition.moveXCrosshairs(cx);\n\n        if (!this.fixedTooltip) {\n          if (w.config.chart.type === 'radar') {\n            var elGrid = this.ttCtx.getElGrid();\n            var seriesBound = elGrid.getBoundingClientRect();\n            cx = this.ttCtx.e.clientX - seriesBound.left;\n          }\n\n          this.tooltipPosition.moveTooltip(cx, cy, w.config.markers.hover.size);\n        }\n      }\n    }, {\n      key: \"enlargePoints\",\n      value: function enlargePoints(j) {\n        var w = this.w;\n        var me = this;\n        var ttCtx = this.ttCtx;\n        var col = j;\n        var points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker');\n        var newSize = w.config.markers.hover.size;\n\n        for (var p = 0; p < points.length; p++) {\n          var rel = points[p].getAttribute('rel');\n          var index = points[p].getAttribute('index');\n\n          if (newSize === undefined) {\n            newSize = w.globals.markers.size[index] + w.config.markers.hover.sizeOffset;\n          }\n\n          if (col === parseInt(rel, 10)) {\n            me.newPointSize(col, points[p]);\n            var cx = points[p].getAttribute('cx');\n            var cy = points[p].getAttribute('cy');\n            me.tooltipPosition.moveXCrosshairs(cx);\n\n            if (!ttCtx.fixedTooltip) {\n              me.tooltipPosition.moveTooltip(cx, cy, newSize);\n            }\n          } else {\n            me.oldPointSize(points[p]);\n          }\n        }\n      }\n    }, {\n      key: \"newPointSize\",\n      value: function newPointSize(rel, point) {\n        var w = this.w;\n        var newSize = w.config.markers.hover.size;\n        var elPoint = rel === 0 ? point.parentNode.firstChild : point.parentNode.lastChild;\n\n        if (elPoint.getAttribute('default-marker-size') !== '0') {\n          var index = parseInt(elPoint.getAttribute('index'), 10);\n\n          if (newSize === undefined) {\n            newSize = w.globals.markers.size[index] + w.config.markers.hover.sizeOffset;\n          }\n\n          if (newSize < 0) newSize = 0;\n          elPoint.setAttribute('r', newSize);\n        }\n      }\n    }, {\n      key: \"oldPointSize\",\n      value: function oldPointSize(point) {\n        var size = parseFloat(point.getAttribute('default-marker-size'));\n        point.setAttribute('r', size);\n      }\n    }, {\n      key: \"resetPointsSize\",\n      value: function resetPointsSize() {\n        var w = this.w;\n        var points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker');\n\n        for (var p = 0; p < points.length; p++) {\n          var size = parseFloat(points[p].getAttribute('default-marker-size'));\n\n          if (Utils$1.isNumber(size) && size >= 0) {\n            points[p].setAttribute('r', size);\n          } else {\n            points[p].setAttribute('r', 0);\n          }\n        }\n      }\n    }]);\n\n    return Marker;\n  }();\n\n  /**\n   * ApexCharts Tooltip.Intersect Class.\n   * This file deals with functions related to intersecting tooltips\n   * (tooltips that appear when user hovers directly over a data-point whether)\n   *\n   * @module Tooltip.Intersect\n   **/\n\n  var Intersect = /*#__PURE__*/function () {\n    function Intersect(tooltipContext) {\n      _classCallCheck(this, Intersect);\n\n      this.w = tooltipContext.w;\n      this.ttCtx = tooltipContext;\n    } // a helper function to get an element's attribute value\n\n\n    _createClass(Intersect, [{\n      key: \"getAttr\",\n      value: function getAttr(e, attr) {\n        return parseFloat(e.target.getAttribute(attr));\n      } // handle tooltip for heatmaps and treemaps\n\n    }, {\n      key: \"handleHeatTreeTooltip\",\n      value: function handleHeatTreeTooltip(_ref) {\n        var e = _ref.e,\n            opt = _ref.opt,\n            x = _ref.x,\n            y = _ref.y,\n            type = _ref.type;\n        var ttCtx = this.ttCtx;\n        var w = this.w;\n\n        if (e.target.classList.contains(\"apexcharts-\".concat(type, \"-rect\"))) {\n          var i = this.getAttr(e, 'i');\n          var j = this.getAttr(e, 'j');\n          var cx = this.getAttr(e, 'cx');\n          var cy = this.getAttr(e, 'cy');\n          var width = this.getAttr(e, 'width');\n          var height = this.getAttr(e, 'height');\n          ttCtx.tooltipLabels.drawSeriesTexts({\n            ttItems: opt.ttItems,\n            i: i,\n            j: j,\n            shared: false,\n            e: e\n          });\n          w.globals.capturedSeriesIndex = i;\n          w.globals.capturedDataPointIndex = j;\n          x = cx + ttCtx.tooltipRect.ttWidth / 2 + width;\n          y = cy + ttCtx.tooltipRect.ttHeight / 2 - height / 2;\n          ttCtx.tooltipPosition.moveXCrosshairs(cx + width / 2);\n\n          if (x > w.globals.gridWidth / 2) {\n            x = cx - ttCtx.tooltipRect.ttWidth / 2 + width;\n          }\n\n          if (ttCtx.w.config.tooltip.followCursor) {\n            var seriesBound = w.globals.dom.elWrap.getBoundingClientRect();\n            x = w.globals.clientX - seriesBound.left - ttCtx.tooltipRect.ttWidth / 2;\n            y = w.globals.clientY - seriesBound.top - ttCtx.tooltipRect.ttHeight - 5;\n          }\n        }\n\n        return {\n          x: x,\n          y: y\n        };\n      }\n      /**\n       * handle tooltips for line/area/scatter charts where tooltip.intersect is true\n       * when user hovers over the marker directly, this function is executed\n       */\n\n    }, {\n      key: \"handleMarkerTooltip\",\n      value: function handleMarkerTooltip(_ref2) {\n        var e = _ref2.e,\n            opt = _ref2.opt,\n            x = _ref2.x,\n            y = _ref2.y;\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var i;\n        var j;\n\n        if (e.target.classList.contains('apexcharts-marker')) {\n          var cx = parseInt(opt.paths.getAttribute('cx'), 10);\n          var cy = parseInt(opt.paths.getAttribute('cy'), 10);\n          var val = parseFloat(opt.paths.getAttribute('val'));\n          j = parseInt(opt.paths.getAttribute('rel'), 10);\n          i = parseInt(opt.paths.parentNode.parentNode.parentNode.getAttribute('rel'), 10) - 1;\n\n          if (ttCtx.intersect) {\n            var el = Utils$1.findAncestor(opt.paths, 'apexcharts-series');\n\n            if (el) {\n              i = parseInt(el.getAttribute('data:realIndex'), 10);\n            }\n          }\n\n          ttCtx.tooltipLabels.drawSeriesTexts({\n            ttItems: opt.ttItems,\n            i: i,\n            j: j,\n            shared: ttCtx.showOnIntersect ? false : w.config.tooltip.shared,\n            e: e\n          });\n\n          if (e.type === 'mouseup') {\n            ttCtx.markerClick(e, i, j);\n          }\n\n          w.globals.capturedSeriesIndex = i;\n          w.globals.capturedDataPointIndex = j;\n          x = cx;\n          y = cy + w.globals.translateY - ttCtx.tooltipRect.ttHeight * 1.4;\n\n          if (ttCtx.w.config.tooltip.followCursor) {\n            var elGrid = ttCtx.getElGrid();\n            var seriesBound = elGrid.getBoundingClientRect();\n            y = ttCtx.e.clientY + w.globals.translateY - seriesBound.top;\n          }\n\n          if (val < 0) {\n            y = cy;\n          }\n\n          ttCtx.marker.enlargeCurrentPoint(j, opt.paths, x, y);\n        }\n\n        return {\n          x: x,\n          y: y\n        };\n      }\n      /**\n       * handle tooltips for bar/column charts\n       */\n\n    }, {\n      key: \"handleBarTooltip\",\n      value: function handleBarTooltip(_ref3) {\n        var e = _ref3.e,\n            opt = _ref3.opt;\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var tooltipEl = ttCtx.getElTooltip();\n        var bx = 0;\n        var x = 0;\n        var y = 0;\n        var i = 0;\n        var strokeWidth;\n        var barXY = this.getBarTooltipXY({\n          e: e,\n          opt: opt\n        });\n        i = barXY.i;\n        var barHeight = barXY.barHeight;\n        var j = barXY.j;\n        w.globals.capturedSeriesIndex = i;\n        w.globals.capturedDataPointIndex = j;\n\n        if (w.globals.isBarHorizontal && ttCtx.tooltipUtil.hasBars() || !w.config.tooltip.shared) {\n          x = barXY.x;\n          y = barXY.y;\n          strokeWidth = Array.isArray(w.config.stroke.width) ? w.config.stroke.width[i] : w.config.stroke.width;\n          bx = x;\n        } else {\n          if (!w.globals.comboCharts && !w.config.tooltip.shared) {\n            // todo: re-check this condition as it's always 0\n            bx = bx / 2;\n          }\n        } // y is NaN, make it touch the bottom of grid area\n\n\n        if (isNaN(y)) {\n          y = w.globals.svgHeight - ttCtx.tooltipRect.ttHeight;\n        } else if (y < 0) {\n          y = 0;\n        }\n\n        var seriesIndex = parseInt(opt.paths.parentNode.getAttribute('data:realIndex'), 10);\n        var isReversed = w.globals.isMultipleYAxis ? w.config.yaxis[seriesIndex] && w.config.yaxis[seriesIndex].reversed : w.config.yaxis[0].reversed;\n\n        if (x + ttCtx.tooltipRect.ttWidth > w.globals.gridWidth && !isReversed) {\n          x = x - ttCtx.tooltipRect.ttWidth;\n        } else if (x < 0) {\n          x = 0;\n        }\n\n        if (ttCtx.w.config.tooltip.followCursor) {\n          var elGrid = ttCtx.getElGrid();\n          var seriesBound = elGrid.getBoundingClientRect();\n          y = ttCtx.e.clientY - seriesBound.top;\n        } // if tooltip is still null, querySelector\n\n\n        if (ttCtx.tooltip === null) {\n          ttCtx.tooltip = w.globals.dom.baseEl.querySelector('.apexcharts-tooltip');\n        }\n\n        if (!w.config.tooltip.shared) {\n          if (w.globals.comboBarCount > 0) {\n            ttCtx.tooltipPosition.moveXCrosshairs(bx + strokeWidth / 2);\n          } else {\n            ttCtx.tooltipPosition.moveXCrosshairs(bx);\n          }\n        } // move tooltip here\n\n\n        if (!ttCtx.fixedTooltip && (!w.config.tooltip.shared || w.globals.isBarHorizontal && ttCtx.tooltipUtil.hasBars())) {\n          if (isReversed) {\n            x = x - ttCtx.tooltipRect.ttWidth;\n\n            if (x < 0) {\n              x = 0;\n            }\n          }\n\n          tooltipEl.style.left = x + w.globals.translateX + 'px';\n\n          if (isReversed && !(w.globals.isBarHorizontal && ttCtx.tooltipUtil.hasBars())) {\n            y = y + barHeight - (w.globals.series[i][j] < 0 ? barHeight : 0) * 2;\n          }\n\n          if (ttCtx.tooltipRect.ttHeight + y > w.globals.gridHeight) {\n            y = w.globals.gridHeight - ttCtx.tooltipRect.ttHeight + w.globals.translateY;\n            tooltipEl.style.top = y + 'px';\n          } else {\n            tooltipEl.style.top = y + w.globals.translateY - ttCtx.tooltipRect.ttHeight / 2 + 'px';\n          }\n        }\n      }\n    }, {\n      key: \"getBarTooltipXY\",\n      value: function getBarTooltipXY(_ref4) {\n        var e = _ref4.e,\n            opt = _ref4.opt;\n        var w = this.w;\n        var j = null;\n        var ttCtx = this.ttCtx;\n        var i = 0;\n        var x = 0;\n        var y = 0;\n        var barWidth = 0;\n        var barHeight = 0;\n        var cl = e.target.classList;\n\n        if (cl.contains('apexcharts-bar-area') || cl.contains('apexcharts-candlestick-area') || cl.contains('apexcharts-boxPlot-area') || cl.contains('apexcharts-rangebar-area')) {\n          var bar = e.target;\n          var barRect = bar.getBoundingClientRect();\n          var seriesBound = opt.elGrid.getBoundingClientRect();\n          var bh = barRect.height;\n          barHeight = barRect.height;\n          var bw = barRect.width;\n          var cx = parseInt(bar.getAttribute('cx'), 10);\n          var cy = parseInt(bar.getAttribute('cy'), 10);\n          barWidth = parseFloat(bar.getAttribute('barWidth'));\n          var clientX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX;\n          j = parseInt(bar.getAttribute('j'), 10);\n          i = parseInt(bar.parentNode.getAttribute('rel'), 10) - 1;\n          var y1 = bar.getAttribute('data-range-y1');\n          var y2 = bar.getAttribute('data-range-y2');\n\n          if (w.globals.comboCharts) {\n            i = parseInt(bar.parentNode.getAttribute('data:realIndex'), 10);\n          } // if (w.config.tooltip.shared) {\n          // this check not needed  at the moment\n          //   const yDivisor = w.globals.gridHeight / (w.globals.series.length)\n          //   const hoverY = ttCtx.clientY - ttCtx.seriesBound.top\n          //   j = Math.ceil(hoverY / yDivisor)\n          // }\n\n\n          ttCtx.tooltipLabels.drawSeriesTexts({\n            ttItems: opt.ttItems,\n            i: i,\n            j: j,\n            y1: y1 ? parseInt(y1, 10) : null,\n            y2: y2 ? parseInt(y2, 10) : null,\n            shared: ttCtx.showOnIntersect ? false : w.config.tooltip.shared,\n            e: e\n          });\n\n          if (w.config.tooltip.followCursor) {\n            if (w.globals.isBarHorizontal) {\n              x = clientX - seriesBound.left + 15;\n              y = cy - ttCtx.dataPointsDividedHeight + bh / 2 - ttCtx.tooltipRect.ttHeight / 2;\n            } else {\n              if (w.globals.isXNumeric) {\n                x = cx - bw / 2;\n              } else {\n                x = cx - ttCtx.dataPointsDividedWidth + bw / 2;\n              }\n\n              y = e.clientY - seriesBound.top - ttCtx.tooltipRect.ttHeight / 2 - 15;\n            }\n          } else {\n            if (w.globals.isBarHorizontal) {\n              x = cx;\n\n              if (x < ttCtx.xyRatios.baseLineInvertedY) {\n                x = cx - ttCtx.tooltipRect.ttWidth;\n              }\n\n              y = cy - ttCtx.dataPointsDividedHeight + bh / 2 - ttCtx.tooltipRect.ttHeight / 2;\n            } else {\n              // if columns\n              if (w.globals.isXNumeric) {\n                x = cx - bw / 2;\n              } else {\n                x = cx - ttCtx.dataPointsDividedWidth + bw / 2;\n              }\n\n              y = cy; // - ttCtx.tooltipRect.ttHeight / 2 + 10\n            }\n          }\n        }\n\n        return {\n          x: x,\n          y: y,\n          barHeight: barHeight,\n          barWidth: barWidth,\n          i: i,\n          j: j\n        };\n      }\n    }]);\n\n    return Intersect;\n  }();\n\n  /**\n   * ApexCharts Tooltip.AxesTooltip Class.\n   * This file deals with the x-axis and y-axis tooltips.\n   *\n   * @module Tooltip.AxesTooltip\n   **/\n  var AxesTooltip = /*#__PURE__*/function () {\n    function AxesTooltip(tooltipContext) {\n      _classCallCheck(this, AxesTooltip);\n\n      this.w = tooltipContext.w;\n      this.ttCtx = tooltipContext;\n    }\n    /**\n     * This method adds the secondary tooltip which appears below x axis\n     * @memberof Tooltip\n     **/\n\n\n    _createClass(AxesTooltip, [{\n      key: \"drawXaxisTooltip\",\n      value: function drawXaxisTooltip() {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n        var isBottom = w.config.xaxis.position === 'bottom';\n        ttCtx.xaxisOffY = isBottom ? w.globals.gridHeight + 1 : -w.globals.xAxisHeight - w.config.xaxis.axisTicks.height + 3;\n        var tooltipCssClass = isBottom ? 'apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom' : 'apexcharts-xaxistooltip apexcharts-xaxistooltip-top';\n        var renderTo = w.globals.dom.elWrap;\n\n        if (ttCtx.isXAxisTooltipEnabled) {\n          var xaxisTooltip = w.globals.dom.baseEl.querySelector('.apexcharts-xaxistooltip');\n\n          if (xaxisTooltip === null) {\n            ttCtx.xaxisTooltip = document.createElement('div');\n            ttCtx.xaxisTooltip.setAttribute('class', tooltipCssClass + ' apexcharts-theme-' + w.config.tooltip.theme);\n            renderTo.appendChild(ttCtx.xaxisTooltip);\n            ttCtx.xaxisTooltipText = document.createElement('div');\n            ttCtx.xaxisTooltipText.classList.add('apexcharts-xaxistooltip-text');\n            ttCtx.xaxisTooltipText.style.fontFamily = w.config.xaxis.tooltip.style.fontFamily || w.config.chart.fontFamily;\n            ttCtx.xaxisTooltipText.style.fontSize = w.config.xaxis.tooltip.style.fontSize;\n            ttCtx.xaxisTooltip.appendChild(ttCtx.xaxisTooltipText);\n          }\n        }\n      }\n      /**\n       * This method adds the secondary tooltip which appears below x axis\n       * @memberof Tooltip\n       **/\n\n    }, {\n      key: \"drawYaxisTooltip\",\n      value: function drawYaxisTooltip() {\n        var w = this.w;\n        var ttCtx = this.ttCtx;\n\n        var _loop = function _loop(i) {\n          var isRight = w.config.yaxis[i].opposite || w.config.yaxis[i].crosshairs.opposite;\n          ttCtx.yaxisOffX = isRight ? w.globals.gridWidth + 1 : 1;\n          var tooltipCssClass = isRight ? \"apexcharts-yaxistooltip apexcharts-yaxistooltip-\".concat(i, \" apexcharts-yaxistooltip-right\") : \"apexcharts-yaxistooltip apexcharts-yaxistooltip-\".concat(i, \" apexcharts-yaxistooltip-left\");\n          w.globals.yAxisSameScaleIndices.map(function (samescales, ssi) {\n            samescales.map(function (s, si) {\n              if (si === i) {\n                tooltipCssClass += w.config.yaxis[si].show ? \" \" : \" apexcharts-yaxistooltip-hidden\";\n              }\n            });\n          });\n          var renderTo = w.globals.dom.elWrap;\n          var yaxisTooltip = w.globals.dom.baseEl.querySelector(\".apexcharts-yaxistooltip apexcharts-yaxistooltip-\".concat(i));\n\n          if (yaxisTooltip === null) {\n            ttCtx.yaxisTooltip = document.createElement('div');\n            ttCtx.yaxisTooltip.setAttribute('class', tooltipCssClass + ' apexcharts-theme-' + w.config.tooltip.theme);\n            renderTo.appendChild(ttCtx.yaxisTooltip);\n            if (i === 0) ttCtx.yaxisTooltipText = [];\n            ttCtx.yaxisTooltipText[i] = document.createElement('div');\n            ttCtx.yaxisTooltipText[i].classList.add('apexcharts-yaxistooltip-text');\n            ttCtx.yaxisTooltip.appendChild(ttCtx.yaxisTooltipText[i]);\n          }\n        };\n\n        for (var i = 0; i < w.config.yaxis.length; i++) {\n          _loop(i);\n        }\n      }\n      /**\n       * @memberof Tooltip\n       **/\n\n    }, {\n      key: \"setXCrosshairWidth\",\n      value: function setXCrosshairWidth() {\n        var w = this.w;\n        var ttCtx = this.ttCtx; // set xcrosshairs width\n\n        var xcrosshairs = ttCtx.getElXCrosshairs();\n        ttCtx.xcrosshairsWidth = parseInt(w.config.xaxis.crosshairs.width, 10);\n\n        if (!w.globals.comboCharts) {\n          if (w.config.xaxis.crosshairs.width === 'tickWidth') {\n            var count = w.globals.labels.length;\n            ttCtx.xcrosshairsWidth = w.globals.gridWidth / count;\n          } else if (w.config.xaxis.crosshairs.width === 'barWidth') {\n            var bar = w.globals.dom.baseEl.querySelector('.apexcharts-bar-area');\n\n            if (bar !== null) {\n              var barWidth = parseFloat(bar.getAttribute('barWidth'));\n              ttCtx.xcrosshairsWidth = barWidth;\n            } else {\n              ttCtx.xcrosshairsWidth = 1;\n            }\n          }\n        } else {\n          var _bar = w.globals.dom.baseEl.querySelector('.apexcharts-bar-area');\n\n          if (_bar !== null && w.config.xaxis.crosshairs.width === 'barWidth') {\n            var _barWidth = parseFloat(_bar.getAttribute('barWidth'));\n\n            ttCtx.xcrosshairsWidth = _barWidth;\n          } else {\n            if (w.config.xaxis.crosshairs.width === 'tickWidth') {\n              var _count = w.globals.labels.length;\n              ttCtx.xcrosshairsWidth = w.globals.gridWidth / _count;\n            }\n          }\n        }\n\n        if (w.globals.isBarHorizontal) {\n          ttCtx.xcrosshairsWidth = 0;\n        }\n\n        if (xcrosshairs !== null && ttCtx.xcrosshairsWidth > 0) {\n          xcrosshairs.setAttribute('width', ttCtx.xcrosshairsWidth);\n        }\n      }\n    }, {\n      key: \"handleYCrosshair\",\n      value: function handleYCrosshair() {\n        var w = this.w;\n        var ttCtx = this.ttCtx; // set ycrosshairs height\n\n        ttCtx.ycrosshairs = w.globals.dom.baseEl.querySelector('.apexcharts-ycrosshairs');\n        ttCtx.ycrosshairsHidden = w.globals.dom.baseEl.querySelector('.apexcharts-ycrosshairs-hidden');\n      }\n    }, {\n      key: \"drawYaxisTooltipText\",\n      value: function drawYaxisTooltipText(index, clientY, xyRatios) {\n        var ttCtx = this.ttCtx;\n        var w = this.w;\n        var lbFormatter = w.globals.yLabelFormatters[index];\n\n        if (ttCtx.yaxisTooltips[index]) {\n          var elGrid = ttCtx.getElGrid();\n          var seriesBound = elGrid.getBoundingClientRect();\n          var hoverY = (clientY - seriesBound.top) * xyRatios.yRatio[index];\n          var height = w.globals.maxYArr[index] - w.globals.minYArr[index];\n          var val = w.globals.minYArr[index] + (height - hoverY);\n          ttCtx.tooltipPosition.moveYCrosshairs(clientY - seriesBound.top);\n          ttCtx.yaxisTooltipText[index].innerHTML = lbFormatter(val);\n          ttCtx.tooltipPosition.moveYAxisTooltip(index);\n        }\n      }\n    }]);\n\n    return AxesTooltip;\n  }();\n\n  /**\n   * ApexCharts Core Tooltip Class to handle the tooltip generation.\n   *\n   * @module Tooltip\n   **/\n\n  var Tooltip = /*#__PURE__*/function () {\n    function Tooltip(ctx) {\n      _classCallCheck(this, Tooltip);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.tConfig = w.config.tooltip;\n      this.tooltipUtil = new Utils(this);\n      this.tooltipLabels = new Labels(this);\n      this.tooltipPosition = new Position(this);\n      this.marker = new Marker(this);\n      this.intersect = new Intersect(this);\n      this.axesTooltip = new AxesTooltip(this);\n      this.showOnIntersect = this.tConfig.intersect;\n      this.showTooltipTitle = this.tConfig.x.show;\n      this.fixedTooltip = this.tConfig.fixed.enabled;\n      this.xaxisTooltip = null;\n      this.yaxisTTEls = null;\n      this.isBarShared = !w.globals.isBarHorizontal && this.tConfig.shared;\n      this.lastHoverTime = Date.now();\n    }\n\n    _createClass(Tooltip, [{\n      key: \"getElTooltip\",\n      value: function getElTooltip(ctx) {\n        if (!ctx) ctx = this;\n        return ctx.w.globals.dom.baseEl.querySelector('.apexcharts-tooltip');\n      }\n    }, {\n      key: \"getElXCrosshairs\",\n      value: function getElXCrosshairs() {\n        return this.w.globals.dom.baseEl.querySelector('.apexcharts-xcrosshairs');\n      }\n    }, {\n      key: \"getElGrid\",\n      value: function getElGrid() {\n        return this.w.globals.dom.baseEl.querySelector('.apexcharts-grid');\n      }\n    }, {\n      key: \"drawTooltip\",\n      value: function drawTooltip(xyRatios) {\n        var w = this.w;\n        this.xyRatios = xyRatios;\n        this.isXAxisTooltipEnabled = w.config.xaxis.tooltip.enabled && w.globals.axisCharts;\n        this.yaxisTooltips = w.config.yaxis.map(function (y, i) {\n          return y.show && y.tooltip.enabled && w.globals.axisCharts ? true : false;\n        });\n        this.allTooltipSeriesGroups = [];\n\n        if (!w.globals.axisCharts) {\n          this.showTooltipTitle = false;\n        }\n\n        var tooltipEl = document.createElement('div');\n        tooltipEl.classList.add('apexcharts-tooltip');\n        tooltipEl.classList.add(\"apexcharts-theme-\".concat(this.tConfig.theme));\n        w.globals.dom.elWrap.appendChild(tooltipEl);\n\n        if (w.globals.axisCharts) {\n          this.axesTooltip.drawXaxisTooltip();\n          this.axesTooltip.drawYaxisTooltip();\n          this.axesTooltip.setXCrosshairWidth();\n          this.axesTooltip.handleYCrosshair();\n          var xAxis = new XAxis(this.ctx);\n          this.xAxisTicksPositions = xAxis.getXAxisTicksPositions();\n        } // we forcefully set intersect true for these conditions\n\n\n        if ((w.globals.comboCharts || this.tConfig.intersect || w.config.chart.type === 'rangeBar') && !this.tConfig.shared) {\n          this.showOnIntersect = true;\n        }\n\n        if (w.config.markers.size === 0 || w.globals.markers.largestSize === 0) {\n          // when user don't want to show points all the time, but only on when hovering on series\n          this.marker.drawDynamicPoints(this);\n        } // no visible series, exit\n\n\n        if (w.globals.collapsedSeries.length === w.globals.series.length) return;\n        this.dataPointsDividedHeight = w.globals.gridHeight / w.globals.dataPoints;\n        this.dataPointsDividedWidth = w.globals.gridWidth / w.globals.dataPoints;\n\n        if (this.showTooltipTitle) {\n          this.tooltipTitle = document.createElement('div');\n          this.tooltipTitle.classList.add('apexcharts-tooltip-title');\n          this.tooltipTitle.style.fontFamily = this.tConfig.style.fontFamily || w.config.chart.fontFamily;\n          this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize;\n          tooltipEl.appendChild(this.tooltipTitle);\n        }\n\n        var ttItemsCnt = w.globals.series.length; // whether shared or not, default is shared\n\n        if ((w.globals.xyCharts || w.globals.comboCharts) && this.tConfig.shared) {\n          if (!this.showOnIntersect) {\n            ttItemsCnt = w.globals.series.length;\n          } else {\n            ttItemsCnt = 1;\n          }\n        }\n\n        this.legendLabels = w.globals.dom.baseEl.querySelectorAll('.apexcharts-legend-text');\n        this.ttItems = this.createTTElements(ttItemsCnt);\n        this.addSVGEvents();\n      }\n    }, {\n      key: \"createTTElements\",\n      value: function createTTElements(ttItemsCnt) {\n        var _this = this;\n\n        var w = this.w;\n        var ttItems = [];\n        var tooltipEl = this.getElTooltip();\n\n        var _loop = function _loop(i) {\n          var gTxt = document.createElement('div');\n          gTxt.classList.add('apexcharts-tooltip-series-group');\n          gTxt.style.order = w.config.tooltip.inverseOrder ? ttItemsCnt - i : i + 1;\n\n          if (_this.tConfig.shared && _this.tConfig.enabledOnSeries && Array.isArray(_this.tConfig.enabledOnSeries)) {\n            if (_this.tConfig.enabledOnSeries.indexOf(i) < 0) {\n              gTxt.classList.add('apexcharts-tooltip-series-group-hidden');\n            }\n          }\n\n          var point = document.createElement('span');\n          point.classList.add('apexcharts-tooltip-marker');\n          point.style.backgroundColor = w.globals.colors[i];\n          gTxt.appendChild(point);\n          var gYZ = document.createElement('div');\n          gYZ.classList.add('apexcharts-tooltip-text');\n          gYZ.style.fontFamily = _this.tConfig.style.fontFamily || w.config.chart.fontFamily;\n          gYZ.style.fontSize = _this.tConfig.style.fontSize;\n          ['y', 'goals', 'z'].forEach(function (g) {\n            var gValText = document.createElement('div');\n            gValText.classList.add(\"apexcharts-tooltip-\".concat(g, \"-group\"));\n            var txtLabel = document.createElement('span');\n            txtLabel.classList.add(\"apexcharts-tooltip-text-\".concat(g, \"-label\"));\n            gValText.appendChild(txtLabel);\n            var txtValue = document.createElement('span');\n            txtValue.classList.add(\"apexcharts-tooltip-text-\".concat(g, \"-value\"));\n            gValText.appendChild(txtValue);\n            gYZ.appendChild(gValText);\n          });\n          gTxt.appendChild(gYZ);\n          tooltipEl.appendChild(gTxt);\n          ttItems.push(gTxt);\n        };\n\n        for (var i = 0; i < ttItemsCnt; i++) {\n          _loop(i);\n        }\n\n        return ttItems;\n      }\n    }, {\n      key: \"addSVGEvents\",\n      value: function addSVGEvents() {\n        var w = this.w;\n        var type = w.config.chart.type;\n        var tooltipEl = this.getElTooltip();\n        var commonBar = !!(type === 'bar' || type === 'candlestick' || type === 'boxPlot' || type === 'rangeBar');\n        var chartWithmarkers = type === 'area' || type === 'line' || type === 'scatter' || type === 'bubble' || type === 'radar';\n        var hoverArea = w.globals.dom.Paper.node;\n        var elGrid = this.getElGrid();\n\n        if (elGrid) {\n          this.seriesBound = elGrid.getBoundingClientRect();\n        }\n\n        var tooltipY = [];\n        var tooltipX = [];\n        var seriesHoverParams = {\n          hoverArea: hoverArea,\n          elGrid: elGrid,\n          tooltipEl: tooltipEl,\n          tooltipY: tooltipY,\n          tooltipX: tooltipX,\n          ttItems: this.ttItems\n        };\n        var points;\n\n        if (w.globals.axisCharts) {\n          if (chartWithmarkers) {\n            points = w.globals.dom.baseEl.querySelectorAll(\".apexcharts-series[data\\\\:longestSeries='true'] .apexcharts-marker\");\n          } else if (commonBar) {\n            points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area');\n          } else if (type === 'heatmap' || type === 'treemap') {\n            points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap');\n          }\n\n          if (points && points.length) {\n            for (var p = 0; p < points.length; p++) {\n              tooltipY.push(points[p].getAttribute('cy'));\n              tooltipX.push(points[p].getAttribute('cx'));\n            }\n          }\n        }\n\n        var validSharedChartTypes = w.globals.xyCharts && !this.showOnIntersect || w.globals.comboCharts && !this.showOnIntersect || commonBar && this.tooltipUtil.hasBars() && this.tConfig.shared;\n\n        if (validSharedChartTypes) {\n          this.addPathsEventListeners([hoverArea], seriesHoverParams);\n        } else if (commonBar && !w.globals.comboCharts || chartWithmarkers && this.showOnIntersect) {\n          this.addDatapointEventsListeners(seriesHoverParams);\n        } else if (!w.globals.axisCharts || type === 'heatmap' || type === 'treemap') {\n          var seriesAll = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series');\n          this.addPathsEventListeners(seriesAll, seriesHoverParams);\n        }\n\n        if (this.showOnIntersect) {\n          var lineAreaPoints = w.globals.dom.baseEl.querySelectorAll('.apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker');\n\n          if (lineAreaPoints.length > 0) {\n            // if we find any lineSeries, addEventListeners for them\n            this.addPathsEventListeners(lineAreaPoints, seriesHoverParams);\n          } // combo charts may have bars, so add event listeners here too\n\n\n          if (this.tooltipUtil.hasBars() && !this.tConfig.shared) {\n            this.addDatapointEventsListeners(seriesHoverParams);\n          }\n        }\n      }\n    }, {\n      key: \"drawFixedTooltipRect\",\n      value: function drawFixedTooltipRect() {\n        var w = this.w;\n        var tooltipEl = this.getElTooltip();\n        var tooltipRect = tooltipEl.getBoundingClientRect();\n        var ttWidth = tooltipRect.width + 10;\n        var ttHeight = tooltipRect.height + 10;\n        var x = this.tConfig.fixed.offsetX;\n        var y = this.tConfig.fixed.offsetY;\n        var fixed = this.tConfig.fixed.position.toLowerCase();\n\n        if (fixed.indexOf('right') > -1) {\n          x = x + w.globals.svgWidth - ttWidth + 10;\n        }\n\n        if (fixed.indexOf('bottom') > -1) {\n          y = y + w.globals.svgHeight - ttHeight - 10;\n        }\n\n        tooltipEl.style.left = x + 'px';\n        tooltipEl.style.top = y + 'px';\n        return {\n          x: x,\n          y: y,\n          ttWidth: ttWidth,\n          ttHeight: ttHeight\n        };\n      }\n    }, {\n      key: \"addDatapointEventsListeners\",\n      value: function addDatapointEventsListeners(seriesHoverParams) {\n        var w = this.w;\n        var points = w.globals.dom.baseEl.querySelectorAll('.apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area');\n        this.addPathsEventListeners(points, seriesHoverParams);\n      }\n    }, {\n      key: \"addPathsEventListeners\",\n      value: function addPathsEventListeners(paths, opts) {\n        var self = this;\n\n        var _loop2 = function _loop2(p) {\n          var extendedOpts = {\n            paths: paths[p],\n            tooltipEl: opts.tooltipEl,\n            tooltipY: opts.tooltipY,\n            tooltipX: opts.tooltipX,\n            elGrid: opts.elGrid,\n            hoverArea: opts.hoverArea,\n            ttItems: opts.ttItems\n          };\n          var events = ['mousemove', 'mouseup', 'touchmove', 'mouseout', 'touchend'];\n          events.map(function (ev) {\n            return paths[p].addEventListener(ev, self.onSeriesHover.bind(self, extendedOpts), {\n              capture: false,\n              passive: true\n            });\n          });\n        };\n\n        for (var p = 0; p < paths.length; p++) {\n          _loop2(p);\n        }\n      }\n      /*\n       ** Check to see if the tooltips should be updated based on a mouse / touch event\n       */\n\n    }, {\n      key: \"onSeriesHover\",\n      value: function onSeriesHover(opt, e) {\n        var _this2 = this;\n\n        // If a user is moving their mouse quickly, don't bother updating the tooltip every single frame\n        var targetDelay = 100;\n        var timeSinceLastUpdate = Date.now() - this.lastHoverTime;\n\n        if (timeSinceLastUpdate >= targetDelay) {\n          // The tooltip was last updated over 100ms ago - redraw it even if the user is still moving their\n          // mouse so they get some feedback that their moves are being registered\n          this.seriesHover(opt, e);\n        } else {\n          // The tooltip was last updated less than 100ms ago\n          // Cancel any other delayed draw, so we don't show stale data\n          clearTimeout(this.seriesHoverTimeout); // Schedule the next draw so that it happens about 100ms after the last update\n\n          this.seriesHoverTimeout = setTimeout(function () {\n            _this2.seriesHover(opt, e);\n          }, targetDelay - timeSinceLastUpdate);\n        }\n      }\n      /*\n       ** The actual series hover function\n       */\n\n    }, {\n      key: \"seriesHover\",\n      value: function seriesHover(opt, e) {\n        var _this3 = this;\n\n        this.lastHoverTime = Date.now();\n        var chartGroups = [];\n        var w = this.w; // if user has more than one charts in group, we need to sync\n\n        if (w.config.chart.group) {\n          chartGroups = this.ctx.getGroupedCharts();\n        }\n\n        if (w.globals.axisCharts && (w.globals.minX === -Infinity && w.globals.maxX === Infinity || w.globals.dataPoints === 0)) {\n          return;\n        }\n\n        if (chartGroups.length) {\n          chartGroups.forEach(function (ch) {\n            var tooltipEl = _this3.getElTooltip(ch);\n\n            var newOpts = {\n              paths: opt.paths,\n              tooltipEl: tooltipEl,\n              tooltipY: opt.tooltipY,\n              tooltipX: opt.tooltipX,\n              elGrid: opt.elGrid,\n              hoverArea: opt.hoverArea,\n              ttItems: ch.w.globals.tooltip.ttItems\n            }; // all the charts should have the same minX and maxX (same xaxis) for multiple tooltips to work correctly\n\n            if (ch.w.globals.minX === _this3.w.globals.minX && ch.w.globals.maxX === _this3.w.globals.maxX) {\n              ch.w.globals.tooltip.seriesHoverByContext({\n                chartCtx: ch,\n                ttCtx: ch.w.globals.tooltip,\n                opt: newOpts,\n                e: e\n              });\n            }\n          });\n        } else {\n          this.seriesHoverByContext({\n            chartCtx: this.ctx,\n            ttCtx: this.w.globals.tooltip,\n            opt: opt,\n            e: e\n          });\n        }\n      }\n    }, {\n      key: \"seriesHoverByContext\",\n      value: function seriesHoverByContext(_ref) {\n        var chartCtx = _ref.chartCtx,\n            ttCtx = _ref.ttCtx,\n            opt = _ref.opt,\n            e = _ref.e;\n        var w = chartCtx.w;\n        var tooltipEl = this.getElTooltip(); // tooltipRect is calculated on every mousemove, because the text is dynamic\n\n        ttCtx.tooltipRect = {\n          x: 0,\n          y: 0,\n          ttWidth: tooltipEl.getBoundingClientRect().width,\n          ttHeight: tooltipEl.getBoundingClientRect().height\n        };\n        ttCtx.e = e; // highlight the current hovered bars\n\n        if (ttCtx.tooltipUtil.hasBars() && !w.globals.comboCharts && !ttCtx.isBarShared) {\n          if (this.tConfig.onDatasetHover.highlightDataSeries) {\n            var series = new Series(chartCtx);\n            series.toggleSeriesOnHover(e, e.target.parentNode);\n          }\n        }\n\n        if (ttCtx.fixedTooltip) {\n          ttCtx.drawFixedTooltipRect();\n        }\n\n        if (w.globals.axisCharts) {\n          ttCtx.axisChartsTooltips({\n            e: e,\n            opt: opt,\n            tooltipRect: ttCtx.tooltipRect\n          });\n        } else {\n          // non-plot charts i.e pie/donut/circle\n          ttCtx.nonAxisChartsTooltips({\n            e: e,\n            opt: opt,\n            tooltipRect: ttCtx.tooltipRect\n          });\n        }\n      } // tooltip handling for line/area/bar/columns/scatter\n\n    }, {\n      key: \"axisChartsTooltips\",\n      value: function axisChartsTooltips(_ref2) {\n        var e = _ref2.e,\n            opt = _ref2.opt;\n        var w = this.w;\n        var x, y;\n        var seriesBound = opt.elGrid.getBoundingClientRect();\n        var clientX = e.type === 'touchmove' ? e.touches[0].clientX : e.clientX;\n        var clientY = e.type === 'touchmove' ? e.touches[0].clientY : e.clientY;\n        this.clientY = clientY;\n        this.clientX = clientX;\n        w.globals.capturedSeriesIndex = -1;\n        w.globals.capturedDataPointIndex = -1;\n\n        if (clientY < seriesBound.top || clientY > seriesBound.top + seriesBound.height) {\n          this.handleMouseOut(opt);\n          return;\n        }\n\n        if (Array.isArray(this.tConfig.enabledOnSeries) && !w.config.tooltip.shared) {\n          var index = parseInt(opt.paths.getAttribute('index'), 10);\n\n          if (this.tConfig.enabledOnSeries.indexOf(index) < 0) {\n            this.handleMouseOut(opt);\n            return;\n          }\n        }\n\n        var tooltipEl = this.getElTooltip();\n        var xcrosshairs = this.getElXCrosshairs();\n        var isStickyTooltip = w.globals.xyCharts || w.config.chart.type === 'bar' && !w.globals.isBarHorizontal && this.tooltipUtil.hasBars() && this.tConfig.shared || w.globals.comboCharts && this.tooltipUtil.hasBars();\n\n        if (e.type === 'mousemove' || e.type === 'touchmove' || e.type === 'mouseup') {\n          if (xcrosshairs !== null) {\n            xcrosshairs.classList.add('apexcharts-active');\n          }\n\n          var hasYAxisTooltip = this.yaxisTooltips.filter(function (b) {\n            return b === true;\n          });\n\n          if (this.ycrosshairs !== null && hasYAxisTooltip.length) {\n            this.ycrosshairs.classList.add('apexcharts-active');\n          }\n\n          if (isStickyTooltip && !this.showOnIntersect) {\n            this.handleStickyTooltip(e, clientX, clientY, opt);\n          } else {\n            if (w.config.chart.type === 'heatmap' || w.config.chart.type === 'treemap') {\n              var markerXY = this.intersect.handleHeatTreeTooltip({\n                e: e,\n                opt: opt,\n                x: x,\n                y: y,\n                type: w.config.chart.type\n              });\n              x = markerXY.x;\n              y = markerXY.y;\n              tooltipEl.style.left = x + 'px';\n              tooltipEl.style.top = y + 'px';\n            } else {\n              if (this.tooltipUtil.hasBars()) {\n                this.intersect.handleBarTooltip({\n                  e: e,\n                  opt: opt\n                });\n              }\n\n              if (this.tooltipUtil.hasMarkers()) {\n                // intersect - line/area/scatter/bubble\n                this.intersect.handleMarkerTooltip({\n                  e: e,\n                  opt: opt,\n                  x: x,\n                  y: y\n                });\n              }\n            }\n          }\n\n          if (this.yaxisTooltips.length) {\n            for (var yt = 0; yt < w.config.yaxis.length; yt++) {\n              this.axesTooltip.drawYaxisTooltipText(yt, clientY, this.xyRatios);\n            }\n          }\n\n          opt.tooltipEl.classList.add('apexcharts-active');\n        } else if (e.type === 'mouseout' || e.type === 'touchend') {\n          this.handleMouseOut(opt);\n        }\n      } // tooltip handling for pie/donuts\n\n    }, {\n      key: \"nonAxisChartsTooltips\",\n      value: function nonAxisChartsTooltips(_ref3) {\n        var e = _ref3.e,\n            opt = _ref3.opt,\n            tooltipRect = _ref3.tooltipRect;\n        var w = this.w;\n        var rel = opt.paths.getAttribute('rel');\n        var tooltipEl = this.getElTooltip();\n        var seriesBound = w.globals.dom.elWrap.getBoundingClientRect();\n\n        if (e.type === 'mousemove' || e.type === 'touchmove') {\n          tooltipEl.classList.add('apexcharts-active');\n          this.tooltipLabels.drawSeriesTexts({\n            ttItems: opt.ttItems,\n            i: parseInt(rel, 10) - 1,\n            shared: false\n          });\n          var x = w.globals.clientX - seriesBound.left - tooltipRect.ttWidth / 2;\n          var y = w.globals.clientY - seriesBound.top - tooltipRect.ttHeight - 10;\n          tooltipEl.style.left = x + 'px';\n          tooltipEl.style.top = y + 'px';\n\n          if (w.config.legend.tooltipHoverFormatter) {\n            var legendFormatter = w.config.legend.tooltipHoverFormatter;\n            var i = rel - 1;\n            var legendName = this.legendLabels[i].getAttribute('data:default-text');\n            var text = legendFormatter(legendName, {\n              seriesIndex: i,\n              dataPointIndex: i,\n              w: w\n            });\n            this.legendLabels[i].innerHTML = text;\n          }\n        } else if (e.type === 'mouseout' || e.type === 'touchend') {\n          tooltipEl.classList.remove('apexcharts-active');\n\n          if (w.config.legend.tooltipHoverFormatter) {\n            this.legendLabels.forEach(function (l) {\n              var defaultText = l.getAttribute('data:default-text');\n              l.innerHTML = decodeURIComponent(defaultText);\n            });\n          }\n        }\n      }\n    }, {\n      key: \"handleStickyTooltip\",\n      value: function handleStickyTooltip(e, clientX, clientY, opt) {\n        var w = this.w;\n        var capj = this.tooltipUtil.getNearestValues({\n          context: this,\n          hoverArea: opt.hoverArea,\n          elGrid: opt.elGrid,\n          clientX: clientX,\n          clientY: clientY\n        });\n        var j = capj.j;\n        var capturedSeries = capj.capturedSeries;\n        var bounds = opt.elGrid.getBoundingClientRect();\n\n        if (capj.hoverX < 0 || capj.hoverX > bounds.width) {\n          this.handleMouseOut(opt);\n          return;\n        }\n\n        if (capturedSeries !== null) {\n          this.handleStickyCapturedSeries(e, capturedSeries, opt, j);\n        } else {\n          // couldn't capture any series. check if shared X is same,\n          // if yes, draw a grouped tooltip\n          if (this.tooltipUtil.isXoverlap(j) || w.globals.isBarHorizontal) {\n            this.create(e, this, 0, j, opt.ttItems);\n          }\n        }\n      }\n    }, {\n      key: \"handleStickyCapturedSeries\",\n      value: function handleStickyCapturedSeries(e, capturedSeries, opt, j) {\n        var w = this.w;\n\n        if (!this.tConfig.shared) {\n          var ignoreNull = w.globals.series[capturedSeries][j] === null;\n\n          if (ignoreNull) {\n            this.handleMouseOut(opt);\n            return;\n          }\n        }\n\n        if (typeof w.globals.series[capturedSeries][j] !== 'undefined') {\n          if (this.tConfig.shared && this.tooltipUtil.isXoverlap(j) && this.tooltipUtil.isInitialSeriesSameLen()) {\n            this.create(e, this, capturedSeries, j, opt.ttItems);\n          } else {\n            this.create(e, this, capturedSeries, j, opt.ttItems, false);\n          }\n        } else {\n          if (this.tooltipUtil.isXoverlap(j)) {\n            this.create(e, this, 0, j, opt.ttItems);\n          }\n        }\n      }\n    }, {\n      key: \"deactivateHoverFilter\",\n      value: function deactivateHoverFilter() {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var allPaths = w.globals.dom.Paper.select(\".apexcharts-bar-area\");\n\n        for (var b = 0; b < allPaths.length; b++) {\n          graphics.pathMouseLeave(allPaths[b]);\n        }\n      }\n    }, {\n      key: \"handleMouseOut\",\n      value: function handleMouseOut(opt) {\n        var w = this.w;\n        var xcrosshairs = this.getElXCrosshairs();\n        opt.tooltipEl.classList.remove('apexcharts-active');\n        this.deactivateHoverFilter();\n\n        if (w.config.chart.type !== 'bubble') {\n          this.marker.resetPointsSize();\n        }\n\n        if (xcrosshairs !== null) {\n          xcrosshairs.classList.remove('apexcharts-active');\n        }\n\n        if (this.ycrosshairs !== null) {\n          this.ycrosshairs.classList.remove('apexcharts-active');\n        }\n\n        if (this.isXAxisTooltipEnabled) {\n          this.xaxisTooltip.classList.remove('apexcharts-active');\n        }\n\n        if (this.yaxisTooltips.length) {\n          if (this.yaxisTTEls === null) {\n            this.yaxisTTEls = w.globals.dom.baseEl.querySelectorAll('.apexcharts-yaxistooltip');\n          }\n\n          for (var i = 0; i < this.yaxisTTEls.length; i++) {\n            this.yaxisTTEls[i].classList.remove('apexcharts-active');\n          }\n        }\n\n        if (w.config.legend.tooltipHoverFormatter) {\n          this.legendLabels.forEach(function (l) {\n            var defaultText = l.getAttribute('data:default-text');\n            l.innerHTML = decodeURIComponent(defaultText);\n          });\n        }\n      }\n    }, {\n      key: \"markerClick\",\n      value: function markerClick(e, seriesIndex, dataPointIndex) {\n        var w = this.w;\n\n        if (typeof w.config.chart.events.markerClick === 'function') {\n          w.config.chart.events.markerClick(e, this.ctx, {\n            seriesIndex: seriesIndex,\n            dataPointIndex: dataPointIndex,\n            w: w\n          });\n        }\n\n        this.ctx.events.fireEvent('markerClick', [e, this.ctx, {\n          seriesIndex: seriesIndex,\n          dataPointIndex: dataPointIndex,\n          w: w\n        }]);\n      }\n    }, {\n      key: \"create\",\n      value: function create(e, context, capturedSeries, j, ttItems) {\n        var shared = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : null;\n        var w = this.w;\n        var ttCtx = context;\n\n        if (e.type === 'mouseup') {\n          this.markerClick(e, capturedSeries, j);\n        }\n\n        if (shared === null) shared = this.tConfig.shared;\n        var hasMarkers = this.tooltipUtil.hasMarkers();\n        var bars = this.tooltipUtil.getElBars();\n\n        if (w.config.legend.tooltipHoverFormatter) {\n          var legendFormatter = w.config.legend.tooltipHoverFormatter;\n          var els = Array.from(this.legendLabels); // reset all legend values first\n\n          els.forEach(function (l) {\n            var legendName = l.getAttribute('data:default-text');\n            l.innerHTML = decodeURIComponent(legendName);\n          }); // for irregular time series\n\n          for (var i = 0; i < els.length; i++) {\n            var l = els[i];\n            var lsIndex = parseInt(l.getAttribute('i'), 10);\n            var legendName = decodeURIComponent(l.getAttribute('data:default-text'));\n            var text = legendFormatter(legendName, {\n              seriesIndex: shared ? lsIndex : capturedSeries,\n              dataPointIndex: j,\n              w: w\n            });\n\n            if (!shared) {\n              l.innerHTML = lsIndex === capturedSeries ? text : legendName;\n\n              if (capturedSeries === lsIndex) {\n                break;\n              }\n            } else {\n              l.innerHTML = w.globals.collapsedSeriesIndices.indexOf(lsIndex) < 0 ? text : legendName;\n            }\n          }\n        }\n\n        if (shared) {\n          ttCtx.tooltipLabels.drawSeriesTexts({\n            ttItems: ttItems,\n            i: capturedSeries,\n            j: j,\n            shared: this.showOnIntersect ? false : this.tConfig.shared\n          });\n\n          if (hasMarkers) {\n            if (w.globals.markers.largestSize > 0) {\n              ttCtx.marker.enlargePoints(j);\n            } else {\n              ttCtx.tooltipPosition.moveDynamicPointsOnHover(j);\n            }\n          }\n\n          if (this.tooltipUtil.hasBars()) {\n            this.barSeriesHeight = this.tooltipUtil.getBarsHeight(bars);\n\n            if (this.barSeriesHeight > 0) {\n              // hover state, activate snap filter\n              var graphics = new Graphics(this.ctx);\n              var paths = w.globals.dom.Paper.select(\".apexcharts-bar-area[j='\".concat(j, \"']\")); // de-activate first\n\n              this.deactivateHoverFilter();\n              this.tooltipPosition.moveStickyTooltipOverBars(j);\n\n              for (var b = 0; b < paths.length; b++) {\n                graphics.pathMouseEnter(paths[b]);\n              }\n            }\n          }\n        } else {\n          ttCtx.tooltipLabels.drawSeriesTexts({\n            shared: false,\n            ttItems: ttItems,\n            i: capturedSeries,\n            j: j\n          });\n\n          if (this.tooltipUtil.hasBars()) {\n            ttCtx.tooltipPosition.moveStickyTooltipOverBars(j);\n          }\n\n          if (hasMarkers) {\n            ttCtx.tooltipPosition.moveMarkers(capturedSeries, j);\n          }\n        }\n      }\n    }]);\n\n    return Tooltip;\n  }();\n\n  /**\n   * ApexCharts BarStacked Class responsible for drawing both Stacked Columns and Bars.\n   *\n   * @module BarStacked\n   * The whole calculation for stacked bar/column is different from normal bar/column,\n   * hence it makes sense to derive a new class for it extending most of the props of Parent Bar\n   **/\n\n  var BarStacked = /*#__PURE__*/function (_Bar) {\n    _inherits(BarStacked, _Bar);\n\n    var _super = _createSuper(BarStacked);\n\n    function BarStacked() {\n      _classCallCheck(this, BarStacked);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(BarStacked, [{\n      key: \"draw\",\n      value: function draw(series, seriesIndex) {\n        var _this = this;\n\n        var w = this.w;\n        this.graphics = new Graphics(this.ctx);\n        this.bar = new Bar(this.ctx, this.xyRatios);\n        var coreUtils = new CoreUtils(this.ctx, w);\n        series = coreUtils.getLogSeries(series);\n        this.yRatio = coreUtils.getLogYRatios(this.yRatio);\n        this.barHelpers.initVariables(series);\n\n        if (w.config.chart.stackType === '100%') {\n          series = w.globals.seriesPercent.slice();\n        }\n\n        this.series = series;\n        this.totalItems = 0;\n        this.prevY = []; // y position on chart\n\n        this.prevX = []; // x position on chart\n\n        this.prevYF = []; // y position including shapes on chart\n\n        this.prevXF = []; // x position including shapes on chart\n\n        this.prevYVal = []; // y values (series[i][j]) in columns\n\n        this.prevXVal = []; // x values (series[i][j]) in bars\n\n        this.xArrj = []; // xj indicates x position on graph in bars\n\n        this.xArrjF = []; // xjF indicates bar's x position + roundedShape's positions in bars\n\n        this.xArrjVal = []; // x val means the actual series's y values in horizontal/bars\n\n        this.yArrj = []; // yj indicates y position on graph in columns\n\n        this.yArrjF = []; // yjF indicates bar's y position + roundedShape's positions in columns\n\n        this.yArrjVal = []; // y val means the actual series's y values in columns\n\n        for (var sl = 0; sl < series.length; sl++) {\n          if (series[sl].length > 0) {\n            this.totalItems += series[sl].length;\n          }\n        }\n\n        var ret = this.graphics.group({\n          class: 'apexcharts-bar-series apexcharts-plot-series'\n        });\n        var x = 0;\n        var y = 0;\n\n        var _loop = function _loop(i, bc) {\n          var xDivision = void 0; // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n\n          var yDivision = void 0; // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n\n          var zeroH = void 0; // zeroH is the baseline where 0 meets y axis\n\n          var zeroW = void 0; // zeroW is the baseline where 0 meets x axis\n\n          var xArrValues = [];\n          var yArrValues = [];\n          var realIndex = w.globals.comboCharts ? seriesIndex[i] : i;\n\n          if (_this.yRatio.length > 1) {\n            _this.yaxisIndex = realIndex;\n          }\n\n          _this.isReversed = w.config.yaxis[_this.yaxisIndex] && w.config.yaxis[_this.yaxisIndex].reversed; // el to which series will be drawn\n\n          var elSeries = _this.graphics.group({\n            class: \"apexcharts-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[realIndex]),\n            rel: i + 1,\n            'data:realIndex': realIndex\n          });\n\n          _this.ctx.series.addCollapsedClassToSeries(elSeries, realIndex); // eldatalabels\n\n\n          var elDataLabelsWrap = _this.graphics.group({\n            class: 'apexcharts-datalabels',\n            'data:realIndex': realIndex\n          });\n\n          var barHeight = 0;\n          var barWidth = 0;\n\n          var initPositions = _this.initialPositions(x, y, xDivision, yDivision, zeroH, zeroW);\n\n          y = initPositions.y;\n          barHeight = initPositions.barHeight;\n          yDivision = initPositions.yDivision;\n          zeroW = initPositions.zeroW;\n          x = initPositions.x;\n          barWidth = initPositions.barWidth;\n          xDivision = initPositions.xDivision;\n          zeroH = initPositions.zeroH;\n          _this.yArrj = [];\n          _this.yArrjF = [];\n          _this.yArrjVal = [];\n          _this.xArrj = [];\n          _this.xArrjF = [];\n          _this.xArrjVal = []; // if (!this.horizontal) {\n          // this.xArrj.push(x + barWidth / 2)\n          // }\n          // fix issue #1215;\n          // where all stack bar disappear after collapsing the first series\n          // sol: if only 1 arr in this.prevY(this.prevY.length === 1) and all are NaN\n\n          if (_this.prevY.length === 1 && _this.prevY[0].every(function (val) {\n            return isNaN(val);\n          })) {\n            // make this.prevY[0] all zeroH\n            _this.prevY[0] = _this.prevY[0].map(function (val) {\n              return zeroH;\n            }); // make this.prevYF[0] all 0\n\n            _this.prevYF[0] = _this.prevYF[0].map(function (val) {\n              return 0;\n            });\n          }\n\n          for (var j = 0; j < w.globals.dataPoints; j++) {\n            var strokeWidth = _this.barHelpers.getStrokeWidth(i, j, realIndex);\n\n            var commonPathOpts = {\n              indexes: {\n                i: i,\n                j: j,\n                realIndex: realIndex,\n                bc: bc\n              },\n              strokeWidth: strokeWidth,\n              x: x,\n              y: y,\n              elSeries: elSeries\n            };\n            var paths = null;\n\n            if (_this.isHorizontal) {\n              paths = _this.drawStackedBarPaths(_objectSpread2(_objectSpread2({}, commonPathOpts), {}, {\n                zeroW: zeroW,\n                barHeight: barHeight,\n                yDivision: yDivision\n              }));\n              barWidth = _this.series[i][j] / _this.invertedYRatio;\n            } else {\n              paths = _this.drawStackedColumnPaths(_objectSpread2(_objectSpread2({}, commonPathOpts), {}, {\n                xDivision: xDivision,\n                barWidth: barWidth,\n                zeroH: zeroH\n              }));\n              barHeight = _this.series[i][j] / _this.yRatio[_this.yaxisIndex];\n            }\n\n            y = paths.y;\n            x = paths.x;\n            xArrValues.push(x);\n            yArrValues.push(y);\n\n            var pathFill = _this.barHelpers.getPathFillColor(series, i, j, realIndex);\n\n            elSeries = _this.renderSeries({\n              realIndex: realIndex,\n              pathFill: pathFill,\n              j: j,\n              i: i,\n              pathFrom: paths.pathFrom,\n              pathTo: paths.pathTo,\n              strokeWidth: strokeWidth,\n              elSeries: elSeries,\n              x: x,\n              y: y,\n              series: series,\n              barHeight: barHeight,\n              barWidth: barWidth,\n              elDataLabelsWrap: elDataLabelsWrap,\n              type: 'bar',\n              visibleSeries: 0\n            });\n          } // push all x val arrays into main xArr\n\n\n          w.globals.seriesXvalues[realIndex] = xArrValues;\n          w.globals.seriesYvalues[realIndex] = yArrValues; // push all current y values array to main PrevY Array\n\n          _this.prevY.push(_this.yArrj);\n\n          _this.prevYF.push(_this.yArrjF);\n\n          _this.prevYVal.push(_this.yArrjVal);\n\n          _this.prevX.push(_this.xArrj);\n\n          _this.prevXF.push(_this.xArrjF);\n\n          _this.prevXVal.push(_this.xArrjVal);\n\n          ret.add(elSeries);\n        };\n\n        for (var i = 0, bc = 0; i < series.length; i++, bc++) {\n          _loop(i, bc);\n        }\n\n        return ret;\n      }\n    }, {\n      key: \"initialPositions\",\n      value: function initialPositions(x, y, xDivision, yDivision, zeroH, zeroW) {\n        var w = this.w;\n        var barHeight, barWidth;\n\n        if (this.isHorizontal) {\n          // height divided into equal parts\n          yDivision = w.globals.gridHeight / w.globals.dataPoints;\n          barHeight = yDivision;\n          barHeight = barHeight * parseInt(w.config.plotOptions.bar.barHeight, 10) / 100;\n          zeroW = this.baseLineInvertedY + w.globals.padHorizontal + (this.isReversed ? w.globals.gridWidth : 0) - (this.isReversed ? this.baseLineInvertedY * 2 : 0); // initial y position is half of barHeight * half of number of Bars\n\n          y = (yDivision - barHeight) / 2;\n        } else {\n          // width divided into equal parts\n          xDivision = w.globals.gridWidth / w.globals.dataPoints;\n          barWidth = xDivision;\n\n          if (w.globals.isXNumeric && w.globals.dataPoints > 1) {\n            // the check (w.globals.dataPoints > 1) fixes apexcharts.js #1617\n            xDivision = w.globals.minXDiff / this.xRatio;\n            barWidth = xDivision * parseInt(this.barOptions.columnWidth, 10) / 100;\n          } else {\n            barWidth = barWidth * parseInt(w.config.plotOptions.bar.columnWidth, 10) / 100;\n          }\n\n          zeroH = this.baseLineY[this.yaxisIndex] + (this.isReversed ? w.globals.gridHeight : 0) - (this.isReversed ? this.baseLineY[this.yaxisIndex] * 2 : 0); // initial x position is one third of barWidth\n\n          x = w.globals.padHorizontal + (xDivision - barWidth) / 2;\n        }\n\n        return {\n          x: x,\n          y: y,\n          yDivision: yDivision,\n          xDivision: xDivision,\n          barHeight: barHeight,\n          barWidth: barWidth,\n          zeroH: zeroH,\n          zeroW: zeroW\n        };\n      }\n    }, {\n      key: \"drawStackedBarPaths\",\n      value: function drawStackedBarPaths(_ref) {\n        var indexes = _ref.indexes,\n            barHeight = _ref.barHeight,\n            strokeWidth = _ref.strokeWidth,\n            zeroW = _ref.zeroW,\n            x = _ref.x,\n            y = _ref.y,\n            yDivision = _ref.yDivision,\n            elSeries = _ref.elSeries;\n        var w = this.w;\n        var barYPosition = y;\n        var barXPosition;\n        var i = indexes.i;\n        var j = indexes.j;\n        var prevBarW = 0;\n\n        for (var k = 0; k < this.prevXF.length; k++) {\n          prevBarW = prevBarW + this.prevXF[k][j];\n        }\n\n        if (i > 0) {\n          var bXP = zeroW;\n\n          if (this.prevXVal[i - 1][j] < 0) {\n            bXP = this.series[i][j] >= 0 ? this.prevX[i - 1][j] + prevBarW - (this.isReversed ? prevBarW : 0) * 2 : this.prevX[i - 1][j];\n          } else if (this.prevXVal[i - 1][j] >= 0) {\n            bXP = this.series[i][j] >= 0 ? this.prevX[i - 1][j] : this.prevX[i - 1][j] - prevBarW + (this.isReversed ? prevBarW : 0) * 2;\n          }\n\n          barXPosition = bXP;\n        } else {\n          // the first series will not have prevX values\n          barXPosition = zeroW;\n        }\n\n        if (this.series[i][j] === null) {\n          x = barXPosition;\n        } else {\n          x = barXPosition + this.series[i][j] / this.invertedYRatio - (this.isReversed ? this.series[i][j] / this.invertedYRatio : 0) * 2;\n        }\n\n        var paths = this.barHelpers.getBarpaths({\n          barYPosition: barYPosition,\n          barHeight: barHeight,\n          x1: barXPosition,\n          x2: x,\n          strokeWidth: strokeWidth,\n          series: this.series,\n          realIndex: indexes.realIndex,\n          i: i,\n          j: j,\n          w: w\n        });\n        this.barHelpers.barBackground({\n          j: j,\n          i: i,\n          y1: barYPosition,\n          y2: barHeight,\n          elSeries: elSeries\n        });\n        y = y + yDivision;\n        return {\n          pathTo: paths.pathTo,\n          pathFrom: paths.pathFrom,\n          x: x,\n          y: y\n        };\n      }\n    }, {\n      key: \"drawStackedColumnPaths\",\n      value: function drawStackedColumnPaths(_ref2) {\n        var indexes = _ref2.indexes,\n            x = _ref2.x,\n            y = _ref2.y,\n            xDivision = _ref2.xDivision,\n            barWidth = _ref2.barWidth,\n            zeroH = _ref2.zeroH;\n            _ref2.strokeWidth;\n            var elSeries = _ref2.elSeries;\n        var w = this.w;\n        var i = indexes.i;\n        var j = indexes.j;\n        var bc = indexes.bc;\n\n        if (w.globals.isXNumeric) {\n          var seriesVal = w.globals.seriesX[i][j];\n          if (!seriesVal) seriesVal = 0;\n          x = (seriesVal - w.globals.minX) / this.xRatio - barWidth / 2;\n        }\n\n        var barXPosition = x;\n        var barYPosition;\n        var prevBarH = 0;\n\n        for (var k = 0; k < this.prevYF.length; k++) {\n          // fix issue #1215\n          // in case where this.prevYF[k][j] is NaN, use 0 instead\n          prevBarH = prevBarH + (!isNaN(this.prevYF[k][j]) ? this.prevYF[k][j] : 0);\n        }\n\n        if (i > 0 && !w.globals.isXNumeric || i > 0 && w.globals.isXNumeric && w.globals.seriesX[i - 1][j] === w.globals.seriesX[i][j]) {\n          var bYP;\n          var prevYValue;\n          var p = Math.min(this.yRatio.length + 1, i + 1);\n\n          if (this.prevY[i - 1] !== undefined) {\n            for (var ii = 1; ii < p; ii++) {\n              if (!isNaN(this.prevY[i - ii][j])) {\n                // find the previous available value to give prevYValue\n                prevYValue = this.prevY[i - ii][j]; // if found it, break the loop\n\n                break;\n              }\n            }\n          }\n\n          for (var _ii = 1; _ii < p; _ii++) {\n            // find the previous available value(non-NaN) to give bYP\n            if (this.prevYVal[i - _ii][j] < 0) {\n              bYP = this.series[i][j] >= 0 ? prevYValue - prevBarH + (this.isReversed ? prevBarH : 0) * 2 : prevYValue; // found it? break the loop\n\n              break;\n            } else if (this.prevYVal[i - _ii][j] >= 0) {\n              bYP = this.series[i][j] >= 0 ? prevYValue : prevYValue + prevBarH - (this.isReversed ? prevBarH : 0) * 2; // found it? break the loop\n\n              break;\n            }\n          }\n\n          if (typeof bYP === 'undefined') bYP = w.globals.gridHeight; // if this.prevYF[0] is all 0 resulted from line #486\n          // AND every arr starting from the second only contains NaN\n\n          if (this.prevYF[0].every(function (val) {\n            return val === 0;\n          }) && this.prevYF.slice(1, i).every(function (arr) {\n            return arr.every(function (val) {\n              return isNaN(val);\n            });\n          })) {\n            // Use the same calc way as line #485\n            barYPosition = w.globals.gridHeight - zeroH;\n          } else {\n            // Nothing special\n            barYPosition = bYP;\n          }\n        } else {\n          // the first series will not have prevY values, also if the prev index's series X doesn't matches the current index's series X, then start from zero\n          barYPosition = w.globals.gridHeight - zeroH;\n        }\n\n        y = barYPosition - this.series[i][j] / this.yRatio[this.yaxisIndex] + (this.isReversed ? this.series[i][j] / this.yRatio[this.yaxisIndex] : 0) * 2;\n        var paths = this.barHelpers.getColumnPaths({\n          barXPosition: barXPosition,\n          barWidth: barWidth,\n          y1: barYPosition,\n          y2: y,\n          yRatio: this.yRatio[this.yaxisIndex],\n          strokeWidth: this.strokeWidth,\n          series: this.series,\n          realIndex: indexes.realIndex,\n          i: i,\n          j: j,\n          w: w\n        });\n        this.barHelpers.barBackground({\n          bc: bc,\n          j: j,\n          i: i,\n          x1: barXPosition,\n          x2: barWidth,\n          elSeries: elSeries\n        });\n        x = x + xDivision;\n        return {\n          pathTo: paths.pathTo,\n          pathFrom: paths.pathFrom,\n          x: w.globals.isXNumeric ? x - xDivision : x,\n          y: y\n        };\n      }\n    }]);\n\n    return BarStacked;\n  }(Bar);\n\n  /**\n   * ApexCharts BoxCandleStick Class responsible for drawing both Stacked Columns and Bars.\n   *\n   * @module BoxCandleStick\n   **/\n\n  var BoxCandleStick = /*#__PURE__*/function (_Bar) {\n    _inherits(BoxCandleStick, _Bar);\n\n    var _super = _createSuper(BoxCandleStick);\n\n    function BoxCandleStick() {\n      _classCallCheck(this, BoxCandleStick);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(BoxCandleStick, [{\n      key: \"draw\",\n      value: function draw(series, seriesIndex) {\n        var _this = this;\n\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var fill = new Fill(this.ctx);\n        this.candlestickOptions = this.w.config.plotOptions.candlestick;\n        this.boxOptions = this.w.config.plotOptions.boxPlot;\n        this.isHorizontal = w.config.plotOptions.bar.horizontal;\n        var coreUtils = new CoreUtils(this.ctx, w);\n        series = coreUtils.getLogSeries(series);\n        this.series = series;\n        this.yRatio = coreUtils.getLogYRatios(this.yRatio);\n        this.barHelpers.initVariables(series);\n        var ret = graphics.group({\n          class: \"apexcharts-\".concat(w.config.chart.type, \"-series apexcharts-plot-series\")\n        });\n\n        var _loop = function _loop(i) {\n          _this.isBoxPlot = w.config.chart.type === 'boxPlot' || w.config.series[i].type === 'boxPlot';\n          var x = void 0,\n              y = void 0,\n              xDivision = void 0,\n              // xDivision is the GRIDWIDTH divided by number of datapoints (columns)\n          yDivision = void 0,\n              // yDivision is the GRIDHEIGHT divided by number of datapoints (bars)\n          zeroH = void 0,\n              // zeroH is the baseline where 0 meets y axis\n          zeroW = void 0; // zeroW is the baseline where 0 meets x axis\n\n          var yArrj = []; // hold y values of current iterating series\n\n          var xArrj = []; // hold x values of current iterating series\n\n          var realIndex = w.globals.comboCharts ? seriesIndex[i] : i; // el to which series will be drawn\n\n          var elSeries = graphics.group({\n            class: \"apexcharts-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[realIndex]),\n            rel: i + 1,\n            'data:realIndex': realIndex\n          });\n\n          _this.ctx.series.addCollapsedClassToSeries(elSeries, realIndex);\n\n          if (series[i].length > 0) {\n            _this.visibleI = _this.visibleI + 1;\n          }\n\n          var barHeight = 0;\n          var barWidth = 0;\n\n          if (_this.yRatio.length > 1) {\n            _this.yaxisIndex = realIndex;\n          }\n\n          var initPositions = _this.barHelpers.initialPositions();\n\n          y = initPositions.y;\n          barHeight = initPositions.barHeight;\n          yDivision = initPositions.yDivision;\n          zeroW = initPositions.zeroW;\n          x = initPositions.x;\n          barWidth = initPositions.barWidth;\n          xDivision = initPositions.xDivision;\n          zeroH = initPositions.zeroH;\n          xArrj.push(x + barWidth / 2); // eldatalabels\n\n          var elDataLabelsWrap = graphics.group({\n            class: 'apexcharts-datalabels',\n            'data:realIndex': realIndex\n          });\n\n          var _loop2 = function _loop2(j) {\n            var strokeWidth = _this.barHelpers.getStrokeWidth(i, j, realIndex);\n\n            var paths = null;\n            var pathsParams = {\n              indexes: {\n                i: i,\n                j: j,\n                realIndex: realIndex\n              },\n              x: x,\n              y: y,\n              strokeWidth: strokeWidth,\n              elSeries: elSeries\n            };\n\n            if (_this.isHorizontal) {\n              paths = _this.drawHorizontalBoxPaths(_objectSpread2(_objectSpread2({}, pathsParams), {}, {\n                yDivision: yDivision,\n                barHeight: barHeight,\n                zeroW: zeroW\n              }));\n            } else {\n              paths = _this.drawVerticalBoxPaths(_objectSpread2(_objectSpread2({}, pathsParams), {}, {\n                xDivision: xDivision,\n                barWidth: barWidth,\n                zeroH: zeroH\n              }));\n            }\n\n            y = paths.y;\n            x = paths.x; // push current X\n\n            if (j > 0) {\n              xArrj.push(x + barWidth / 2);\n            }\n\n            yArrj.push(y);\n            paths.pathTo.forEach(function (pathTo, pi) {\n              var lineFill = !_this.isBoxPlot && _this.candlestickOptions.wick.useFillColor ? paths.color[pi] : w.globals.stroke.colors[i];\n              var pathFill = fill.fillPath({\n                seriesNumber: realIndex,\n                dataPointIndex: j,\n                color: paths.color[pi],\n                value: series[i][j]\n              });\n\n              _this.renderSeries({\n                realIndex: realIndex,\n                pathFill: pathFill,\n                lineFill: lineFill,\n                j: j,\n                i: i,\n                pathFrom: paths.pathFrom,\n                pathTo: pathTo,\n                strokeWidth: strokeWidth,\n                elSeries: elSeries,\n                x: x,\n                y: y,\n                series: series,\n                barHeight: barHeight,\n                barWidth: barWidth,\n                elDataLabelsWrap: elDataLabelsWrap,\n                visibleSeries: _this.visibleI,\n                type: w.config.chart.type\n              });\n            });\n          };\n\n          for (var j = 0; j < w.globals.dataPoints; j++) {\n            _loop2(j);\n          } // push all x val arrays into main xArr\n\n\n          w.globals.seriesXvalues[realIndex] = xArrj;\n          w.globals.seriesYvalues[realIndex] = yArrj;\n          ret.add(elSeries);\n        };\n\n        for (var i = 0; i < series.length; i++) {\n          _loop(i);\n        }\n\n        return ret;\n      }\n    }, {\n      key: \"drawVerticalBoxPaths\",\n      value: function drawVerticalBoxPaths(_ref) {\n        var indexes = _ref.indexes,\n            x = _ref.x;\n            _ref.y;\n            var xDivision = _ref.xDivision,\n            barWidth = _ref.barWidth,\n            zeroH = _ref.zeroH,\n            strokeWidth = _ref.strokeWidth;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var i = indexes.i;\n        var j = indexes.j;\n        var isPositive = true;\n        var colorPos = w.config.plotOptions.candlestick.colors.upward;\n        var colorNeg = w.config.plotOptions.candlestick.colors.downward;\n        var color = '';\n\n        if (this.isBoxPlot) {\n          color = [this.boxOptions.colors.lower, this.boxOptions.colors.upper];\n        }\n\n        var yRatio = this.yRatio[this.yaxisIndex];\n        var realIndex = indexes.realIndex;\n        var ohlc = this.getOHLCValue(realIndex, j);\n        var l1 = zeroH;\n        var l2 = zeroH;\n\n        if (ohlc.o > ohlc.c) {\n          isPositive = false;\n        }\n\n        var y1 = Math.min(ohlc.o, ohlc.c);\n        var y2 = Math.max(ohlc.o, ohlc.c);\n        var m = ohlc.m;\n\n        if (w.globals.isXNumeric) {\n          x = (w.globals.seriesX[realIndex][j] - w.globals.minX) / this.xRatio - barWidth / 2;\n        }\n\n        var barXPosition = x + barWidth * this.visibleI;\n\n        if (typeof this.series[i][j] === 'undefined' || this.series[i][j] === null) {\n          y1 = zeroH;\n          y2 = zeroH;\n        } else {\n          y1 = zeroH - y1 / yRatio;\n          y2 = zeroH - y2 / yRatio;\n          l1 = zeroH - ohlc.h / yRatio;\n          l2 = zeroH - ohlc.l / yRatio;\n          m = zeroH - ohlc.m / yRatio;\n        }\n\n        var pathTo = graphics.move(barXPosition, zeroH);\n        var pathFrom = graphics.move(barXPosition + barWidth / 2, y1);\n\n        if (w.globals.previousPaths.length > 0) {\n          pathFrom = this.getPreviousPath(realIndex, j, true);\n        }\n\n        if (this.isBoxPlot) {\n          pathTo = [graphics.move(barXPosition, y1) + graphics.line(barXPosition + barWidth / 2, y1) + graphics.line(barXPosition + barWidth / 2, l1) + graphics.line(barXPosition + barWidth / 4, l1) + graphics.line(barXPosition + barWidth - barWidth / 4, l1) + graphics.line(barXPosition + barWidth / 2, l1) + graphics.line(barXPosition + barWidth / 2, y1) + graphics.line(barXPosition + barWidth, y1) + graphics.line(barXPosition + barWidth, m) + graphics.line(barXPosition, m) + graphics.line(barXPosition, y1 + strokeWidth / 2), graphics.move(barXPosition, m) + graphics.line(barXPosition + barWidth, m) + graphics.line(barXPosition + barWidth, y2) + graphics.line(barXPosition + barWidth / 2, y2) + graphics.line(barXPosition + barWidth / 2, l2) + graphics.line(barXPosition + barWidth - barWidth / 4, l2) + graphics.line(barXPosition + barWidth / 4, l2) + graphics.line(barXPosition + barWidth / 2, l2) + graphics.line(barXPosition + barWidth / 2, y2) + graphics.line(barXPosition, y2) + graphics.line(barXPosition, m) + 'z'];\n        } else {\n          // candlestick\n          pathTo = [graphics.move(barXPosition, y2) + graphics.line(barXPosition + barWidth / 2, y2) + graphics.line(barXPosition + barWidth / 2, l1) + graphics.line(barXPosition + barWidth / 2, y2) + graphics.line(barXPosition + barWidth, y2) + graphics.line(barXPosition + barWidth, y1) + graphics.line(barXPosition + barWidth / 2, y1) + graphics.line(barXPosition + barWidth / 2, l2) + graphics.line(barXPosition + barWidth / 2, y1) + graphics.line(barXPosition, y1) + graphics.line(barXPosition, y2 - strokeWidth / 2)];\n        }\n\n        pathFrom = pathFrom + graphics.move(barXPosition, y1);\n\n        if (!w.globals.isXNumeric) {\n          x = x + xDivision;\n        }\n\n        return {\n          pathTo: pathTo,\n          pathFrom: pathFrom,\n          x: x,\n          y: y2,\n          barXPosition: barXPosition,\n          color: this.isBoxPlot ? color : isPositive ? [colorPos] : [colorNeg]\n        };\n      }\n    }, {\n      key: \"drawHorizontalBoxPaths\",\n      value: function drawHorizontalBoxPaths(_ref2) {\n        var indexes = _ref2.indexes;\n            _ref2.x;\n            var y = _ref2.y,\n            yDivision = _ref2.yDivision,\n            barHeight = _ref2.barHeight,\n            zeroW = _ref2.zeroW,\n            strokeWidth = _ref2.strokeWidth;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var i = indexes.i;\n        var j = indexes.j;\n        var color = this.boxOptions.colors.lower;\n\n        if (this.isBoxPlot) {\n          color = [this.boxOptions.colors.lower, this.boxOptions.colors.upper];\n        }\n\n        var yRatio = this.invertedYRatio;\n        var realIndex = indexes.realIndex;\n        var ohlc = this.getOHLCValue(realIndex, j);\n        var l1 = zeroW;\n        var l2 = zeroW;\n        var x1 = Math.min(ohlc.o, ohlc.c);\n        var x2 = Math.max(ohlc.o, ohlc.c);\n        var m = ohlc.m;\n\n        if (w.globals.isXNumeric) {\n          y = (w.globals.seriesX[realIndex][j] - w.globals.minX) / this.invertedXRatio - barHeight / 2;\n        }\n\n        var barYPosition = y + barHeight * this.visibleI;\n\n        if (typeof this.series[i][j] === 'undefined' || this.series[i][j] === null) {\n          x1 = zeroW;\n          x2 = zeroW;\n        } else {\n          x1 = zeroW + x1 / yRatio;\n          x2 = zeroW + x2 / yRatio;\n          l1 = zeroW + ohlc.h / yRatio;\n          l2 = zeroW + ohlc.l / yRatio;\n          m = zeroW + ohlc.m / yRatio;\n        }\n\n        var pathTo = graphics.move(zeroW, barYPosition);\n        var pathFrom = graphics.move(x1, barYPosition + barHeight / 2);\n\n        if (w.globals.previousPaths.length > 0) {\n          pathFrom = this.getPreviousPath(realIndex, j, true);\n        }\n\n        pathTo = [graphics.move(x1, barYPosition) + graphics.line(x1, barYPosition + barHeight / 2) + graphics.line(l1, barYPosition + barHeight / 2) + graphics.line(l1, barYPosition + barHeight / 2 - barHeight / 4) + graphics.line(l1, barYPosition + barHeight / 2 + barHeight / 4) + graphics.line(l1, barYPosition + barHeight / 2) + graphics.line(x1, barYPosition + barHeight / 2) + graphics.line(x1, barYPosition + barHeight) + graphics.line(m, barYPosition + barHeight) + graphics.line(m, barYPosition) + graphics.line(x1 + strokeWidth / 2, barYPosition), graphics.move(m, barYPosition) + graphics.line(m, barYPosition + barHeight) + graphics.line(x2, barYPosition + barHeight) + graphics.line(x2, barYPosition + barHeight / 2) + graphics.line(l2, barYPosition + barHeight / 2) + graphics.line(l2, barYPosition + barHeight - barHeight / 4) + graphics.line(l2, barYPosition + barHeight / 4) + graphics.line(l2, barYPosition + barHeight / 2) + graphics.line(x2, barYPosition + barHeight / 2) + graphics.line(x2, barYPosition) + graphics.line(m, barYPosition) + 'z'];\n        pathFrom = pathFrom + graphics.move(x1, barYPosition);\n\n        if (!w.globals.isXNumeric) {\n          y = y + yDivision;\n        }\n\n        return {\n          pathTo: pathTo,\n          pathFrom: pathFrom,\n          x: x2,\n          y: y,\n          barYPosition: barYPosition,\n          color: color\n        };\n      }\n    }, {\n      key: \"getOHLCValue\",\n      value: function getOHLCValue(i, j) {\n        var w = this.w;\n        return {\n          o: this.isBoxPlot ? w.globals.seriesCandleH[i][j] : w.globals.seriesCandleO[i][j],\n          h: this.isBoxPlot ? w.globals.seriesCandleO[i][j] : w.globals.seriesCandleH[i][j],\n          m: w.globals.seriesCandleM[i][j],\n          l: this.isBoxPlot ? w.globals.seriesCandleC[i][j] : w.globals.seriesCandleL[i][j],\n          c: this.isBoxPlot ? w.globals.seriesCandleL[i][j] : w.globals.seriesCandleC[i][j]\n        };\n      }\n    }]);\n\n    return BoxCandleStick;\n  }(Bar);\n\n  var TreemapHelpers = /*#__PURE__*/function () {\n    function TreemapHelpers(ctx) {\n      _classCallCheck(this, TreemapHelpers);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(TreemapHelpers, [{\n      key: \"checkColorRange\",\n      value: function checkColorRange() {\n        var w = this.w;\n        var negRange = false;\n        var chartOpts = w.config.plotOptions[w.config.chart.type];\n\n        if (chartOpts.colorScale.ranges.length > 0) {\n          chartOpts.colorScale.ranges.map(function (range, index) {\n            if (range.from <= 0) {\n              negRange = true;\n            }\n          });\n        }\n\n        return negRange;\n      }\n    }, {\n      key: \"getShadeColor\",\n      value: function getShadeColor(chartType, i, j, negRange) {\n        var w = this.w;\n        var colorShadePercent = 1;\n        var shadeIntensity = w.config.plotOptions[chartType].shadeIntensity;\n        var colorProps = this.determineColor(chartType, i, j);\n\n        if (w.globals.hasNegs || negRange) {\n          if (w.config.plotOptions[chartType].reverseNegativeShade) {\n            if (colorProps.percent < 0) {\n              colorShadePercent = colorProps.percent / 100 * (shadeIntensity * 1.25);\n            } else {\n              colorShadePercent = (1 - colorProps.percent / 100) * (shadeIntensity * 1.25);\n            }\n          } else {\n            if (colorProps.percent <= 0) {\n              colorShadePercent = 1 - (1 + colorProps.percent / 100) * shadeIntensity;\n            } else {\n              colorShadePercent = (1 - colorProps.percent / 100) * shadeIntensity;\n            }\n          }\n        } else {\n          colorShadePercent = 1 - colorProps.percent / 100;\n\n          if (chartType === 'treemap') {\n            colorShadePercent = (1 - colorProps.percent / 100) * (shadeIntensity * 1.25);\n          }\n        }\n\n        var color = colorProps.color;\n        var utils = new Utils$1();\n\n        if (w.config.plotOptions[chartType].enableShades) {\n          if (this.w.config.theme.mode === 'dark') {\n            color = Utils$1.hexToRgba(utils.shadeColor(colorShadePercent * -1, colorProps.color), w.config.fill.opacity);\n          } else {\n            color = Utils$1.hexToRgba(utils.shadeColor(colorShadePercent, colorProps.color), w.config.fill.opacity);\n          }\n        }\n\n        return {\n          color: color,\n          colorProps: colorProps\n        };\n      }\n    }, {\n      key: \"determineColor\",\n      value: function determineColor(chartType, i, j) {\n        var w = this.w;\n        var val = w.globals.series[i][j];\n        var chartOpts = w.config.plotOptions[chartType];\n        var seriesNumber = chartOpts.colorScale.inverse ? j : i;\n        var isDistributed = w.config.plotOptions[chartType].distributed;\n\n        if (isDistributed) {\n          seriesNumber = j;\n        }\n\n        var color = w.globals.colors[seriesNumber];\n        var foreColor = null;\n        var min = Math.min.apply(Math, _toConsumableArray(w.globals.series[i]));\n        var max = Math.max.apply(Math, _toConsumableArray(w.globals.series[i]));\n\n        if (!chartOpts.distributed && chartType === 'heatmap') {\n          min = w.globals.minY;\n          max = w.globals.maxY;\n        }\n\n        if (typeof chartOpts.colorScale.min !== 'undefined') {\n          min = chartOpts.colorScale.min < w.globals.minY ? chartOpts.colorScale.min : w.globals.minY;\n          max = chartOpts.colorScale.max > w.globals.maxY ? chartOpts.colorScale.max : w.globals.maxY;\n        }\n\n        var total = Math.abs(max) + Math.abs(min);\n        var percent = 100 * val / (total === 0 ? total - 0.000001 : total);\n\n        if (chartOpts.colorScale.ranges.length > 0) {\n          var colorRange = chartOpts.colorScale.ranges;\n          colorRange.map(function (range, index) {\n            if (val >= range.from && val <= range.to) {\n              color = range.color;\n              foreColor = range.foreColor ? range.foreColor : null;\n              min = range.from;\n              max = range.to;\n              var rTotal = Math.abs(max) + Math.abs(min);\n              percent = 100 * val / (rTotal === 0 ? rTotal - 0.000001 : rTotal);\n            }\n          });\n        }\n\n        return {\n          color: color,\n          foreColor: foreColor,\n          percent: percent\n        };\n      }\n    }, {\n      key: \"calculateDataLabels\",\n      value: function calculateDataLabels(_ref) {\n        var text = _ref.text,\n            x = _ref.x,\n            y = _ref.y,\n            i = _ref.i,\n            j = _ref.j,\n            colorProps = _ref.colorProps,\n            fontSize = _ref.fontSize;\n        var w = this.w;\n        var dataLabelsConfig = w.config.dataLabels;\n        var graphics = new Graphics(this.ctx);\n        var dataLabels = new DataLabels(this.ctx);\n        var elDataLabelsWrap = null;\n\n        if (dataLabelsConfig.enabled) {\n          elDataLabelsWrap = graphics.group({\n            class: 'apexcharts-data-labels'\n          });\n          var offX = dataLabelsConfig.offsetX;\n          var offY = dataLabelsConfig.offsetY;\n          var dataLabelsX = x + offX;\n          var dataLabelsY = y + parseFloat(dataLabelsConfig.style.fontSize) / 3 + offY;\n          dataLabels.plotDataLabelsText({\n            x: dataLabelsX,\n            y: dataLabelsY,\n            text: text,\n            i: i,\n            j: j,\n            color: colorProps.foreColor,\n            parent: elDataLabelsWrap,\n            fontSize: fontSize,\n            dataLabelsConfig: dataLabelsConfig\n          });\n        }\n\n        return elDataLabelsWrap;\n      }\n    }, {\n      key: \"addListeners\",\n      value: function addListeners(elRect) {\n        var graphics = new Graphics(this.ctx);\n        elRect.node.addEventListener('mouseenter', graphics.pathMouseEnter.bind(this, elRect));\n        elRect.node.addEventListener('mouseleave', graphics.pathMouseLeave.bind(this, elRect));\n        elRect.node.addEventListener('mousedown', graphics.pathMouseDown.bind(this, elRect));\n      }\n    }]);\n\n    return TreemapHelpers;\n  }();\n\n  /**\n   * ApexCharts HeatMap Class.\n   * @module HeatMap\n   **/\n\n  var HeatMap = /*#__PURE__*/function () {\n    function HeatMap(ctx, xyRatios) {\n      _classCallCheck(this, HeatMap);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.xRatio = xyRatios.xRatio;\n      this.yRatio = xyRatios.yRatio;\n      this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation;\n      this.helpers = new TreemapHelpers(ctx);\n      this.rectRadius = this.w.config.plotOptions.heatmap.radius;\n      this.strokeWidth = this.w.config.stroke.show ? this.w.config.stroke.width : 0;\n    }\n\n    _createClass(HeatMap, [{\n      key: \"draw\",\n      value: function draw(series) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var ret = graphics.group({\n          class: 'apexcharts-heatmap'\n        });\n        ret.attr('clip-path', \"url(#gridRectMask\".concat(w.globals.cuid, \")\")); // width divided into equal parts\n\n        var xDivision = w.globals.gridWidth / w.globals.dataPoints;\n        var yDivision = w.globals.gridHeight / w.globals.series.length;\n        var y1 = 0;\n        var rev = false;\n        this.negRange = this.helpers.checkColorRange();\n        var heatSeries = series.slice();\n\n        if (w.config.yaxis[0].reversed) {\n          rev = true;\n          heatSeries.reverse();\n        }\n\n        for (var i = rev ? 0 : heatSeries.length - 1; rev ? i < heatSeries.length : i >= 0; rev ? i++ : i--) {\n          // el to which series will be drawn\n          var elSeries = graphics.group({\n            class: \"apexcharts-series apexcharts-heatmap-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[i]),\n            rel: i + 1,\n            'data:realIndex': i\n          });\n          this.ctx.series.addCollapsedClassToSeries(elSeries, i);\n\n          if (w.config.chart.dropShadow.enabled) {\n            var shadow = w.config.chart.dropShadow;\n            var filters = new Filters(this.ctx);\n            filters.dropShadow(elSeries, shadow, i);\n          }\n\n          var x1 = 0;\n          var shadeIntensity = w.config.plotOptions.heatmap.shadeIntensity;\n\n          for (var j = 0; j < heatSeries[i].length; j++) {\n            var heatColor = this.helpers.getShadeColor(w.config.chart.type, i, j, this.negRange);\n            var color = heatColor.color;\n            var heatColorProps = heatColor.colorProps;\n\n            if (w.config.fill.type === 'image') {\n              var fill = new Fill(this.ctx);\n              color = fill.fillPath({\n                seriesNumber: i,\n                dataPointIndex: j,\n                opacity: w.globals.hasNegs ? heatColorProps.percent < 0 ? 1 - (1 + heatColorProps.percent / 100) : shadeIntensity + heatColorProps.percent / 100 : heatColorProps.percent / 100,\n                patternID: Utils$1.randomId(),\n                width: w.config.fill.image.width ? w.config.fill.image.width : xDivision,\n                height: w.config.fill.image.height ? w.config.fill.image.height : yDivision\n              });\n            }\n\n            var radius = this.rectRadius;\n            var rect = graphics.drawRect(x1, y1, xDivision, yDivision, radius);\n            rect.attr({\n              cx: x1,\n              cy: y1\n            });\n            rect.node.classList.add('apexcharts-heatmap-rect');\n            elSeries.add(rect);\n            rect.attr({\n              fill: color,\n              i: i,\n              index: i,\n              j: j,\n              val: heatSeries[i][j],\n              'stroke-width': this.strokeWidth,\n              stroke: w.config.plotOptions.heatmap.useFillColorAsStroke ? color : w.globals.stroke.colors[0],\n              color: color\n            });\n            this.helpers.addListeners(rect);\n\n            if (w.config.chart.animations.enabled && !w.globals.dataChanged) {\n              var speed = 1;\n\n              if (!w.globals.resized) {\n                speed = w.config.chart.animations.speed;\n              }\n\n              this.animateHeatMap(rect, x1, y1, xDivision, yDivision, speed);\n            }\n\n            if (w.globals.dataChanged) {\n              var _speed = 1;\n\n              if (this.dynamicAnim.enabled && w.globals.shouldAnimate) {\n                _speed = this.dynamicAnim.speed;\n                var colorFrom = w.globals.previousPaths[i] && w.globals.previousPaths[i][j] && w.globals.previousPaths[i][j].color;\n                if (!colorFrom) colorFrom = 'rgba(255, 255, 255, 0)';\n                this.animateHeatColor(rect, Utils$1.isColorHex(colorFrom) ? colorFrom : Utils$1.rgb2hex(colorFrom), Utils$1.isColorHex(color) ? color : Utils$1.rgb2hex(color), _speed);\n              }\n            }\n\n            var formatter = w.config.dataLabels.formatter;\n            var formattedText = formatter(w.globals.series[i][j], {\n              value: w.globals.series[i][j],\n              seriesIndex: i,\n              dataPointIndex: j,\n              w: w\n            });\n            var dataLabels = this.helpers.calculateDataLabels({\n              text: formattedText,\n              x: x1 + xDivision / 2,\n              y: y1 + yDivision / 2,\n              i: i,\n              j: j,\n              colorProps: heatColorProps,\n              series: heatSeries\n            });\n\n            if (dataLabels !== null) {\n              elSeries.add(dataLabels);\n            }\n\n            x1 = x1 + xDivision;\n          }\n\n          y1 = y1 + yDivision;\n          ret.add(elSeries);\n        } // adjust yaxis labels for heatmap\n\n\n        var yAxisScale = w.globals.yAxisScale[0].result.slice();\n\n        if (w.config.yaxis[0].reversed) {\n          yAxisScale.unshift('');\n        } else {\n          yAxisScale.push('');\n        }\n\n        w.globals.yAxisScale[0].result = yAxisScale;\n        var divisor = w.globals.gridHeight / w.globals.series.length;\n        w.config.yaxis[0].labels.offsetY = -(divisor / 2);\n        return ret;\n      }\n    }, {\n      key: \"animateHeatMap\",\n      value: function animateHeatMap(el, x, y, width, height, speed) {\n        var animations = new Animations(this.ctx);\n        animations.animateRect(el, {\n          x: x + width / 2,\n          y: y + height / 2,\n          width: 0,\n          height: 0\n        }, {\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        }, speed, function () {\n          animations.animationCompleted(el);\n        });\n      }\n    }, {\n      key: \"animateHeatColor\",\n      value: function animateHeatColor(el, colorFrom, colorTo, speed) {\n        el.attr({\n          fill: colorFrom\n        }).animate(speed).attr({\n          fill: colorTo\n        });\n      }\n    }]);\n\n    return HeatMap;\n  }();\n\n  var CircularChartsHelpers = /*#__PURE__*/function () {\n    function CircularChartsHelpers(ctx) {\n      _classCallCheck(this, CircularChartsHelpers);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(CircularChartsHelpers, [{\n      key: \"drawYAxisTexts\",\n      value: function drawYAxisTexts(x, y, i, text) {\n        var w = this.w;\n        var yaxisConfig = w.config.yaxis[0];\n        var formatter = w.globals.yLabelFormatters[0];\n        var graphics = new Graphics(this.ctx);\n        var yaxisLabel = graphics.drawText({\n          x: x + yaxisConfig.labels.offsetX,\n          y: y + yaxisConfig.labels.offsetY,\n          text: formatter(text, i),\n          textAnchor: 'middle',\n          fontSize: yaxisConfig.labels.style.fontSize,\n          fontFamily: yaxisConfig.labels.style.fontFamily,\n          foreColor: Array.isArray(yaxisConfig.labels.style.colors) ? yaxisConfig.labels.style.colors[i] : yaxisConfig.labels.style.colors\n        });\n        return yaxisLabel;\n      }\n    }]);\n\n    return CircularChartsHelpers;\n  }();\n\n  /**\n   * ApexCharts Pie Class for drawing Pie / Donut Charts.\n   * @module Pie\n   **/\n\n  var Pie = /*#__PURE__*/function () {\n    function Pie(ctx) {\n      _classCallCheck(this, Pie);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      var w = this.w;\n      this.chartType = this.w.config.chart.type;\n      this.initialAnim = this.w.config.chart.animations.enabled;\n      this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;\n      this.animBeginArr = [0];\n      this.animDur = 0;\n      this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels;\n      this.lineColorArr = w.globals.stroke.colors !== undefined ? w.globals.stroke.colors : w.globals.colors;\n      this.defaultSize = Math.min(w.globals.gridWidth, w.globals.gridHeight);\n      this.centerY = this.defaultSize / 2;\n      this.centerX = w.globals.gridWidth / 2;\n\n      if (w.config.chart.type === 'radialBar') {\n        this.fullAngle = 360;\n      } else {\n        this.fullAngle = Math.abs(w.config.plotOptions.pie.endAngle - w.config.plotOptions.pie.startAngle);\n      }\n\n      this.initialAngle = w.config.plotOptions.pie.startAngle % this.fullAngle;\n      w.globals.radialSize = this.defaultSize / 2.05 - w.config.stroke.width - (!w.config.chart.sparkline.enabled ? w.config.chart.dropShadow.blur : 0);\n      this.donutSize = w.globals.radialSize * parseInt(w.config.plotOptions.pie.donut.size, 10) / 100;\n      this.maxY = 0;\n      this.sliceLabels = [];\n      this.sliceSizes = [];\n      this.prevSectorAngleArr = []; // for dynamic animations\n    }\n\n    _createClass(Pie, [{\n      key: \"draw\",\n      value: function draw(series) {\n        var _this = this;\n\n        var self = this;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        this.ret = graphics.group({\n          class: 'apexcharts-pie'\n        });\n        if (w.globals.noData) return this.ret;\n        var total = 0;\n\n        for (var k = 0; k < series.length; k++) {\n          // CALCULATE THE TOTAL\n          total += Utils$1.negToZero(series[k]);\n        }\n\n        var sectorAngleArr = []; // el to which series will be drawn\n\n        var elSeries = graphics.group(); // prevent division by zero error if there is no data\n\n        if (total === 0) {\n          total = 0.00001;\n        }\n\n        series.forEach(function (m) {\n          _this.maxY = Math.max(_this.maxY, m);\n        }); // override maxY if user provided in config\n\n        if (w.config.yaxis[0].max) {\n          this.maxY = w.config.yaxis[0].max;\n        }\n\n        if (w.config.grid.position === 'back' && this.chartType === 'polarArea') {\n          this.drawPolarElements(this.ret);\n        }\n\n        for (var i = 0; i < series.length; i++) {\n          // CALCULATE THE ANGLES\n          var angle = this.fullAngle * Utils$1.negToZero(series[i]) / total;\n          sectorAngleArr.push(angle);\n\n          if (this.chartType === 'polarArea') {\n            sectorAngleArr[i] = this.fullAngle / series.length;\n            this.sliceSizes.push(w.globals.radialSize * series[i] / this.maxY);\n          } else {\n            this.sliceSizes.push(w.globals.radialSize);\n          }\n        }\n\n        if (w.globals.dataChanged) {\n          var prevTotal = 0;\n\n          for (var _k = 0; _k < w.globals.previousPaths.length; _k++) {\n            // CALCULATE THE PREV TOTAL\n            prevTotal += Utils$1.negToZero(w.globals.previousPaths[_k]);\n          }\n\n          var previousAngle;\n\n          for (var _i = 0; _i < w.globals.previousPaths.length; _i++) {\n            // CALCULATE THE PREVIOUS ANGLES\n            previousAngle = this.fullAngle * Utils$1.negToZero(w.globals.previousPaths[_i]) / prevTotal;\n            this.prevSectorAngleArr.push(previousAngle);\n          }\n        } // on small chart size after few count of resizes browser window donutSize can be negative\n\n\n        if (this.donutSize < 0) {\n          this.donutSize = 0;\n        }\n\n        var scaleSize = w.config.plotOptions.pie.customScale;\n        var halfW = w.globals.gridWidth / 2;\n        var halfH = w.globals.gridHeight / 2;\n        var translateX = halfW - w.globals.gridWidth / 2 * scaleSize;\n        var translateY = halfH - w.globals.gridHeight / 2 * scaleSize;\n\n        if (this.chartType === 'donut') {\n          // draw the inner circle and add some text to it\n          var circle = graphics.drawCircle(this.donutSize);\n          circle.attr({\n            cx: this.centerX,\n            cy: this.centerY,\n            fill: w.config.plotOptions.pie.donut.background ? w.config.plotOptions.pie.donut.background : 'transparent'\n          });\n          elSeries.add(circle);\n        }\n\n        var elG = self.drawArcs(sectorAngleArr, series); // add slice dataLabels at the end\n\n        this.sliceLabels.forEach(function (s) {\n          elG.add(s);\n        });\n        elSeries.attr({\n          transform: \"translate(\".concat(translateX, \", \").concat(translateY, \") scale(\").concat(scaleSize, \")\")\n        });\n        elSeries.add(elG);\n        this.ret.add(elSeries);\n\n        if (this.donutDataLabels.show) {\n          var dataLabels = this.renderInnerDataLabels(this.donutDataLabels, {\n            hollowSize: this.donutSize,\n            centerX: this.centerX,\n            centerY: this.centerY,\n            opacity: this.donutDataLabels.show,\n            translateX: translateX,\n            translateY: translateY\n          });\n          this.ret.add(dataLabels);\n        }\n\n        if (w.config.grid.position === 'front' && this.chartType === 'polarArea') {\n          this.drawPolarElements(this.ret);\n        }\n\n        return this.ret;\n      } // core function for drawing pie arcs\n\n    }, {\n      key: \"drawArcs\",\n      value: function drawArcs(sectorAngleArr, series) {\n        var w = this.w;\n        var filters = new Filters(this.ctx);\n        var graphics = new Graphics(this.ctx);\n        var fill = new Fill(this.ctx);\n        var g = graphics.group({\n          class: 'apexcharts-slices'\n        });\n        var startAngle = this.initialAngle;\n        var prevStartAngle = this.initialAngle;\n        var endAngle = this.initialAngle;\n        var prevEndAngle = this.initialAngle;\n        this.strokeWidth = w.config.stroke.show ? w.config.stroke.width : 0;\n\n        for (var i = 0; i < sectorAngleArr.length; i++) {\n          var elPieArc = graphics.group({\n            class: \"apexcharts-series apexcharts-pie-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[i]),\n            rel: i + 1,\n            'data:realIndex': i\n          });\n          g.add(elPieArc);\n          startAngle = endAngle;\n          prevStartAngle = prevEndAngle;\n          endAngle = startAngle + sectorAngleArr[i];\n          prevEndAngle = prevStartAngle + this.prevSectorAngleArr[i];\n          var angle = endAngle < startAngle ? this.fullAngle + endAngle - startAngle : endAngle - startAngle;\n          var pathFill = fill.fillPath({\n            seriesNumber: i,\n            size: this.sliceSizes[i],\n            value: series[i]\n          }); // additionally, pass size for gradient drawing in the fillPath function\n\n          var path = this.getChangedPath(prevStartAngle, prevEndAngle);\n          var elPath = graphics.drawPath({\n            d: path,\n            stroke: Array.isArray(this.lineColorArr) ? this.lineColorArr[i] : this.lineColorArr,\n            strokeWidth: 0,\n            fill: pathFill,\n            fillOpacity: w.config.fill.opacity,\n            classes: \"apexcharts-pie-area apexcharts-\".concat(this.chartType.toLowerCase(), \"-slice-\").concat(i)\n          });\n          elPath.attr({\n            index: 0,\n            j: i\n          });\n          filters.setSelectionFilter(elPath, 0, i);\n\n          if (w.config.chart.dropShadow.enabled) {\n            var shadow = w.config.chart.dropShadow;\n            filters.dropShadow(elPath, shadow, i);\n          }\n\n          this.addListeners(elPath, this.donutDataLabels);\n          Graphics.setAttrs(elPath.node, {\n            'data:angle': angle,\n            'data:startAngle': startAngle,\n            'data:strokeWidth': this.strokeWidth,\n            'data:value': series[i]\n          });\n          var labelPosition = {\n            x: 0,\n            y: 0\n          };\n\n          if (this.chartType === 'pie' || this.chartType === 'polarArea') {\n            labelPosition = Utils$1.polarToCartesian(this.centerX, this.centerY, w.globals.radialSize / 1.25 + w.config.plotOptions.pie.dataLabels.offset, (startAngle + angle / 2) % this.fullAngle);\n          } else if (this.chartType === 'donut') {\n            labelPosition = Utils$1.polarToCartesian(this.centerX, this.centerY, (w.globals.radialSize + this.donutSize) / 2 + w.config.plotOptions.pie.dataLabels.offset, (startAngle + angle / 2) % this.fullAngle);\n          }\n\n          elPieArc.add(elPath); // Animation code starts\n\n          var dur = 0;\n\n          if (this.initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n            dur = angle / this.fullAngle * w.config.chart.animations.speed;\n            if (dur === 0) dur = 1;\n            this.animDur = dur + this.animDur;\n            this.animBeginArr.push(this.animDur);\n          } else {\n            this.animBeginArr.push(0);\n          }\n\n          if (this.dynamicAnim && w.globals.dataChanged) {\n            this.animatePaths(elPath, {\n              size: this.sliceSizes[i],\n              endAngle: endAngle,\n              startAngle: startAngle,\n              prevStartAngle: prevStartAngle,\n              prevEndAngle: prevEndAngle,\n              animateStartingPos: true,\n              i: i,\n              animBeginArr: this.animBeginArr,\n              shouldSetPrevPaths: true,\n              dur: w.config.chart.animations.dynamicAnimation.speed\n            });\n          } else {\n            this.animatePaths(elPath, {\n              size: this.sliceSizes[i],\n              endAngle: endAngle,\n              startAngle: startAngle,\n              i: i,\n              totalItems: sectorAngleArr.length - 1,\n              animBeginArr: this.animBeginArr,\n              dur: dur\n            });\n          } // animation code ends\n\n\n          if (w.config.plotOptions.pie.expandOnClick && this.chartType !== 'polarArea') {\n            elPath.click(this.pieClicked.bind(this, i));\n          }\n\n          if (typeof w.globals.selectedDataPoints[0] !== 'undefined' && w.globals.selectedDataPoints[0].indexOf(i) > -1) {\n            this.pieClicked(i);\n          }\n\n          if (w.config.dataLabels.enabled) {\n            var xPos = labelPosition.x;\n            var yPos = labelPosition.y;\n            var text = 100 * angle / this.fullAngle + '%';\n\n            if (angle !== 0 && w.config.plotOptions.pie.dataLabels.minAngleToShowLabel < sectorAngleArr[i]) {\n              var formatter = w.config.dataLabels.formatter;\n\n              if (formatter !== undefined) {\n                text = formatter(w.globals.seriesPercent[i][0], {\n                  seriesIndex: i,\n                  w: w\n                });\n              }\n\n              var foreColor = w.globals.dataLabels.style.colors[i];\n              var elPieLabelWrap = graphics.group({\n                class: \"apexcharts-datalabels\"\n              });\n              var elPieLabel = graphics.drawText({\n                x: xPos,\n                y: yPos,\n                text: text,\n                textAnchor: 'middle',\n                fontSize: w.config.dataLabels.style.fontSize,\n                fontFamily: w.config.dataLabels.style.fontFamily,\n                fontWeight: w.config.dataLabels.style.fontWeight,\n                foreColor: foreColor\n              });\n              elPieLabelWrap.add(elPieLabel);\n\n              if (w.config.dataLabels.dropShadow.enabled) {\n                var textShadow = w.config.dataLabels.dropShadow;\n                filters.dropShadow(elPieLabel, textShadow);\n              }\n\n              elPieLabel.node.classList.add('apexcharts-pie-label');\n\n              if (w.config.chart.animations.animate && w.globals.resized === false) {\n                elPieLabel.node.classList.add('apexcharts-pie-label-delay');\n                elPieLabel.node.style.animationDelay = w.config.chart.animations.speed / 940 + 's';\n              }\n\n              this.sliceLabels.push(elPieLabelWrap);\n            }\n          }\n        }\n\n        return g;\n      }\n    }, {\n      key: \"addListeners\",\n      value: function addListeners(elPath, dataLabels) {\n        var graphics = new Graphics(this.ctx); // append filters on mouseenter and mouseleave\n\n        elPath.node.addEventListener('mouseenter', graphics.pathMouseEnter.bind(this, elPath));\n        elPath.node.addEventListener('mouseleave', graphics.pathMouseLeave.bind(this, elPath));\n        elPath.node.addEventListener('mouseleave', this.revertDataLabelsInner.bind(this, elPath.node, dataLabels));\n        elPath.node.addEventListener('mousedown', graphics.pathMouseDown.bind(this, elPath));\n\n        if (!this.donutDataLabels.total.showAlways) {\n          elPath.node.addEventListener('mouseenter', this.printDataLabelsInner.bind(this, elPath.node, dataLabels));\n          elPath.node.addEventListener('mousedown', this.printDataLabelsInner.bind(this, elPath.node, dataLabels));\n        }\n      } // This function can be used for other circle charts too\n\n    }, {\n      key: \"animatePaths\",\n      value: function animatePaths(el, opts) {\n        var w = this.w;\n        var me = this;\n        var angle = opts.endAngle < opts.startAngle ? this.fullAngle + opts.endAngle - opts.startAngle : opts.endAngle - opts.startAngle;\n        var prevAngle = angle;\n        var fromStartAngle = opts.startAngle;\n        var toStartAngle = opts.startAngle;\n\n        if (opts.prevStartAngle !== undefined && opts.prevEndAngle !== undefined) {\n          fromStartAngle = opts.prevEndAngle;\n          prevAngle = opts.prevEndAngle < opts.prevStartAngle ? this.fullAngle + opts.prevEndAngle - opts.prevStartAngle : opts.prevEndAngle - opts.prevStartAngle;\n        }\n\n        if (opts.i === w.config.series.length - 1) {\n          // some adjustments for the last overlapping paths\n          if (angle + toStartAngle > this.fullAngle) {\n            opts.endAngle = opts.endAngle - (angle + toStartAngle);\n          } else if (angle + toStartAngle < this.fullAngle) {\n            opts.endAngle = opts.endAngle + (this.fullAngle - (angle + toStartAngle));\n          }\n        }\n\n        if (angle === this.fullAngle) angle = this.fullAngle - 0.01;\n        me.animateArc(el, fromStartAngle, toStartAngle, angle, prevAngle, opts);\n      }\n    }, {\n      key: \"animateArc\",\n      value: function animateArc(el, fromStartAngle, toStartAngle, angle, prevAngle, opts) {\n        var me = this;\n        var w = this.w;\n        var animations = new Animations(this.ctx);\n        var size = opts.size;\n        var path;\n\n        if (isNaN(fromStartAngle) || isNaN(prevAngle)) {\n          fromStartAngle = toStartAngle;\n          prevAngle = angle;\n          opts.dur = 0;\n        }\n\n        var currAngle = angle;\n        var startAngle = toStartAngle;\n        var fromAngle = fromStartAngle < toStartAngle ? this.fullAngle + fromStartAngle - toStartAngle : fromStartAngle - toStartAngle;\n\n        if (w.globals.dataChanged && opts.shouldSetPrevPaths) {\n          // to avoid flicker when updating, set prev path first and then animate from there\n          if (opts.prevEndAngle) {\n            path = me.getPiePath({\n              me: me,\n              startAngle: opts.prevStartAngle,\n              angle: opts.prevEndAngle < opts.prevStartAngle ? this.fullAngle + opts.prevEndAngle - opts.prevStartAngle : opts.prevEndAngle - opts.prevStartAngle,\n              size: size\n            });\n            el.attr({\n              d: path\n            });\n          }\n        }\n\n        if (opts.dur !== 0) {\n          el.animate(opts.dur, w.globals.easing, opts.animBeginArr[opts.i]).afterAll(function () {\n            if (me.chartType === 'pie' || me.chartType === 'donut' || me.chartType === 'polarArea') {\n              this.animate(w.config.chart.animations.dynamicAnimation.speed).attr({\n                'stroke-width': me.strokeWidth\n              });\n            }\n\n            if (opts.i === w.config.series.length - 1) {\n              animations.animationCompleted(el);\n            }\n          }).during(function (pos) {\n            currAngle = fromAngle + (angle - fromAngle) * pos;\n\n            if (opts.animateStartingPos) {\n              currAngle = prevAngle + (angle - prevAngle) * pos;\n              startAngle = fromStartAngle - prevAngle + (toStartAngle - (fromStartAngle - prevAngle)) * pos;\n            }\n\n            path = me.getPiePath({\n              me: me,\n              startAngle: startAngle,\n              angle: currAngle,\n              size: size\n            });\n            el.node.setAttribute('data:pathOrig', path);\n            el.attr({\n              d: path\n            });\n          });\n        } else {\n          path = me.getPiePath({\n            me: me,\n            startAngle: startAngle,\n            angle: angle,\n            size: size\n          });\n\n          if (!opts.isTrack) {\n            w.globals.animationEnded = true;\n          }\n\n          el.node.setAttribute('data:pathOrig', path);\n          el.attr({\n            d: path,\n            'stroke-width': me.strokeWidth\n          });\n        }\n      }\n    }, {\n      key: \"pieClicked\",\n      value: function pieClicked(i) {\n        var w = this.w;\n        var me = this;\n        var path;\n        var size = me.sliceSizes[i] + (w.config.plotOptions.pie.expandOnClick ? 4 : 0);\n        var elPath = w.globals.dom.Paper.select(\".apexcharts-\".concat(me.chartType.toLowerCase(), \"-slice-\").concat(i)).members[0];\n\n        if (elPath.attr('data:pieClicked') === 'true') {\n          elPath.attr({\n            'data:pieClicked': 'false'\n          });\n          this.revertDataLabelsInner(elPath.node, this.donutDataLabels);\n          var origPath = elPath.attr('data:pathOrig');\n          elPath.attr({\n            d: origPath\n          });\n          return;\n        } else {\n          // reset all elems\n          var allEls = w.globals.dom.baseEl.getElementsByClassName('apexcharts-pie-area');\n          Array.prototype.forEach.call(allEls, function (pieSlice) {\n            pieSlice.setAttribute('data:pieClicked', 'false');\n            var origPath = pieSlice.getAttribute('data:pathOrig');\n            pieSlice.setAttribute('d', origPath);\n          });\n          elPath.attr('data:pieClicked', 'true');\n        }\n\n        var startAngle = parseInt(elPath.attr('data:startAngle'), 10);\n        var angle = parseInt(elPath.attr('data:angle'), 10);\n        path = me.getPiePath({\n          me: me,\n          startAngle: startAngle,\n          angle: angle,\n          size: size\n        });\n        if (angle === 360) return;\n        elPath.plot(path);\n      }\n    }, {\n      key: \"getChangedPath\",\n      value: function getChangedPath(prevStartAngle, prevEndAngle) {\n        var path = '';\n\n        if (this.dynamicAnim && this.w.globals.dataChanged) {\n          path = this.getPiePath({\n            me: this,\n            startAngle: prevStartAngle,\n            angle: prevEndAngle - prevStartAngle,\n            size: this.size\n          });\n        }\n\n        return path;\n      }\n    }, {\n      key: \"getPiePath\",\n      value: function getPiePath(_ref) {\n        var me = _ref.me,\n            startAngle = _ref.startAngle,\n            angle = _ref.angle,\n            size = _ref.size;\n        var path;\n        var startDeg = startAngle;\n        var startRadians = Math.PI * (startDeg - 90) / 180;\n        var endDeg = angle + startAngle; // prevent overlap\n\n        if (Math.ceil(endDeg) >= this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle) {\n          endDeg = this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle - 0.01;\n        }\n\n        if (Math.ceil(endDeg) > this.fullAngle) endDeg -= this.fullAngle;\n        var endRadians = Math.PI * (endDeg - 90) / 180;\n        var x1 = me.centerX + size * Math.cos(startRadians);\n        var y1 = me.centerY + size * Math.sin(startRadians);\n        var x2 = me.centerX + size * Math.cos(endRadians);\n        var y2 = me.centerY + size * Math.sin(endRadians);\n        var startInner = Utils$1.polarToCartesian(me.centerX, me.centerY, me.donutSize, endDeg);\n        var endInner = Utils$1.polarToCartesian(me.centerX, me.centerY, me.donutSize, startDeg);\n        var largeArc = angle > 180 ? 1 : 0;\n        var pathBeginning = ['M', x1, y1, 'A', size, size, 0, largeArc, 1, x2, y2];\n\n        if (me.chartType === 'donut') {\n          path = [].concat(pathBeginning, ['L', startInner.x, startInner.y, 'A', me.donutSize, me.donutSize, 0, largeArc, 0, endInner.x, endInner.y, 'L', x1, y1, 'z']).join(' ');\n        } else if (me.chartType === 'pie' || me.chartType === 'polarArea') {\n          path = [].concat(pathBeginning, ['L', me.centerX, me.centerY, 'L', x1, y1]).join(' ');\n        } else {\n          path = [].concat(pathBeginning).join(' ');\n        }\n\n        return path;\n      }\n    }, {\n      key: \"drawPolarElements\",\n      value: function drawPolarElements(parent) {\n        var w = this.w;\n        var scale = new Range$1(this.ctx);\n        var graphics = new Graphics(this.ctx);\n        var helpers = new CircularChartsHelpers(this.ctx);\n        var gCircles = graphics.group();\n        var gYAxis = graphics.group();\n        var yScale = scale.niceScale(0, Math.ceil(this.maxY), w.config.yaxis[0].tickAmount, 0, true);\n        var yTexts = yScale.result.reverse();\n        var len = yScale.result.length;\n        this.maxY = yScale.niceMax;\n        var circleSize = w.globals.radialSize;\n        var diff = circleSize / (len - 1);\n\n        for (var i = 0; i < len - 1; i++) {\n          var circle = graphics.drawCircle(circleSize);\n          circle.attr({\n            cx: this.centerX,\n            cy: this.centerY,\n            fill: 'none',\n            'stroke-width': w.config.plotOptions.polarArea.rings.strokeWidth,\n            stroke: w.config.plotOptions.polarArea.rings.strokeColor\n          });\n\n          if (w.config.yaxis[0].show) {\n            var yLabel = helpers.drawYAxisTexts(this.centerX, this.centerY - circleSize + parseInt(w.config.yaxis[0].labels.style.fontSize, 10) / 2, i, yTexts[i]);\n            gYAxis.add(yLabel);\n          }\n\n          gCircles.add(circle);\n          circleSize = circleSize - diff;\n        }\n\n        this.drawSpokes(parent);\n        parent.add(gCircles);\n        parent.add(gYAxis);\n      }\n    }, {\n      key: \"renderInnerDataLabels\",\n      value: function renderInnerDataLabels(dataLabelsConfig, opts) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var g = graphics.group({\n          class: 'apexcharts-datalabels-group',\n          transform: \"translate(\".concat(opts.translateX ? opts.translateX : 0, \", \").concat(opts.translateY ? opts.translateY : 0, \") scale(\").concat(w.config.plotOptions.pie.customScale, \")\")\n        });\n        var showTotal = dataLabelsConfig.total.show;\n        g.node.style.opacity = opts.opacity;\n        var x = opts.centerX;\n        var y = opts.centerY;\n        var labelColor, valueColor;\n\n        if (dataLabelsConfig.name.color === undefined) {\n          labelColor = w.globals.colors[0];\n        } else {\n          labelColor = dataLabelsConfig.name.color;\n        }\n\n        var labelFontSize = dataLabelsConfig.name.fontSize;\n        var labelFontFamily = dataLabelsConfig.name.fontFamily;\n        var labelFontWeight = dataLabelsConfig.name.fontWeight;\n\n        if (dataLabelsConfig.value.color === undefined) {\n          valueColor = w.config.chart.foreColor;\n        } else {\n          valueColor = dataLabelsConfig.value.color;\n        }\n\n        var lbFormatter = dataLabelsConfig.value.formatter;\n        var val = '';\n        var name = '';\n\n        if (showTotal) {\n          labelColor = dataLabelsConfig.total.color;\n          labelFontSize = dataLabelsConfig.total.fontSize;\n          labelFontFamily = dataLabelsConfig.total.fontFamily;\n          labelFontWeight = dataLabelsConfig.total.fontWeight;\n          name = dataLabelsConfig.total.label;\n          val = dataLabelsConfig.total.formatter(w);\n        } else {\n          if (w.globals.series.length === 1) {\n            val = lbFormatter(w.globals.series[0], w);\n            name = w.globals.seriesNames[0];\n          }\n        }\n\n        if (name) {\n          name = dataLabelsConfig.name.formatter(name, dataLabelsConfig.total.show, w);\n        }\n\n        if (dataLabelsConfig.name.show) {\n          var elLabel = graphics.drawText({\n            x: x,\n            y: y + parseFloat(dataLabelsConfig.name.offsetY),\n            text: name,\n            textAnchor: 'middle',\n            foreColor: labelColor,\n            fontSize: labelFontSize,\n            fontWeight: labelFontWeight,\n            fontFamily: labelFontFamily\n          });\n          elLabel.node.classList.add('apexcharts-datalabel-label');\n          g.add(elLabel);\n        }\n\n        if (dataLabelsConfig.value.show) {\n          var valOffset = dataLabelsConfig.name.show ? parseFloat(dataLabelsConfig.value.offsetY) + 16 : dataLabelsConfig.value.offsetY;\n          var elValue = graphics.drawText({\n            x: x,\n            y: y + valOffset,\n            text: val,\n            textAnchor: 'middle',\n            foreColor: valueColor,\n            fontWeight: dataLabelsConfig.value.fontWeight,\n            fontSize: dataLabelsConfig.value.fontSize,\n            fontFamily: dataLabelsConfig.value.fontFamily\n          });\n          elValue.node.classList.add('apexcharts-datalabel-value');\n          g.add(elValue);\n        } // for a multi-series circle chart, we need to show total value instead of first series labels\n\n\n        return g;\n      }\n      /**\n       *\n       * @param {string} name - The name of the series\n       * @param {string} val - The value of that series\n       * @param {object} el - Optional el (indicates which series was hovered/clicked). If this param is not present, means we need to show total\n       */\n\n    }, {\n      key: \"printInnerLabels\",\n      value: function printInnerLabels(labelsConfig, name, val, el) {\n        var w = this.w;\n        var labelColor;\n\n        if (el) {\n          if (labelsConfig.name.color === undefined) {\n            labelColor = w.globals.colors[parseInt(el.parentNode.getAttribute('rel'), 10) - 1];\n          } else {\n            labelColor = labelsConfig.name.color;\n          }\n        } else {\n          if (w.globals.series.length > 1 && labelsConfig.total.show) {\n            labelColor = labelsConfig.total.color;\n          }\n        }\n\n        var elLabel = w.globals.dom.baseEl.querySelector('.apexcharts-datalabel-label');\n        var elValue = w.globals.dom.baseEl.querySelector('.apexcharts-datalabel-value');\n        var lbFormatter = labelsConfig.value.formatter;\n        val = lbFormatter(val, w); // we need to show Total Val - so get the formatter of it\n\n        if (!el && typeof labelsConfig.total.formatter === 'function') {\n          val = labelsConfig.total.formatter(w);\n        }\n\n        var isTotal = name === labelsConfig.total.label;\n        name = labelsConfig.name.formatter(name, isTotal, w);\n\n        if (elLabel !== null) {\n          elLabel.textContent = name;\n        }\n\n        if (elValue !== null) {\n          elValue.textContent = val;\n        }\n\n        if (elLabel !== null) {\n          elLabel.style.fill = labelColor;\n        }\n      }\n    }, {\n      key: \"printDataLabelsInner\",\n      value: function printDataLabelsInner(el, dataLabelsConfig) {\n        var w = this.w;\n        var val = el.getAttribute('data:value');\n        var name = w.globals.seriesNames[parseInt(el.parentNode.getAttribute('rel'), 10) - 1];\n\n        if (w.globals.series.length > 1) {\n          this.printInnerLabels(dataLabelsConfig, name, val, el);\n        }\n\n        var dataLabelsGroup = w.globals.dom.baseEl.querySelector('.apexcharts-datalabels-group');\n\n        if (dataLabelsGroup !== null) {\n          dataLabelsGroup.style.opacity = 1;\n        }\n      }\n    }, {\n      key: \"drawSpokes\",\n      value: function drawSpokes(parent) {\n        var _this2 = this;\n\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var spokeConfig = w.config.plotOptions.polarArea.spokes;\n        if (spokeConfig.strokeWidth === 0) return;\n        var spokes = [];\n        var angleDivision = 360 / w.globals.series.length;\n\n        for (var i = 0; i < w.globals.series.length; i++) {\n          spokes.push(Utils$1.polarToCartesian(this.centerX, this.centerY, w.globals.radialSize, w.config.plotOptions.pie.startAngle + angleDivision * i));\n        }\n\n        spokes.forEach(function (p, i) {\n          var line = graphics.drawLine(p.x, p.y, _this2.centerX, _this2.centerY, Array.isArray(spokeConfig.connectorColors) ? spokeConfig.connectorColors[i] : spokeConfig.connectorColors);\n          parent.add(line);\n        });\n      }\n    }, {\n      key: \"revertDataLabelsInner\",\n      value: function revertDataLabelsInner(elem, dataLabelsConfig, event) {\n        var _this3 = this;\n\n        var w = this.w;\n        var dataLabelsGroup = w.globals.dom.baseEl.querySelector('.apexcharts-datalabels-group');\n        var sliceOut = false;\n        var slices = w.globals.dom.baseEl.getElementsByClassName(\"apexcharts-pie-area\");\n\n        var selectSlice = function selectSlice(_ref2) {\n          var makeSliceOut = _ref2.makeSliceOut,\n              printLabel = _ref2.printLabel;\n          Array.prototype.forEach.call(slices, function (s) {\n            if (s.getAttribute('data:pieClicked') === 'true') {\n              if (makeSliceOut) {\n                sliceOut = true;\n              }\n\n              if (printLabel) {\n                _this3.printDataLabelsInner(s, dataLabelsConfig);\n              }\n            }\n          });\n        };\n\n        selectSlice({\n          makeSliceOut: true,\n          printLabel: false\n        });\n\n        if (dataLabelsConfig.total.show && w.globals.series.length > 1) {\n          if (sliceOut && !dataLabelsConfig.total.showAlways) {\n            selectSlice({\n              makeSliceOut: false,\n              printLabel: true\n            });\n          } else {\n            this.printInnerLabels(dataLabelsConfig, dataLabelsConfig.total.label, dataLabelsConfig.total.formatter(w));\n          }\n        } else {\n          selectSlice({\n            makeSliceOut: false,\n            printLabel: true\n          });\n\n          if (!sliceOut) {\n            if (w.globals.selectedDataPoints.length && w.globals.series.length > 1) {\n              if (w.globals.selectedDataPoints[0].length > 0) {\n                var index = w.globals.selectedDataPoints[0];\n                var el = w.globals.dom.baseEl.querySelector(\".apexcharts-\".concat(this.chartType.toLowerCase(), \"-slice-\").concat(index));\n                this.printDataLabelsInner(el, dataLabelsConfig);\n              } else if (dataLabelsGroup && w.globals.selectedDataPoints.length && w.globals.selectedDataPoints[0].length === 0) {\n                dataLabelsGroup.style.opacity = 0;\n              }\n            } else {\n              if (dataLabelsGroup && w.globals.series.length > 1) {\n                dataLabelsGroup.style.opacity = 0;\n              }\n            }\n          }\n        }\n      }\n    }]);\n\n    return Pie;\n  }();\n\n  /**\n   * ApexCharts Radar Class for Spider/Radar Charts.\n   * @module Radar\n   **/\n\n  var Radar = /*#__PURE__*/function () {\n    function Radar(ctx) {\n      _classCallCheck(this, Radar);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.chartType = this.w.config.chart.type;\n      this.initialAnim = this.w.config.chart.animations.enabled;\n      this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;\n      this.animDur = 0;\n      var w = this.w;\n      this.graphics = new Graphics(this.ctx);\n      this.lineColorArr = w.globals.stroke.colors !== undefined ? w.globals.stroke.colors : w.globals.colors;\n      this.defaultSize = w.globals.svgHeight < w.globals.svgWidth ? w.globals.gridHeight + w.globals.goldenPadding * 1.5 : w.globals.gridWidth;\n      this.isLog = w.config.yaxis[0].logarithmic;\n      this.coreUtils = new CoreUtils(this.ctx);\n      this.maxValue = this.isLog ? this.coreUtils.getLogVal(w.globals.maxY, 0) : w.globals.maxY;\n      this.minValue = this.isLog ? this.coreUtils.getLogVal(this.w.globals.minY, 0) : w.globals.minY;\n      this.polygons = w.config.plotOptions.radar.polygons;\n      this.strokeWidth = w.config.stroke.show ? w.config.stroke.width : 0;\n      this.size = this.defaultSize / 2.1 - this.strokeWidth - w.config.chart.dropShadow.blur;\n\n      if (w.config.xaxis.labels.show) {\n        this.size = this.size - w.globals.xAxisLabelsWidth / 1.75;\n      }\n\n      if (w.config.plotOptions.radar.size !== undefined) {\n        this.size = w.config.plotOptions.radar.size;\n      }\n\n      this.dataRadiusOfPercent = [];\n      this.dataRadius = [];\n      this.angleArr = [];\n      this.yaxisLabelsTextsPos = [];\n    }\n\n    _createClass(Radar, [{\n      key: \"draw\",\n      value: function draw(series) {\n        var _this = this;\n\n        var w = this.w;\n        var fill = new Fill(this.ctx);\n        var allSeries = [];\n        var dataLabels = new DataLabels(this.ctx);\n\n        if (series.length) {\n          this.dataPointsLen = series[w.globals.maxValsInArrayIndex].length;\n        }\n\n        this.disAngle = Math.PI * 2 / this.dataPointsLen;\n        var halfW = w.globals.gridWidth / 2;\n        var halfH = w.globals.gridHeight / 2;\n        var translateX = halfW + w.config.plotOptions.radar.offsetX;\n        var translateY = halfH + w.config.plotOptions.radar.offsetY;\n        var ret = this.graphics.group({\n          class: 'apexcharts-radar-series apexcharts-plot-series',\n          transform: \"translate(\".concat(translateX || 0, \", \").concat(translateY || 0, \")\")\n        });\n        var dataPointsPos = [];\n        var elPointsMain = null;\n        var elDataPointsMain = null;\n        this.yaxisLabels = this.graphics.group({\n          class: 'apexcharts-yaxis'\n        });\n        series.forEach(function (s, i) {\n          var longestSeries = s.length === w.globals.dataPoints; // el to which series will be drawn\n\n          var elSeries = _this.graphics.group().attr({\n            class: \"apexcharts-series\",\n            'data:longestSeries': longestSeries,\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[i]),\n            rel: i + 1,\n            'data:realIndex': i\n          });\n\n          _this.dataRadiusOfPercent[i] = [];\n          _this.dataRadius[i] = [];\n          _this.angleArr[i] = [];\n          s.forEach(function (dv, j) {\n            var range = Math.abs(_this.maxValue - _this.minValue);\n            dv = dv + Math.abs(_this.minValue);\n\n            if (_this.isLog) {\n              dv = _this.coreUtils.getLogVal(dv, 0);\n            }\n\n            _this.dataRadiusOfPercent[i][j] = dv / range;\n            _this.dataRadius[i][j] = _this.dataRadiusOfPercent[i][j] * _this.size;\n            _this.angleArr[i][j] = j * _this.disAngle;\n          });\n          dataPointsPos = _this.getDataPointsPos(_this.dataRadius[i], _this.angleArr[i]);\n\n          var paths = _this.createPaths(dataPointsPos, {\n            x: 0,\n            y: 0\n          }); // points\n\n\n          elPointsMain = _this.graphics.group({\n            class: 'apexcharts-series-markers-wrap apexcharts-element-hidden'\n          }); // datapoints\n\n          elDataPointsMain = _this.graphics.group({\n            class: \"apexcharts-datalabels\",\n            'data:realIndex': i\n          });\n          w.globals.delayedElements.push({\n            el: elPointsMain.node,\n            index: i\n          });\n          var defaultRenderedPathOptions = {\n            i: i,\n            realIndex: i,\n            animationDelay: i,\n            initialSpeed: w.config.chart.animations.speed,\n            dataChangeSpeed: w.config.chart.animations.dynamicAnimation.speed,\n            className: \"apexcharts-radar\",\n            shouldClipToGrid: false,\n            bindEventsOnPaths: false,\n            stroke: w.globals.stroke.colors[i],\n            strokeLineCap: w.config.stroke.lineCap\n          };\n          var pathFrom = null;\n\n          if (w.globals.previousPaths.length > 0) {\n            pathFrom = _this.getPreviousPath(i);\n          }\n\n          for (var p = 0; p < paths.linePathsTo.length; p++) {\n            var renderedLinePath = _this.graphics.renderPaths(_objectSpread2(_objectSpread2({}, defaultRenderedPathOptions), {}, {\n              pathFrom: pathFrom === null ? paths.linePathsFrom[p] : pathFrom,\n              pathTo: paths.linePathsTo[p],\n              strokeWidth: Array.isArray(_this.strokeWidth) ? _this.strokeWidth[i] : _this.strokeWidth,\n              fill: 'none',\n              drawShadow: false\n            }));\n\n            elSeries.add(renderedLinePath);\n            var pathFill = fill.fillPath({\n              seriesNumber: i\n            });\n\n            var renderedAreaPath = _this.graphics.renderPaths(_objectSpread2(_objectSpread2({}, defaultRenderedPathOptions), {}, {\n              pathFrom: pathFrom === null ? paths.areaPathsFrom[p] : pathFrom,\n              pathTo: paths.areaPathsTo[p],\n              strokeWidth: 0,\n              fill: pathFill,\n              drawShadow: false\n            }));\n\n            if (w.config.chart.dropShadow.enabled) {\n              var filters = new Filters(_this.ctx);\n              var shadow = w.config.chart.dropShadow;\n              filters.dropShadow(renderedAreaPath, Object.assign({}, shadow, {\n                noUserSpaceOnUse: true\n              }), i);\n            }\n\n            elSeries.add(renderedAreaPath);\n          }\n\n          s.forEach(function (sj, j) {\n            var markers = new Markers(_this.ctx);\n            var opts = markers.getMarkerConfig({\n              cssClass: 'apexcharts-marker',\n              seriesIndex: i,\n              dataPointIndex: j\n            });\n\n            var point = _this.graphics.drawMarker(dataPointsPos[j].x, dataPointsPos[j].y, opts);\n\n            point.attr('rel', j);\n            point.attr('j', j);\n            point.attr('index', i);\n            point.node.setAttribute('default-marker-size', opts.pSize);\n\n            var elPointsWrap = _this.graphics.group({\n              class: 'apexcharts-series-markers'\n            });\n\n            if (elPointsWrap) {\n              elPointsWrap.add(point);\n            }\n\n            elPointsMain.add(elPointsWrap);\n            elSeries.add(elPointsMain);\n            var dataLabelsConfig = w.config.dataLabels;\n\n            if (dataLabelsConfig.enabled) {\n              var text = dataLabelsConfig.formatter(w.globals.series[i][j], {\n                seriesIndex: i,\n                dataPointIndex: j,\n                w: w\n              });\n              dataLabels.plotDataLabelsText({\n                x: dataPointsPos[j].x,\n                y: dataPointsPos[j].y,\n                text: text,\n                textAnchor: 'middle',\n                i: i,\n                j: i,\n                parent: elDataPointsMain,\n                offsetCorrection: false,\n                dataLabelsConfig: _objectSpread2({}, dataLabelsConfig)\n              });\n            }\n\n            elSeries.add(elDataPointsMain);\n          });\n          allSeries.push(elSeries);\n        });\n        this.drawPolygons({\n          parent: ret\n        });\n\n        if (w.config.xaxis.labels.show) {\n          var xaxisTexts = this.drawXAxisTexts();\n          ret.add(xaxisTexts);\n        }\n\n        allSeries.forEach(function (elS) {\n          ret.add(elS);\n        });\n        ret.add(this.yaxisLabels);\n        return ret;\n      }\n    }, {\n      key: \"drawPolygons\",\n      value: function drawPolygons(opts) {\n        var _this2 = this;\n\n        var w = this.w;\n        var parent = opts.parent;\n        var helpers = new CircularChartsHelpers(this.ctx);\n        var yaxisTexts = w.globals.yAxisScale[0].result.reverse();\n        var layers = yaxisTexts.length;\n        var radiusSizes = [];\n        var layerDis = this.size / (layers - 1);\n\n        for (var i = 0; i < layers; i++) {\n          radiusSizes[i] = layerDis * i;\n        }\n\n        radiusSizes.reverse();\n        var polygonStrings = [];\n        var lines = [];\n        radiusSizes.forEach(function (radiusSize, r) {\n          var polygon = Utils$1.getPolygonPos(radiusSize, _this2.dataPointsLen);\n          var string = '';\n          polygon.forEach(function (p, i) {\n            if (r === 0) {\n              var line = _this2.graphics.drawLine(p.x, p.y, 0, 0, Array.isArray(_this2.polygons.connectorColors) ? _this2.polygons.connectorColors[i] : _this2.polygons.connectorColors);\n\n              lines.push(line);\n            }\n\n            if (i === 0) {\n              _this2.yaxisLabelsTextsPos.push({\n                x: p.x,\n                y: p.y\n              });\n            }\n\n            string += p.x + ',' + p.y + ' ';\n          });\n          polygonStrings.push(string);\n        });\n        polygonStrings.forEach(function (p, i) {\n          var strokeColors = _this2.polygons.strokeColors;\n          var strokeWidth = _this2.polygons.strokeWidth;\n\n          var polygon = _this2.graphics.drawPolygon(p, Array.isArray(strokeColors) ? strokeColors[i] : strokeColors, Array.isArray(strokeWidth) ? strokeWidth[i] : strokeWidth, w.globals.radarPolygons.fill.colors[i]);\n\n          parent.add(polygon);\n        });\n        lines.forEach(function (l) {\n          parent.add(l);\n        });\n\n        if (w.config.yaxis[0].show) {\n          this.yaxisLabelsTextsPos.forEach(function (p, i) {\n            var yText = helpers.drawYAxisTexts(p.x, p.y, i, yaxisTexts[i]);\n\n            _this2.yaxisLabels.add(yText);\n          });\n        }\n      }\n    }, {\n      key: \"drawXAxisTexts\",\n      value: function drawXAxisTexts() {\n        var _this3 = this;\n\n        var w = this.w;\n        var xaxisLabelsConfig = w.config.xaxis.labels;\n        var elXAxisWrap = this.graphics.group({\n          class: 'apexcharts-xaxis'\n        });\n        var polygonPos = Utils$1.getPolygonPos(this.size, this.dataPointsLen);\n        w.globals.labels.forEach(function (label, i) {\n          var formatter = w.config.xaxis.labels.formatter;\n          var dataLabels = new DataLabels(_this3.ctx);\n\n          if (polygonPos[i]) {\n            var textPos = _this3.getTextPos(polygonPos[i], _this3.size);\n\n            var text = formatter(label, {\n              seriesIndex: -1,\n              dataPointIndex: i,\n              w: w\n            });\n            dataLabels.plotDataLabelsText({\n              x: textPos.newX,\n              y: textPos.newY,\n              text: text,\n              textAnchor: textPos.textAnchor,\n              i: i,\n              j: i,\n              parent: elXAxisWrap,\n              color: Array.isArray(xaxisLabelsConfig.style.colors) && xaxisLabelsConfig.style.colors[i] ? xaxisLabelsConfig.style.colors[i] : '#a8a8a8',\n              dataLabelsConfig: _objectSpread2({\n                textAnchor: textPos.textAnchor,\n                dropShadow: {\n                  enabled: false\n                }\n              }, xaxisLabelsConfig),\n              offsetCorrection: false\n            });\n          }\n        });\n        return elXAxisWrap;\n      }\n    }, {\n      key: \"createPaths\",\n      value: function createPaths(pos, origin) {\n        var _this4 = this;\n\n        var linePathsTo = [];\n        var linePathsFrom = [];\n        var areaPathsTo = [];\n        var areaPathsFrom = [];\n\n        if (pos.length) {\n          linePathsFrom = [this.graphics.move(origin.x, origin.y)];\n          areaPathsFrom = [this.graphics.move(origin.x, origin.y)];\n          var linePathTo = this.graphics.move(pos[0].x, pos[0].y);\n          var areaPathTo = this.graphics.move(pos[0].x, pos[0].y);\n          pos.forEach(function (p, i) {\n            linePathTo += _this4.graphics.line(p.x, p.y);\n            areaPathTo += _this4.graphics.line(p.x, p.y);\n\n            if (i === pos.length - 1) {\n              linePathTo += 'Z';\n              areaPathTo += 'Z';\n            }\n          });\n          linePathsTo.push(linePathTo);\n          areaPathsTo.push(areaPathTo);\n        }\n\n        return {\n          linePathsFrom: linePathsFrom,\n          linePathsTo: linePathsTo,\n          areaPathsFrom: areaPathsFrom,\n          areaPathsTo: areaPathsTo\n        };\n      }\n    }, {\n      key: \"getTextPos\",\n      value: function getTextPos(pos, polygonSize) {\n        var limit = 10;\n        var textAnchor = 'middle';\n        var newX = pos.x;\n        var newY = pos.y;\n\n        if (Math.abs(pos.x) >= limit) {\n          if (pos.x > 0) {\n            textAnchor = 'start';\n            newX += 10;\n          } else if (pos.x < 0) {\n            textAnchor = 'end';\n            newX -= 10;\n          }\n        } else {\n          textAnchor = 'middle';\n        }\n\n        if (Math.abs(pos.y) >= polygonSize - limit) {\n          if (pos.y < 0) {\n            newY -= 10;\n          } else if (pos.y > 0) {\n            newY += 10;\n          }\n        }\n\n        return {\n          textAnchor: textAnchor,\n          newX: newX,\n          newY: newY\n        };\n      }\n    }, {\n      key: \"getPreviousPath\",\n      value: function getPreviousPath(realIndex) {\n        var w = this.w;\n        var pathFrom = null;\n\n        for (var pp = 0; pp < w.globals.previousPaths.length; pp++) {\n          var gpp = w.globals.previousPaths[pp];\n\n          if (gpp.paths.length > 0 && parseInt(gpp.realIndex, 10) === parseInt(realIndex, 10)) {\n            if (typeof w.globals.previousPaths[pp].paths[0] !== 'undefined') {\n              pathFrom = w.globals.previousPaths[pp].paths[0].d;\n            }\n          }\n        }\n\n        return pathFrom;\n      }\n    }, {\n      key: \"getDataPointsPos\",\n      value: function getDataPointsPos(dataRadiusArr, angleArr) {\n        var dataPointsLen = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.dataPointsLen;\n        dataRadiusArr = dataRadiusArr || [];\n        angleArr = angleArr || [];\n        var dataPointsPosArray = [];\n\n        for (var j = 0; j < dataPointsLen; j++) {\n          var curPointPos = {};\n          curPointPos.x = dataRadiusArr[j] * Math.sin(angleArr[j]);\n          curPointPos.y = -dataRadiusArr[j] * Math.cos(angleArr[j]);\n          dataPointsPosArray.push(curPointPos);\n        }\n\n        return dataPointsPosArray;\n      }\n    }]);\n\n    return Radar;\n  }();\n\n  /**\n   * ApexCharts Radial Class for drawing Circle / Semi Circle Charts.\n   * @module Radial\n   **/\n\n  var Radial = /*#__PURE__*/function (_Pie) {\n    _inherits(Radial, _Pie);\n\n    var _super = _createSuper(Radial);\n\n    function Radial(ctx) {\n      var _this;\n\n      _classCallCheck(this, Radial);\n\n      _this = _super.call(this, ctx);\n      _this.ctx = ctx;\n      _this.w = ctx.w;\n      _this.animBeginArr = [0];\n      _this.animDur = 0;\n      var w = _this.w;\n      _this.startAngle = w.config.plotOptions.radialBar.startAngle;\n      _this.endAngle = w.config.plotOptions.radialBar.endAngle;\n      _this.totalAngle = Math.abs(w.config.plotOptions.radialBar.endAngle - w.config.plotOptions.radialBar.startAngle);\n      _this.trackStartAngle = w.config.plotOptions.radialBar.track.startAngle;\n      _this.trackEndAngle = w.config.plotOptions.radialBar.track.endAngle;\n      _this.donutDataLabels = _this.w.config.plotOptions.radialBar.dataLabels;\n      _this.radialDataLabels = _this.donutDataLabels; // make a copy for easy reference\n\n      if (!_this.trackStartAngle) _this.trackStartAngle = _this.startAngle;\n      if (!_this.trackEndAngle) _this.trackEndAngle = _this.endAngle;\n      if (_this.endAngle === 360) _this.endAngle = 359.99;\n      _this.margin = parseInt(w.config.plotOptions.radialBar.track.margin, 10);\n      return _this;\n    }\n\n    _createClass(Radial, [{\n      key: \"draw\",\n      value: function draw(series) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var ret = graphics.group({\n          class: 'apexcharts-radialbar'\n        });\n        if (w.globals.noData) return ret;\n        var elSeries = graphics.group();\n        var centerY = this.defaultSize / 2;\n        var centerX = w.globals.gridWidth / 2;\n        var size = this.defaultSize / 2.05;\n\n        if (!w.config.chart.sparkline.enabled) {\n          size = size - w.config.stroke.width - w.config.chart.dropShadow.blur;\n        }\n\n        var colorArr = w.globals.fill.colors;\n\n        if (w.config.plotOptions.radialBar.track.show) {\n          var elTracks = this.drawTracks({\n            size: size,\n            centerX: centerX,\n            centerY: centerY,\n            colorArr: colorArr,\n            series: series\n          });\n          elSeries.add(elTracks);\n        }\n\n        var elG = this.drawArcs({\n          size: size,\n          centerX: centerX,\n          centerY: centerY,\n          colorArr: colorArr,\n          series: series\n        });\n        var totalAngle = 360;\n\n        if (w.config.plotOptions.radialBar.startAngle < 0) {\n          totalAngle = this.totalAngle;\n        }\n\n        var angleRatio = (360 - totalAngle) / 360;\n        w.globals.radialSize = size - size * angleRatio;\n\n        if (this.radialDataLabels.value.show) {\n          var offset = Math.max(this.radialDataLabels.value.offsetY, this.radialDataLabels.name.offsetY);\n          w.globals.radialSize += offset * angleRatio;\n        }\n\n        elSeries.add(elG.g);\n\n        if (w.config.plotOptions.radialBar.hollow.position === 'front') {\n          elG.g.add(elG.elHollow);\n\n          if (elG.dataLabels) {\n            elG.g.add(elG.dataLabels);\n          }\n        }\n\n        ret.add(elSeries);\n        return ret;\n      }\n    }, {\n      key: \"drawTracks\",\n      value: function drawTracks(opts) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var g = graphics.group({\n          class: 'apexcharts-tracks'\n        });\n        var filters = new Filters(this.ctx);\n        var fill = new Fill(this.ctx);\n        var strokeWidth = this.getStrokeWidth(opts);\n        opts.size = opts.size - strokeWidth / 2;\n\n        for (var i = 0; i < opts.series.length; i++) {\n          var elRadialBarTrack = graphics.group({\n            class: 'apexcharts-radialbar-track apexcharts-track'\n          });\n          g.add(elRadialBarTrack);\n          elRadialBarTrack.attr({\n            rel: i + 1\n          });\n          opts.size = opts.size - strokeWidth - this.margin;\n          var trackConfig = w.config.plotOptions.radialBar.track;\n          var pathFill = fill.fillPath({\n            seriesNumber: 0,\n            size: opts.size,\n            fillColors: Array.isArray(trackConfig.background) ? trackConfig.background[i] : trackConfig.background,\n            solid: true\n          });\n          var startAngle = this.trackStartAngle;\n          var endAngle = this.trackEndAngle;\n          if (Math.abs(endAngle) + Math.abs(startAngle) >= 360) endAngle = 360 - Math.abs(this.startAngle) - 0.1;\n          var elPath = graphics.drawPath({\n            d: '',\n            stroke: pathFill,\n            strokeWidth: strokeWidth * parseInt(trackConfig.strokeWidth, 10) / 100,\n            fill: 'none',\n            strokeOpacity: trackConfig.opacity,\n            classes: 'apexcharts-radialbar-area'\n          });\n\n          if (trackConfig.dropShadow.enabled) {\n            var shadow = trackConfig.dropShadow;\n            filters.dropShadow(elPath, shadow);\n          }\n\n          elRadialBarTrack.add(elPath);\n          elPath.attr('id', 'apexcharts-radialbarTrack-' + i);\n          this.animatePaths(elPath, {\n            centerX: opts.centerX,\n            centerY: opts.centerY,\n            endAngle: endAngle,\n            startAngle: startAngle,\n            size: opts.size,\n            i: i,\n            totalItems: 2,\n            animBeginArr: 0,\n            dur: 0,\n            isTrack: true,\n            easing: w.globals.easing\n          });\n        }\n\n        return g;\n      }\n    }, {\n      key: \"drawArcs\",\n      value: function drawArcs(opts) {\n        var w = this.w; // size, donutSize, centerX, centerY, colorArr, lineColorArr, sectorAngleArr, series\n\n        var graphics = new Graphics(this.ctx);\n        var fill = new Fill(this.ctx);\n        var filters = new Filters(this.ctx);\n        var g = graphics.group();\n        var strokeWidth = this.getStrokeWidth(opts);\n        opts.size = opts.size - strokeWidth / 2;\n        var hollowFillID = w.config.plotOptions.radialBar.hollow.background;\n        var hollowSize = opts.size - strokeWidth * opts.series.length - this.margin * opts.series.length - strokeWidth * parseInt(w.config.plotOptions.radialBar.track.strokeWidth, 10) / 100 / 2;\n        var hollowRadius = hollowSize - w.config.plotOptions.radialBar.hollow.margin;\n\n        if (w.config.plotOptions.radialBar.hollow.image !== undefined) {\n          hollowFillID = this.drawHollowImage(opts, g, hollowSize, hollowFillID);\n        }\n\n        var elHollow = this.drawHollow({\n          size: hollowRadius,\n          centerX: opts.centerX,\n          centerY: opts.centerY,\n          fill: hollowFillID ? hollowFillID : 'transparent'\n        });\n\n        if (w.config.plotOptions.radialBar.hollow.dropShadow.enabled) {\n          var shadow = w.config.plotOptions.radialBar.hollow.dropShadow;\n          filters.dropShadow(elHollow, shadow);\n        }\n\n        var shown = 1;\n\n        if (!this.radialDataLabels.total.show && w.globals.series.length > 1) {\n          shown = 0;\n        }\n\n        var dataLabels = null;\n\n        if (this.radialDataLabels.show) {\n          dataLabels = this.renderInnerDataLabels(this.radialDataLabels, {\n            hollowSize: hollowSize,\n            centerX: opts.centerX,\n            centerY: opts.centerY,\n            opacity: shown\n          });\n        }\n\n        if (w.config.plotOptions.radialBar.hollow.position === 'back') {\n          g.add(elHollow);\n\n          if (dataLabels) {\n            g.add(dataLabels);\n          }\n        }\n\n        var reverseLoop = false;\n\n        if (w.config.plotOptions.radialBar.inverseOrder) {\n          reverseLoop = true;\n        }\n\n        for (var i = reverseLoop ? opts.series.length - 1 : 0; reverseLoop ? i >= 0 : i < opts.series.length; reverseLoop ? i-- : i++) {\n          var elRadialBarArc = graphics.group({\n            class: \"apexcharts-series apexcharts-radial-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[i])\n          });\n          g.add(elRadialBarArc);\n          elRadialBarArc.attr({\n            rel: i + 1,\n            'data:realIndex': i\n          });\n          this.ctx.series.addCollapsedClassToSeries(elRadialBarArc, i);\n          opts.size = opts.size - strokeWidth - this.margin;\n          var pathFill = fill.fillPath({\n            seriesNumber: i,\n            size: opts.size,\n            value: opts.series[i]\n          });\n          var startAngle = this.startAngle;\n          var prevStartAngle = void 0; // if data exceeds 100, make it 100\n\n          var dataValue = Utils$1.negToZero(opts.series[i] > 100 ? 100 : opts.series[i]) / 100;\n          var endAngle = Math.round(this.totalAngle * dataValue) + this.startAngle;\n          var prevEndAngle = void 0;\n\n          if (w.globals.dataChanged) {\n            prevStartAngle = this.startAngle;\n            prevEndAngle = Math.round(this.totalAngle * Utils$1.negToZero(w.globals.previousPaths[i]) / 100) + prevStartAngle;\n          }\n\n          var currFullAngle = Math.abs(endAngle) + Math.abs(startAngle);\n\n          if (currFullAngle >= 360) {\n            endAngle = endAngle - 0.01;\n          }\n\n          var prevFullAngle = Math.abs(prevEndAngle) + Math.abs(prevStartAngle);\n\n          if (prevFullAngle >= 360) {\n            prevEndAngle = prevEndAngle - 0.01;\n          }\n\n          var angle = endAngle - startAngle;\n          var dashArray = Array.isArray(w.config.stroke.dashArray) ? w.config.stroke.dashArray[i] : w.config.stroke.dashArray;\n          var elPath = graphics.drawPath({\n            d: '',\n            stroke: pathFill,\n            strokeWidth: strokeWidth,\n            fill: 'none',\n            fillOpacity: w.config.fill.opacity,\n            classes: 'apexcharts-radialbar-area apexcharts-radialbar-slice-' + i,\n            strokeDashArray: dashArray\n          });\n          Graphics.setAttrs(elPath.node, {\n            'data:angle': angle,\n            'data:value': opts.series[i]\n          });\n\n          if (w.config.chart.dropShadow.enabled) {\n            var _shadow = w.config.chart.dropShadow;\n            filters.dropShadow(elPath, _shadow, i);\n          }\n\n          filters.setSelectionFilter(elPath, 0, i);\n          this.addListeners(elPath, this.radialDataLabels);\n          elRadialBarArc.add(elPath);\n          elPath.attr({\n            index: 0,\n            j: i\n          });\n          var dur = 0;\n\n          if (this.initialAnim && !w.globals.resized && !w.globals.dataChanged) {\n            dur = (endAngle - startAngle) / 360 * w.config.chart.animations.speed;\n            this.animDur = dur / (opts.series.length * 1.2) + this.animDur;\n            this.animBeginArr.push(this.animDur);\n          }\n\n          if (w.globals.dataChanged) {\n            dur = (endAngle - startAngle) / 360 * w.config.chart.animations.dynamicAnimation.speed;\n            this.animDur = dur / (opts.series.length * 1.2) + this.animDur;\n            this.animBeginArr.push(this.animDur);\n          }\n\n          this.animatePaths(elPath, {\n            centerX: opts.centerX,\n            centerY: opts.centerY,\n            endAngle: endAngle,\n            startAngle: startAngle,\n            prevEndAngle: prevEndAngle,\n            prevStartAngle: prevStartAngle,\n            size: opts.size,\n            i: i,\n            totalItems: 2,\n            animBeginArr: this.animBeginArr,\n            dur: dur,\n            shouldSetPrevPaths: true,\n            easing: w.globals.easing\n          });\n        }\n\n        return {\n          g: g,\n          elHollow: elHollow,\n          dataLabels: dataLabels\n        };\n      }\n    }, {\n      key: \"drawHollow\",\n      value: function drawHollow(opts) {\n        var graphics = new Graphics(this.ctx);\n        var circle = graphics.drawCircle(opts.size * 2);\n        circle.attr({\n          class: 'apexcharts-radialbar-hollow',\n          cx: opts.centerX,\n          cy: opts.centerY,\n          r: opts.size,\n          fill: opts.fill\n        });\n        return circle;\n      }\n    }, {\n      key: \"drawHollowImage\",\n      value: function drawHollowImage(opts, g, hollowSize, hollowFillID) {\n        var w = this.w;\n        var fill = new Fill(this.ctx);\n        var randID = Utils$1.randomId();\n        var hollowFillImg = w.config.plotOptions.radialBar.hollow.image;\n\n        if (w.config.plotOptions.radialBar.hollow.imageClipped) {\n          fill.clippedImgArea({\n            width: hollowSize,\n            height: hollowSize,\n            image: hollowFillImg,\n            patternID: \"pattern\".concat(w.globals.cuid).concat(randID)\n          });\n          hollowFillID = \"url(#pattern\".concat(w.globals.cuid).concat(randID, \")\");\n        } else {\n          var imgWidth = w.config.plotOptions.radialBar.hollow.imageWidth;\n          var imgHeight = w.config.plotOptions.radialBar.hollow.imageHeight;\n\n          if (imgWidth === undefined && imgHeight === undefined) {\n            var image = w.globals.dom.Paper.image(hollowFillImg).loaded(function (loader) {\n              this.move(opts.centerX - loader.width / 2 + w.config.plotOptions.radialBar.hollow.imageOffsetX, opts.centerY - loader.height / 2 + w.config.plotOptions.radialBar.hollow.imageOffsetY);\n            });\n            g.add(image);\n          } else {\n            var _image = w.globals.dom.Paper.image(hollowFillImg).loaded(function (loader) {\n              this.move(opts.centerX - imgWidth / 2 + w.config.plotOptions.radialBar.hollow.imageOffsetX, opts.centerY - imgHeight / 2 + w.config.plotOptions.radialBar.hollow.imageOffsetY);\n              this.size(imgWidth, imgHeight);\n            });\n\n            g.add(_image);\n          }\n        }\n\n        return hollowFillID;\n      }\n    }, {\n      key: \"getStrokeWidth\",\n      value: function getStrokeWidth(opts) {\n        var w = this.w;\n        return opts.size * (100 - parseInt(w.config.plotOptions.radialBar.hollow.size, 10)) / 100 / (opts.series.length + 1) - this.margin;\n      }\n    }]);\n\n    return Radial;\n  }(Pie);\n\n  var Helpers = /*#__PURE__*/function () {\n    function Helpers(lineCtx) {\n      _classCallCheck(this, Helpers);\n\n      this.w = lineCtx.w;\n      this.lineCtx = lineCtx;\n    }\n\n    _createClass(Helpers, [{\n      key: \"sameValueSeriesFix\",\n      value: function sameValueSeriesFix(i, series) {\n        var w = this.w;\n\n        if (w.config.chart.type === 'line' && (w.config.fill.type === 'gradient' || w.config.fill.type[i] === 'gradient')) {\n          var coreUtils = new CoreUtils(this.lineCtx.ctx, w); // a small adjustment to allow gradient line to draw correctly for all same values\n\n          /* #fix https://github.com/apexcharts/apexcharts.js/issues/358 */\n\n          if (coreUtils.seriesHaveSameValues(i)) {\n            var gSeries = series[i].slice();\n            gSeries[gSeries.length - 1] = gSeries[gSeries.length - 1] + 0.000001;\n            series[i] = gSeries;\n          }\n        }\n\n        return series;\n      }\n    }, {\n      key: \"calculatePoints\",\n      value: function calculatePoints(_ref) {\n        var series = _ref.series,\n            realIndex = _ref.realIndex,\n            x = _ref.x,\n            y = _ref.y,\n            i = _ref.i,\n            j = _ref.j,\n            prevY = _ref.prevY;\n        var w = this.w;\n        var ptX = [];\n        var ptY = [];\n\n        if (j === 0) {\n          var xPT1st = this.lineCtx.categoryAxisCorrection + w.config.markers.offsetX; // the first point for line series\n          // we need to check whether it's not a time series, because a time series may\n          // start from the middle of the x axis\n\n          if (w.globals.isXNumeric) {\n            xPT1st = (w.globals.seriesX[realIndex][0] - w.globals.minX) / this.lineCtx.xRatio + w.config.markers.offsetX;\n          } // push 2 points for the first data values\n\n\n          ptX.push(xPT1st);\n          ptY.push(Utils$1.isNumber(series[i][0]) ? prevY + w.config.markers.offsetY : null);\n          ptX.push(x + w.config.markers.offsetX);\n          ptY.push(Utils$1.isNumber(series[i][j + 1]) ? y + w.config.markers.offsetY : null);\n        } else {\n          ptX.push(x + w.config.markers.offsetX);\n          ptY.push(Utils$1.isNumber(series[i][j + 1]) ? y + w.config.markers.offsetY : null);\n        }\n\n        var pointsPos = {\n          x: ptX,\n          y: ptY\n        };\n        return pointsPos;\n      }\n    }, {\n      key: \"checkPreviousPaths\",\n      value: function checkPreviousPaths(_ref2) {\n        var pathFromLine = _ref2.pathFromLine,\n            pathFromArea = _ref2.pathFromArea,\n            realIndex = _ref2.realIndex;\n        var w = this.w;\n\n        for (var pp = 0; pp < w.globals.previousPaths.length; pp++) {\n          var gpp = w.globals.previousPaths[pp];\n\n          if ((gpp.type === 'line' || gpp.type === 'area') && gpp.paths.length > 0 && parseInt(gpp.realIndex, 10) === parseInt(realIndex, 10)) {\n            if (gpp.type === 'line') {\n              this.lineCtx.appendPathFrom = false;\n              pathFromLine = w.globals.previousPaths[pp].paths[0].d;\n            } else if (gpp.type === 'area') {\n              this.lineCtx.appendPathFrom = false;\n              pathFromArea = w.globals.previousPaths[pp].paths[0].d;\n\n              if (w.config.stroke.show && w.globals.previousPaths[pp].paths[1]) {\n                pathFromLine = w.globals.previousPaths[pp].paths[1].d;\n              }\n            }\n          }\n        }\n\n        return {\n          pathFromLine: pathFromLine,\n          pathFromArea: pathFromArea\n        };\n      }\n    }, {\n      key: \"determineFirstPrevY\",\n      value: function determineFirstPrevY(_ref3) {\n        var i = _ref3.i,\n            series = _ref3.series,\n            prevY = _ref3.prevY,\n            lineYPosition = _ref3.lineYPosition;\n        var w = this.w;\n\n        if (typeof series[i][0] !== 'undefined') {\n          if (w.config.chart.stacked) {\n            if (i > 0) {\n              // 1st y value of previous series\n              lineYPosition = this.lineCtx.prevSeriesY[i - 1][0];\n            } else {\n              // the first series will not have prevY values\n              lineYPosition = this.lineCtx.zeroY;\n            }\n          } else {\n            lineYPosition = this.lineCtx.zeroY;\n          }\n\n          prevY = lineYPosition - series[i][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] + (this.lineCtx.isReversed ? series[i][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] : 0) * 2;\n        } else {\n          // the first value in the current series is null\n          if (w.config.chart.stacked && i > 0 && typeof series[i][0] === 'undefined') {\n            // check for undefined value (undefined value will occur when we clear the series while user clicks on legend to hide serieses)\n            for (var s = i - 1; s >= 0; s--) {\n              // for loop to get to 1st previous value until we get it\n              if (series[s][0] !== null && typeof series[s][0] !== 'undefined') {\n                lineYPosition = this.lineCtx.prevSeriesY[s][0];\n                prevY = lineYPosition;\n                break;\n              }\n            }\n          }\n        }\n\n        return {\n          prevY: prevY,\n          lineYPosition: lineYPosition\n        };\n      }\n    }]);\n\n    return Helpers;\n  }();\n\n  /**\n   * ApexCharts Line Class responsible for drawing Line / Area Charts.\n   * This class is also responsible for generating values for Bubble/Scatter charts, so need to rename it to Axis Charts to avoid confusions\n   * @module Line\n   **/\n\n  var Line = /*#__PURE__*/function () {\n    function Line(ctx, xyRatios, isPointsChart) {\n      _classCallCheck(this, Line);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.xyRatios = xyRatios;\n      this.pointsChart = !(this.w.config.chart.type !== 'bubble' && this.w.config.chart.type !== 'scatter') || isPointsChart;\n      this.scatter = new Scatter(this.ctx);\n      this.noNegatives = this.w.globals.minX === Number.MAX_VALUE;\n      this.lineHelpers = new Helpers(this);\n      this.markers = new Markers(this.ctx);\n      this.prevSeriesY = [];\n      this.categoryAxisCorrection = 0;\n      this.yaxisIndex = 0;\n    }\n\n    _createClass(Line, [{\n      key: \"draw\",\n      value: function draw(series, ptype, seriesIndex) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var type = w.globals.comboCharts ? ptype : w.config.chart.type;\n        var ret = graphics.group({\n          class: \"apexcharts-\".concat(type, \"-series apexcharts-plot-series\")\n        });\n        var coreUtils = new CoreUtils(this.ctx, w);\n        this.yRatio = this.xyRatios.yRatio;\n        this.zRatio = this.xyRatios.zRatio;\n        this.xRatio = this.xyRatios.xRatio;\n        this.baseLineY = this.xyRatios.baseLineY;\n        series = coreUtils.getLogSeries(series);\n        this.yRatio = coreUtils.getLogYRatios(this.yRatio); // push all series in an array, so we can draw in reverse order (for stacked charts)\n\n        var allSeries = [];\n\n        for (var i = 0; i < series.length; i++) {\n          series = this.lineHelpers.sameValueSeriesFix(i, series);\n          var realIndex = w.globals.comboCharts ? seriesIndex[i] : i;\n\n          this._initSerieVariables(series, i, realIndex);\n\n          var yArrj = []; // hold y values of current iterating series\n\n          var xArrj = []; // hold x values of current iterating series\n\n          var x = w.globals.padHorizontal + this.categoryAxisCorrection;\n          var y = 1;\n          var linePaths = [];\n          var areaPaths = [];\n          this.ctx.series.addCollapsedClassToSeries(this.elSeries, realIndex);\n\n          if (w.globals.isXNumeric && w.globals.seriesX.length > 0) {\n            x = (w.globals.seriesX[realIndex][0] - w.globals.minX) / this.xRatio;\n          }\n\n          xArrj.push(x);\n          var pX = x;\n          var pY = void 0;\n          var prevX = pX;\n          var prevY = this.zeroY;\n          var lineYPosition = 0; // the first value in the current series is not null or undefined\n\n          var firstPrevY = this.lineHelpers.determineFirstPrevY({\n            i: i,\n            series: series,\n            prevY: prevY,\n            lineYPosition: lineYPosition\n          });\n          prevY = firstPrevY.prevY;\n          yArrj.push(prevY);\n          pY = prevY;\n\n          var pathsFrom = this._calculatePathsFrom({\n            series: series,\n            i: i,\n            realIndex: realIndex,\n            prevX: prevX,\n            prevY: prevY\n          });\n\n          var paths = this._iterateOverDataPoints({\n            series: series,\n            realIndex: realIndex,\n            i: i,\n            x: x,\n            y: y,\n            pX: pX,\n            pY: pY,\n            pathsFrom: pathsFrom,\n            linePaths: linePaths,\n            areaPaths: areaPaths,\n            seriesIndex: seriesIndex,\n            lineYPosition: lineYPosition,\n            xArrj: xArrj,\n            yArrj: yArrj\n          });\n\n          this._handlePaths({\n            type: type,\n            realIndex: realIndex,\n            i: i,\n            paths: paths\n          });\n\n          this.elSeries.add(this.elPointsMain);\n          this.elSeries.add(this.elDataLabelsWrap);\n          allSeries.push(this.elSeries);\n        }\n\n        if (w.config.chart.stacked) {\n          for (var s = allSeries.length; s > 0; s--) {\n            ret.add(allSeries[s - 1]);\n          }\n        } else {\n          for (var _s = 0; _s < allSeries.length; _s++) {\n            ret.add(allSeries[_s]);\n          }\n        }\n\n        return ret;\n      }\n    }, {\n      key: \"_initSerieVariables\",\n      value: function _initSerieVariables(series, i, realIndex) {\n        var w = this.w;\n        var graphics = new Graphics(this.ctx); // width divided into equal parts\n\n        this.xDivision = w.globals.gridWidth / (w.globals.dataPoints - (w.config.xaxis.tickPlacement === 'on' ? 1 : 0));\n        this.strokeWidth = Array.isArray(w.config.stroke.width) ? w.config.stroke.width[realIndex] : w.config.stroke.width;\n\n        if (this.yRatio.length > 1) {\n          this.yaxisIndex = realIndex;\n        }\n\n        this.isReversed = w.config.yaxis[this.yaxisIndex] && w.config.yaxis[this.yaxisIndex].reversed; // zeroY is the 0 value in y series which can be used in negative charts\n\n        this.zeroY = w.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? w.globals.gridHeight : 0) + (this.isReversed ? this.baseLineY[this.yaxisIndex] * 2 : 0);\n        this.areaBottomY = this.zeroY;\n\n        if (this.zeroY > w.globals.gridHeight || w.config.plotOptions.area.fillTo === 'end') {\n          this.areaBottomY = w.globals.gridHeight;\n        }\n\n        this.categoryAxisCorrection = this.xDivision / 2; // el to which series will be drawn\n\n        this.elSeries = graphics.group({\n          class: \"apexcharts-series\",\n          seriesName: Utils$1.escapeString(w.globals.seriesNames[realIndex])\n        }); // points\n\n        this.elPointsMain = graphics.group({\n          class: 'apexcharts-series-markers-wrap',\n          'data:realIndex': realIndex\n        }); // eldatalabels\n\n        this.elDataLabelsWrap = graphics.group({\n          class: 'apexcharts-datalabels',\n          'data:realIndex': realIndex\n        });\n        var longestSeries = series[i].length === w.globals.dataPoints;\n        this.elSeries.attr({\n          'data:longestSeries': longestSeries,\n          rel: i + 1,\n          'data:realIndex': realIndex\n        });\n        this.appendPathFrom = true;\n      }\n    }, {\n      key: \"_calculatePathsFrom\",\n      value: function _calculatePathsFrom(_ref) {\n        var series = _ref.series,\n            i = _ref.i,\n            realIndex = _ref.realIndex,\n            prevX = _ref.prevX,\n            prevY = _ref.prevY;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var linePath, areaPath, pathFromLine, pathFromArea;\n\n        if (series[i][0] === null) {\n          // when the first value itself is null, we need to move the pointer to a location where a null value is not found\n          for (var s = 0; s < series[i].length; s++) {\n            if (series[i][s] !== null) {\n              prevX = this.xDivision * s;\n              prevY = this.zeroY - series[i][s] / this.yRatio[this.yaxisIndex];\n              linePath = graphics.move(prevX, prevY);\n              areaPath = graphics.move(prevX, this.areaBottomY);\n              break;\n            }\n          }\n        } else {\n          linePath = graphics.move(prevX, prevY);\n          areaPath = graphics.move(prevX, this.areaBottomY) + graphics.line(prevX, prevY);\n        }\n\n        pathFromLine = graphics.move(-1, this.zeroY) + graphics.line(-1, this.zeroY);\n        pathFromArea = graphics.move(-1, this.zeroY) + graphics.line(-1, this.zeroY);\n\n        if (w.globals.previousPaths.length > 0) {\n          var pathFrom = this.lineHelpers.checkPreviousPaths({\n            pathFromLine: pathFromLine,\n            pathFromArea: pathFromArea,\n            realIndex: realIndex\n          });\n          pathFromLine = pathFrom.pathFromLine;\n          pathFromArea = pathFrom.pathFromArea;\n        }\n\n        return {\n          prevX: prevX,\n          prevY: prevY,\n          linePath: linePath,\n          areaPath: areaPath,\n          pathFromLine: pathFromLine,\n          pathFromArea: pathFromArea\n        };\n      }\n    }, {\n      key: \"_handlePaths\",\n      value: function _handlePaths(_ref2) {\n        var type = _ref2.type,\n            realIndex = _ref2.realIndex,\n            i = _ref2.i,\n            paths = _ref2.paths;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var fill = new Fill(this.ctx); // push all current y values array to main PrevY Array\n\n        this.prevSeriesY.push(paths.yArrj); // push all x val arrays into main xArr\n\n        w.globals.seriesXvalues[realIndex] = paths.xArrj;\n        w.globals.seriesYvalues[realIndex] = paths.yArrj;\n        var forecast = w.config.forecastDataPoints;\n\n        if (forecast.count > 0) {\n          var forecastCutoff = w.globals.seriesXvalues[realIndex][w.globals.seriesXvalues[realIndex].length - forecast.count - 1];\n          var elForecastMask = graphics.drawRect(forecastCutoff, 0, w.globals.gridWidth, w.globals.gridHeight, 0);\n          w.globals.dom.elForecastMask.appendChild(elForecastMask.node);\n          var elNonForecastMask = graphics.drawRect(0, 0, forecastCutoff, w.globals.gridHeight, 0);\n          w.globals.dom.elNonForecastMask.appendChild(elNonForecastMask.node);\n        } // these elements will be shown after area path animation completes\n\n\n        if (!this.pointsChart) {\n          w.globals.delayedElements.push({\n            el: this.elPointsMain.node,\n            index: realIndex\n          });\n        }\n\n        var defaultRenderedPathOptions = {\n          i: i,\n          realIndex: realIndex,\n          animationDelay: i,\n          initialSpeed: w.config.chart.animations.speed,\n          dataChangeSpeed: w.config.chart.animations.dynamicAnimation.speed,\n          className: \"apexcharts-\".concat(type)\n        };\n\n        if (type === 'area') {\n          var pathFill = fill.fillPath({\n            seriesNumber: realIndex\n          });\n\n          for (var p = 0; p < paths.areaPaths.length; p++) {\n            var renderedPath = graphics.renderPaths(_objectSpread2(_objectSpread2({}, defaultRenderedPathOptions), {}, {\n              pathFrom: paths.pathFromArea,\n              pathTo: paths.areaPaths[p],\n              stroke: 'none',\n              strokeWidth: 0,\n              strokeLineCap: null,\n              fill: pathFill\n            }));\n            this.elSeries.add(renderedPath);\n          }\n        }\n\n        if (w.config.stroke.show && !this.pointsChart) {\n          var lineFill = null;\n\n          if (type === 'line') {\n            // fillable lines only for lineChart\n            lineFill = fill.fillPath({\n              seriesNumber: realIndex,\n              i: i\n            });\n          } else {\n            lineFill = w.globals.stroke.colors[realIndex];\n          }\n\n          for (var _p = 0; _p < paths.linePaths.length; _p++) {\n            var linePathCommonOpts = _objectSpread2(_objectSpread2({}, defaultRenderedPathOptions), {}, {\n              pathFrom: paths.pathFromLine,\n              pathTo: paths.linePaths[_p],\n              stroke: lineFill,\n              strokeWidth: this.strokeWidth,\n              strokeLineCap: w.config.stroke.lineCap,\n              fill: 'none'\n            });\n\n            var _renderedPath = graphics.renderPaths(linePathCommonOpts);\n\n            this.elSeries.add(_renderedPath);\n\n            if (forecast.count > 0) {\n              var renderedForecastPath = graphics.renderPaths(linePathCommonOpts);\n              renderedForecastPath.node.setAttribute('stroke-dasharray', forecast.dashArray);\n\n              if (forecast.strokeWidth) {\n                renderedForecastPath.node.setAttribute('stroke-width', forecast.strokeWidth);\n              }\n\n              this.elSeries.add(renderedForecastPath);\n              renderedForecastPath.attr('clip-path', \"url(#forecastMask\".concat(w.globals.cuid, \")\"));\n\n              _renderedPath.attr('clip-path', \"url(#nonForecastMask\".concat(w.globals.cuid, \")\"));\n            }\n          }\n        }\n      }\n    }, {\n      key: \"_iterateOverDataPoints\",\n      value: function _iterateOverDataPoints(_ref3) {\n        var series = _ref3.series,\n            realIndex = _ref3.realIndex,\n            i = _ref3.i,\n            x = _ref3.x,\n            y = _ref3.y,\n            pX = _ref3.pX,\n            pY = _ref3.pY,\n            pathsFrom = _ref3.pathsFrom,\n            linePaths = _ref3.linePaths,\n            areaPaths = _ref3.areaPaths,\n            seriesIndex = _ref3.seriesIndex,\n            lineYPosition = _ref3.lineYPosition,\n            xArrj = _ref3.xArrj,\n            yArrj = _ref3.yArrj;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var yRatio = this.yRatio;\n        var prevY = pathsFrom.prevY,\n            linePath = pathsFrom.linePath,\n            areaPath = pathsFrom.areaPath,\n            pathFromLine = pathsFrom.pathFromLine,\n            pathFromArea = pathsFrom.pathFromArea;\n        var minY = Utils$1.isNumber(w.globals.minYArr[realIndex]) ? w.globals.minYArr[realIndex] : w.globals.minY;\n        var iterations = w.globals.dataPoints > 1 ? w.globals.dataPoints - 1 : w.globals.dataPoints;\n\n        for (var j = 0; j < iterations; j++) {\n          var isNull = typeof series[i][j + 1] === 'undefined' || series[i][j + 1] === null;\n\n          if (w.globals.isXNumeric) {\n            var sX = w.globals.seriesX[realIndex][j + 1];\n\n            if (typeof w.globals.seriesX[realIndex][j + 1] === 'undefined') {\n              /* fix #374 */\n              sX = w.globals.seriesX[realIndex][iterations - 1];\n            }\n\n            x = (sX - w.globals.minX) / this.xRatio;\n          } else {\n            x = x + this.xDivision;\n          }\n\n          if (w.config.chart.stacked) {\n            if (i > 0 && w.globals.collapsedSeries.length < w.config.series.length - 1) {\n              // a collapsed series in a stacked bar chart may provide wrong result for the next series, hence find the prevIndex of prev series which is not collapsed - fixes apexcharts.js#1372\n              var prevIndex = function prevIndex(pi) {\n                var pii = pi;\n\n                for (var cpi = 0; cpi < w.globals.series.length; cpi++) {\n                  if (w.globals.collapsedSeriesIndices.indexOf(pi) > -1) {\n                    pii--;\n                    break;\n                  }\n                }\n\n                return pii >= 0 ? pii : 0;\n              };\n\n              lineYPosition = this.prevSeriesY[prevIndex(i - 1)][j + 1];\n            } else {\n              // the first series will not have prevY values\n              lineYPosition = this.zeroY;\n            }\n          } else {\n            lineYPosition = this.zeroY;\n          }\n\n          if (isNull) {\n            y = lineYPosition - minY / yRatio[this.yaxisIndex] + (this.isReversed ? minY / yRatio[this.yaxisIndex] : 0) * 2;\n          } else {\n            y = lineYPosition - series[i][j + 1] / yRatio[this.yaxisIndex] + (this.isReversed ? series[i][j + 1] / yRatio[this.yaxisIndex] : 0) * 2;\n          } // push current X\n\n\n          xArrj.push(x); // push current Y that will be used as next series's bottom position\n\n          yArrj.push(y);\n          var pointsPos = this.lineHelpers.calculatePoints({\n            series: series,\n            x: x,\n            y: y,\n            realIndex: realIndex,\n            i: i,\n            j: j,\n            prevY: prevY\n          });\n\n          var calculatedPaths = this._createPaths({\n            series: series,\n            i: i,\n            realIndex: realIndex,\n            j: j,\n            x: x,\n            y: y,\n            pX: pX,\n            pY: pY,\n            linePath: linePath,\n            areaPath: areaPath,\n            linePaths: linePaths,\n            areaPaths: areaPaths,\n            seriesIndex: seriesIndex\n          });\n\n          areaPaths = calculatedPaths.areaPaths;\n          linePaths = calculatedPaths.linePaths;\n          pX = calculatedPaths.pX;\n          pY = calculatedPaths.pY;\n          areaPath = calculatedPaths.areaPath;\n          linePath = calculatedPaths.linePath;\n\n          if (this.appendPathFrom) {\n            pathFromLine = pathFromLine + graphics.line(x, this.zeroY);\n            pathFromArea = pathFromArea + graphics.line(x, this.zeroY);\n          }\n\n          this.handleNullDataPoints(series, pointsPos, i, j, realIndex);\n\n          this._handleMarkersAndLabels({\n            pointsPos: pointsPos,\n            series: series,\n            x: x,\n            y: y,\n            prevY: prevY,\n            i: i,\n            j: j,\n            realIndex: realIndex\n          });\n        }\n\n        return {\n          yArrj: yArrj,\n          xArrj: xArrj,\n          pathFromArea: pathFromArea,\n          areaPaths: areaPaths,\n          pathFromLine: pathFromLine,\n          linePaths: linePaths\n        };\n      }\n    }, {\n      key: \"_handleMarkersAndLabels\",\n      value: function _handleMarkersAndLabels(_ref4) {\n        var pointsPos = _ref4.pointsPos;\n            _ref4.series;\n            _ref4.x;\n            _ref4.y;\n            _ref4.prevY;\n            var i = _ref4.i,\n            j = _ref4.j,\n            realIndex = _ref4.realIndex;\n        var w = this.w;\n        var dataLabels = new DataLabels(this.ctx);\n\n        if (!this.pointsChart) {\n          if (w.globals.series[i].length > 1) {\n            this.elPointsMain.node.classList.add('apexcharts-element-hidden');\n          }\n\n          var elPointsWrap = this.markers.plotChartMarkers(pointsPos, realIndex, j + 1);\n\n          if (elPointsWrap !== null) {\n            this.elPointsMain.add(elPointsWrap);\n          }\n        } else {\n          // scatter / bubble chart points creation\n          this.scatter.draw(this.elSeries, j, {\n            realIndex: realIndex,\n            pointsPos: pointsPos,\n            zRatio: this.zRatio,\n            elParent: this.elPointsMain\n          });\n        }\n\n        var drawnLabels = dataLabels.drawDataLabel(pointsPos, realIndex, j + 1, null);\n\n        if (drawnLabels !== null) {\n          this.elDataLabelsWrap.add(drawnLabels);\n        }\n      }\n    }, {\n      key: \"_createPaths\",\n      value: function _createPaths(_ref5) {\n        var series = _ref5.series,\n            i = _ref5.i,\n            realIndex = _ref5.realIndex,\n            j = _ref5.j,\n            x = _ref5.x,\n            y = _ref5.y,\n            pX = _ref5.pX,\n            pY = _ref5.pY,\n            linePath = _ref5.linePath,\n            areaPath = _ref5.areaPath,\n            linePaths = _ref5.linePaths,\n            areaPaths = _ref5.areaPaths,\n            seriesIndex = _ref5.seriesIndex;\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var curve = w.config.stroke.curve;\n        var areaBottomY = this.areaBottomY;\n\n        if (Array.isArray(w.config.stroke.curve)) {\n          if (Array.isArray(seriesIndex)) {\n            curve = w.config.stroke.curve[seriesIndex[i]];\n          } else {\n            curve = w.config.stroke.curve[i];\n          }\n        } // logic of smooth curve derived from chartist\n        // CREDITS: https://gionkunz.github.io/chartist-js/\n\n\n        if (curve === 'smooth') {\n          var length = (x - pX) * 0.35;\n\n          if (w.globals.hasNullValues) {\n            if (series[i][j] !== null) {\n              if (series[i][j + 1] !== null) {\n                linePath = graphics.move(pX, pY) + graphics.curve(pX + length, pY, x - length, y, x + 1, y);\n                areaPath = graphics.move(pX + 1, pY) + graphics.curve(pX + length, pY, x - length, y, x + 1, y) + graphics.line(x, areaBottomY) + graphics.line(pX, areaBottomY) + 'z';\n              } else {\n                linePath = graphics.move(pX, pY);\n                areaPath = graphics.move(pX, pY) + 'z';\n              }\n            }\n\n            linePaths.push(linePath);\n            areaPaths.push(areaPath);\n          } else {\n            linePath = linePath + graphics.curve(pX + length, pY, x - length, y, x, y);\n            areaPath = areaPath + graphics.curve(pX + length, pY, x - length, y, x, y);\n          }\n\n          pX = x;\n          pY = y;\n\n          if (j === series[i].length - 2) {\n            // last loop, close path\n            areaPath = areaPath + graphics.curve(pX, pY, x, y, x, areaBottomY) + graphics.move(x, y) + 'z';\n\n            if (!w.globals.hasNullValues) {\n              linePaths.push(linePath);\n              areaPaths.push(areaPath);\n            }\n          }\n        } else {\n          if (series[i][j + 1] === null) {\n            linePath = linePath + graphics.move(x, y);\n            var numericOrCatX = w.globals.isXNumeric ? (w.globals.seriesX[realIndex][j] - w.globals.minX) / this.xRatio : x - this.xDivision;\n            areaPath = areaPath + graphics.line(numericOrCatX, areaBottomY) + graphics.move(x, y) + 'z';\n          }\n\n          if (series[i][j] === null) {\n            linePath = linePath + graphics.move(x, y);\n            areaPath = areaPath + graphics.move(x, areaBottomY);\n          }\n\n          if (curve === 'stepline') {\n            linePath = linePath + graphics.line(x, null, 'H') + graphics.line(null, y, 'V');\n            areaPath = areaPath + graphics.line(x, null, 'H') + graphics.line(null, y, 'V');\n          } else if (curve === 'straight') {\n            linePath = linePath + graphics.line(x, y);\n            areaPath = areaPath + graphics.line(x, y);\n          }\n\n          if (j === series[i].length - 2) {\n            // last loop, close path\n            areaPath = areaPath + graphics.line(x, areaBottomY) + graphics.move(x, y) + 'z';\n            linePaths.push(linePath);\n            areaPaths.push(areaPath);\n          }\n        }\n\n        return {\n          linePaths: linePaths,\n          areaPaths: areaPaths,\n          pX: pX,\n          pY: pY,\n          linePath: linePath,\n          areaPath: areaPath\n        };\n      }\n    }, {\n      key: \"handleNullDataPoints\",\n      value: function handleNullDataPoints(series, pointsPos, i, j, realIndex) {\n        var w = this.w;\n\n        if (series[i][j] === null && w.config.markers.showNullDataPoints || series[i].length === 1) {\n          // fixes apexcharts.js#1282, #1252\n          var elPointsWrap = this.markers.plotChartMarkers(pointsPos, realIndex, j + 1, this.strokeWidth - w.config.markers.strokeWidth / 2, true);\n\n          if (elPointsWrap !== null) {\n            this.elPointsMain.add(elPointsWrap);\n          }\n        }\n      }\n    }]);\n\n    return Line;\n  }();\n\n  /*\n   * treemap-squarify.js - open source implementation of squarified treemaps\n   *\n   * Treemap Squared 0.5 - Treemap Charting library\n   *\n   * https://github.com/imranghory/treemap-squared/\n   *\n   * Copyright (c) 2012 Imran Ghory (imranghory@gmail.com)\n   * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.\n   *\n   *\n   * Implementation of the squarify treemap algorithm described in:\n   *\n   * Bruls, Mark; Huizing, Kees; van Wijk, Jarke J. (2000), \"Squarified treemaps\"\n   * in de Leeuw, W.; van Liere, R., Data Visualization 2000:\n   * Proc. Joint Eurographics and IEEE TCVG Symp. on Visualization, Springer-Verlag, pp. 33–42.\n   *\n   * Paper is available online at: http://www.win.tue.nl/~vanwijk/stm.pdf\n   *\n   * The code in this file is completeley decoupled from the drawing code so it should be trivial\n   * to port it to any other vector drawing library. Given an array of datapoints this library returns\n   * an array of cartesian coordinates that represent the rectangles that make up the treemap.\n   *\n   * The library also supports multidimensional data (nested treemaps) and performs normalization on the data.\n   *\n   * See the README file for more details.\n   */\n  window.TreemapSquared = {};\n\n  (function () {\n\n    window.TreemapSquared.generate = function () {\n      function Container(xoffset, yoffset, width, height) {\n        this.xoffset = xoffset; // offset from the the top left hand corner\n\n        this.yoffset = yoffset; // ditto\n\n        this.height = height;\n        this.width = width;\n\n        this.shortestEdge = function () {\n          return Math.min(this.height, this.width);\n        }; // getCoordinates - for a row of boxes which we've placed\n        //                  return an array of their cartesian coordinates\n\n\n        this.getCoordinates = function (row) {\n          var coordinates = [];\n          var subxoffset = this.xoffset,\n              subyoffset = this.yoffset; //our offset within the container\n\n          var areawidth = sumArray(row) / this.height;\n          var areaheight = sumArray(row) / this.width;\n          var i;\n\n          if (this.width >= this.height) {\n            for (i = 0; i < row.length; i++) {\n              coordinates.push([subxoffset, subyoffset, subxoffset + areawidth, subyoffset + row[i] / areawidth]);\n              subyoffset = subyoffset + row[i] / areawidth;\n            }\n          } else {\n            for (i = 0; i < row.length; i++) {\n              coordinates.push([subxoffset, subyoffset, subxoffset + row[i] / areaheight, subyoffset + areaheight]);\n              subxoffset = subxoffset + row[i] / areaheight;\n            }\n          }\n\n          return coordinates;\n        }; // cutArea - once we've placed some boxes into an row we then need to identify the remaining area,\n        //           this function takes the area of the boxes we've placed and calculates the location and\n        //           dimensions of the remaining space and returns a container box defined by the remaining area\n\n\n        this.cutArea = function (area) {\n          var newcontainer;\n\n          if (this.width >= this.height) {\n            var areawidth = area / this.height;\n            var newwidth = this.width - areawidth;\n            newcontainer = new Container(this.xoffset + areawidth, this.yoffset, newwidth, this.height);\n          } else {\n            var areaheight = area / this.width;\n            var newheight = this.height - areaheight;\n            newcontainer = new Container(this.xoffset, this.yoffset + areaheight, this.width, newheight);\n          }\n\n          return newcontainer;\n        };\n      } // normalize - the Bruls algorithm assumes we're passing in areas that nicely fit into our\n      //             container box, this method takes our raw data and normalizes the data values into\n      //             area values so that this assumption is valid.\n\n\n      function normalize(data, area) {\n        var normalizeddata = [];\n        var sum = sumArray(data);\n        var multiplier = area / sum;\n        var i;\n\n        for (i = 0; i < data.length; i++) {\n          normalizeddata[i] = data[i] * multiplier;\n        }\n\n        return normalizeddata;\n      } // treemapMultidimensional - takes multidimensional data (aka [[23,11],[11,32]] - nested array)\n      //                           and recursively calls itself using treemapSingledimensional\n      //                           to create a patchwork of treemaps and merge them\n\n\n      function treemapMultidimensional(data, width, height, xoffset, yoffset) {\n        xoffset = typeof xoffset === 'undefined' ? 0 : xoffset;\n        yoffset = typeof yoffset === 'undefined' ? 0 : yoffset;\n        var mergeddata = [];\n        var mergedtreemap;\n        var results = [];\n        var i;\n\n        if (isArray(data[0])) {\n          // if we've got more dimensions of depth\n          for (i = 0; i < data.length; i++) {\n            mergeddata[i] = sumMultidimensionalArray(data[i]);\n          }\n\n          mergedtreemap = treemapSingledimensional(mergeddata, width, height, xoffset, yoffset);\n\n          for (i = 0; i < data.length; i++) {\n            results.push(treemapMultidimensional(data[i], mergedtreemap[i][2] - mergedtreemap[i][0], mergedtreemap[i][3] - mergedtreemap[i][1], mergedtreemap[i][0], mergedtreemap[i][1]));\n          }\n        } else {\n          results = treemapSingledimensional(data, width, height, xoffset, yoffset);\n        }\n\n        return results;\n      } // treemapSingledimensional - simple wrapper around squarify\n\n\n      function treemapSingledimensional(data, width, height, xoffset, yoffset) {\n        xoffset = typeof xoffset === 'undefined' ? 0 : xoffset;\n        yoffset = typeof yoffset === 'undefined' ? 0 : yoffset;\n        var rawtreemap = squarify(normalize(data, width * height), [], new Container(xoffset, yoffset, width, height), []);\n        return flattenTreemap(rawtreemap);\n      } // flattenTreemap - squarify implementation returns an array of arrays of coordinates\n      //                  because we have a new array everytime we switch to building a new row\n      //                  this converts it into an array of coordinates.\n\n\n      function flattenTreemap(rawtreemap) {\n        var flattreemap = [];\n        var i, j;\n\n        for (i = 0; i < rawtreemap.length; i++) {\n          for (j = 0; j < rawtreemap[i].length; j++) {\n            flattreemap.push(rawtreemap[i][j]);\n          }\n        }\n\n        return flattreemap;\n      } // squarify  - as per the Bruls paper\n      //             plus coordinates stack and containers so we get\n      //             usable data out of it\n\n\n      function squarify(data, currentrow, container, stack) {\n        var length;\n        var nextdatapoint;\n        var newcontainer;\n\n        if (data.length === 0) {\n          stack.push(container.getCoordinates(currentrow));\n          return;\n        }\n\n        length = container.shortestEdge();\n        nextdatapoint = data[0];\n\n        if (improvesRatio(currentrow, nextdatapoint, length)) {\n          currentrow.push(nextdatapoint);\n          squarify(data.slice(1), currentrow, container, stack);\n        } else {\n          newcontainer = container.cutArea(sumArray(currentrow), stack);\n          stack.push(container.getCoordinates(currentrow));\n          squarify(data, [], newcontainer, stack);\n        }\n\n        return stack;\n      } // improveRatio - implements the worse calculation and comparision as given in Bruls\n      //                (note the error in the original paper; fixed here)\n\n\n      function improvesRatio(currentrow, nextnode, length) {\n        var newrow;\n\n        if (currentrow.length === 0) {\n          return true;\n        }\n\n        newrow = currentrow.slice();\n        newrow.push(nextnode);\n        var currentratio = calculateRatio(currentrow, length);\n        var newratio = calculateRatio(newrow, length); // the pseudocode in the Bruls paper has the direction of the comparison\n        // wrong, this is the correct one.\n\n        return currentratio >= newratio;\n      } // calculateRatio - calculates the maximum width to height ratio of the\n      //                  boxes in this row\n\n\n      function calculateRatio(row, length) {\n        var min = Math.min.apply(Math, row);\n        var max = Math.max.apply(Math, row);\n        var sum = sumArray(row);\n        return Math.max(Math.pow(length, 2) * max / Math.pow(sum, 2), Math.pow(sum, 2) / (Math.pow(length, 2) * min));\n      } // isArray - checks if arr is an array\n\n\n      function isArray(arr) {\n        return arr && arr.constructor === Array;\n      } // sumArray - sums a single dimensional array\n\n\n      function sumArray(arr) {\n        var sum = 0;\n        var i;\n\n        for (i = 0; i < arr.length; i++) {\n          sum += arr[i];\n        }\n\n        return sum;\n      } // sumMultidimensionalArray - sums the values in a nested array (aka [[0,1],[[2,3]]])\n\n\n      function sumMultidimensionalArray(arr) {\n        var i,\n            total = 0;\n\n        if (isArray(arr[0])) {\n          for (i = 0; i < arr.length; i++) {\n            total += sumMultidimensionalArray(arr[i]);\n          }\n        } else {\n          total = sumArray(arr);\n        }\n\n        return total;\n      }\n\n      return treemapMultidimensional;\n    }();\n  })();\n\n  /**\n   * ApexCharts TreemapChart Class.\n   * @module TreemapChart\n   **/\n\n  var TreemapChart = /*#__PURE__*/function () {\n    function TreemapChart(ctx, xyRatios) {\n      _classCallCheck(this, TreemapChart);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.strokeWidth = this.w.config.stroke.width;\n      this.helpers = new TreemapHelpers(ctx);\n      this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation;\n      this.labels = [];\n    }\n\n    _createClass(TreemapChart, [{\n      key: \"draw\",\n      value: function draw(series) {\n        var _this = this;\n\n        var w = this.w;\n        var graphics = new Graphics(this.ctx);\n        var fill = new Fill(this.ctx);\n        var ret = graphics.group({\n          class: 'apexcharts-treemap'\n        });\n        if (w.globals.noData) return ret;\n        var ser = [];\n        series.forEach(function (s) {\n          var d = s.map(function (v) {\n            return Math.abs(v);\n          });\n          ser.push(d);\n        });\n        this.negRange = this.helpers.checkColorRange();\n        w.config.series.forEach(function (s, i) {\n          s.data.forEach(function (l) {\n            if (!Array.isArray(_this.labels[i])) _this.labels[i] = [];\n\n            _this.labels[i].push(l.x);\n          });\n        });\n        var nodes = window.TreemapSquared.generate(ser, w.globals.gridWidth, w.globals.gridHeight);\n        nodes.forEach(function (node, i) {\n          var elSeries = graphics.group({\n            class: \"apexcharts-series apexcharts-treemap-series\",\n            seriesName: Utils$1.escapeString(w.globals.seriesNames[i]),\n            rel: i + 1,\n            'data:realIndex': i\n          });\n\n          if (w.config.chart.dropShadow.enabled) {\n            var shadow = w.config.chart.dropShadow;\n            var filters = new Filters(_this.ctx);\n            filters.dropShadow(ret, shadow, i);\n          }\n\n          var elDataLabelWrap = graphics.group({\n            class: 'apexcharts-data-labels'\n          });\n          node.forEach(function (r, j) {\n            var x1 = r[0];\n            var y1 = r[1];\n            var x2 = r[2];\n            var y2 = r[3];\n            var elRect = graphics.drawRect(x1, y1, x2 - x1, y2 - y1, 0, '#fff', 1, _this.strokeWidth, w.config.plotOptions.treemap.useFillColorAsStroke ? color : w.globals.stroke.colors[i]);\n            elRect.attr({\n              cx: x1,\n              cy: y1,\n              index: i,\n              i: i,\n              j: j,\n              width: x2 - x1,\n              height: y2 - y1\n            });\n\n            var colorProps = _this.helpers.getShadeColor(w.config.chart.type, i, j, _this.negRange);\n\n            var color = colorProps.color;\n\n            if (typeof w.config.series[i].data[j] !== 'undefined' && w.config.series[i].data[j].fillColor) {\n              color = w.config.series[i].data[j].fillColor;\n            }\n\n            var pathFill = fill.fillPath({\n              color: color,\n              seriesNumber: i,\n              dataPointIndex: j\n            });\n            elRect.node.classList.add('apexcharts-treemap-rect');\n            elRect.attr({\n              fill: pathFill\n            });\n\n            _this.helpers.addListeners(elRect);\n\n            var fromRect = {\n              x: x1 + (x2 - x1) / 2,\n              y: y1 + (y2 - y1) / 2,\n              width: 0,\n              height: 0\n            };\n            var toRect = {\n              x: x1,\n              y: y1,\n              width: x2 - x1,\n              height: y2 - y1\n            };\n\n            if (w.config.chart.animations.enabled && !w.globals.dataChanged) {\n              var speed = 1;\n\n              if (!w.globals.resized) {\n                speed = w.config.chart.animations.speed;\n              }\n\n              _this.animateTreemap(elRect, fromRect, toRect, speed);\n            }\n\n            if (w.globals.dataChanged) {\n              var _speed = 1;\n\n              if (_this.dynamicAnim.enabled && w.globals.shouldAnimate) {\n                _speed = _this.dynamicAnim.speed;\n\n                if (w.globals.previousPaths[i] && w.globals.previousPaths[i][j] && w.globals.previousPaths[i][j].rect) {\n                  fromRect = w.globals.previousPaths[i][j].rect;\n                }\n\n                _this.animateTreemap(elRect, fromRect, toRect, _speed);\n              }\n            }\n\n            var fontSize = _this.getFontSize(r);\n\n            var formattedText = w.config.dataLabels.formatter(_this.labels[i][j], {\n              value: w.globals.series[i][j],\n              seriesIndex: i,\n              dataPointIndex: j,\n              w: w\n            });\n\n            var dataLabels = _this.helpers.calculateDataLabels({\n              text: formattedText,\n              x: (x1 + x2) / 2,\n              y: (y1 + y2) / 2 + _this.strokeWidth / 2 + fontSize / 3,\n              i: i,\n              j: j,\n              colorProps: colorProps,\n              fontSize: fontSize,\n              series: series\n            });\n\n            if (w.config.dataLabels.enabled && dataLabels) {\n              _this.rotateToFitLabel(dataLabels, formattedText, x1, y1, x2, y2);\n            }\n\n            elSeries.add(elRect);\n\n            if (dataLabels !== null) {\n              elSeries.add(dataLabels);\n            }\n          });\n          elSeries.add(elDataLabelWrap);\n          ret.add(elSeries);\n        });\n        return ret;\n      } // This calculates a font-size based upon\n      // average label length and the size of the box the label is\n      // going into. The maximum font size is set in chart config.\n\n    }, {\n      key: \"getFontSize\",\n      value: function getFontSize(coordinates) {\n        var w = this.w; // total length of labels (i.e [[\"Italy\"],[\"Spain\", \"Greece\"]] -> 16)\n\n        function totalLabelLength(arr) {\n          var i,\n              total = 0;\n\n          if (Array.isArray(arr[0])) {\n            for (i = 0; i < arr.length; i++) {\n              total += totalLabelLength(arr[i]);\n            }\n          } else {\n            for (i = 0; i < arr.length; i++) {\n              total += arr[i].length;\n            }\n          }\n\n          return total;\n        } // count of labels (i.e [[\"Italy\"],[\"Spain\", \"Greece\"]] -> 3)\n\n\n        function countLabels(arr) {\n          var i,\n              total = 0;\n\n          if (Array.isArray(arr[0])) {\n            for (i = 0; i < arr.length; i++) {\n              total += countLabels(arr[i]);\n            }\n          } else {\n            for (i = 0; i < arr.length; i++) {\n              total += 1;\n            }\n          }\n\n          return total;\n        }\n\n        var averagelabelsize = totalLabelLength(this.labels) / countLabels(this.labels);\n\n        function fontSize(width, height) {\n          // the font size should be proportional to the size of the box (and the value)\n          // otherwise you can end up creating a visual distortion where two boxes of identical\n          // size have different sized labels, and thus make it look as if the two boxes\n          // represent different sizes\n          var area = width * height;\n          var arearoot = Math.pow(area, 0.5);\n          return Math.min(arearoot / averagelabelsize, parseInt(w.config.dataLabels.style.fontSize, 10));\n        }\n\n        return fontSize(coordinates[2] - coordinates[0], coordinates[3] - coordinates[1]);\n      }\n    }, {\n      key: \"rotateToFitLabel\",\n      value: function rotateToFitLabel(elText, text, x1, y1, x2, y2) {\n        var graphics = new Graphics(this.ctx);\n        var textRect = graphics.getTextRects(text); //if the label fits better sideways then rotate it\n\n        if (textRect.width + 5 > x2 - x1 && textRect.width <= y2 - y1) {\n          var labelRotatingCenter = graphics.rotateAroundCenter(elText.node);\n          elText.node.setAttribute('transform', \"rotate(-90 \".concat(labelRotatingCenter.x, \" \").concat(labelRotatingCenter.y, \")\"));\n        }\n      }\n    }, {\n      key: \"animateTreemap\",\n      value: function animateTreemap(el, fromRect, toRect, speed) {\n        var animations = new Animations(this.ctx);\n        animations.animateRect(el, {\n          x: fromRect.x,\n          y: fromRect.y,\n          width: fromRect.width,\n          height: fromRect.height\n        }, {\n          x: toRect.x,\n          y: toRect.y,\n          width: toRect.width,\n          height: toRect.height\n        }, speed, function () {\n          animations.animationCompleted(el);\n        });\n      }\n    }]);\n\n    return TreemapChart;\n  }();\n\n  var MINUTES_IN_DAY = 24 * 60;\n  var SECONDS_IN_DAY = MINUTES_IN_DAY * 60;\n  var MIN_ZOOM_DAYS = 10 / SECONDS_IN_DAY;\n  /**\n   * ApexCharts TimeScale Class for generating time ticks for x-axis.\n   *\n   * @module TimeScale\n   **/\n\n  var TimeScale = /*#__PURE__*/function () {\n    function TimeScale(ctx) {\n      _classCallCheck(this, TimeScale);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.timeScaleArray = [];\n      this.utc = this.w.config.xaxis.labels.datetimeUTC;\n    }\n\n    _createClass(TimeScale, [{\n      key: \"calculateTimeScaleTicks\",\n      value: function calculateTimeScaleTicks(minX, maxX) {\n        var _this = this;\n\n        var w = this.w; // null check when no series to show\n\n        if (w.globals.allSeriesCollapsed) {\n          w.globals.labels = [];\n          w.globals.timescaleLabels = [];\n          return [];\n        }\n\n        var dt = new DateTime(this.ctx);\n        var daysDiff = (maxX - minX) / (1000 * SECONDS_IN_DAY);\n        this.determineInterval(daysDiff);\n        w.globals.disableZoomIn = false;\n        w.globals.disableZoomOut = false;\n\n        if (daysDiff < MIN_ZOOM_DAYS) {\n          w.globals.disableZoomIn = true;\n        } else if (daysDiff > 50000) {\n          w.globals.disableZoomOut = true;\n        }\n\n        var timeIntervals = dt.getTimeUnitsfromTimestamp(minX, maxX, this.utc);\n        var daysWidthOnXAxis = w.globals.gridWidth / daysDiff;\n        var hoursWidthOnXAxis = daysWidthOnXAxis / 24;\n        var minutesWidthOnXAxis = hoursWidthOnXAxis / 60;\n        var secondsWidthOnXAxis = minutesWidthOnXAxis / 60;\n        var numberOfHours = Math.floor(daysDiff * 24);\n        var numberOfMinutes = Math.floor(daysDiff * MINUTES_IN_DAY);\n        var numberOfSeconds = Math.floor(daysDiff * SECONDS_IN_DAY);\n        var numberOfDays = Math.floor(daysDiff);\n        var numberOfMonths = Math.floor(daysDiff / 30);\n        var numberOfYears = Math.floor(daysDiff / 365);\n        var firstVal = {\n          minMillisecond: timeIntervals.minMillisecond,\n          minSecond: timeIntervals.minSecond,\n          minMinute: timeIntervals.minMinute,\n          minHour: timeIntervals.minHour,\n          minDate: timeIntervals.minDate,\n          minMonth: timeIntervals.minMonth,\n          minYear: timeIntervals.minYear\n        };\n        var currentMillisecond = firstVal.minMillisecond;\n        var currentSecond = firstVal.minSecond;\n        var currentMinute = firstVal.minMinute;\n        var currentHour = firstVal.minHour;\n        var currentMonthDate = firstVal.minDate;\n        var currentDate = firstVal.minDate;\n        var currentMonth = firstVal.minMonth;\n        var currentYear = firstVal.minYear;\n        var params = {\n          firstVal: firstVal,\n          currentMillisecond: currentMillisecond,\n          currentSecond: currentSecond,\n          currentMinute: currentMinute,\n          currentHour: currentHour,\n          currentMonthDate: currentMonthDate,\n          currentDate: currentDate,\n          currentMonth: currentMonth,\n          currentYear: currentYear,\n          daysWidthOnXAxis: daysWidthOnXAxis,\n          hoursWidthOnXAxis: hoursWidthOnXAxis,\n          minutesWidthOnXAxis: minutesWidthOnXAxis,\n          secondsWidthOnXAxis: secondsWidthOnXAxis,\n          numberOfSeconds: numberOfSeconds,\n          numberOfMinutes: numberOfMinutes,\n          numberOfHours: numberOfHours,\n          numberOfDays: numberOfDays,\n          numberOfMonths: numberOfMonths,\n          numberOfYears: numberOfYears\n        };\n\n        switch (this.tickInterval) {\n          case 'years':\n            {\n              this.generateYearScale(params);\n              break;\n            }\n\n          case 'months':\n          case 'half_year':\n            {\n              this.generateMonthScale(params);\n              break;\n            }\n\n          case 'months_days':\n          case 'months_fortnight':\n          case 'days':\n          case 'week_days':\n            {\n              this.generateDayScale(params);\n              break;\n            }\n\n          case 'hours':\n            {\n              this.generateHourScale(params);\n              break;\n            }\n\n          case 'minutes_fives':\n          case 'minutes':\n            this.generateMinuteScale(params);\n            break;\n\n          case 'seconds_tens':\n          case 'seconds_fives':\n          case 'seconds':\n            this.generateSecondScale(params);\n            break;\n        } // first, we will adjust the month values index\n        // as in the upper function, it is starting from 0\n        // we will start them from 1\n\n\n        var adjustedMonthInTimeScaleArray = this.timeScaleArray.map(function (ts) {\n          var defaultReturn = {\n            position: ts.position,\n            unit: ts.unit,\n            year: ts.year,\n            day: ts.day ? ts.day : 1,\n            hour: ts.hour ? ts.hour : 0,\n            month: ts.month + 1\n          };\n\n          if (ts.unit === 'month') {\n            return _objectSpread2(_objectSpread2({}, defaultReturn), {}, {\n              day: 1,\n              value: ts.value + 1\n            });\n          } else if (ts.unit === 'day' || ts.unit === 'hour') {\n            return _objectSpread2(_objectSpread2({}, defaultReturn), {}, {\n              value: ts.value\n            });\n          } else if (ts.unit === 'minute') {\n            return _objectSpread2(_objectSpread2({}, defaultReturn), {}, {\n              value: ts.value,\n              minute: ts.value\n            });\n          } else if (ts.unit === 'second') {\n            return _objectSpread2(_objectSpread2({}, defaultReturn), {}, {\n              value: ts.value,\n              minute: ts.minute,\n              second: ts.second\n            });\n          }\n\n          return ts;\n        });\n        var filteredTimeScale = adjustedMonthInTimeScaleArray.filter(function (ts) {\n          var modulo = 1;\n          var ticks = Math.ceil(w.globals.gridWidth / 120);\n          var value = ts.value;\n\n          if (w.config.xaxis.tickAmount !== undefined) {\n            ticks = w.config.xaxis.tickAmount;\n          }\n\n          if (adjustedMonthInTimeScaleArray.length > ticks) {\n            modulo = Math.floor(adjustedMonthInTimeScaleArray.length / ticks);\n          }\n\n          var shouldNotSkipUnit = false; // there is a big change in unit i.e days to months\n\n          var shouldNotPrint = false; // should skip these values\n\n          switch (_this.tickInterval) {\n            case 'years':\n              // make years label denser\n              if (ts.unit === 'year') {\n                shouldNotSkipUnit = true;\n              }\n\n              break;\n\n            case 'half_year':\n              modulo = 7;\n\n              if (ts.unit === 'year') {\n                shouldNotSkipUnit = true;\n              }\n\n              break;\n\n            case 'months':\n              modulo = 1;\n\n              if (ts.unit === 'year') {\n                shouldNotSkipUnit = true;\n              }\n\n              break;\n\n            case 'months_fortnight':\n              modulo = 15;\n\n              if (ts.unit === 'year' || ts.unit === 'month') {\n                shouldNotSkipUnit = true;\n              }\n\n              if (value === 30) {\n                shouldNotPrint = true;\n              }\n\n              break;\n\n            case 'months_days':\n              modulo = 10;\n\n              if (ts.unit === 'month') {\n                shouldNotSkipUnit = true;\n              }\n\n              if (value === 30) {\n                shouldNotPrint = true;\n              }\n\n              break;\n\n            case 'week_days':\n              modulo = 8;\n\n              if (ts.unit === 'month') {\n                shouldNotSkipUnit = true;\n              }\n\n              break;\n\n            case 'days':\n              modulo = 1;\n\n              if (ts.unit === 'month') {\n                shouldNotSkipUnit = true;\n              }\n\n              break;\n\n            case 'hours':\n              if (ts.unit === 'day') {\n                shouldNotSkipUnit = true;\n              }\n\n              break;\n\n            case 'minutes_fives':\n              if (value % 5 !== 0) {\n                shouldNotPrint = true;\n              }\n\n              break;\n\n            case 'seconds_tens':\n              if (value % 10 !== 0) {\n                shouldNotPrint = true;\n              }\n\n              break;\n\n            case 'seconds_fives':\n              if (value % 5 !== 0) {\n                shouldNotPrint = true;\n              }\n\n              break;\n          }\n\n          if (_this.tickInterval === 'hours' || _this.tickInterval === 'minutes_fives' || _this.tickInterval === 'seconds_tens' || _this.tickInterval === 'seconds_fives') {\n            if (!shouldNotPrint) {\n              return true;\n            }\n          } else {\n            if ((value % modulo === 0 || shouldNotSkipUnit) && !shouldNotPrint) {\n              return true;\n            }\n          }\n        });\n        return filteredTimeScale;\n      }\n    }, {\n      key: \"recalcDimensionsBasedOnFormat\",\n      value: function recalcDimensionsBasedOnFormat(filteredTimeScale, inverted) {\n        var w = this.w;\n        var reformattedTimescaleArray = this.formatDates(filteredTimeScale);\n        var removedOverlappingTS = this.removeOverlappingTS(reformattedTimescaleArray);\n        w.globals.timescaleLabels = removedOverlappingTS.slice(); // at this stage, we need to re-calculate coords of the grid as timeline labels may have altered the xaxis labels coords\n        // The reason we can't do this prior to this stage is because timeline labels depends on gridWidth, and as the ticks are calculated based on available gridWidth, there can be unknown number of ticks generated for different minX and maxX\n        // Dependency on Dimensions(), need to refactor correctly\n        // TODO - find an alternate way to avoid calling this Heavy method twice\n\n        var dimensions = new Dimensions(this.ctx);\n        dimensions.plotCoords();\n      }\n    }, {\n      key: \"determineInterval\",\n      value: function determineInterval(daysDiff) {\n        var yearsDiff = daysDiff / 365;\n        var hoursDiff = daysDiff * 24;\n        var minutesDiff = hoursDiff * 60;\n        var secondsDiff = minutesDiff * 60;\n\n        switch (true) {\n          case yearsDiff > 5:\n            this.tickInterval = 'years';\n            break;\n\n          case daysDiff > 800:\n            this.tickInterval = 'half_year';\n            break;\n\n          case daysDiff > 180:\n            this.tickInterval = 'months';\n            break;\n\n          case daysDiff > 90:\n            this.tickInterval = 'months_fortnight';\n            break;\n\n          case daysDiff > 60:\n            this.tickInterval = 'months_days';\n            break;\n\n          case daysDiff > 30:\n            this.tickInterval = 'week_days';\n            break;\n\n          case daysDiff > 2:\n            this.tickInterval = 'days';\n            break;\n\n          case hoursDiff > 2.4:\n            this.tickInterval = 'hours';\n            break;\n\n          case minutesDiff > 15:\n            this.tickInterval = 'minutes_fives';\n            break;\n\n          case minutesDiff > 5:\n            this.tickInterval = 'minutes';\n            break;\n\n          case minutesDiff > 1:\n            this.tickInterval = 'seconds_tens';\n            break;\n\n          case secondsDiff > 20:\n            this.tickInterval = 'seconds_fives';\n            break;\n\n          default:\n            this.tickInterval = 'seconds';\n            break;\n        }\n      }\n    }, {\n      key: \"generateYearScale\",\n      value: function generateYearScale(_ref) {\n        var firstVal = _ref.firstVal,\n            currentMonth = _ref.currentMonth,\n            currentYear = _ref.currentYear,\n            daysWidthOnXAxis = _ref.daysWidthOnXAxis,\n            numberOfYears = _ref.numberOfYears;\n        var firstTickValue = firstVal.minYear;\n        var firstTickPosition = 0;\n        var dt = new DateTime(this.ctx);\n        var unit = 'year';\n\n        if (firstVal.minDate > 1 || firstVal.minMonth > 0) {\n          var remainingDays = dt.determineRemainingDaysOfYear(firstVal.minYear, firstVal.minMonth, firstVal.minDate); // remainingDaysofFirstMonth is used to reacht the 2nd tick position\n\n          var remainingDaysOfFirstYear = dt.determineDaysOfYear(firstVal.minYear) - remainingDays + 1; // calculate the first tick position\n\n          firstTickPosition = remainingDaysOfFirstYear * daysWidthOnXAxis;\n          firstTickValue = firstVal.minYear + 1; // push the first tick in the array\n\n          this.timeScaleArray.push({\n            position: firstTickPosition,\n            value: firstTickValue,\n            unit: unit,\n            year: firstTickValue,\n            month: Utils$1.monthMod(currentMonth + 1)\n          });\n        } else if (firstVal.minDate === 1 && firstVal.minMonth === 0) {\n          // push the first tick in the array\n          this.timeScaleArray.push({\n            position: firstTickPosition,\n            value: firstTickValue,\n            unit: unit,\n            year: currentYear,\n            month: Utils$1.monthMod(currentMonth + 1)\n          });\n        }\n\n        var year = firstTickValue;\n        var pos = firstTickPosition; // keep drawing rest of the ticks\n\n        for (var i = 0; i < numberOfYears; i++) {\n          year++;\n          pos = dt.determineDaysOfYear(year - 1) * daysWidthOnXAxis + pos;\n          this.timeScaleArray.push({\n            position: pos,\n            value: year,\n            unit: unit,\n            year: year,\n            month: 1\n          });\n        }\n      }\n    }, {\n      key: \"generateMonthScale\",\n      value: function generateMonthScale(_ref2) {\n        var firstVal = _ref2.firstVal,\n            currentMonthDate = _ref2.currentMonthDate,\n            currentMonth = _ref2.currentMonth,\n            currentYear = _ref2.currentYear,\n            daysWidthOnXAxis = _ref2.daysWidthOnXAxis,\n            numberOfMonths = _ref2.numberOfMonths;\n        var firstTickValue = currentMonth;\n        var firstTickPosition = 0;\n        var dt = new DateTime(this.ctx);\n        var unit = 'month';\n        var yrCounter = 0;\n\n        if (firstVal.minDate > 1) {\n          // remainingDaysofFirstMonth is used to reacht the 2nd tick position\n          var remainingDaysOfFirstMonth = dt.determineDaysOfMonths(currentMonth + 1, firstVal.minYear) - currentMonthDate + 1; // calculate the first tick position\n\n          firstTickPosition = remainingDaysOfFirstMonth * daysWidthOnXAxis;\n          firstTickValue = Utils$1.monthMod(currentMonth + 1);\n          var year = currentYear + yrCounter;\n\n          var _month = Utils$1.monthMod(firstTickValue);\n\n          var value = firstTickValue; // it's Jan, so update the year\n\n          if (firstTickValue === 0) {\n            unit = 'year';\n            value = year;\n            _month = 1;\n            yrCounter += 1;\n            year = year + yrCounter;\n          } // push the first tick in the array\n\n\n          this.timeScaleArray.push({\n            position: firstTickPosition,\n            value: value,\n            unit: unit,\n            year: year,\n            month: _month\n          });\n        } else {\n          // push the first tick in the array\n          this.timeScaleArray.push({\n            position: firstTickPosition,\n            value: firstTickValue,\n            unit: unit,\n            year: currentYear,\n            month: Utils$1.monthMod(currentMonth)\n          });\n        }\n\n        var month = firstTickValue + 1;\n        var pos = firstTickPosition; // keep drawing rest of the ticks\n\n        for (var i = 0, j = 1; i < numberOfMonths; i++, j++) {\n          month = Utils$1.monthMod(month);\n\n          if (month === 0) {\n            unit = 'year';\n            yrCounter += 1;\n          } else {\n            unit = 'month';\n          }\n\n          var _year = this._getYear(currentYear, month, yrCounter);\n\n          pos = dt.determineDaysOfMonths(month, _year) * daysWidthOnXAxis + pos;\n          var monthVal = month === 0 ? _year : month;\n          this.timeScaleArray.push({\n            position: pos,\n            value: monthVal,\n            unit: unit,\n            year: _year,\n            month: month === 0 ? 1 : month\n          });\n          month++;\n        }\n      }\n    }, {\n      key: \"generateDayScale\",\n      value: function generateDayScale(_ref3) {\n        var firstVal = _ref3.firstVal,\n            currentMonth = _ref3.currentMonth,\n            currentYear = _ref3.currentYear,\n            hoursWidthOnXAxis = _ref3.hoursWidthOnXAxis,\n            numberOfDays = _ref3.numberOfDays;\n        var dt = new DateTime(this.ctx);\n        var unit = 'day';\n        var firstTickValue = firstVal.minDate + 1;\n        var date = firstTickValue;\n\n        var changeMonth = function changeMonth(dateVal, month, year) {\n          var monthdays = dt.determineDaysOfMonths(month + 1, year);\n\n          if (dateVal > monthdays) {\n            month = month + 1;\n            date = 1;\n            unit = 'month';\n            val = month;\n            return month;\n          }\n\n          return month;\n        };\n\n        var remainingHours = 24 - firstVal.minHour;\n        var yrCounter = 0; // calculate the first tick position\n\n        var firstTickPosition = remainingHours * hoursWidthOnXAxis;\n        var val = firstTickValue;\n        var month = changeMonth(date, currentMonth, currentYear);\n\n        if (firstVal.minHour === 0 && firstVal.minDate === 1) {\n          // the first value is the first day of month\n          firstTickPosition = 0;\n          val = Utils$1.monthMod(firstVal.minMonth);\n          unit = 'month';\n          date = firstVal.minDate;\n          numberOfDays++;\n        } else if (firstVal.minDate !== 1 && firstVal.minHour === 0 && firstVal.minMinute === 0) {\n          // fixes apexcharts/apexcharts.js/issues/1730\n          firstTickPosition = 0;\n          firstTickValue = firstVal.minDate;\n          date = firstTickValue;\n          val = firstTickValue; // in case it's the last date of month, we need to check it\n\n          month = changeMonth(date, currentMonth, currentYear);\n        } // push the first tick in the array\n\n\n        this.timeScaleArray.push({\n          position: firstTickPosition,\n          value: val,\n          unit: unit,\n          year: this._getYear(currentYear, month, yrCounter),\n          month: Utils$1.monthMod(month),\n          day: date\n        });\n        var pos = firstTickPosition; // keep drawing rest of the ticks\n\n        for (var i = 0; i < numberOfDays; i++) {\n          date += 1;\n          unit = 'day';\n          month = changeMonth(date, month, this._getYear(currentYear, month, yrCounter));\n\n          var year = this._getYear(currentYear, month, yrCounter);\n\n          pos = 24 * hoursWidthOnXAxis + pos;\n          var value = date === 1 ? Utils$1.monthMod(month) : date;\n          this.timeScaleArray.push({\n            position: pos,\n            value: value,\n            unit: unit,\n            year: year,\n            month: Utils$1.monthMod(month),\n            day: value\n          });\n        }\n      }\n    }, {\n      key: \"generateHourScale\",\n      value: function generateHourScale(_ref4) {\n        var firstVal = _ref4.firstVal,\n            currentDate = _ref4.currentDate,\n            currentMonth = _ref4.currentMonth,\n            currentYear = _ref4.currentYear,\n            minutesWidthOnXAxis = _ref4.minutesWidthOnXAxis,\n            numberOfHours = _ref4.numberOfHours;\n        var dt = new DateTime(this.ctx);\n        var yrCounter = 0;\n        var unit = 'hour';\n\n        var changeDate = function changeDate(dateVal, month) {\n          var monthdays = dt.determineDaysOfMonths(month + 1, currentYear);\n\n          if (dateVal > monthdays) {\n            date = 1;\n            month = month + 1;\n          }\n\n          return {\n            month: month,\n            date: date\n          };\n        };\n\n        var changeMonth = function changeMonth(dateVal, month) {\n          var monthdays = dt.determineDaysOfMonths(month + 1, currentYear);\n\n          if (dateVal > monthdays) {\n            month = month + 1;\n            return month;\n          }\n\n          return month;\n        }; // factor in minSeconds as well\n\n\n        var remainingMins = 60 - (firstVal.minMinute + firstVal.minSecond / 60.0);\n        var firstTickPosition = remainingMins * minutesWidthOnXAxis;\n        var firstTickValue = firstVal.minHour + 1;\n        var hour = firstTickValue + 1;\n\n        if (remainingMins === 60) {\n          firstTickPosition = 0;\n          firstTickValue = firstVal.minHour;\n          hour = firstTickValue + 1;\n        }\n\n        var date = currentDate;\n        var month = changeMonth(date, currentMonth); // push the first tick in the array\n\n        this.timeScaleArray.push({\n          position: firstTickPosition,\n          value: firstTickValue,\n          unit: unit,\n          day: date,\n          hour: hour,\n          year: currentYear,\n          month: Utils$1.monthMod(month)\n        });\n        var pos = firstTickPosition; // keep drawing rest of the ticks\n\n        for (var i = 0; i < numberOfHours; i++) {\n          unit = 'hour';\n\n          if (hour >= 24) {\n            hour = 0;\n            date += 1;\n            unit = 'day';\n            var checkNextMonth = changeDate(date, month);\n            month = checkNextMonth.month;\n            month = changeMonth(date, month);\n          }\n\n          var year = this._getYear(currentYear, month, yrCounter);\n\n          pos = hour === 0 && i === 0 ? remainingMins * minutesWidthOnXAxis : 60 * minutesWidthOnXAxis + pos;\n          var val = hour === 0 ? date : hour;\n          this.timeScaleArray.push({\n            position: pos,\n            value: val,\n            unit: unit,\n            hour: hour,\n            day: date,\n            year: year,\n            month: Utils$1.monthMod(month)\n          });\n          hour++;\n        }\n      }\n    }, {\n      key: \"generateMinuteScale\",\n      value: function generateMinuteScale(_ref5) {\n        var currentMillisecond = _ref5.currentMillisecond,\n            currentSecond = _ref5.currentSecond,\n            currentMinute = _ref5.currentMinute,\n            currentHour = _ref5.currentHour,\n            currentDate = _ref5.currentDate,\n            currentMonth = _ref5.currentMonth,\n            currentYear = _ref5.currentYear,\n            minutesWidthOnXAxis = _ref5.minutesWidthOnXAxis,\n            secondsWidthOnXAxis = _ref5.secondsWidthOnXAxis,\n            numberOfMinutes = _ref5.numberOfMinutes;\n        var yrCounter = 0;\n        var unit = 'minute';\n        var remainingSecs = 60 - currentSecond;\n        var firstTickPosition = (remainingSecs - currentMillisecond / 1000) * secondsWidthOnXAxis;\n        var minute = currentMinute + 1;\n        var date = currentDate;\n        var month = currentMonth;\n        var year = currentYear;\n        var hour = currentHour;\n        var pos = firstTickPosition;\n\n        for (var i = 0; i < numberOfMinutes; i++) {\n          if (minute >= 60) {\n            minute = 0;\n            hour += 1;\n\n            if (hour === 24) {\n              hour = 0;\n            }\n          }\n\n          this.timeScaleArray.push({\n            position: pos,\n            value: minute,\n            unit: unit,\n            hour: hour,\n            minute: minute,\n            day: date,\n            year: this._getYear(year, month, yrCounter),\n            month: Utils$1.monthMod(month)\n          });\n          pos += minutesWidthOnXAxis;\n          minute++;\n        }\n      }\n    }, {\n      key: \"generateSecondScale\",\n      value: function generateSecondScale(_ref6) {\n        var currentMillisecond = _ref6.currentMillisecond,\n            currentSecond = _ref6.currentSecond,\n            currentMinute = _ref6.currentMinute,\n            currentHour = _ref6.currentHour,\n            currentDate = _ref6.currentDate,\n            currentMonth = _ref6.currentMonth,\n            currentYear = _ref6.currentYear,\n            secondsWidthOnXAxis = _ref6.secondsWidthOnXAxis,\n            numberOfSeconds = _ref6.numberOfSeconds;\n        var yrCounter = 0;\n        var unit = 'second';\n        var remainingMillisecs = 1000 - currentMillisecond;\n        var firstTickPosition = remainingMillisecs / 1000 * secondsWidthOnXAxis;\n        var second = currentSecond + 1;\n        var minute = currentMinute;\n        var date = currentDate;\n        var month = currentMonth;\n        var year = currentYear;\n        var hour = currentHour;\n        var pos = firstTickPosition;\n\n        for (var i = 0; i < numberOfSeconds; i++) {\n          if (second >= 60) {\n            minute++;\n            second = 0;\n\n            if (minute >= 60) {\n              hour++;\n              minute = 0;\n\n              if (hour === 24) {\n                hour = 0;\n              }\n            }\n          }\n\n          this.timeScaleArray.push({\n            position: pos,\n            value: second,\n            unit: unit,\n            hour: hour,\n            minute: minute,\n            second: second,\n            day: date,\n            year: this._getYear(year, month, yrCounter),\n            month: Utils$1.monthMod(month)\n          });\n          pos += secondsWidthOnXAxis;\n          second++;\n        }\n      }\n    }, {\n      key: \"createRawDateString\",\n      value: function createRawDateString(ts, value) {\n        var raw = ts.year;\n\n        if (ts.month === 0) {\n          // invalid month, correct it\n          ts.month = 1;\n        }\n\n        raw += '-' + ('0' + ts.month.toString()).slice(-2); // unit is day\n\n        if (ts.unit === 'day') {\n          raw += ts.unit === 'day' ? '-' + ('0' + value).slice(-2) : '-01';\n        } else {\n          raw += '-' + ('0' + (ts.day ? ts.day : '1')).slice(-2);\n        } // unit is hour\n\n\n        if (ts.unit === 'hour') {\n          raw += ts.unit === 'hour' ? 'T' + ('0' + value).slice(-2) : 'T00';\n        } else {\n          raw += 'T' + ('0' + (ts.hour ? ts.hour : '0')).slice(-2);\n        }\n\n        if (ts.unit === 'minute') {\n          raw += ':' + ('0' + value).slice(-2);\n        } else {\n          raw += ':' + (ts.minute ? ('0' + ts.minute).slice(-2) : '00');\n        }\n\n        if (ts.unit === 'second') {\n          raw += ':' + ('0' + value).slice(-2);\n        } else {\n          raw += ':00';\n        }\n\n        if (this.utc) {\n          raw += '.000Z';\n        }\n\n        return raw;\n      }\n    }, {\n      key: \"formatDates\",\n      value: function formatDates(filteredTimeScale) {\n        var _this2 = this;\n\n        var w = this.w;\n        var reformattedTimescaleArray = filteredTimeScale.map(function (ts) {\n          var value = ts.value.toString();\n          var dt = new DateTime(_this2.ctx);\n\n          var raw = _this2.createRawDateString(ts, value);\n\n          var dateToFormat = dt.getDate(dt.parseDate(raw));\n\n          if (!_this2.utc) {\n            // Fixes #1726, #1544, #1485, #1255\n            dateToFormat = dt.getDate(dt.parseDateWithTimezone(raw));\n          }\n\n          if (w.config.xaxis.labels.format === undefined) {\n            var customFormat = 'dd MMM';\n            var dtFormatter = w.config.xaxis.labels.datetimeFormatter;\n            if (ts.unit === 'year') customFormat = dtFormatter.year;\n            if (ts.unit === 'month') customFormat = dtFormatter.month;\n            if (ts.unit === 'day') customFormat = dtFormatter.day;\n            if (ts.unit === 'hour') customFormat = dtFormatter.hour;\n            if (ts.unit === 'minute') customFormat = dtFormatter.minute;\n            if (ts.unit === 'second') customFormat = dtFormatter.second;\n            value = dt.formatDate(dateToFormat, customFormat);\n          } else {\n            value = dt.formatDate(dateToFormat, w.config.xaxis.labels.format);\n          }\n\n          return {\n            dateString: raw,\n            position: ts.position,\n            value: value,\n            unit: ts.unit,\n            year: ts.year,\n            month: ts.month\n          };\n        });\n        return reformattedTimescaleArray;\n      }\n    }, {\n      key: \"removeOverlappingTS\",\n      value: function removeOverlappingTS(arr) {\n        var _this3 = this;\n\n        var graphics = new Graphics(this.ctx);\n        var equalLabelLengthFlag = false; // These labels got same length?\n\n        var constantLabelWidth; // If true, what is the constant length to use\n\n        if (arr.length > 0 && // check arr length\n        arr[0].value && // check arr[0] contains value\n        arr.every(function (lb) {\n          return lb.value.length === arr[0].value.length;\n        }) // check every arr label value is the same as the first one\n        ) {\n          equalLabelLengthFlag = true; // These labels got same length\n\n          constantLabelWidth = graphics.getTextRects(arr[0].value).width; // The constant label width to use\n        }\n\n        var lastDrawnIndex = 0;\n        var filteredArray = arr.map(function (item, index) {\n          if (index > 0 && _this3.w.config.xaxis.labels.hideOverlappingLabels) {\n            var prevLabelWidth = !equalLabelLengthFlag // if vary in label length\n            ? graphics.getTextRects(arr[lastDrawnIndex].value).width // get individual length\n            : constantLabelWidth; // else: use constant length\n\n            var prevPos = arr[lastDrawnIndex].position;\n            var pos = item.position;\n\n            if (pos > prevPos + prevLabelWidth + 10) {\n              lastDrawnIndex = index;\n              return item;\n            } else {\n              return null;\n            }\n          } else {\n            return item;\n          }\n        });\n        filteredArray = filteredArray.filter(function (f) {\n          return f !== null;\n        });\n        return filteredArray;\n      }\n    }, {\n      key: \"_getYear\",\n      value: function _getYear(currentYear, month, yrCounter) {\n        return currentYear + Math.floor(month / 12) + yrCounter;\n      }\n    }]);\n\n    return TimeScale;\n  }();\n\n  /**\n   * ApexCharts Core Class responsible for major calculations and creating elements.\n   *\n   * @module Core\n   **/\n\n  var Core = /*#__PURE__*/function () {\n    function Core(el, ctx) {\n      _classCallCheck(this, Core);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n      this.el = el;\n    } // get data and store into appropriate vars\n\n\n    _createClass(Core, [{\n      key: \"setupElements\",\n      value: function setupElements() {\n        var gl = this.w.globals;\n        var cnf = this.w.config; // const graphics = new Graphics(this.ctx)\n\n        var ct = cnf.chart.type;\n        var axisChartsArrTypes = ['line', 'area', 'bar', 'rangeBar', 'candlestick', 'boxPlot', 'scatter', 'bubble', 'radar', 'heatmap', 'treemap'];\n        var xyChartsArrTypes = ['line', 'area', 'bar', 'rangeBar', 'candlestick', 'boxPlot', 'scatter', 'bubble'];\n        gl.axisCharts = axisChartsArrTypes.indexOf(ct) > -1;\n        gl.xyCharts = xyChartsArrTypes.indexOf(ct) > -1;\n        gl.isBarHorizontal = (cnf.chart.type === 'bar' || cnf.chart.type === 'rangeBar' || cnf.chart.type === 'boxPlot') && cnf.plotOptions.bar.horizontal;\n        gl.chartClass = '.apexcharts' + gl.chartID;\n        gl.dom.baseEl = this.el;\n        gl.dom.elWrap = document.createElement('div');\n        Graphics.setAttrs(gl.dom.elWrap, {\n          id: gl.chartClass.substring(1),\n          class: 'apexcharts-canvas ' + gl.chartClass.substring(1)\n        });\n        this.el.appendChild(gl.dom.elWrap);\n        gl.dom.Paper = new window.SVG.Doc(gl.dom.elWrap);\n        gl.dom.Paper.attr({\n          class: 'apexcharts-svg',\n          'xmlns:data': 'ApexChartsNS',\n          transform: \"translate(\".concat(cnf.chart.offsetX, \", \").concat(cnf.chart.offsetY, \")\")\n        });\n        gl.dom.Paper.node.style.background = cnf.chart.background;\n        this.setSVGDimensions();\n        gl.dom.elGraphical = gl.dom.Paper.group().attr({\n          class: 'apexcharts-inner apexcharts-graphical'\n        });\n        gl.dom.elAnnotations = gl.dom.Paper.group().attr({\n          class: 'apexcharts-annotations'\n        });\n        gl.dom.elDefs = gl.dom.Paper.defs();\n        gl.dom.elLegendWrap = document.createElement('div');\n        gl.dom.elLegendWrap.classList.add('apexcharts-legend');\n        gl.dom.elWrap.appendChild(gl.dom.elLegendWrap);\n        gl.dom.Paper.add(gl.dom.elGraphical);\n        gl.dom.elGraphical.add(gl.dom.elDefs);\n      }\n    }, {\n      key: \"plotChartType\",\n      value: function plotChartType(ser, xyRatios) {\n        var w = this.w;\n        var cnf = w.config;\n        var gl = w.globals;\n        var lineSeries = {\n          series: [],\n          i: []\n        };\n        var areaSeries = {\n          series: [],\n          i: []\n        };\n        var scatterSeries = {\n          series: [],\n          i: []\n        };\n        var bubbleSeries = {\n          series: [],\n          i: []\n        };\n        var columnSeries = {\n          series: [],\n          i: []\n        };\n        var candlestickSeries = {\n          series: [],\n          i: []\n        };\n        var boxplotSeries = {\n          series: [],\n          i: []\n        };\n        gl.series.map(function (series, st) {\n          var comboCount = 0; // if user has specified a particular type for particular series\n\n          if (typeof ser[st].type !== 'undefined') {\n            if (ser[st].type === 'column' || ser[st].type === 'bar') {\n              if (gl.series.length > 1 && cnf.plotOptions.bar.horizontal) {\n                // horizontal bars not supported in mixed charts, hence show a warning\n                console.warn('Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`');\n              }\n\n              columnSeries.series.push(series);\n              columnSeries.i.push(st);\n              comboCount++;\n              w.globals.columnSeries = columnSeries.series;\n            } else if (ser[st].type === 'area') {\n              areaSeries.series.push(series);\n              areaSeries.i.push(st);\n              comboCount++;\n            } else if (ser[st].type === 'line') {\n              lineSeries.series.push(series);\n              lineSeries.i.push(st);\n              comboCount++;\n            } else if (ser[st].type === 'scatter') {\n              scatterSeries.series.push(series);\n              scatterSeries.i.push(st);\n            } else if (ser[st].type === 'bubble') {\n              bubbleSeries.series.push(series);\n              bubbleSeries.i.push(st);\n              comboCount++;\n            } else if (ser[st].type === 'candlestick') {\n              candlestickSeries.series.push(series);\n              candlestickSeries.i.push(st);\n              comboCount++;\n            } else if (ser[st].type === 'boxPlot') {\n              boxplotSeries.series.push(series);\n              boxplotSeries.i.push(st);\n              comboCount++;\n            } else {\n              // user has specified type, but it is not valid (other than line/area/column)\n              console.warn('You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble');\n            }\n\n            if (comboCount > 1) {\n              gl.comboCharts = true;\n            }\n          } else {\n            lineSeries.series.push(series);\n            lineSeries.i.push(st);\n          }\n        });\n        var line = new Line(this.ctx, xyRatios);\n        var boxCandlestick = new BoxCandleStick(this.ctx, xyRatios);\n        this.ctx.pie = new Pie(this.ctx);\n        var radialBar = new Radial(this.ctx);\n        this.ctx.rangeBar = new RangeBar(this.ctx, xyRatios);\n        var radar = new Radar(this.ctx);\n        var elGraph = [];\n\n        if (gl.comboCharts) {\n          if (areaSeries.series.length > 0) {\n            elGraph.push(line.draw(areaSeries.series, 'area', areaSeries.i));\n          }\n\n          if (columnSeries.series.length > 0) {\n            if (w.config.chart.stacked) {\n              var barStacked = new BarStacked(this.ctx, xyRatios);\n              elGraph.push(barStacked.draw(columnSeries.series, columnSeries.i));\n            } else {\n              this.ctx.bar = new Bar(this.ctx, xyRatios);\n              elGraph.push(this.ctx.bar.draw(columnSeries.series, columnSeries.i));\n            }\n          }\n\n          if (lineSeries.series.length > 0) {\n            elGraph.push(line.draw(lineSeries.series, 'line', lineSeries.i));\n          }\n\n          if (candlestickSeries.series.length > 0) {\n            elGraph.push(boxCandlestick.draw(candlestickSeries.series, candlestickSeries.i));\n          }\n\n          if (boxplotSeries.series.length > 0) {\n            elGraph.push(boxCandlestick.draw(boxplotSeries.series, boxplotSeries.i));\n          }\n\n          if (scatterSeries.series.length > 0) {\n            var scatterLine = new Line(this.ctx, xyRatios, true);\n            elGraph.push(scatterLine.draw(scatterSeries.series, 'scatter', scatterSeries.i));\n          }\n\n          if (bubbleSeries.series.length > 0) {\n            var bubbleLine = new Line(this.ctx, xyRatios, true);\n            elGraph.push(bubbleLine.draw(bubbleSeries.series, 'bubble', bubbleSeries.i));\n          }\n        } else {\n          switch (cnf.chart.type) {\n            case 'line':\n              elGraph = line.draw(gl.series, 'line');\n              break;\n\n            case 'area':\n              elGraph = line.draw(gl.series, 'area');\n              break;\n\n            case 'bar':\n              if (cnf.chart.stacked) {\n                var _barStacked = new BarStacked(this.ctx, xyRatios);\n\n                elGraph = _barStacked.draw(gl.series);\n              } else {\n                this.ctx.bar = new Bar(this.ctx, xyRatios);\n                elGraph = this.ctx.bar.draw(gl.series);\n              }\n\n              break;\n\n            case 'candlestick':\n              var candleStick = new BoxCandleStick(this.ctx, xyRatios);\n              elGraph = candleStick.draw(gl.series);\n              break;\n\n            case 'boxPlot':\n              var boxPlot = new BoxCandleStick(this.ctx, xyRatios);\n              elGraph = boxPlot.draw(gl.series);\n              break;\n\n            case 'rangeBar':\n              elGraph = this.ctx.rangeBar.draw(gl.series);\n              break;\n\n            case 'heatmap':\n              var heatmap = new HeatMap(this.ctx, xyRatios);\n              elGraph = heatmap.draw(gl.series);\n              break;\n\n            case 'treemap':\n              var treemap = new TreemapChart(this.ctx, xyRatios);\n              elGraph = treemap.draw(gl.series);\n              break;\n\n            case 'pie':\n            case 'donut':\n            case 'polarArea':\n              elGraph = this.ctx.pie.draw(gl.series);\n              break;\n\n            case 'radialBar':\n              elGraph = radialBar.draw(gl.series);\n              break;\n\n            case 'radar':\n              elGraph = radar.draw(gl.series);\n              break;\n\n            default:\n              elGraph = line.draw(gl.series);\n          }\n        }\n\n        return elGraph;\n      }\n    }, {\n      key: \"setSVGDimensions\",\n      value: function setSVGDimensions() {\n        var gl = this.w.globals;\n        var cnf = this.w.config;\n        gl.svgWidth = cnf.chart.width;\n        gl.svgHeight = cnf.chart.height;\n        var elDim = Utils$1.getDimensions(this.el);\n        var widthUnit = cnf.chart.width.toString().split(/[0-9]+/g).pop();\n\n        if (widthUnit === '%') {\n          if (Utils$1.isNumber(elDim[0])) {\n            if (elDim[0].width === 0) {\n              elDim = Utils$1.getDimensions(this.el.parentNode);\n            }\n\n            gl.svgWidth = elDim[0] * parseInt(cnf.chart.width, 10) / 100;\n          }\n        } else if (widthUnit === 'px' || widthUnit === '') {\n          gl.svgWidth = parseInt(cnf.chart.width, 10);\n        }\n\n        var heightUnit = cnf.chart.height.toString().split(/[0-9]+/g).pop();\n\n        if (gl.svgHeight !== 'auto' && gl.svgHeight !== '') {\n          if (heightUnit === '%') {\n            var elParentDim = Utils$1.getDimensions(this.el.parentNode);\n            gl.svgHeight = elParentDim[1] * parseInt(cnf.chart.height, 10) / 100;\n          } else {\n            gl.svgHeight = parseInt(cnf.chart.height, 10);\n          }\n        } else {\n          if (gl.axisCharts) {\n            gl.svgHeight = gl.svgWidth / 1.61;\n          } else {\n            gl.svgHeight = gl.svgWidth / 1.2;\n          }\n        }\n\n        if (gl.svgWidth < 0) gl.svgWidth = 0;\n        if (gl.svgHeight < 0) gl.svgHeight = 0;\n        Graphics.setAttrs(gl.dom.Paper.node, {\n          width: gl.svgWidth,\n          height: gl.svgHeight\n        });\n\n        if (heightUnit !== '%') {\n          // fixes https://github.com/apexcharts/apexcharts.js/issues/2059\n          var offsetY = cnf.chart.sparkline.enabled ? 0 : gl.axisCharts ? cnf.chart.parentHeightOffset : 0;\n          gl.dom.Paper.node.parentNode.parentNode.style.minHeight = gl.svgHeight + offsetY + 'px';\n        }\n\n        gl.dom.elWrap.style.width = gl.svgWidth + 'px';\n        gl.dom.elWrap.style.height = gl.svgHeight + 'px';\n      }\n    }, {\n      key: \"shiftGraphPosition\",\n      value: function shiftGraphPosition() {\n        var gl = this.w.globals;\n        var tY = gl.translateY;\n        var tX = gl.translateX;\n        var scalingAttrs = {\n          transform: 'translate(' + tX + ', ' + tY + ')'\n        };\n        Graphics.setAttrs(gl.dom.elGraphical.node, scalingAttrs);\n      } // To prevent extra spacings in the bottom of the chart, we need to recalculate the height for pie/donut/radialbar charts\n\n    }, {\n      key: \"resizeNonAxisCharts\",\n      value: function resizeNonAxisCharts() {\n        var w = this.w;\n        var gl = w.globals;\n        var legendHeight = 0;\n        var offY = w.config.chart.sparkline.enabled ? 1 : 15;\n        offY = offY + w.config.grid.padding.bottom;\n\n        if ((w.config.legend.position === 'top' || w.config.legend.position === 'bottom') && w.config.legend.show && !w.config.legend.floating) {\n          legendHeight = new Legend(this.ctx).legendHelpers.getLegendBBox().clwh + 10;\n        }\n\n        var el = w.globals.dom.baseEl.querySelector('.apexcharts-radialbar, .apexcharts-pie');\n        var chartInnerDimensions = w.globals.radialSize * 2.05;\n\n        if (el && !w.config.chart.sparkline.enabled && w.config.plotOptions.radialBar.startAngle !== 0) {\n          var elRadialRect = Utils$1.getBoundingClientRect(el);\n          chartInnerDimensions = elRadialRect.bottom;\n          var maxHeight = elRadialRect.bottom - elRadialRect.top;\n          chartInnerDimensions = Math.max(w.globals.radialSize * 2.05, maxHeight);\n        }\n\n        var newHeight = chartInnerDimensions + gl.translateY + legendHeight + offY;\n\n        if (gl.dom.elLegendForeign) {\n          gl.dom.elLegendForeign.setAttribute('height', newHeight);\n        }\n\n        gl.dom.elWrap.style.height = newHeight + 'px';\n        Graphics.setAttrs(gl.dom.Paper.node, {\n          height: newHeight\n        });\n        gl.dom.Paper.node.parentNode.parentNode.style.minHeight = newHeight + 'px';\n      }\n      /*\n       ** All the calculations for setting range in charts will be done here\n       */\n\n    }, {\n      key: \"coreCalculations\",\n      value: function coreCalculations() {\n        var range = new Range(this.ctx);\n        range.init();\n      }\n    }, {\n      key: \"resetGlobals\",\n      value: function resetGlobals() {\n        var _this = this;\n\n        var resetxyValues = function resetxyValues() {\n          return _this.w.config.series.map(function (s) {\n            return [];\n          });\n        };\n\n        var globalObj = new Globals();\n        var gl = this.w.globals;\n        globalObj.initGlobalVars(gl);\n        gl.seriesXvalues = resetxyValues();\n        gl.seriesYvalues = resetxyValues();\n      }\n    }, {\n      key: \"isMultipleY\",\n      value: function isMultipleY() {\n        // user has supplied an array in yaxis property. So, turn on multipleYAxis flag\n        if (this.w.config.yaxis.constructor === Array && this.w.config.yaxis.length > 1) {\n          this.w.globals.isMultipleYAxis = true;\n          return true;\n        }\n      }\n    }, {\n      key: \"xySettings\",\n      value: function xySettings() {\n        var xyRatios = null;\n        var w = this.w;\n\n        if (w.globals.axisCharts) {\n          if (w.config.xaxis.crosshairs.position === 'back') {\n            var crosshairs = new Crosshairs(this.ctx);\n            crosshairs.drawXCrosshairs();\n          }\n\n          if (w.config.yaxis[0].crosshairs.position === 'back') {\n            var _crosshairs = new Crosshairs(this.ctx);\n\n            _crosshairs.drawYCrosshairs();\n          }\n\n          if (w.config.xaxis.type === 'datetime' && w.config.xaxis.labels.formatter === undefined) {\n            this.ctx.timeScale = new TimeScale(this.ctx);\n            var formattedTimeScale = [];\n\n            if (isFinite(w.globals.minX) && isFinite(w.globals.maxX) && !w.globals.isBarHorizontal) {\n              formattedTimeScale = this.ctx.timeScale.calculateTimeScaleTicks(w.globals.minX, w.globals.maxX);\n            } else if (w.globals.isBarHorizontal) {\n              formattedTimeScale = this.ctx.timeScale.calculateTimeScaleTicks(w.globals.minY, w.globals.maxY);\n            }\n\n            this.ctx.timeScale.recalcDimensionsBasedOnFormat(formattedTimeScale);\n          }\n\n          var coreUtils = new CoreUtils(this.ctx);\n          xyRatios = coreUtils.getCalculatedRatios();\n        }\n\n        return xyRatios;\n      }\n    }, {\n      key: \"updateSourceChart\",\n      value: function updateSourceChart(targetChart) {\n        this.ctx.w.globals.selection = undefined;\n\n        this.ctx.updateHelpers._updateOptions({\n          chart: {\n            selection: {\n              xaxis: {\n                min: targetChart.w.globals.minX,\n                max: targetChart.w.globals.maxX\n              }\n            }\n          }\n        }, false, false);\n      }\n    }, {\n      key: \"setupBrushHandler\",\n      value: function setupBrushHandler() {\n        var _this2 = this;\n\n        var w = this.w; // only for brush charts\n\n        if (!w.config.chart.brush.enabled) {\n          return;\n        } // if user has not defined a custom function for selection - we handle the brush chart\n        // otherwise we leave it to the user to define the functionality for selection\n\n\n        if (typeof w.config.chart.events.selection !== 'function') {\n          var targets = w.config.chart.brush.targets || [w.config.chart.brush.target]; // retro compatibility with single target option\n\n          targets.forEach(function (target) {\n            var targetChart = ApexCharts.getChartByID(target);\n            targetChart.w.globals.brushSource = _this2.ctx;\n\n            if (typeof targetChart.w.config.chart.events.zoomed !== 'function') {\n              targetChart.w.config.chart.events.zoomed = function () {\n                _this2.updateSourceChart(targetChart);\n              };\n            }\n\n            if (typeof targetChart.w.config.chart.events.scrolled !== 'function') {\n              targetChart.w.config.chart.events.scrolled = function () {\n                _this2.updateSourceChart(targetChart);\n              };\n            }\n          });\n\n          w.config.chart.events.selection = function (chart, e) {\n            targets.forEach(function (target) {\n              var targetChart = ApexCharts.getChartByID(target);\n              var yaxis = Utils$1.clone(w.config.yaxis);\n\n              if (w.config.chart.brush.autoScaleYaxis && targetChart.w.globals.series.length === 1) {\n                var scale = new Range$1(targetChart);\n                yaxis = scale.autoScaleY(targetChart, yaxis, e);\n              }\n\n              var multipleYaxis = targetChart.w.config.yaxis.reduce(function (acc, curr, index) {\n                return [].concat(_toConsumableArray(acc), [_objectSpread2(_objectSpread2({}, targetChart.w.config.yaxis[index]), {}, {\n                  min: yaxis[0].min,\n                  max: yaxis[0].max\n                })]);\n              }, []);\n\n              targetChart.ctx.updateHelpers._updateOptions({\n                xaxis: {\n                  min: e.xaxis.min,\n                  max: e.xaxis.max\n                },\n                yaxis: multipleYaxis\n              }, false, false, false, false);\n            });\n          };\n        }\n      }\n    }]);\n\n    return Core;\n  }();\n\n  var UpdateHelpers = /*#__PURE__*/function () {\n    function UpdateHelpers(ctx) {\n      _classCallCheck(this, UpdateHelpers);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n    /**\n     * private method to update Options.\n     *\n     * @param {object} options - A new config object can be passed which will be merged with the existing config object\n     * @param {boolean} redraw - should redraw from beginning or should use existing paths and redraw from there\n     * @param {boolean} animate - should animate or not on updating Options\n     * @param {boolean} overwriteInitialConfig - should update the initial config or not\n     */\n\n\n    _createClass(UpdateHelpers, [{\n      key: \"_updateOptions\",\n      value: function _updateOptions(options) {\n        var _this = this;\n\n        var redraw = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var animate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var updateSyncedCharts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n        var overwriteInitialConfig = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n        return new Promise(function (resolve) {\n          var charts = [_this.ctx];\n\n          if (updateSyncedCharts) {\n            charts = _this.ctx.getSyncedCharts();\n          }\n\n          if (_this.ctx.w.globals.isExecCalled) {\n            // If the user called exec method, we don't want to get grouped charts as user specifically provided a chartID to update\n            charts = [_this.ctx];\n            _this.ctx.w.globals.isExecCalled = false;\n          }\n\n          charts.forEach(function (ch, chartIndex) {\n            var w = ch.w;\n            w.globals.shouldAnimate = animate;\n\n            if (!redraw) {\n              w.globals.resized = true;\n              w.globals.dataChanged = true;\n\n              if (animate) {\n                ch.series.getPreviousPaths();\n              }\n            }\n\n            if (options && _typeof(options) === 'object') {\n              ch.config = new Config(options);\n              options = CoreUtils.extendArrayProps(ch.config, options, w); // fixes #914, #623\n\n              if (ch.w.globals.chartID !== _this.ctx.w.globals.chartID) {\n                // don't overwrite series of synchronized charts\n                delete options.series;\n              }\n\n              w.config = Utils$1.extend(w.config, options);\n\n              if (overwriteInitialConfig) {\n                // we need to forget the lastXAxis and lastYAxis as user forcefully overwriteInitialConfig. If we do not do this, and next time when user zooms the chart after setting yaxis.min/max or xaxis.min/max - the stored lastXAxis will never allow the chart to use the updated min/max by user.\n                w.globals.lastXAxis = options.xaxis ? Utils$1.clone(options.xaxis) : [];\n                w.globals.lastYAxis = options.yaxis ? Utils$1.clone(options.yaxis) : []; // After forgetting lastAxes, we need to restore the new config in initialConfig/initialSeries\n\n                w.globals.initialConfig = Utils$1.extend({}, w.config);\n                w.globals.initialSeries = Utils$1.clone(w.config.series);\n              }\n            }\n\n            return ch.update(options).then(function () {\n              if (chartIndex === charts.length - 1) {\n                resolve(ch);\n              }\n            });\n          });\n        });\n      }\n      /**\n       * Private method to update Series.\n       *\n       * @param {array} series - New series which will override the existing\n       */\n\n    }, {\n      key: \"_updateSeries\",\n      value: function _updateSeries(newSeries, animate) {\n        var _this2 = this;\n\n        var overwriteInitialSeries = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        return new Promise(function (resolve) {\n          var w = _this2.w;\n          w.globals.shouldAnimate = animate;\n          w.globals.dataChanged = true;\n\n          if (animate) {\n            _this2.ctx.series.getPreviousPaths();\n          }\n\n          var existingSeries; // axis charts\n\n          if (w.globals.axisCharts) {\n            existingSeries = newSeries.map(function (s, i) {\n              return _this2._extendSeries(s, i);\n            });\n\n            if (existingSeries.length === 0) {\n              existingSeries = [{\n                data: []\n              }];\n            }\n\n            w.config.series = existingSeries;\n          } else {\n            // non-axis chart (pie/radialbar)\n            w.config.series = newSeries.slice();\n          }\n\n          if (overwriteInitialSeries) {\n            w.globals.initialSeries = Utils$1.clone(w.config.series);\n          }\n\n          return _this2.ctx.update().then(function () {\n            resolve(_this2.ctx);\n          });\n        });\n      }\n    }, {\n      key: \"_extendSeries\",\n      value: function _extendSeries(s, i) {\n        var w = this.w;\n        var ser = w.config.series[i];\n        return _objectSpread2(_objectSpread2({}, w.config.series[i]), {}, {\n          name: s.name ? s.name : ser && ser.name,\n          color: s.color ? s.color : ser && ser.color,\n          type: s.type ? s.type : ser && ser.type,\n          data: s.data ? s.data : ser && ser.data\n        });\n      }\n    }, {\n      key: \"toggleDataPointSelection\",\n      value: function toggleDataPointSelection(seriesIndex, dataPointIndex) {\n        var w = this.w;\n        var elPath = null;\n        var parent = \".apexcharts-series[data\\\\:realIndex='\".concat(seriesIndex, \"']\");\n\n        if (w.globals.axisCharts) {\n          elPath = w.globals.dom.Paper.select(\"\".concat(parent, \" path[j='\").concat(dataPointIndex, \"'], \").concat(parent, \" circle[j='\").concat(dataPointIndex, \"'], \").concat(parent, \" rect[j='\").concat(dataPointIndex, \"']\")).members[0];\n        } else {\n          // dataPointIndex will be undefined here, hence using seriesIndex\n          if (typeof dataPointIndex === 'undefined') {\n            elPath = w.globals.dom.Paper.select(\"\".concat(parent, \" path[j='\").concat(seriesIndex, \"']\")).members[0];\n\n            if (w.config.chart.type === 'pie' || w.config.chart.type === 'polarArea' || w.config.chart.type === 'donut') {\n              this.ctx.pie.pieClicked(seriesIndex);\n            }\n          }\n        }\n\n        if (elPath) {\n          var graphics = new Graphics(this.ctx);\n          graphics.pathMouseDown(elPath, null);\n        } else {\n          console.warn('toggleDataPointSelection: Element not found');\n          return null;\n        }\n\n        return elPath.node ? elPath.node : null;\n      }\n    }, {\n      key: \"forceXAxisUpdate\",\n      value: function forceXAxisUpdate(options) {\n        var w = this.w;\n        var minmax = ['min', 'max'];\n        minmax.forEach(function (a) {\n          if (typeof options.xaxis[a] !== 'undefined') {\n            w.config.xaxis[a] = options.xaxis[a];\n            w.globals.lastXAxis[a] = options.xaxis[a];\n          }\n        });\n\n        if (options.xaxis.categories && options.xaxis.categories.length) {\n          w.config.xaxis.categories = options.xaxis.categories;\n        }\n\n        if (w.config.xaxis.convertedCatToNumeric) {\n          var defaults = new Defaults(options);\n          options = defaults.convertCatToNumericXaxis(options, this.ctx);\n        }\n\n        return options;\n      }\n    }, {\n      key: \"forceYAxisUpdate\",\n      value: function forceYAxisUpdate(options) {\n        var w = this.w;\n\n        if (w.config.chart.stacked && w.config.chart.stackType === '100%') {\n          if (Array.isArray(options.yaxis)) {\n            options.yaxis.forEach(function (yaxe, index) {\n              options.yaxis[index].min = 0;\n              options.yaxis[index].max = 100;\n            });\n          } else {\n            options.yaxis.min = 0;\n            options.yaxis.max = 100;\n          }\n        }\n\n        return options;\n      }\n      /**\n       * This function reverts the yaxis and xaxis min/max values to what it was when the chart was defined.\n       * This function fixes an important bug where a user might load a new series after zooming in/out of previous series which resulted in wrong min/max\n       * Also, this should never be called internally on zoom/pan - the reset should only happen when user calls the updateSeries() function externally\n       * The function also accepts an object {xaxis, yaxis} which when present is set as the new xaxis/yaxis\n       */\n\n    }, {\n      key: \"revertDefaultAxisMinMax\",\n      value: function revertDefaultAxisMinMax(opts) {\n        var _this3 = this;\n\n        var w = this.w;\n        var xaxis = w.globals.lastXAxis;\n        var yaxis = w.globals.lastYAxis;\n\n        if (opts && opts.xaxis) {\n          xaxis = opts.xaxis;\n        }\n\n        if (opts && opts.yaxis) {\n          yaxis = opts.yaxis;\n        }\n\n        w.config.xaxis.min = xaxis.min;\n        w.config.xaxis.max = xaxis.max;\n\n        var getLastYAxis = function getLastYAxis(index) {\n          if (typeof yaxis[index] !== 'undefined') {\n            w.config.yaxis[index].min = yaxis[index].min;\n            w.config.yaxis[index].max = yaxis[index].max;\n          }\n        };\n\n        w.config.yaxis.map(function (yaxe, index) {\n          if (w.globals.zoomed) {\n            // user has zoomed, check the last yaxis\n            getLastYAxis(index);\n          } else {\n            // user hasn't zoomed, check the last yaxis first\n            if (typeof yaxis[index] !== 'undefined') {\n              getLastYAxis(index);\n            } else {\n              // if last y-axis don't exist, check the original yaxis\n              if (typeof _this3.ctx.opts.yaxis[index] !== 'undefined') {\n                yaxe.min = _this3.ctx.opts.yaxis[index].min;\n                yaxe.max = _this3.ctx.opts.yaxis[index].max;\n              }\n            }\n          }\n        });\n      }\n    }]);\n\n    return UpdateHelpers;\n  }();\n\n  (function (root, factory) {\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return factory(root, root.document);\n      });\n      /* below check fixes #412 */\n    } else if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && typeof module !== 'undefined') {\n      module.exports = root.document ? factory(root, root.document) : function (w) {\n        return factory(w, w.document);\n      };\n    } else {\n      root.SVG = factory(root, root.document);\n    }\n  })(typeof window !== 'undefined' ? window : undefined, function (window, document) {\n    // Find global reference - uses 'this' by default when available,\n    // falls back to 'window' otherwise (for bundlers like Webpack)\n    var globalRef = typeof this !== 'undefined' ? this : window; // The main wrapping element\n\n    var SVG = globalRef.SVG = function (element) {\n      if (SVG.supported) {\n        element = new SVG.Doc(element);\n\n        if (!SVG.parser.draw) {\n          SVG.prepare();\n        }\n\n        return element;\n      }\n    }; // Default namespaces\n\n\n    SVG.ns = 'http://www.w3.org/2000/svg';\n    SVG.xmlns = 'http://www.w3.org/2000/xmlns/';\n    SVG.xlink = 'http://www.w3.org/1999/xlink';\n    SVG.svgjs = 'http://svgjs.dev'; // Svg support test\n\n    SVG.supported = function () {\n      return true; // !!document.createElementNS &&\n      //     !! document.createElementNS(SVG.ns,'svg').createSVGRect\n    }(); // Don't bother to continue if SVG is not supported\n\n\n    if (!SVG.supported) return false; // Element id sequence\n\n    SVG.did = 1000; // Get next named element id\n\n    SVG.eid = function (name) {\n      return 'Svgjs' + capitalize(name) + SVG.did++;\n    }; // Method for element creation\n\n\n    SVG.create = function (name) {\n      // create element\n      var element = document.createElementNS(this.ns, name); // apply unique id\n\n      element.setAttribute('id', this.eid(name));\n      return element;\n    }; // Method for extending objects\n\n\n    SVG.extend = function () {\n      var modules, methods; // Get list of modules\n\n      modules = [].slice.call(arguments); // Get object with extensions\n\n      methods = modules.pop();\n\n      for (var i = modules.length - 1; i >= 0; i--) {\n        if (modules[i]) {\n          for (var key in methods) {\n            modules[i].prototype[key] = methods[key];\n          }\n        }\n      } // Make sure SVG.Set inherits any newly added methods\n\n\n      if (SVG.Set && SVG.Set.inherit) {\n        SVG.Set.inherit();\n      }\n    }; // Invent new element\n\n\n    SVG.invent = function (config) {\n      // Create element initializer\n      var initializer = typeof config.create === 'function' ? config.create : function () {\n        this.constructor.call(this, SVG.create(config.create));\n      }; // Inherit prototype\n\n      if (config.inherit) {\n        initializer.prototype = new config.inherit();\n      } // Extend with methods\n\n\n      if (config.extend) {\n        SVG.extend(initializer, config.extend);\n      } // Attach construct method to parent\n\n\n      if (config.construct) {\n        SVG.extend(config.parent || SVG.Container, config.construct);\n      }\n\n      return initializer;\n    }; // Adopt existing svg elements\n\n\n    SVG.adopt = function (node) {\n      // check for presence of node\n      if (!node) return null; // make sure a node isn't already adopted\n\n      if (node.instance) return node.instance; // initialize variables\n\n      var element; // adopt with element-specific settings\n\n      if (node.nodeName == 'svg') {\n        element = node.parentNode instanceof window.SVGElement ? new SVG.Nested() : new SVG.Doc();\n      } else if (node.nodeName == 'linearGradient') {\n        element = new SVG.Gradient('linear');\n      } else if (node.nodeName == 'radialGradient') {\n        element = new SVG.Gradient('radial');\n      } else if (SVG[capitalize(node.nodeName)]) {\n        element = new SVG[capitalize(node.nodeName)]();\n      } else {\n        element = new SVG.Element(node);\n      } // ensure references\n\n\n      element.type = node.nodeName;\n      element.node = node;\n      node.instance = element; // SVG.Class specific preparations\n\n      if (element instanceof SVG.Doc) {\n        element.namespace().defs();\n      } // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n\n\n      element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {});\n      return element;\n    }; // Initialize parsing element\n\n\n    SVG.prepare = function () {\n      // Select document body and create invisible svg element\n      var body = document.getElementsByTagName('body')[0],\n          draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0); // Create parser object\n\n      SVG.parser = {\n        body: body || document.documentElement,\n        draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node,\n        poly: draw.polyline().node,\n        path: draw.path().node,\n        native: SVG.create('svg')\n      };\n    };\n\n    SVG.parser = {\n      native: SVG.create('svg')\n    };\n    document.addEventListener('DOMContentLoaded', function () {\n      if (!SVG.parser.draw) {\n        SVG.prepare();\n      }\n    }, false); // Storage for regular expressions\n\n    SVG.regex = {\n      // Parse unit value\n      numberAndUnit: /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i,\n      // Parse hex value\n      hex: /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i,\n      // Parse rgb value\n      rgb: /rgb\\((\\d+),(\\d+),(\\d+)\\)/,\n      // Parse reference id\n      reference: /#([a-z0-9\\-_]+)/i,\n      // splits a transformation chain\n      transforms: /\\)\\s*,?\\s*/,\n      // Whitespace\n      whitespace: /\\s/g,\n      // Test hex value\n      isHex: /^#[a-f0-9]{3,6}$/i,\n      // Test rgb value\n      isRgb: /^rgb\\(/,\n      // Test css declaration\n      isCss: /[^:]+:[^;]+;?/,\n      // Test for blank string\n      isBlank: /^(\\s+)?$/,\n      // Test for numeric string\n      isNumber: /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\n      // Test for percent value\n      isPercent: /^-?[\\d\\.]+%$/,\n      // Test for image url\n      isImage: /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i,\n      // split at whitespace and comma\n      delimiter: /[\\s,]+/,\n      // The following regex are used to parse the d attribute of a path\n      // Matches all hyphens which are not after an exponent\n      hyphen: /([^e])\\-/gi,\n      // Replaces and tests for all path letters\n      pathLetters: /[MLHVCSQTAZ]/gi,\n      // yes we need this one, too\n      isPathLetter: /[MLHVCSQTAZ]/i,\n      // matches 0.154.23.45\n      numbersWithDots: /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi,\n      // matches .\n      dots: /\\./g\n    };\n    SVG.utils = {\n      // Map function\n      map: function map(array, block) {\n        var il = array.length,\n            result = [];\n\n        for (var i = 0; i < il; i++) {\n          result.push(block(array[i]));\n        }\n\n        return result;\n      },\n      // Filter function\n      filter: function filter(array, block) {\n        var il = array.length,\n            result = [];\n\n        for (var i = 0; i < il; i++) {\n          if (block(array[i])) {\n            result.push(array[i]);\n          }\n        }\n\n        return result;\n      },\n      filterSVGElements: function filterSVGElements(nodes) {\n        return this.filter(nodes, function (el) {\n          return el instanceof window.SVGElement;\n        });\n      }\n    };\n    SVG.defaults = {\n      // Default attribute values\n      attrs: {\n        // fill and stroke\n        'fill-opacity': 1,\n        'stroke-opacity': 1,\n        'stroke-width': 0,\n        'stroke-linejoin': 'miter',\n        'stroke-linecap': 'butt',\n        fill: '#000000',\n        stroke: '#000000',\n        opacity: 1,\n        // position\n        x: 0,\n        y: 0,\n        cx: 0,\n        cy: 0,\n        // size\n        width: 0,\n        height: 0,\n        // radius\n        r: 0,\n        rx: 0,\n        ry: 0,\n        // gradient\n        offset: 0,\n        'stop-opacity': 1,\n        'stop-color': '#000000',\n        // text\n        'font-size': 16,\n        'font-family': 'Helvetica, Arial, sans-serif',\n        'text-anchor': 'start'\n      }\n    }; // Module for color convertions\n\n    SVG.Color = function (color) {\n      var match; // initialize defaults\n\n      this.r = 0;\n      this.g = 0;\n      this.b = 0;\n      if (!color) return; // parse color\n\n      if (typeof color === 'string') {\n        if (SVG.regex.isRgb.test(color)) {\n          // get rgb values\n          match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace, '')); // parse numeric values\n\n          this.r = parseInt(match[1]);\n          this.g = parseInt(match[2]);\n          this.b = parseInt(match[3]);\n        } else if (SVG.regex.isHex.test(color)) {\n          // get hex values\n          match = SVG.regex.hex.exec(fullHex(color)); // parse numeric values\n\n          this.r = parseInt(match[1], 16);\n          this.g = parseInt(match[2], 16);\n          this.b = parseInt(match[3], 16);\n        }\n      } else if (_typeof(color) === 'object') {\n        this.r = color.r;\n        this.g = color.g;\n        this.b = color.b;\n      }\n    };\n\n    SVG.extend(SVG.Color, {\n      // Default to hex conversion\n      toString: function toString() {\n        return this.toHex();\n      },\n      // Build hex value\n      toHex: function toHex() {\n        return '#' + compToHex(this.r) + compToHex(this.g) + compToHex(this.b);\n      },\n      // Build rgb value\n      toRgb: function toRgb() {\n        return 'rgb(' + [this.r, this.g, this.b].join() + ')';\n      },\n      // Calculate true brightness\n      brightness: function brightness() {\n        return this.r / 255 * 0.30 + this.g / 255 * 0.59 + this.b / 255 * 0.11;\n      },\n      // Make color morphable\n      morph: function morph(color) {\n        this.destination = new SVG.Color(color);\n        return this;\n      },\n      // Get morphed color at given position\n      at: function at(pos) {\n        // make sure a destination is defined\n        if (!this.destination) return this; // normalise pos\n\n        pos = pos < 0 ? 0 : pos > 1 ? 1 : pos; // generate morphed color\n\n        return new SVG.Color({\n          r: ~~(this.r + (this.destination.r - this.r) * pos),\n          g: ~~(this.g + (this.destination.g - this.g) * pos),\n          b: ~~(this.b + (this.destination.b - this.b) * pos)\n        });\n      }\n    }); // Testers\n    // Test if given value is a color string\n\n    SVG.Color.test = function (color) {\n      color += '';\n      return SVG.regex.isHex.test(color) || SVG.regex.isRgb.test(color);\n    }; // Test if given value is a rgb object\n\n\n    SVG.Color.isRgb = function (color) {\n      return color && typeof color.r === 'number' && typeof color.g === 'number' && typeof color.b === 'number';\n    }; // Test if given value is a color\n\n\n    SVG.Color.isColor = function (color) {\n      return SVG.Color.isRgb(color) || SVG.Color.test(color);\n    }; // Module for array conversion\n\n\n    SVG.Array = function (array, fallback) {\n      array = (array || []).valueOf(); // if array is empty and fallback is provided, use fallback\n\n      if (array.length == 0 && fallback) {\n        array = fallback.valueOf();\n      } // parse array\n\n\n      this.value = this.parse(array);\n    };\n\n    SVG.extend(SVG.Array, {\n      // Convert array to string\n      toString: function toString() {\n        return this.value.join(' ');\n      },\n      // Real value\n      valueOf: function valueOf() {\n        return this.value;\n      },\n      // Parse whitespace separated string\n      parse: function parse(array) {\n        array = array.valueOf(); // if already is an array, no need to parse it\n\n        if (Array.isArray(array)) return array;\n        return this.split(array);\n      }\n    }); // Poly points array\n\n    SVG.PointArray = function (array, fallback) {\n      SVG.Array.call(this, array, fallback || [[0, 0]]);\n    }; // Inherit from SVG.Array\n\n\n    SVG.PointArray.prototype = new SVG.Array();\n    SVG.PointArray.prototype.constructor = SVG.PointArray;\n    var pathHandlers = {\n      M: function M(c, p, p0) {\n        p.x = p0.x = c[0];\n        p.y = p0.y = c[1];\n        return ['M', p.x, p.y];\n      },\n      L: function L(c, p) {\n        p.x = c[0];\n        p.y = c[1];\n        return ['L', c[0], c[1]];\n      },\n      H: function H(c, p) {\n        p.x = c[0];\n        return ['H', c[0]];\n      },\n      V: function V(c, p) {\n        p.y = c[0];\n        return ['V', c[0]];\n      },\n      C: function C(c, p) {\n        p.x = c[4];\n        p.y = c[5];\n        return ['C', c[0], c[1], c[2], c[3], c[4], c[5]];\n      },\n      Q: function Q(c, p) {\n        p.x = c[2];\n        p.y = c[3];\n        return ['Q', c[0], c[1], c[2], c[3]];\n      },\n      Z: function Z(c, p, p0) {\n        p.x = p0.x;\n        p.y = p0.y;\n        return ['Z'];\n      }\n    };\n    var mlhvqtcsa = 'mlhvqtcsaz'.split('');\n\n    for (var i = 0, il = mlhvqtcsa.length; i < il; ++i) {\n      pathHandlers[mlhvqtcsa[i]] = function (i) {\n        return function (c, p, p0) {\n          if (i == 'H') c[0] = c[0] + p.x;else if (i == 'V') c[0] = c[0] + p.y;else if (i == 'A') {\n            c[5] = c[5] + p.x, c[6] = c[6] + p.y;\n          } else {\n            for (var j = 0, jl = c.length; j < jl; ++j) {\n              c[j] = c[j] + (j % 2 ? p.y : p.x);\n            }\n          }\n\n          if (pathHandlers && typeof pathHandlers[i] === 'function') {\n            // this check fixes jest unit tests\n            return pathHandlers[i](c, p, p0);\n          }\n        };\n      }(mlhvqtcsa[i].toUpperCase());\n    } // Path points array\n\n\n    SVG.PathArray = function (array, fallback) {\n      SVG.Array.call(this, array, fallback || [['M', 0, 0]]);\n    }; // Inherit from SVG.Array\n\n\n    SVG.PathArray.prototype = new SVG.Array();\n    SVG.PathArray.prototype.constructor = SVG.PathArray;\n    SVG.extend(SVG.PathArray, {\n      // Convert array to string\n      toString: function toString() {\n        return arrayToString(this.value);\n      },\n      // Move path string\n      move: function move(x, y) {\n        // get bounding box of current situation\n        var box = this.bbox(); // get relative offset\n\n        x -= box.x;\n        y -= box.y;\n        return this;\n      },\n      // Get morphed path array at given position\n      at: function at(pos) {\n        // make sure a destination is defined\n        if (!this.destination) return this;\n        var sourceArray = this.value,\n            destinationArray = this.destination.value,\n            array = [],\n            pathArray = new SVG.PathArray(),\n            il,\n            jl; // Animate has specified in the SVG spec\n        // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\n\n        for (var i = 0, il = sourceArray.length; i < il; i++) {\n          array[i] = [sourceArray[i][0]];\n\n          for (var j = 1, jl = sourceArray[i].length; j < jl; j++) {\n            array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos;\n          } // For the two flags of the elliptical arc command, the SVG spec say:\n          // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\n          // Elliptical arc command as an array followed by corresponding indexes:\n          // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n          //   0    1   2        3                 4             5      6  7\n\n\n          if (array[i][0] === 'A') {\n            array[i][4] = +(array[i][4] != 0);\n            array[i][5] = +(array[i][5] != 0);\n          }\n        } // Directly modify the value of a path array, this is done this way for performance\n\n\n        pathArray.value = array;\n        return pathArray;\n      },\n      // Absolutize and parse path to array\n      parse: function parse(array) {\n        // if it's already a patharray, no need to parse it\n        if (array instanceof SVG.PathArray) return array.valueOf(); // prepare for parsing\n\n        var s,\n            arr,\n            paramCnt = {\n          'M': 2,\n          'L': 2,\n          'H': 1,\n          'V': 1,\n          'C': 6,\n          'S': 4,\n          'Q': 4,\n          'T': 2,\n          'A': 7,\n          'Z': 0\n        };\n\n        if (typeof array === 'string') {\n          array = array.replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\n          .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\n          .replace(SVG.regex.hyphen, '$1 -') // add space before hyphen\n          .trim() // trim\n          .split(SVG.regex.delimiter); // split into array\n        } else {\n          array = array.reduce(function (prev, curr) {\n            return [].concat.call(prev, curr);\n          }, []);\n        } // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\n\n\n        var arr = [],\n            p = new SVG.Point(),\n            p0 = new SVG.Point(),\n            index = 0,\n            len = array.length;\n\n        do {\n          // Test if we have a path letter\n          if (SVG.regex.isPathLetter.test(array[index])) {\n            s = array[index];\n            ++index; // If last letter was a move command and we got no new, it defaults to [L]ine\n          } else if (s == 'M') {\n            s = 'L';\n          } else if (s == 'm') {\n            s = 'l';\n          }\n\n          arr.push(pathHandlers[s].call(null, array.slice(index, index = index + paramCnt[s.toUpperCase()]).map(parseFloat), p, p0));\n        } while (len > index);\n\n        return arr;\n      },\n      // Get bounding box of path\n      bbox: function bbox() {\n        if (!SVG.parser.draw) {\n          SVG.prepare();\n        }\n\n        SVG.parser.path.setAttribute('d', this.toString());\n        return SVG.parser.path.getBBox();\n      }\n    }); // Module for unit convertions\n\n    SVG.Number = SVG.invent({\n      // Initialize\n      create: function create(value, unit) {\n        // initialize defaults\n        this.value = 0;\n        this.unit = unit || ''; // parse value\n\n        if (typeof value === 'number') {\n          // ensure a valid numeric value\n          this.value = isNaN(value) ? 0 : !isFinite(value) ? value < 0 ? -3.4e+38 : +3.4e+38 : value;\n        } else if (typeof value === 'string') {\n          unit = value.match(SVG.regex.numberAndUnit);\n\n          if (unit) {\n            // make value numeric\n            this.value = parseFloat(unit[1]); // normalize\n\n            if (unit[5] == '%') {\n              this.value /= 100;\n            } else if (unit[5] == 's') {\n              this.value *= 1000;\n            } // store unit\n\n\n            this.unit = unit[5];\n          }\n        } else {\n          if (value instanceof SVG.Number) {\n            this.value = value.valueOf();\n            this.unit = value.unit;\n          }\n        }\n      },\n      // Add methods\n      extend: {\n        // Stringalize\n        toString: function toString() {\n          return (this.unit == '%' ? ~~(this.value * 1e8) / 1e6 : this.unit == 's' ? this.value / 1e3 : this.value) + this.unit;\n        },\n        toJSON: function toJSON() {\n          return this.toString();\n        },\n        // Convert to primitive\n        valueOf: function valueOf() {\n          return this.value;\n        },\n        // Add number\n        plus: function plus(number) {\n          number = new SVG.Number(number);\n          return new SVG.Number(this + number, this.unit || number.unit);\n        },\n        // Subtract number\n        minus: function minus(number) {\n          number = new SVG.Number(number);\n          return new SVG.Number(this - number, this.unit || number.unit);\n        },\n        // Multiply number\n        times: function times(number) {\n          number = new SVG.Number(number);\n          return new SVG.Number(this * number, this.unit || number.unit);\n        },\n        // Divide number\n        divide: function divide(number) {\n          number = new SVG.Number(number);\n          return new SVG.Number(this / number, this.unit || number.unit);\n        },\n        // Convert to different unit\n        to: function to(unit) {\n          var number = new SVG.Number(this);\n\n          if (typeof unit === 'string') {\n            number.unit = unit;\n          }\n\n          return number;\n        },\n        // Make number morphable\n        morph: function morph(number) {\n          this.destination = new SVG.Number(number);\n\n          if (number.relative) {\n            this.destination.value += this.value;\n          }\n\n          return this;\n        },\n        // Get morphed number at given position\n        at: function at(pos) {\n          // Make sure a destination is defined\n          if (!this.destination) return this; // Generate new morphed number\n\n          return new SVG.Number(this.destination).minus(this).times(pos).plus(this);\n        }\n      }\n    });\n    SVG.Element = SVG.invent({\n      // Initialize node\n      create: function create(node) {\n        // make stroke value accessible dynamically\n        this._stroke = SVG.defaults.attrs.stroke;\n        this._event = null; // initialize data object\n\n        this.dom = {}; // create circular reference\n\n        if (this.node = node) {\n          this.type = node.nodeName;\n          this.node.instance = this; // store current attribute value\n\n          this._stroke = node.getAttribute('stroke') || this._stroke;\n        }\n      },\n      // Add class methods\n      extend: {\n        // Move over x-axis\n        x: function x(_x) {\n          return this.attr('x', _x);\n        },\n        // Move over y-axis\n        y: function y(_y) {\n          return this.attr('y', _y);\n        },\n        // Move by center over x-axis\n        cx: function cx(x) {\n          return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2);\n        },\n        // Move by center over y-axis\n        cy: function cy(y) {\n          return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2);\n        },\n        // Move element to given x and y values\n        move: function move(x, y) {\n          return this.x(x).y(y);\n        },\n        // Move element by its center\n        center: function center(x, y) {\n          return this.cx(x).cy(y);\n        },\n        // Set width of element\n        width: function width(_width) {\n          return this.attr('width', _width);\n        },\n        // Set height of element\n        height: function height(_height) {\n          return this.attr('height', _height);\n        },\n        // Set element size to given width and height\n        size: function size(width, height) {\n          var p = proportionalSize(this, width, height);\n          return this.width(new SVG.Number(p.width)).height(new SVG.Number(p.height));\n        },\n        // Clone element\n        clone: function clone(parent) {\n          // write dom data to the dom so the clone can pickup the data\n          this.writeDataToDom(); // clone element and assign new id\n\n          var clone = assignNewId(this.node.cloneNode(true)); // insert the clone in the given parent or after myself\n\n          if (parent) parent.add(clone);else this.after(clone);\n          return clone;\n        },\n        // Remove element\n        remove: function remove() {\n          if (this.parent()) {\n            this.parent().removeElement(this);\n          }\n\n          return this;\n        },\n        // Replace element\n        replace: function replace(element) {\n          this.after(element).remove();\n          return element;\n        },\n        // Add element to given container and return self\n        addTo: function addTo(parent) {\n          return parent.put(this);\n        },\n        // Add element to given container and return container\n        putIn: function putIn(parent) {\n          return parent.add(this);\n        },\n        // Get / set id\n        id: function id(_id) {\n          return this.attr('id', _id);\n        },\n        // Show element\n        show: function show() {\n          return this.style('display', '');\n        },\n        // Hide element\n        hide: function hide() {\n          return this.style('display', 'none');\n        },\n        // Is element visible?\n        visible: function visible() {\n          return this.style('display') != 'none';\n        },\n        // Return id on string conversion\n        toString: function toString() {\n          return this.attr('id');\n        },\n        // Return array of classes on the node\n        classes: function classes() {\n          var attr = this.attr('class');\n          return attr == null ? [] : attr.trim().split(SVG.regex.delimiter);\n        },\n        // Return true if class exists on the node, false otherwise\n        hasClass: function hasClass(name) {\n          return this.classes().indexOf(name) != -1;\n        },\n        // Add class to the node\n        addClass: function addClass(name) {\n          if (!this.hasClass(name)) {\n            var array = this.classes();\n            array.push(name);\n            this.attr('class', array.join(' '));\n          }\n\n          return this;\n        },\n        // Remove class from the node\n        removeClass: function removeClass(name) {\n          if (this.hasClass(name)) {\n            this.attr('class', this.classes().filter(function (c) {\n              return c != name;\n            }).join(' '));\n          }\n\n          return this;\n        },\n        // Toggle the presence of a class on the node\n        toggleClass: function toggleClass(name) {\n          return this.hasClass(name) ? this.removeClass(name) : this.addClass(name);\n        },\n        // Get referenced element form attribute value\n        reference: function reference(attr) {\n          return SVG.get(this.attr(attr));\n        },\n        // Returns the parent element instance\n        parent: function parent(type) {\n          var parent = this; // check for parent\n\n          if (!parent.node.parentNode) return null; // get parent element\n\n          parent = SVG.adopt(parent.node.parentNode);\n          if (!type) return parent; // loop trough ancestors if type is given\n\n          while (parent && parent.node instanceof window.SVGElement) {\n            if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent;\n            if (!parent.node.parentNode || parent.node.parentNode.nodeName == '#document') return null; // #759, #720\n\n            parent = SVG.adopt(parent.node.parentNode);\n          }\n        },\n        // Get parent document\n        doc: function doc() {\n          return this instanceof SVG.Doc ? this : this.parent(SVG.Doc);\n        },\n        // return array of all ancestors of given type up to the root svg\n        parents: function parents(type) {\n          var parents = [],\n              parent = this;\n\n          do {\n            parent = parent.parent(type);\n            if (!parent || !parent.node) break;\n            parents.push(parent);\n          } while (parent.parent);\n\n          return parents;\n        },\n        // matches the element vs a css selector\n        matches: function matches(selector) {\n          return _matches(this.node, selector);\n        },\n        // Returns the svg node to call native svg methods on it\n        native: function native() {\n          return this.node;\n        },\n        // Import raw svg\n        svg: function svg(_svg) {\n          // create temporary holder\n          var well = document.createElement('svg'); // act as a setter if svg is given\n\n          if (_svg && this instanceof SVG.Parent) {\n            // dump raw svg\n            well.innerHTML = '<svg>' + _svg.replace(/\\n/, '').replace(/<([\\w:-]+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'; // transplant nodes\n\n            for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++) {\n              this.node.appendChild(well.firstChild.firstChild);\n            } // otherwise act as a getter\n\n          } else {\n            // create a wrapping svg element in case of partial content\n            well.appendChild(_svg = document.createElement('svg')); // write svgjs data to the dom\n\n            this.writeDataToDom(); // insert a copy of this node\n\n            _svg.appendChild(this.node.cloneNode(true)); // return target element\n\n\n            return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '');\n          }\n\n          return this;\n        },\n        // write svgjs data to the dom\n        writeDataToDom: function writeDataToDom() {\n          // dump variables recursively\n          if (this.each || this.lines) {\n            var fn = this.each ? this : this.lines();\n            fn.each(function () {\n              this.writeDataToDom();\n            });\n          } // remove previously set data\n\n\n          this.node.removeAttribute('svgjs:data');\n\n          if (Object.keys(this.dom).length) {\n            this.node.setAttribute('svgjs:data', JSON.stringify(this.dom));\n          } // see #428\n\n\n          return this;\n        },\n        // set given data to the elements data property\n        setData: function setData(o) {\n          this.dom = o;\n          return this;\n        },\n        is: function is(obj) {\n          return _is(this, obj);\n        }\n      }\n    });\n    SVG.easing = {\n      '-': function _(pos) {\n        return pos;\n      },\n      '<>': function _(pos) {\n        return -Math.cos(pos * Math.PI) / 2 + 0.5;\n      },\n      '>': function _(pos) {\n        return Math.sin(pos * Math.PI / 2);\n      },\n      '<': function _(pos) {\n        return -Math.cos(pos * Math.PI / 2) + 1;\n      }\n    };\n\n    SVG.morph = function (pos) {\n      return function (from, to) {\n        return new SVG.MorphObj(from, to).at(pos);\n      };\n    };\n\n    SVG.Situation = SVG.invent({\n      create: function create(o) {\n        this.init = false;\n        this.reversed = false;\n        this.reversing = false;\n        this.duration = new SVG.Number(o.duration).valueOf();\n        this.delay = new SVG.Number(o.delay).valueOf();\n        this.start = +new Date() + this.delay;\n        this.finish = this.start + this.duration;\n        this.ease = o.ease; // this.loop is incremented from 0 to this.loops\n        // it is also incremented when in an infinite loop (when this.loops is true)\n\n        this.loop = 0;\n        this.loops = false;\n        this.animations = {// functionToCall: [list of morphable objects]\n          // e.g. move: [SVG.Number, SVG.Number]\n        };\n        this.attrs = {// holds all attributes which are not represented from a function svg.js provides\n          // e.g. someAttr: SVG.Number\n        };\n        this.styles = {// holds all styles which should be animated\n          // e.g. fill-color: SVG.Color\n        };\n        this.transforms = [// holds all transformations as transformation objects\n          // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\n        ];\n        this.once = {// functions to fire at a specific position\n          // e.g. \"0.5\": function foo(){}\n        };\n      }\n    });\n    SVG.FX = SVG.invent({\n      create: function create(element) {\n        this._target = element;\n        this.situations = [];\n        this.active = false;\n        this.situation = null;\n        this.paused = false;\n        this.lastPos = 0;\n        this.pos = 0; // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\n        // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\n\n        this.absPos = 0;\n        this._speed = 1;\n      },\n      extend: {\n        /**\n         * sets or returns the target of this animation\n         * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\n         * @param ease function || string Function which should be used for easing or easing keyword\n         * @param delay Number indicating the delay before the animation starts\n         * @return target || this\n         */\n        animate: function animate(o, ease, delay) {\n          if (_typeof(o) === 'object') {\n            ease = o.ease;\n            delay = o.delay;\n            o = o.duration;\n          }\n\n          var situation = new SVG.Situation({\n            duration: o || 1000,\n            delay: delay || 0,\n            ease: SVG.easing[ease || '-'] || ease\n          });\n          this.queue(situation);\n          return this;\n        },\n\n        /**\n        * sets a delay before the next element of the queue is called\n        * @param delay Duration of delay in milliseconds\n        * @return this.target()\n        */\n\n        /**\n        * sets or returns the target of this animation\n        * @param null || target SVG.Element which should be set as new target\n        * @return target || this\n        */\n        target: function target(_target) {\n          if (_target && _target instanceof SVG.Element) {\n            this._target = _target;\n            return this;\n          }\n\n          return this._target;\n        },\n        // returns the absolute position at a given time\n        timeToAbsPos: function timeToAbsPos(timestamp) {\n          return (timestamp - this.situation.start) / (this.situation.duration / this._speed);\n        },\n        // returns the timestamp from a given absolute positon\n        absPosToTime: function absPosToTime(absPos) {\n          return this.situation.duration / this._speed * absPos + this.situation.start;\n        },\n        // starts the animationloop\n        startAnimFrame: function startAnimFrame() {\n          this.stopAnimFrame();\n          this.animationFrame = window.requestAnimationFrame(function () {\n            this.step();\n          }.bind(this));\n        },\n        // cancels the animationframe\n        stopAnimFrame: function stopAnimFrame() {\n          window.cancelAnimationFrame(this.animationFrame);\n        },\n        // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\n        start: function start() {\n          // dont start if already started\n          if (!this.active && this.situation) {\n            this.active = true;\n            this.startCurrent();\n          }\n\n          return this;\n        },\n        // start the current situation\n        startCurrent: function startCurrent() {\n          this.situation.start = +new Date() + this.situation.delay / this._speed;\n          this.situation.finish = this.situation.start + this.situation.duration / this._speed;\n          return this.initAnimations().step();\n        },\n\n        /**\n        * adds a function / Situation to the animation queue\n        * @param fn function / situation to add\n        * @return this\n        */\n        queue: function queue(fn) {\n          if (typeof fn === 'function' || fn instanceof SVG.Situation) {\n            this.situations.push(fn);\n          }\n\n          if (!this.situation) this.situation = this.situations.shift();\n          return this;\n        },\n\n        /**\n        * pulls next element from the queue and execute it\n        * @return this\n        */\n        dequeue: function dequeue() {\n          // stop current animation\n          this.stop(); // get next animation from queue\n\n          this.situation = this.situations.shift();\n\n          if (this.situation) {\n            if (this.situation instanceof SVG.Situation) {\n              this.start();\n            } else {\n              // If it is not a SVG.Situation, then it is a function, we execute it\n              this.situation.call(this);\n            }\n          }\n\n          return this;\n        },\n        // updates all animations to the current state of the element\n        // this is important when one property could be changed from another property\n        initAnimations: function initAnimations() {\n          var source;\n          var s = this.situation;\n          if (s.init) return this;\n\n          for (var i in s.animations) {\n            source = this.target()[i]();\n\n            if (!Array.isArray(source)) {\n              source = [source];\n            }\n\n            if (!Array.isArray(s.animations[i])) {\n              s.animations[i] = [s.animations[i]];\n            } // if(s.animations[i].length > source.length) {\n            //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\n            // }\n\n\n            for (var j = source.length; j--;) {\n              // The condition is because some methods return a normal number instead\n              // of a SVG.Number\n              if (s.animations[i][j] instanceof SVG.Number) {\n                source[j] = new SVG.Number(source[j]);\n              }\n\n              s.animations[i][j] = source[j].morph(s.animations[i][j]);\n            }\n          }\n\n          for (var i in s.attrs) {\n            s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i]);\n          }\n\n          for (var i in s.styles) {\n            s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i]);\n          }\n\n          s.initialTransformation = this.target().matrixify();\n          s.init = true;\n          return this;\n        },\n        clearQueue: function clearQueue() {\n          this.situations = [];\n          return this;\n        },\n        clearCurrent: function clearCurrent() {\n          this.situation = null;\n          return this;\n        },\n\n        /** stops the animation immediately\n        * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\n        * @param clearQueue A Boolean indicating whether to remove queued animation as well.\n        * @return this\n        */\n        stop: function stop(jumpToEnd, clearQueue) {\n          var active = this.active;\n          this.active = false;\n\n          if (clearQueue) {\n            this.clearQueue();\n          }\n\n          if (jumpToEnd && this.situation) {\n            // initialize the situation if it was not\n            !active && this.startCurrent();\n            this.atEnd();\n          }\n\n          this.stopAnimFrame();\n          return this.clearCurrent();\n        },\n        after: function after(fn) {\n          var c = this.last(),\n              wrapper = function wrapper(e) {\n            if (e.detail.situation == c) {\n              fn.call(this, c);\n              this.off('finished.fx', wrapper); // prevent memory leak\n            }\n          };\n\n          this.target().on('finished.fx', wrapper);\n          return this._callStart();\n        },\n        // adds a callback which is called whenever one animation step is performed\n        during: function during(fn) {\n          var c = this.last(),\n              wrapper = function wrapper(e) {\n            if (e.detail.situation == c) {\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c);\n            }\n          }; // see above\n\n\n          this.target().off('during.fx', wrapper).on('during.fx', wrapper);\n          this.after(function () {\n            this.off('during.fx', wrapper);\n          });\n          return this._callStart();\n        },\n        // calls after ALL animations in the queue are finished\n        afterAll: function afterAll(fn) {\n          var wrapper = function wrapper(e) {\n            fn.call(this);\n            this.off('allfinished.fx', wrapper);\n          }; // see above\n\n\n          this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper);\n          return this._callStart();\n        },\n        last: function last() {\n          return this.situations.length ? this.situations[this.situations.length - 1] : this.situation;\n        },\n        // adds one property to the animations\n        add: function add(method, args, type) {\n          this.last()[type || 'animations'][method] = args;\n          return this._callStart();\n        },\n\n        /** perform one step of the animation\n        *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\n        *  @return this\n        */\n        step: function step(ignoreTime) {\n          // convert current time to an absolute position\n          if (!ignoreTime) this.absPos = this.timeToAbsPos(+new Date()); // This part convert an absolute position to a position\n\n          if (this.situation.loops !== false) {\n            var absPos, absPosInt, lastLoop; // If the absolute position is below 0, we just treat it as if it was 0\n\n            absPos = Math.max(this.absPos, 0);\n            absPosInt = Math.floor(absPos);\n\n            if (this.situation.loops === true || absPosInt < this.situation.loops) {\n              this.pos = absPos - absPosInt;\n              lastLoop = this.situation.loop;\n              this.situation.loop = absPosInt;\n            } else {\n              this.absPos = this.situation.loops;\n              this.pos = 1; // The -1 here is because we don't want to toggle reversed when all the loops have been completed\n\n              lastLoop = this.situation.loop - 1;\n              this.situation.loop = this.situation.loops;\n            }\n\n            if (this.situation.reversing) {\n              // Toggle reversed if an odd number of loops as occured since the last call of step\n              this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2);\n            }\n          } else {\n            // If there are no loop, the absolute position must not be above 1\n            this.absPos = Math.min(this.absPos, 1);\n            this.pos = this.absPos;\n          } // while the absolute position can be below 0, the position must not be below 0\n\n\n          if (this.pos < 0) this.pos = 0;\n          if (this.situation.reversed) this.pos = 1 - this.pos; // apply easing\n\n          var eased = this.situation.ease(this.pos); // call once-callbacks\n\n          for (var i in this.situation.once) {\n            if (i > this.lastPos && i <= eased) {\n              this.situation.once[i].call(this.target(), this.pos, eased);\n              delete this.situation.once[i];\n            }\n          } // fire during callback with position, eased position and current situation as parameter\n\n\n          if (this.active) this.target().fire('during', {\n            pos: this.pos,\n            eased: eased,\n            fx: this,\n            situation: this.situation\n          }); // the user may call stop or finish in the during callback\n          // so make sure that we still have a valid situation\n\n          if (!this.situation) {\n            return this;\n          } // apply the actual animation to every property\n\n\n          this.eachAt(); // do final code when situation is finished\n\n          if (this.pos == 1 && !this.situation.reversed || this.situation.reversed && this.pos == 0) {\n            // stop animation callback\n            this.stopAnimFrame(); // fire finished callback with current situation as parameter\n\n            this.target().fire('finished', {\n              fx: this,\n              situation: this.situation\n            });\n\n            if (!this.situations.length) {\n              this.target().fire('allfinished'); // Recheck the length since the user may call animate in the afterAll callback\n\n              if (!this.situations.length) {\n                this.target().off('.fx'); // there shouldnt be any binding left, but to make sure...\n\n                this.active = false;\n              }\n            } // start next animation\n\n\n            if (this.active) this.dequeue();else this.clearCurrent();\n          } else if (!this.paused && this.active) {\n            // we continue animating when we are not at the end\n            this.startAnimFrame();\n          } // save last eased position for once callback triggering\n\n\n          this.lastPos = eased;\n          return this;\n        },\n        // calculates the step for every property and calls block with it\n        eachAt: function eachAt() {\n          var len,\n              at,\n              self = this,\n              target = this.target(),\n              s = this.situation; // apply animations which can be called trough a method\n\n          for (var i in s.animations) {\n            at = [].concat(s.animations[i]).map(function (el) {\n              return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el;\n            });\n            target[i].apply(target, at);\n          } // apply animation which has to be applied with attr()\n\n\n          for (var i in s.attrs) {\n            at = [i].concat(s.attrs[i]).map(function (el) {\n              return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el;\n            });\n            target.attr.apply(target, at);\n          } // apply animation which has to be applied with style()\n\n\n          for (var i in s.styles) {\n            at = [i].concat(s.styles[i]).map(function (el) {\n              return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el;\n            });\n            target.style.apply(target, at);\n          } // animate initialTransformation which has to be chained\n\n\n          if (s.transforms.length) {\n            // get initial initialTransformation\n            at = s.initialTransformation;\n\n            for (var i = 0, len = s.transforms.length; i < len; i++) {\n              // get next transformation in chain\n              var a = s.transforms[i]; // multiply matrix directly\n\n              if (a instanceof SVG.Matrix) {\n                if (a.relative) {\n                  at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)));\n                } else {\n                  at = at.morph(a).at(s.ease(this.pos));\n                }\n\n                continue;\n              } // when transformation is absolute we have to reset the needed transformation first\n\n\n              if (!a.relative) {\n                a.undo(at.extract());\n              } // and reapply it after\n\n\n              at = at.multiply(a.at(s.ease(this.pos)));\n            } // set new matrix on element\n\n\n            target.matrix(at);\n          }\n\n          return this;\n        },\n        // adds an once-callback which is called at a specific position and never again\n        once: function once(pos, fn, isEased) {\n          var c = this.last();\n          if (!isEased) pos = c.ease(pos);\n          c.once[pos] = fn;\n          return this;\n        },\n        _callStart: function _callStart() {\n          setTimeout(function () {\n            this.start();\n          }.bind(this), 0);\n          return this;\n        }\n      },\n      parent: SVG.Element,\n      // Add method to parent elements\n      construct: {\n        // Get fx module or create a new one, then animate with given duration and ease\n        animate: function animate(o, ease, delay) {\n          return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay);\n        },\n        delay: function delay(_delay) {\n          return (this.fx || (this.fx = new SVG.FX(this))).delay(_delay);\n        },\n        stop: function stop(jumpToEnd, clearQueue) {\n          if (this.fx) {\n            this.fx.stop(jumpToEnd, clearQueue);\n          }\n\n          return this;\n        },\n        finish: function finish() {\n          if (this.fx) {\n            this.fx.finish();\n          }\n\n          return this;\n        }\n      }\n    }); // MorphObj is used whenever no morphable object is given\n\n    SVG.MorphObj = SVG.invent({\n      create: function create(from, to) {\n        // prepare color for morphing\n        if (SVG.Color.isColor(to)) return new SVG.Color(from).morph(to); // check if we have a list of values\n\n        if (SVG.regex.delimiter.test(from)) {\n          // prepare path for morphing\n          if (SVG.regex.pathLetters.test(from)) return new SVG.PathArray(from).morph(to); // prepare value list for morphing\n          else return new SVG.Array(from).morph(to);\n        } // prepare number for morphing\n\n\n        if (SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to); // prepare for plain morphing\n\n        this.value = from;\n        this.destination = to;\n      },\n      extend: {\n        at: function at(pos, real) {\n          return real < 1 ? this.value : this.destination;\n        },\n        valueOf: function valueOf() {\n          return this.value;\n        }\n      }\n    });\n    SVG.extend(SVG.FX, {\n      // Add animatable attributes\n      attr: function attr(a, v, relative) {\n        // apply attributes individually\n        if (_typeof(a) === 'object') {\n          for (var key in a) {\n            this.attr(key, a[key]);\n          }\n        } else {\n          this.add(a, v, 'attrs');\n        }\n\n        return this;\n      },\n      // Add animatable plot\n      plot: function plot(a, b, c, d) {\n        // Lines can be plotted with 4 arguments\n        if (arguments.length == 4) {\n          return this.plot([a, b, c, d]);\n        }\n\n        return this.add('plot', new (this.target().morphArray)(a));\n      }\n    });\n    SVG.Box = SVG.invent({\n      create: function create(x, y, width, height) {\n        if (_typeof(x) === 'object' && !(x instanceof SVG.Element)) {\n          // chromes getBoundingClientRect has no x and y property\n          return SVG.Box.call(this, x.left != null ? x.left : x.x, x.top != null ? x.top : x.y, x.width, x.height);\n        } else if (arguments.length == 4) {\n          this.x = x;\n          this.y = y;\n          this.width = width;\n          this.height = height;\n        } // add center, right, bottom...\n\n\n        fullBox(this);\n      }\n    });\n    SVG.BBox = SVG.invent({\n      // Initialize\n      create: function create(element) {\n        SVG.Box.apply(this, [].slice.call(arguments)); // get values if element is given\n\n        if (element instanceof SVG.Element) {\n          var box; // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\n\n          try {\n            if (!document.documentElement.contains) {\n              // This is IE - it does not support contains() for top-level SVGs\n              var topParent = element.node;\n\n              while (topParent.parentNode) {\n                topParent = topParent.parentNode;\n              }\n\n              if (topParent != document) throw new Error('Element not in the dom');\n            } else {// the element is NOT in the dom, throw error\n              // disabling the check below which fixes issue #76\n              // if (!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\n            } // find native bbox\n\n\n            box = element.node.getBBox();\n          } catch (e) {\n            if (element instanceof SVG.Shape) {\n              if (!SVG.parser.draw) {\n                // fixes apexcharts/vue-apexcharts #14\n                SVG.prepare();\n              }\n\n              var clone = element.clone(SVG.parser.draw.instance).show();\n\n              if (clone && clone.node && typeof clone.node.getBBox === 'function') {\n                // this check fixes jest unit tests\n                box = clone.node.getBBox();\n              }\n\n              if (clone && typeof clone.remove === 'function') {\n                clone.remove();\n              }\n            } else {\n              box = {\n                x: element.node.clientLeft,\n                y: element.node.clientTop,\n                width: element.node.clientWidth,\n                height: element.node.clientHeight\n              };\n            }\n          }\n\n          SVG.Box.call(this, box);\n        }\n      },\n      // Define ancestor\n      inherit: SVG.Box,\n      // Define Parent\n      parent: SVG.Element,\n      // Constructor\n      construct: {\n        // Get bounding box\n        bbox: function bbox() {\n          return new SVG.BBox(this);\n        }\n      }\n    });\n    SVG.BBox.prototype.constructor = SVG.BBox;\n    SVG.Matrix = SVG.invent({\n      // Initialize\n      create: function create(source) {\n        var base = arrayToMatrix([1, 0, 0, 1, 0, 0]); // ensure source as object\n\n        source = source === null ? base : source instanceof SVG.Element ? source.matrixify() : typeof source === 'string' ? arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) : arguments.length == 6 ? arrayToMatrix([].slice.call(arguments)) : Array.isArray(source) ? arrayToMatrix(source) : source && _typeof(source) === 'object' ? source : base; // merge source\n\n        for (var i = abcdef.length - 1; i >= 0; --i) {\n          this[abcdef[i]] = source[abcdef[i]] != null ? source[abcdef[i]] : base[abcdef[i]];\n        }\n      },\n      // Add methods\n      extend: {\n        // Extract individual transformations\n        extract: function extract() {\n          // find delta transform points\n          var px = deltaTransformPoint(this, 0, 1);\n              deltaTransformPoint(this, 1, 0);\n              var skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90;\n          return {\n            // translation\n            x: this.e,\n            y: this.f,\n            transformedX: (this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b),\n            transformedY: (this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d),\n            // rotation\n            rotation: skewX,\n            a: this.a,\n            b: this.b,\n            c: this.c,\n            d: this.d,\n            e: this.e,\n            f: this.f,\n            matrix: new SVG.Matrix(this)\n          };\n        },\n        // Clone matrix\n        clone: function clone() {\n          return new SVG.Matrix(this);\n        },\n        // Morph one matrix into another\n        morph: function morph(matrix) {\n          // store new destination\n          this.destination = new SVG.Matrix(matrix);\n          return this;\n        },\n        // Multiplies by given matrix\n        multiply: function multiply(matrix) {\n          return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()));\n        },\n        // Inverses matrix\n        inverse: function inverse() {\n          return new SVG.Matrix(this.native().inverse());\n        },\n        // Translate matrix\n        translate: function translate(x, y) {\n          return new SVG.Matrix(this.native().translate(x || 0, y || 0));\n        },\n        // Convert to native SVGMatrix\n        native: function native() {\n          // create new matrix\n          var matrix = SVG.parser.native.createSVGMatrix(); // update with current values\n\n          for (var i = abcdef.length - 1; i >= 0; i--) {\n            matrix[abcdef[i]] = this[abcdef[i]];\n          }\n\n          return matrix;\n        },\n        // Convert matrix to string\n        toString: function toString() {\n          // Construct the matrix directly, avoid values that are too small\n          return 'matrix(' + float32String(this.a) + ',' + float32String(this.b) + ',' + float32String(this.c) + ',' + float32String(this.d) + ',' + float32String(this.e) + ',' + float32String(this.f) + ')';\n        }\n      },\n      // Define parent\n      parent: SVG.Element,\n      // Add parent method\n      construct: {\n        // Get current matrix\n        ctm: function ctm() {\n          return new SVG.Matrix(this.node.getCTM());\n        },\n        // Get current screen matrix\n        screenCTM: function screenCTM() {\n          /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\n             This is needed because FF does not return the transformation matrix\n             for the inner coordinate system when getScreenCTM() is called on nested svgs.\n             However all other Browsers do that */\n          if (this instanceof SVG.Nested) {\n            var rect = this.rect(1, 1);\n            var m = rect.node.getScreenCTM();\n            rect.remove();\n            return new SVG.Matrix(m);\n          }\n\n          return new SVG.Matrix(this.node.getScreenCTM());\n        }\n      }\n    });\n    SVG.Point = SVG.invent({\n      // Initialize\n      create: function create(x, y) {\n        var source,\n            base = {\n          x: 0,\n          y: 0\n        }; // ensure source as object\n\n        source = Array.isArray(x) ? {\n          x: x[0],\n          y: x[1]\n        } : _typeof(x) === 'object' ? {\n          x: x.x,\n          y: x.y\n        } : x != null ? {\n          x: x,\n          y: y != null ? y : x\n        } : base; // If y has no value, then x is used has its value\n        // merge source\n\n        this.x = source.x;\n        this.y = source.y;\n      },\n      // Add methods\n      extend: {\n        // Clone point\n        clone: function clone() {\n          return new SVG.Point(this);\n        },\n        // Morph one point into another\n        morph: function morph(x, y) {\n          // store new destination\n          this.destination = new SVG.Point(x, y);\n          return this;\n        }\n      }\n    });\n    SVG.extend(SVG.Element, {\n      // Get point\n      point: function point(x, y) {\n        return new SVG.Point(x, y).transform(this.screenCTM().inverse());\n      }\n    });\n    SVG.extend(SVG.Element, {\n      // Set svg element attribute\n      attr: function attr(a, v, n) {\n        // act as full getter\n        if (a == null) {\n          // get an object of attributes\n          a = {};\n          v = this.node.attributes;\n\n          for (var n = v.length - 1; n >= 0; n--) {\n            a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue;\n          }\n\n          return a;\n        } else if (_typeof(a) === 'object') {\n          // apply every attribute individually if an object is passed\n          for (var v_ in a) {\n            this.attr(v_, a[v_]);\n          }\n        } else if (v === null) {\n          // remove value\n          this.node.removeAttribute(a);\n        } else if (v == null) {\n          // act as a getter if the first and only argument is not an object\n          v = this.node.getAttribute(a);\n          return v == null ? SVG.defaults.attrs[a] : SVG.regex.isNumber.test(v) ? parseFloat(v) : v;\n        } else {\n          // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\n          if (a == 'stroke-width') {\n            this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null);\n          } else if (a == 'stroke') {\n            this._stroke = v;\n          } // convert image fill and stroke to patterns\n\n\n          if (a == 'fill' || a == 'stroke') {\n            if (SVG.regex.isImage.test(v)) {\n              v = this.doc().defs().image(v, 0, 0);\n            }\n\n            if (v instanceof SVG.Image) {\n              v = this.doc().defs().pattern(0, 0, function () {\n                this.add(v);\n              });\n            }\n          } // ensure correct numeric values (also accepts NaN and Infinity)\n\n\n          if (typeof v === 'number') {\n            v = new SVG.Number(v);\n          } // ensure full hex color\n          else if (SVG.Color.isColor(v)) {\n            v = new SVG.Color(v);\n          } // parse array values\n          else if (Array.isArray(v)) {\n            v = new SVG.Array(v);\n          } // if the passed attribute is leading...\n\n\n          if (a == 'leading') {\n            // ... call the leading method instead\n            if (this.leading) {\n              this.leading(v);\n            }\n          } else {\n            // set given attribute on node\n            typeof n === 'string' ? this.node.setAttributeNS(n, a, v.toString()) : this.node.setAttribute(a, v.toString());\n          } // rebuild if required\n\n\n          if (this.rebuild && (a == 'font-size' || a == 'x')) {\n            this.rebuild(a, v);\n          }\n        }\n\n        return this;\n      }\n    });\n    SVG.extend(SVG.Element, {\n      // Add transformations\n      transform: function transform(o, relative) {\n        // get target in case of the fx module, otherwise reference this\n        var target = this,\n            matrix;\n   // act as a getter\n\n        if (_typeof(o) !== 'object') {\n          // get current matrix\n          matrix = new SVG.Matrix(target).extract();\n          return typeof o === 'string' ? matrix[o] : matrix;\n        } // get current matrix\n\n\n        matrix = new SVG.Matrix(target); // ensure relative flag\n\n        relative = !!relative || !!o.relative; // act on matrix\n\n        if (o.a != null) {\n          matrix = relative // relative\n          ? matrix.multiply(new SVG.Matrix(o)) // absolute\n          : new SVG.Matrix(o);\n        }\n\n        return this.attr('transform', matrix);\n      }\n    });\n    SVG.extend(SVG.Element, {\n      // Reset all transformations\n      untransform: function untransform() {\n        return this.attr('transform', null);\n      },\n      // merge the whole transformation chain into one matrix and returns it\n      matrixify: function matrixify() {\n        var matrix = (this.attr('transform') || '').split(SVG.regex.transforms).slice(0, -1).map(function (str) {\n          // generate key => value pairs\n          var kv = str.trim().split('(');\n          return [kv[0], kv[1].split(SVG.regex.delimiter).map(function (str) {\n            return parseFloat(str);\n          })];\n        }) // merge every transformation into one matrix\n        .reduce(function (matrix, transform) {\n          if (transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]));\n          return matrix[transform[0]].apply(matrix, transform[1]);\n        }, new SVG.Matrix());\n        return matrix;\n      },\n      // add an element to another parent without changing the visual representation on the screen\n      toParent: function toParent(parent) {\n        if (this == parent) return this;\n        var ctm = this.screenCTM();\n        var pCtm = parent.screenCTM().inverse();\n        this.addTo(parent).untransform().transform(pCtm.multiply(ctm));\n        return this;\n      },\n      // same as above with parent equals root-svg\n      toDoc: function toDoc() {\n        return this.toParent(this.doc());\n      }\n    });\n    SVG.Transformation = SVG.invent({\n      create: function create(source, inversed) {\n        if (arguments.length > 1 && typeof inversed !== 'boolean') {\n          return this.constructor.call(this, [].slice.call(arguments));\n        }\n\n        if (Array.isArray(source)) {\n          for (var i = 0, len = this.arguments.length; i < len; ++i) {\n            this[this.arguments[i]] = source[i];\n          }\n        } else if (source && _typeof(source) === 'object') {\n          for (var i = 0, len = this.arguments.length; i < len; ++i) {\n            this[this.arguments[i]] = source[this.arguments[i]];\n          }\n        }\n\n        this.inversed = false;\n\n        if (inversed === true) {\n          this.inversed = true;\n        }\n      }\n    });\n    SVG.Translate = SVG.invent({\n      parent: SVG.Matrix,\n      inherit: SVG.Transformation,\n      create: function create(source, inversed) {\n        this.constructor.apply(this, [].slice.call(arguments));\n      },\n      extend: {\n        arguments: ['transformedX', 'transformedY'],\n        method: 'translate'\n      }\n    });\n    SVG.extend(SVG.Element, {\n      // Dynamic style generator\n      style: function style(s, v) {\n        if (arguments.length == 0) {\n          // get full style\n          return this.node.style.cssText || '';\n        } else if (arguments.length < 2) {\n          // apply every style individually if an object is passed\n          if (_typeof(s) === 'object') {\n            for (var v_ in s) {\n              this.style(v_, s[v_]);\n            }\n          } else if (SVG.regex.isCss.test(s)) {\n            // parse css string\n            s = s.split(/\\s*;\\s*/) // filter out suffix ; and stuff like ;;\n            .filter(function (e) {\n              return !!e;\n            }).map(function (e) {\n              return e.split(/\\s*:\\s*/);\n            }); // apply every definition individually\n\n            while (v = s.pop()) {\n              this.style(v[0], v[1]);\n            }\n          } else {\n            // act as a getter if the first and only argument is not an object\n            return this.node.style[camelCase(s)];\n          }\n        } else {\n          this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v;\n        }\n\n        return this;\n      }\n    });\n    SVG.Parent = SVG.invent({\n      // Initialize node\n      create: function create(element) {\n        this.constructor.call(this, element);\n      },\n      // Inherit from\n      inherit: SVG.Element,\n      // Add class methods\n      extend: {\n        // Returns all child elements\n        children: function children() {\n          return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function (node) {\n            return SVG.adopt(node);\n          });\n        },\n        // Add given element at a position\n        add: function add(element, i) {\n          if (i == null) {\n            this.node.appendChild(element.node);\n          } else if (element.node != this.node.childNodes[i]) {\n            this.node.insertBefore(element.node, this.node.childNodes[i]);\n          }\n\n          return this;\n        },\n        // Basically does the same as `add()` but returns the added element instead\n        put: function put(element, i) {\n          this.add(element, i);\n          return element;\n        },\n        // Checks if the given element is a child\n        has: function has(element) {\n          return this.index(element) >= 0;\n        },\n        // Gets index of given element\n        index: function index(element) {\n          return [].slice.call(this.node.childNodes).indexOf(element.node);\n        },\n        // Get a element at the given index\n        get: function get(i) {\n          return SVG.adopt(this.node.childNodes[i]);\n        },\n        // Get first child\n        first: function first() {\n          return this.get(0);\n        },\n        // Get the last child\n        last: function last() {\n          return this.get(this.node.childNodes.length - 1);\n        },\n        // Iterates over all children and invokes a given block\n        each: function each(block, deep) {\n          var il,\n              children = this.children();\n\n          for (var i = 0, il = children.length; i < il; i++) {\n            if (children[i] instanceof SVG.Element) {\n              block.apply(children[i], [i, children]);\n            }\n\n            if (deep && children[i] instanceof SVG.Container) {\n              children[i].each(block, deep);\n            }\n          }\n\n          return this;\n        },\n        // Remove a given child\n        removeElement: function removeElement(element) {\n          this.node.removeChild(element.node);\n          return this;\n        },\n        // Remove all elements in this container\n        clear: function clear() {\n          // remove children\n          while (this.node.hasChildNodes()) {\n            this.node.removeChild(this.node.lastChild);\n          } // remove defs reference\n\n\n          delete this._defs;\n          return this;\n        },\n        // Get defs\n        defs: function defs() {\n          return this.doc().defs();\n        }\n      }\n    });\n    SVG.extend(SVG.Parent, {\n      ungroup: function ungroup(parent, depth) {\n        if (depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this;\n        parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent));\n        depth = depth || Infinity;\n        this.each(function () {\n          if (this instanceof SVG.Defs) return this;\n          if (this instanceof SVG.Parent) return this.ungroup(parent, depth - 1);\n          return this.toParent(parent);\n        });\n        this.node.firstChild || this.remove();\n        return this;\n      },\n      flatten: function flatten(parent, depth) {\n        return this.ungroup(parent, depth);\n      }\n    });\n    SVG.Container = SVG.invent({\n      // Initialize node\n      create: function create(element) {\n        this.constructor.call(this, element);\n      },\n      // Inherit from\n      inherit: SVG.Parent\n    });\n    SVG.ViewBox = SVG.invent({\n      // Define parent\n      parent: SVG.Container,\n      // Add parent method\n      construct: {}\n    }) // Add events to elements\n    ;\n    ['click', 'dblclick', 'mousedown', 'mouseup', 'mouseover', 'mouseout', 'mousemove', // , 'mouseenter' -> not supported by IE\n    // , 'mouseleave' -> not supported by IE\n    'touchstart', 'touchmove', 'touchleave', 'touchend', 'touchcancel'].forEach(function (event) {\n      // add event to SVG.Element\n      SVG.Element.prototype[event] = function (f) {\n        // bind event to element rather than element node\n        SVG.on(this.node, event, f);\n        return this;\n      };\n    }); // Initialize listeners stack\n\n    SVG.listeners = [];\n    SVG.handlerMap = [];\n    SVG.listenerId = 0; // Add event binder in the SVG namespace\n\n    SVG.on = function (node, event, listener, binding, options) {\n      // create listener, get object-index\n      var l = listener.bind(binding || node.instance || node),\n          index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1,\n          ev = event.split('.')[0],\n          ns = event.split('.')[1] || '*'; // ensure valid object\n\n      SVG.listeners[index] = SVG.listeners[index] || {};\n      SVG.listeners[index][ev] = SVG.listeners[index][ev] || {};\n      SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {};\n\n      if (!listener._svgjsListenerId) {\n        listener._svgjsListenerId = ++SVG.listenerId;\n      } // reference listener\n\n\n      SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l; // add listener\n\n      node.addEventListener(ev, l, options || {\n        passive: true\n      });\n    }; // Add event unbinder in the SVG namespace\n\n\n    SVG.off = function (node, event, listener) {\n      var index = SVG.handlerMap.indexOf(node),\n          ev = event && event.split('.')[0],\n          ns = event && event.split('.')[1],\n          namespace = '';\n      if (index == -1) return;\n\n      if (listener) {\n        if (typeof listener === 'function') listener = listener._svgjsListenerId;\n        if (!listener) return; // remove listener reference\n\n        if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\n          // remove listener\n          node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false);\n          delete SVG.listeners[index][ev][ns || '*'][listener];\n        }\n      } else if (ns && ev) {\n        // remove all listeners for a namespaced event\n        if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\n          for (var listener_ in SVG.listeners[index][ev][ns]) {\n            SVG.off(node, [ev, ns].join('.'), listener_);\n          }\n\n          delete SVG.listeners[index][ev][ns];\n        }\n      } else if (ns) {\n        // remove all listeners for a specific namespace\n        for (var event_ in SVG.listeners[index]) {\n          for (var namespace in SVG.listeners[index][event_]) {\n            if (ns === namespace) {\n              SVG.off(node, [event_, ns].join('.'));\n            }\n          }\n        }\n      } else if (ev) {\n        // remove all listeners for the event\n        if (SVG.listeners[index][ev]) {\n          for (var namespace in SVG.listeners[index][ev]) {\n            SVG.off(node, [ev, namespace].join('.'));\n          }\n\n          delete SVG.listeners[index][ev];\n        }\n      } else {\n        // remove all listeners on a given node\n        for (var event_ in SVG.listeners[index]) {\n          SVG.off(node, event_);\n        }\n\n        delete SVG.listeners[index];\n        delete SVG.handlerMap[index];\n      }\n    }; //\n\n\n    SVG.extend(SVG.Element, {\n      // Bind given event to listener\n      on: function on(event, listener, binding, options) {\n        SVG.on(this.node, event, listener, binding, options);\n        return this;\n      },\n      // Unbind event from listener\n      off: function off(event, listener) {\n        SVG.off(this.node, event, listener);\n        return this;\n      },\n      // Fire given event\n      fire: function fire(event, data) {\n        // Dispatch event\n        if (event instanceof window.Event) {\n          this.node.dispatchEvent(event);\n        } else {\n          this.node.dispatchEvent(event = new SVG.CustomEvent(event, {\n            detail: data,\n            cancelable: true\n          }));\n        }\n\n        this._event = event;\n        return this;\n      },\n      event: function event() {\n        return this._event;\n      }\n    });\n    SVG.Defs = SVG.invent({\n      // Initialize node\n      create: 'defs',\n      // Inherit from\n      inherit: SVG.Container\n    });\n    SVG.G = SVG.invent({\n      // Initialize node\n      create: 'g',\n      // Inherit from\n      inherit: SVG.Container,\n      // Add class methods\n      extend: {\n        // Move over x-axis\n        x: function x(_x2) {\n          return _x2 == null ? this.transform('x') : this.transform({\n            x: _x2 - this.x()\n          }, true);\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create a group element\n        group: function group() {\n          return this.put(new SVG.G());\n        }\n      }\n    });\n    SVG.Doc = SVG.invent({\n      // Initialize node\n      create: function create(element) {\n        if (element) {\n          // ensure the presence of a dom element\n          element = typeof element === 'string' ? document.getElementById(element) : element; // If the target is an svg element, use that element as the main wrapper.\n          // This allows svg.js to work with svg documents as well.\n\n          if (element.nodeName == 'svg') {\n            this.constructor.call(this, element);\n          } else {\n            this.constructor.call(this, SVG.create('svg'));\n            element.appendChild(this.node);\n            this.size('100%', '100%');\n          } // set svg element attributes and ensure defs node\n\n\n          this.namespace().defs();\n        }\n      },\n      // Inherit from\n      inherit: SVG.Container,\n      // Add class methods\n      extend: {\n        // Add namespaces\n        namespace: function namespace() {\n          return this.attr({\n            xmlns: SVG.ns,\n            version: '1.1'\n          }).attr('xmlns:xlink', SVG.xlink, SVG.xmlns).attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns);\n        },\n        // Creates and returns defs element\n        defs: function defs() {\n          if (!this._defs) {\n            var defs; // Find or create a defs element in this instance\n\n            if (defs = this.node.getElementsByTagName('defs')[0]) {\n              this._defs = SVG.adopt(defs);\n            } else {\n              this._defs = new SVG.Defs();\n            } // Make sure the defs node is at the end of the stack\n\n\n            this.node.appendChild(this._defs.node);\n          }\n\n          return this._defs;\n        },\n        // custom parent method\n        parent: function parent() {\n          if (!this.node.parentNode || this.node.parentNode.nodeName == '#document') return null;\n          return this.node.parentNode;\n        },\n        // Removes the doc from the DOM\n        remove: function remove() {\n          if (this.parent()) {\n            this.parent().removeChild(this.node);\n          }\n\n          return this;\n        },\n        clear: function clear() {\n          // remove children\n          while (this.node.hasChildNodes()) {\n            this.node.removeChild(this.node.lastChild);\n          } // remove defs reference\n\n\n          delete this._defs; // add back parser\n\n          if (SVG.parser.draw && !SVG.parser.draw.parentNode) {\n            this.node.appendChild(SVG.parser.draw);\n          }\n\n          return this;\n        },\n        clone: function clone(parent) {\n          // write dom data to the dom so the clone can pickup the data\n          this.writeDataToDom(); // get reference to node\n\n          var node = this.node; // clone element and assign new id\n\n          var clone = assignNewId(node.cloneNode(true)); // insert the clone in the given parent or after myself\n\n          if (parent) {\n            (parent.node || parent).appendChild(clone.node);\n          } else {\n            node.parentNode.insertBefore(clone.node, node.nextSibling);\n          }\n\n          return clone;\n        }\n      }\n    }); // ### This module adds backward / forward functionality to elements.\n    //\n\n    SVG.extend(SVG.Element, {// Get all siblings, including myself\n    });\n    SVG.Gradient = SVG.invent({\n      // Initialize node\n      create: function create(type) {\n        this.constructor.call(this, SVG.create(type + 'Gradient')); // store type\n\n        this.type = type;\n      },\n      // Inherit from\n      inherit: SVG.Container,\n      // Add class methods\n      extend: {\n        // Add a color stop\n        at: function at(offset, color, opacity) {\n          return this.put(new SVG.Stop()).update(offset, color, opacity);\n        },\n        // Update gradient\n        update: function update(block) {\n          // remove all stops\n          this.clear(); // invoke passed block\n\n          if (typeof block === 'function') {\n            block.call(this, this);\n          }\n\n          return this;\n        },\n        // Return the fill id\n        fill: function fill() {\n          return 'url(#' + this.id() + ')';\n        },\n        // Alias string convertion to fill\n        toString: function toString() {\n          return this.fill();\n        },\n        // custom attr to handle transform\n        attr: function attr(a, b, c) {\n          if (a == 'transform') a = 'gradientTransform';\n          return SVG.Container.prototype.attr.call(this, a, b, c);\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create gradient element in defs\n        gradient: function gradient(type, block) {\n          return this.defs().gradient(type, block);\n        }\n      }\n    }); // Add animatable methods to both gradient and fx module\n\n    SVG.extend(SVG.Gradient, SVG.FX, {\n      // From position\n      from: function from(x, y) {\n        return (this._target || this).type == 'radial' ? this.attr({\n          fx: new SVG.Number(x),\n          fy: new SVG.Number(y)\n        }) : this.attr({\n          x1: new SVG.Number(x),\n          y1: new SVG.Number(y)\n        });\n      },\n      // To position\n      to: function to(x, y) {\n        return (this._target || this).type == 'radial' ? this.attr({\n          cx: new SVG.Number(x),\n          cy: new SVG.Number(y)\n        }) : this.attr({\n          x2: new SVG.Number(x),\n          y2: new SVG.Number(y)\n        });\n      }\n    }); // Base gradient generation\n\n    SVG.extend(SVG.Defs, {\n      // define gradient\n      gradient: function gradient(type, block) {\n        return this.put(new SVG.Gradient(type)).update(block);\n      }\n    });\n    SVG.Stop = SVG.invent({\n      // Initialize node\n      create: 'stop',\n      // Inherit from\n      inherit: SVG.Element,\n      // Add class methods\n      extend: {\n        // add color stops\n        update: function update(o) {\n          if (typeof o === 'number' || o instanceof SVG.Number) {\n            o = {\n              offset: arguments[0],\n              color: arguments[1],\n              opacity: arguments[2]\n            };\n          } // set attributes\n\n\n          if (o.opacity != null) this.attr('stop-opacity', o.opacity);\n          if (o.color != null) this.attr('stop-color', o.color);\n          if (o.offset != null) this.attr('offset', new SVG.Number(o.offset));\n          return this;\n        }\n      }\n    });\n    SVG.Pattern = SVG.invent({\n      // Initialize node\n      create: 'pattern',\n      // Inherit from\n      inherit: SVG.Container,\n      // Add class methods\n      extend: {\n        // Return the fill id\n        fill: function fill() {\n          return 'url(#' + this.id() + ')';\n        },\n        // Update pattern by rebuilding\n        update: function update(block) {\n          // remove content\n          this.clear(); // invoke passed block\n\n          if (typeof block === 'function') {\n            block.call(this, this);\n          }\n\n          return this;\n        },\n        // Alias string convertion to fill\n        toString: function toString() {\n          return this.fill();\n        },\n        // custom attr to handle transform\n        attr: function attr(a, b, c) {\n          if (a == 'transform') a = 'patternTransform';\n          return SVG.Container.prototype.attr.call(this, a, b, c);\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create pattern element in defs\n        pattern: function pattern(width, height, block) {\n          return this.defs().pattern(width, height, block);\n        }\n      }\n    });\n    SVG.extend(SVG.Defs, {\n      // Define gradient\n      pattern: function pattern(width, height, block) {\n        return this.put(new SVG.Pattern()).update(block).attr({\n          x: 0,\n          y: 0,\n          width: width,\n          height: height,\n          patternUnits: 'userSpaceOnUse'\n        });\n      }\n    });\n    SVG.Shape = SVG.invent({\n      // Initialize node\n      create: function create(element) {\n        this.constructor.call(this, element);\n      },\n      // Inherit from\n      inherit: SVG.Element\n    });\n    SVG.Symbol = SVG.invent({\n      // Initialize node\n      create: 'symbol',\n      // Inherit from\n      inherit: SVG.Container,\n      construct: {\n        // create symbol\n        symbol: function symbol() {\n          return this.put(new SVG.Symbol());\n        }\n      }\n    });\n    SVG.Use = SVG.invent({\n      // Initialize node\n      create: 'use',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add class methods\n      extend: {\n        // Use element as a reference\n        element: function element(_element, file) {\n          // Set lined element\n          return this.attr('href', (file || '') + '#' + _element, SVG.xlink);\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create a use element\n        use: function use(element, file) {\n          return this.put(new SVG.Use()).element(element, file);\n        }\n      }\n    });\n    SVG.Rect = SVG.invent({\n      // Initialize node\n      create: 'rect',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add parent method\n      construct: {\n        // Create a rect element\n        rect: function rect(width, height) {\n          return this.put(new SVG.Rect()).size(width, height);\n        }\n      }\n    });\n    SVG.Circle = SVG.invent({\n      // Initialize node\n      create: 'circle',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add parent method\n      construct: {\n        // Create circle element, based on ellipse\n        circle: function circle(size) {\n          return this.put(new SVG.Circle()).rx(new SVG.Number(size).divide(2)).move(0, 0);\n        }\n      }\n    });\n    SVG.extend(SVG.Circle, SVG.FX, {\n      // Radius x value\n      rx: function rx(_rx) {\n        return this.attr('r', _rx);\n      },\n      // Alias radius x value\n      ry: function ry(_ry) {\n        return this.rx(_ry);\n      }\n    });\n    SVG.Ellipse = SVG.invent({\n      // Initialize node\n      create: 'ellipse',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add parent method\n      construct: {\n        // Create an ellipse\n        ellipse: function ellipse(width, height) {\n          return this.put(new SVG.Ellipse()).size(width, height).move(0, 0);\n        }\n      }\n    });\n    SVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\n      // Radius x value\n      rx: function rx(_rx2) {\n        return this.attr('rx', _rx2);\n      },\n      // Radius y value\n      ry: function ry(_ry2) {\n        return this.attr('ry', _ry2);\n      }\n    }); // Add common method\n\n    SVG.extend(SVG.Circle, SVG.Ellipse, {\n      // Move over x-axis\n      x: function x(_x3) {\n        return _x3 == null ? this.cx() - this.rx() : this.cx(_x3 + this.rx());\n      },\n      // Move over y-axis\n      y: function y(_y2) {\n        return _y2 == null ? this.cy() - this.ry() : this.cy(_y2 + this.ry());\n      },\n      // Move by center over x-axis\n      cx: function cx(x) {\n        return x == null ? this.attr('cx') : this.attr('cx', x);\n      },\n      // Move by center over y-axis\n      cy: function cy(y) {\n        return y == null ? this.attr('cy') : this.attr('cy', y);\n      },\n      // Set width of element\n      width: function width(_width2) {\n        return _width2 == null ? this.rx() * 2 : this.rx(new SVG.Number(_width2).divide(2));\n      },\n      // Set height of element\n      height: function height(_height2) {\n        return _height2 == null ? this.ry() * 2 : this.ry(new SVG.Number(_height2).divide(2));\n      },\n      // Custom size function\n      size: function size(width, height) {\n        var p = proportionalSize(this, width, height);\n        return this.rx(new SVG.Number(p.width).divide(2)).ry(new SVG.Number(p.height).divide(2));\n      }\n    });\n    SVG.Line = SVG.invent({\n      // Initialize node\n      create: 'line',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add class methods\n      extend: {\n        // Get array\n        array: function array() {\n          return new SVG.PointArray([[this.attr('x1'), this.attr('y1')], [this.attr('x2'), this.attr('y2')]]);\n        },\n        // Overwrite native plot() method\n        plot: function plot(x1, y1, x2, y2) {\n          if (x1 == null) {\n            return this.array();\n          } else if (typeof y1 !== 'undefined') {\n            x1 = {\n              x1: x1,\n              y1: y1,\n              x2: x2,\n              y2: y2\n            };\n          } else {\n            x1 = new SVG.PointArray(x1).toLine();\n          }\n\n          return this.attr(x1);\n        },\n        // Move by left top corner\n        move: function move(x, y) {\n          return this.attr(this.array().move(x, y).toLine());\n        },\n        // Set element size to given width and height\n        size: function size(width, height) {\n          var p = proportionalSize(this, width, height);\n          return this.attr(this.array().size(p.width, p.height).toLine());\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create a line element\n        line: function line(x1, y1, x2, y2) {\n          // make sure plot is called as a setter\n          // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\n          return SVG.Line.prototype.plot.apply(this.put(new SVG.Line()), x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]);\n        }\n      }\n    });\n    SVG.Polyline = SVG.invent({\n      // Initialize node\n      create: 'polyline',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add parent method\n      construct: {\n        // Create a wrapped polyline element\n        polyline: function polyline(p) {\n          // make sure plot is called as a setter\n          return this.put(new SVG.Polyline()).plot(p || new SVG.PointArray());\n        }\n      }\n    });\n    SVG.Polygon = SVG.invent({\n      // Initialize node\n      create: 'polygon',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add parent method\n      construct: {\n        // Create a wrapped polygon element\n        polygon: function polygon(p) {\n          // make sure plot is called as a setter\n          return this.put(new SVG.Polygon()).plot(p || new SVG.PointArray());\n        }\n      }\n    }); // Add polygon-specific functions\n\n    SVG.extend(SVG.Polyline, SVG.Polygon, {\n      // Get array\n      array: function array() {\n        return this._array || (this._array = new SVG.PointArray(this.attr('points')));\n      },\n      // Plot new path\n      plot: function plot(p) {\n        return p == null ? this.array() : this.clear().attr('points', typeof p === 'string' ? p : this._array = new SVG.PointArray(p));\n      },\n      // Clear array cache\n      clear: function clear() {\n        delete this._array;\n        return this;\n      },\n      // Move by left top corner\n      move: function move(x, y) {\n        return this.attr('points', this.array().move(x, y));\n      },\n      // Set element size to given width and height\n      size: function size(width, height) {\n        var p = proportionalSize(this, width, height);\n        return this.attr('points', this.array().size(p.width, p.height));\n      }\n    }); // unify all point to point elements\n\n    SVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\n      // Define morphable array\n      morphArray: SVG.PointArray,\n      // Move by left top corner over x-axis\n      x: function x(_x4) {\n        return _x4 == null ? this.bbox().x : this.move(_x4, this.bbox().y);\n      },\n      // Move by left top corner over y-axis\n      y: function y(_y3) {\n        return _y3 == null ? this.bbox().y : this.move(this.bbox().x, _y3);\n      },\n      // Set width of element\n      width: function width(_width3) {\n        var b = this.bbox();\n        return _width3 == null ? b.width : this.size(_width3, b.height);\n      },\n      // Set height of element\n      height: function height(_height3) {\n        var b = this.bbox();\n        return _height3 == null ? b.height : this.size(b.width, _height3);\n      }\n    });\n    SVG.Path = SVG.invent({\n      // Initialize node\n      create: 'path',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add class methods\n      extend: {\n        // Define morphable array\n        morphArray: SVG.PathArray,\n        // Get array\n        array: function array() {\n          return this._array || (this._array = new SVG.PathArray(this.attr('d')));\n        },\n        // Plot new path\n        plot: function plot(d) {\n          return d == null ? this.array() : this.clear().attr('d', typeof d === 'string' ? d : this._array = new SVG.PathArray(d));\n        },\n        // Clear array cache\n        clear: function clear() {\n          delete this._array;\n          return this;\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create a wrapped path element\n        path: function path(d) {\n          // make sure plot is called as a setter\n          return this.put(new SVG.Path()).plot(d || new SVG.PathArray());\n        }\n      }\n    });\n    SVG.Image = SVG.invent({\n      // Initialize node\n      create: 'image',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add class methods\n      extend: {\n        // (re)load image\t\n        load: function load(url) {\n          if (!url) return this;\n          var self = this,\n              img = new window.Image(); // preload image\t\n\n          SVG.on(img, 'load', function () {\n            SVG.off(img);\n            var p = self.parent(SVG.Pattern);\n            if (p === null) return; // ensure image size\t\n\n            if (self.width() == 0 && self.height() == 0) {\n              self.size(img.width, img.height);\n            } // ensure pattern size if not set\t\n\n\n            if (p && p.width() == 0 && p.height() == 0) {\n              p.size(self.width(), self.height());\n            } // callback\t\n\n\n            if (typeof self._loaded === 'function') {\n              self._loaded.call(self, {\n                width: img.width,\n                height: img.height,\n                ratio: img.width / img.height,\n                url: url\n              });\n            }\n          });\n          SVG.on(img, 'error', function (e) {\n            SVG.off(img);\n\n            if (typeof self._error === 'function') {\n              self._error.call(self, e);\n            }\n          });\n          return this.attr('href', img.src = this.src = url, SVG.xlink);\n        },\n        // Add loaded callback\t\n        loaded: function loaded(_loaded) {\n          this._loaded = _loaded;\n          return this;\n        },\n        error: function error(_error) {\n          this._error = _error;\n          return this;\n        }\n      },\n      // Add parent method\n      construct: {\n        // create image element, load image and set its size\t\n        image: function image(source, width, height) {\n          return this.put(new SVG.Image()).load(source).size(width || 0, height || width || 0);\n        }\n      }\n    });\n    SVG.Text = SVG.invent({\n      // Initialize node\n      create: function create() {\n        this.constructor.call(this, SVG.create('text'));\n        this.dom.leading = new SVG.Number(1.3); // store leading value for rebuilding\n\n        this._rebuild = true; // enable automatic updating of dy values\n\n        this._build = false; // disable build mode for adding multiple lines\n        // set default font\n\n        this.attr('font-family', SVG.defaults.attrs['font-family']);\n      },\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add class methods\n      extend: {\n        // Move over x-axis\n        x: function x(_x5) {\n          // act as getter\n          if (_x5 == null) {\n            return this.attr('x');\n          }\n\n          return this.attr('x', _x5);\n        },\n        // Set the text content\n        text: function text(_text) {\n          // act as getter\n          if (typeof _text === 'undefined') {\n            var _text = '';\n            var children = this.node.childNodes;\n\n            for (var i = 0, len = children.length; i < len; ++i) {\n              // add newline if its not the first child and newLined is set to true\n              if (i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true) {\n                _text += '\\n';\n              } // add content of this node\n\n\n              _text += children[i].textContent;\n            }\n\n            return _text;\n          } // remove existing content\n\n\n          this.clear().build(true);\n\n          if (typeof _text === 'function') {\n            // call block\n            _text.call(this, this);\n          } else {\n            // store text and make sure text is not blank\n            _text = _text.split('\\n'); // build new lines\n\n            for (var i = 0, il = _text.length; i < il; i++) {\n              this.tspan(_text[i]).newLine();\n            }\n          } // disable build mode and rebuild lines\n\n\n          return this.build(false).rebuild();\n        },\n        // Set font size\n        size: function size(_size) {\n          return this.attr('font-size', _size).rebuild();\n        },\n        // Set / get leading\n        leading: function leading(value) {\n          // act as getter\n          if (value == null) {\n            return this.dom.leading;\n          } // act as setter\n\n\n          this.dom.leading = new SVG.Number(value);\n          return this.rebuild();\n        },\n        // Get all the first level lines\n        lines: function lines() {\n          var node = (this.textPath && this.textPath() || this).node; // filter tspans and map them to SVG.js instances\n\n          var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function (el) {\n            return SVG.adopt(el);\n          }); // return an instance of SVG.set\n\n          return new SVG.Set(lines);\n        },\n        // Rebuild appearance type\n        rebuild: function rebuild(_rebuild) {\n          // store new rebuild flag if given\n          if (typeof _rebuild === 'boolean') {\n            this._rebuild = _rebuild;\n          } // define position of all lines\n\n\n          if (this._rebuild) {\n            var self = this,\n                blankLineOffset = 0,\n                dy = this.dom.leading * new SVG.Number(this.attr('font-size'));\n            this.lines().each(function () {\n              if (this.dom.newLined) {\n                if (!self.textPath()) {\n                  this.attr('x', self.attr('x'));\n                }\n\n                if (this.text() == '\\n') {\n                  blankLineOffset += dy;\n                } else {\n                  this.attr('dy', dy + blankLineOffset);\n                  blankLineOffset = 0;\n                }\n              }\n            });\n            this.fire('rebuild');\n          }\n\n          return this;\n        },\n        // Enable / disable build mode\n        build: function build(_build) {\n          this._build = !!_build;\n          return this;\n        },\n        // overwrite method from parent to set data properly\n        setData: function setData(o) {\n          this.dom = o;\n          this.dom.leading = new SVG.Number(o.leading || 1.3);\n          return this;\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create text element\n        text: function text(_text2) {\n          return this.put(new SVG.Text()).text(_text2);\n        },\n        // Create plain text element\n        plain: function plain(text) {\n          return this.put(new SVG.Text()).plain(text);\n        }\n      }\n    });\n    SVG.Tspan = SVG.invent({\n      // Initialize node\n      create: 'tspan',\n      // Inherit from\n      inherit: SVG.Shape,\n      // Add class methods\n      extend: {\n        // Set text content\n        text: function text(_text3) {\n          if (_text3 == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '');\n          typeof _text3 === 'function' ? _text3.call(this, this) : this.plain(_text3);\n          return this;\n        },\n        // Shortcut dx\n        dx: function dx(_dx) {\n          return this.attr('dx', _dx);\n        },\n        // Shortcut dy\n        dy: function dy(_dy) {\n          return this.attr('dy', _dy);\n        },\n        // Create new line\n        newLine: function newLine() {\n          // fetch text parent\n          var t = this.parent(SVG.Text); // mark new line\n\n          this.dom.newLined = true; // apply new hy¡n\n\n          return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x());\n        }\n      }\n    });\n    SVG.extend(SVG.Text, SVG.Tspan, {\n      // Create plain text node\n      plain: function plain(text) {\n        // clear if build mode is disabled\n        if (this._build === false) {\n          this.clear();\n        } // create text node\n\n\n        this.node.appendChild(document.createTextNode(text));\n        return this;\n      },\n      // Create a tspan\n      tspan: function tspan(text) {\n        var node = (this.textPath && this.textPath() || this).node,\n            tspan = new SVG.Tspan(); // clear if build mode is disabled\n\n        if (this._build === false) {\n          this.clear();\n        } // add new tspan\n\n\n        node.appendChild(tspan.node);\n        return tspan.text(text);\n      },\n      // Clear all lines\n      clear: function clear() {\n        var node = (this.textPath && this.textPath() || this).node; // remove existing child nodes\n\n        while (node.hasChildNodes()) {\n          node.removeChild(node.lastChild);\n        }\n\n        return this;\n      },\n      // Get length of text element\n      length: function length() {\n        return this.node.getComputedTextLength();\n      }\n    });\n    SVG.TextPath = SVG.invent({\n      // Initialize node\n      create: 'textPath',\n      // Inherit from\n      inherit: SVG.Parent,\n      // Define parent class\n      parent: SVG.Text,\n      // Add parent method\n      construct: {\n        morphArray: SVG.PathArray,\n        // return the array of the path track element\n        array: function array() {\n          var track = this.track();\n          return track ? track.array() : null;\n        },\n        // Plot path if any\n        plot: function plot(d) {\n          var track = this.track(),\n              pathArray = null;\n\n          if (track) {\n            pathArray = track.plot(d);\n          }\n\n          return d == null ? pathArray : this;\n        },\n        // Get the path track element\n        track: function track() {\n          var path = this.textPath();\n\n          if (path) {\n            return path.reference('href');\n          }\n        },\n        // Get the textPath child\n        textPath: function textPath() {\n          if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath') {\n            return SVG.adopt(this.node.firstChild);\n          }\n        }\n      }\n    });\n    SVG.Nested = SVG.invent({\n      // Initialize node\n      create: function create() {\n        this.constructor.call(this, SVG.create('svg'));\n        this.style('overflow', 'visible');\n      },\n      // Inherit from\n      inherit: SVG.Container,\n      // Add parent method\n      construct: {\n        // Create nested svg document\n        nested: function nested() {\n          return this.put(new SVG.Nested());\n        }\n      }\n    }); // Define list of available attributes for stroke and fill\n\n    var sugar = {\n      stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset'],\n      fill: ['color', 'opacity', 'rule'],\n      prefix: function prefix(t, a) {\n        return a == 'color' ? t : t + '-' + a;\n      }\n    } // Add sugar for fill and stroke\n    ;\n    ['fill', 'stroke'].forEach(function (m) {\n      var extension = {};\n\n      extension[m] = function (o) {\n        if (typeof o === 'undefined') {\n          return this;\n        }\n\n        if (typeof o === 'string' || SVG.Color.isRgb(o) || o && typeof o.fill === 'function') {\n          this.attr(m, o);\n        } else // set all attributes from sugar.fill and sugar.stroke list\n          {\n            for (var i = sugar[m].length - 1; i >= 0; i--) {\n              if (o[sugar[m][i]] != null) {\n                this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]]);\n              }\n            }\n          }\n\n        return this;\n      };\n\n      SVG.extend(SVG.Element, SVG.FX, extension);\n    });\n    SVG.extend(SVG.Element, SVG.FX, {\n      // Map translate to transform\n      translate: function translate(x, y) {\n        return this.transform({\n          x: x,\n          y: y\n        });\n      },\n      // Map matrix to transform\n      matrix: function matrix(m) {\n        return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m));\n      },\n      // Opacity\n      opacity: function opacity(value) {\n        return this.attr('opacity', value);\n      },\n      // Relative move over x axis\n      dx: function dx(x) {\n        return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true);\n      },\n      // Relative move over y axis\n      dy: function dy(y) {\n        return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true);\n      }\n    });\n    SVG.extend(SVG.Path, {\n      // Get path length\n      length: function length() {\n        return this.node.getTotalLength();\n      },\n      // Get point at length\n      pointAt: function pointAt(length) {\n        return this.node.getPointAtLength(length);\n      }\n    });\n    SVG.Set = SVG.invent({\n      // Initialize\n      create: function create(members) {\n        // Set initial state\n        Array.isArray(members) ? this.members = members : this.clear();\n      },\n      // Add class methods\n      extend: {\n        // Add element to set\n        add: function add() {\n          var il,\n              elements = [].slice.call(arguments);\n\n          for (var i = 0, il = elements.length; i < il; i++) {\n            this.members.push(elements[i]);\n          }\n\n          return this;\n        },\n        // Remove element from set\n        remove: function remove(element) {\n          var i = this.index(element); // remove given child\n\n          if (i > -1) {\n            this.members.splice(i, 1);\n          }\n\n          return this;\n        },\n        // Iterate over all members\n        each: function each(block) {\n          for (var i = 0, il = this.members.length; i < il; i++) {\n            block.apply(this.members[i], [i, this.members]);\n          }\n\n          return this;\n        },\n        // Restore to defaults\n        clear: function clear() {\n          // initialize store\n          this.members = [];\n          return this;\n        },\n        // Get the length of a set\n        length: function length() {\n          return this.members.length;\n        },\n        // Checks if a given element is present in set\n        has: function has(element) {\n          return this.index(element) >= 0;\n        },\n        // retuns index of given element in set\n        index: function index(element) {\n          return this.members.indexOf(element);\n        },\n        // Get member at given index\n        get: function get(i) {\n          return this.members[i];\n        },\n        // Get first member\n        first: function first() {\n          return this.get(0);\n        },\n        // Get last member\n        last: function last() {\n          return this.get(this.members.length - 1);\n        },\n        // Default value\n        valueOf: function valueOf() {\n          return this.members;\n        }\n      },\n      // Add parent method\n      construct: {\n        // Create a new set\n        set: function set(members) {\n          return new SVG.Set(members);\n        }\n      }\n    });\n    SVG.FX.Set = SVG.invent({\n      // Initialize node\n      create: function create(set) {\n        // store reference to set\n        this.set = set;\n      }\n    }); // Alias methods\n\n    SVG.Set.inherit = function () {\n      var methods = []; // gather shape methods\n\n      for (var m in SVG.Shape.prototype) {\n        if (typeof SVG.Shape.prototype[m] === 'function' && typeof SVG.Set.prototype[m] !== 'function') {\n          methods.push(m);\n        }\n      } // apply shape aliasses\n\n\n      methods.forEach(function (method) {\n        SVG.Set.prototype[method] = function () {\n          for (var i = 0, il = this.members.length; i < il; i++) {\n            if (this.members[i] && typeof this.members[i][method] === 'function') {\n              this.members[i][method].apply(this.members[i], arguments);\n            }\n          }\n\n          return method == 'animate' ? this.fx || (this.fx = new SVG.FX.Set(this)) : this;\n        };\n      }); // clear methods for the next round\n\n      methods = []; // gather fx methods\n\n      for (var m in SVG.FX.prototype) {\n        if (typeof SVG.FX.prototype[m] === 'function' && typeof SVG.FX.Set.prototype[m] !== 'function') {\n          methods.push(m);\n        }\n      } // apply fx aliasses\n\n\n      methods.forEach(function (method) {\n        SVG.FX.Set.prototype[method] = function () {\n          for (var i = 0, il = this.set.members.length; i < il; i++) {\n            this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments);\n          }\n\n          return this;\n        };\n      });\n    };\n\n    SVG.extend(SVG.Element, {});\n    SVG.extend(SVG.Element, {\n      // Remember arbitrary data\n      remember: function remember(k, v) {\n        // remember every item in an object individually\n        if (_typeof(arguments[0]) === 'object') {\n          for (var v_ in k) {\n            this.remember(v_, k[v_]);\n          }\n        } // retrieve memory\n        else if (arguments.length == 1) {\n          return this.memory()[k];\n        } // store memory\n        else {\n          this.memory()[k] = v;\n        }\n\n        return this;\n      },\n      // Erase a given memory\n      forget: function forget() {\n        if (arguments.length == 0) {\n          this._memory = {};\n        } else {\n          for (var i = arguments.length - 1; i >= 0; i--) {\n            delete this.memory()[arguments[i]];\n          }\n        }\n\n        return this;\n      },\n      // Initialize or return local memory object\n      memory: function memory() {\n        return this._memory || (this._memory = {});\n      }\n    }); // Method for getting an element by id\n\n    SVG.get = function (id) {\n      var node = document.getElementById(idFromReference(id) || id);\n      return SVG.adopt(node);\n    }; // Select elements by query string\n\n\n    SVG.select = function (query, parent) {\n      return new SVG.Set(SVG.utils.map((parent || document).querySelectorAll(query), function (node) {\n        return SVG.adopt(node);\n      }));\n    };\n\n    SVG.extend(SVG.Parent, {\n      // Scoped select method\n      select: function select(query) {\n        return SVG.select(query, this.node);\n      }\n    });\n\n    function pathRegReplace(a, b, c, d) {\n      return c + d.replace(SVG.regex.dots, ' .');\n    } // creates deep clone of array\n\n\n    function _is(el, obj) {\n      return el instanceof obj;\n    } // tests if a given selector matches an element\n\n\n    function _matches(el, selector) {\n      return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\n    } // Convert dash-separated-string to camelCase\n\n\n    function camelCase(s) {\n      return s.toLowerCase().replace(/-(.)/g, function (m, g) {\n        return g.toUpperCase();\n      });\n    } // Capitalize first letter of a string\n\n\n    function capitalize(s) {\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    } // Ensure to six-based hex\n\n\n    function fullHex(hex) {\n      return hex.length == 4 ? ['#', hex.substring(1, 2), hex.substring(1, 2), hex.substring(2, 3), hex.substring(2, 3), hex.substring(3, 4), hex.substring(3, 4)].join('') : hex;\n    } // Component to hex value\n\n\n    function compToHex(comp) {\n      var hex = comp.toString(16);\n      return hex.length == 1 ? '0' + hex : hex;\n    } // Calculate proportional width and height values when necessary\n\n\n    function proportionalSize(element, width, height) {\n      if (width == null || height == null) {\n        var box = element.bbox();\n\n        if (width == null) {\n          width = box.width / box.height * height;\n        } else if (height == null) {\n          height = box.height / box.width * width;\n        }\n      }\n\n      return {\n        width: width,\n        height: height\n      };\n    } // Delta transform point\n\n\n    function deltaTransformPoint(matrix, x, y) {\n      return {\n        x: x * matrix.a + y * matrix.c + 0,\n        y: x * matrix.b + y * matrix.d + 0\n      };\n    } // Map matrix array to object\n\n\n    function arrayToMatrix(a) {\n      return {\n        a: a[0],\n        b: a[1],\n        c: a[2],\n        d: a[3],\n        e: a[4],\n        f: a[5]\n      };\n    } // Parse matrix if required\n\n\n    function parseMatrix(matrix) {\n      if (!(matrix instanceof SVG.Matrix)) {\n        matrix = new SVG.Matrix(matrix);\n      }\n\n      return matrix;\n    } // Add centre point to transform object\n\n\n    function arrayToString(a) {\n      for (var i = 0, il = a.length, s = ''; i < il; i++) {\n        s += a[i][0];\n\n        if (a[i][1] != null) {\n          s += a[i][1];\n\n          if (a[i][2] != null) {\n            s += ' ';\n            s += a[i][2];\n\n            if (a[i][3] != null) {\n              s += ' ';\n              s += a[i][3];\n              s += ' ';\n              s += a[i][4];\n\n              if (a[i][5] != null) {\n                s += ' ';\n                s += a[i][5];\n                s += ' ';\n                s += a[i][6];\n\n                if (a[i][7] != null) {\n                  s += ' ';\n                  s += a[i][7];\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s + ' ';\n    } // Deep new id assignment\n\n\n    function assignNewId(node) {\n      // do the same for SVG child nodes as well\n      for (var i = node.childNodes.length - 1; i >= 0; i--) {\n        if (node.childNodes[i] instanceof window.SVGElement) {\n          assignNewId(node.childNodes[i]);\n        }\n      }\n\n      return SVG.adopt(node).id(SVG.eid(node.nodeName));\n    } // Add more bounding box properties\n\n\n    function fullBox(b) {\n      if (b.x == null) {\n        b.x = 0;\n        b.y = 0;\n        b.width = 0;\n        b.height = 0;\n      }\n\n      b.w = b.width;\n      b.h = b.height;\n      b.x2 = b.x + b.width;\n      b.y2 = b.y + b.height;\n      b.cx = b.x + b.width / 2;\n      b.cy = b.y + b.height / 2;\n      return b;\n    } // Get id from reference string\n\n\n    function idFromReference(url) {\n      var m = (url || '').toString().match(SVG.regex.reference);\n      if (m) return m[1];\n    } // If values like 1e-88 are passed, this is not a valid 32 bit float,\n    // but in those cases, we are so close to 0 that 0 works well!\n\n\n    function float32String(v) {\n      return Math.abs(v) > 1e-37 ? v : 0;\n    } // Create matrix array for looping\n\n\n    var abcdef = 'abcdef'.split(''); // Add CustomEvent to IE9 and IE10\t\n\n    if (typeof window.CustomEvent !== 'function') {\n      // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\t\n      var CustomEventPoly = function CustomEventPoly(event, options) {\n        options = options || {\n          bubbles: false,\n          cancelable: false,\n          detail: undefined\n        };\n        var e = document.createEvent('CustomEvent');\n        e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail);\n        return e;\n      };\n\n      CustomEventPoly.prototype = window.Event.prototype;\n      SVG.CustomEvent = CustomEventPoly;\n    } else {\n      SVG.CustomEvent = window.CustomEvent;\n    }\n\n    return SVG;\n  });\n\n  /*! svg.filter.js - v2.0.2 - 2016-02-24\n  * https://github.com/wout/svg.filter.js\n  * Copyright (c) 2016 Wout Fierens; Licensed MIT */\n  (function() {\n\n    // Main filter class\n    SVG.Filter = SVG.invent({\n      create: 'filter',\n      inherit: SVG.Parent,\n      extend: {\n        // Static strings\n        source:           'SourceGraphic',\n        sourceAlpha:      'SourceAlpha',\n        background:       'BackgroundImage',\n        backgroundAlpha:  'BackgroundAlpha',\n        fill:             'FillPaint',\n        stroke:           'StrokePaint',\n\n        autoSetIn: true,\n        // Custom put method for leaner code\n        put: function(element, i) {\n          this.add(element, i);\n\n          if(!element.attr('in') && this.autoSetIn){\n            element.attr('in',this.source);\n          }\n          if(!element.attr('result')){\n            element.attr('result',element);\n          }\n\n          return element\n        },\n        // Blend effect\n        blend: function(in1, in2, mode) {\n          return this.put(new SVG.BlendEffect(in1, in2, mode))\n        },\n        // ColorMatrix effect\n        colorMatrix: function(type, values) {\n          return this.put(new SVG.ColorMatrixEffect(type, values))\n        },\n        // ConvolveMatrix effect\n        convolveMatrix: function(matrix) {\n          return this.put(new SVG.ConvolveMatrixEffect(matrix))\n        },\n        // ComponentTransfer effect\n        componentTransfer: function(components) {\n          return this.put(new SVG.ComponentTransferEffect(components))\n        },\n        // Composite effect\n        composite: function(in1, in2, operator) {\n          return this.put(new SVG.CompositeEffect(in1, in2, operator))\n        },\n        // Flood effect\n        flood: function(color, opacity) {\n          return this.put(new SVG.FloodEffect(color, opacity))\n        },\n        // Offset effect\n        offset: function(x, y) {\n          return this.put(new SVG.OffsetEffect(x,y))\n        },\n        // Image effect\n        image: function(src) {\n          return this.put(new SVG.ImageEffect(src))\n        },\n        // Merge effect\n        merge: function() {\n          //pass the array of arguments to the constructor because we dont know if the user gave us an array as the first arguemnt or wether they listed the effects in the arguments\n          var args = [undefined];\n          for(var i in arguments) args.push(arguments[i]);\n          return this.put(new (SVG.MergeEffect.bind.apply(SVG.MergeEffect,args)))\n        },\n        // Gaussian Blur effect\n        gaussianBlur: function(x,y) {\n          return this.put(new SVG.GaussianBlurEffect(x,y))\n        },\n        // Morphology effect\n        morphology: function(operator,radius){\n          return this.put(new SVG.MorphologyEffect(operator,radius))\n        },\n        // DiffuseLighting effect\n        diffuseLighting: function(surfaceScale,diffuseConstant,kernelUnitLength){\n          return this.put(new SVG.DiffuseLightingEffect(surfaceScale,diffuseConstant,kernelUnitLength))\n        },\n        // DisplacementMap effect\n        displacementMap: function(in1,in2,scale,xChannelSelector,yChannelSelector){\n          return this.put(new SVG.DisplacementMapEffect(in1,in2,scale,xChannelSelector,yChannelSelector))\n        },\n        // SpecularLighting effect\n        specularLighting: function(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength){\n          return this.put(new SVG.SpecularLightingEffect(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength))\n        },\n        // Tile effect\n        tile: function(){\n          return this.put(new SVG.TileEffect());\n        },\n        // Turbulence effect\n        turbulence: function(baseFrequency,numOctaves,seed,stitchTiles,type){\n          return this.put(new SVG.TurbulenceEffect(baseFrequency,numOctaves,seed,stitchTiles,type))\n        },\n        // Default string value\n        toString: function() {\n          return 'url(#' + this.attr('id') + ')'\n        }\n      }\n    });\n\n    //add .filter function\n    SVG.extend(SVG.Defs, {\n      // Define filter\n      filter: function(block) {\n        var filter = this.put(new SVG.Filter);\n\n        /* invoke passed block */\n        if (typeof block === 'function')\n          block.call(filter, filter);\n\n        return filter\n      }\n    });\n    SVG.extend(SVG.Container, {\n      // Define filter on defs\n      filter: function(block) {\n        return this.defs().filter(block)\n      }\n    });\n    SVG.extend(SVG.Element, SVG.G, SVG.Nested, {\n      // Create filter element in defs and store reference\n      filter: function(block) {\n        this.filterer = block instanceof SVG.Element ?\n          block : this.doc().filter(block);\n\n        if(this.doc() && this.filterer.doc() !== this.doc()){\n          this.doc().defs().add(this.filterer);\n        }\n\n        this.attr('filter', this.filterer);\n\n        return this.filterer\n      },\n      // Remove filter\n      unfilter: function(remove) {\n        /* also remove the filter node */\n        if (this.filterer && remove === true)\n          this.filterer.remove();\n\n        /* delete reference to filterer */\n        delete this.filterer;\n\n        /* remove filter attribute */\n        return this.attr('filter', null)\n      }\n    });\n\n    // Create SVG.Effect class\n    SVG.Effect = SVG.invent({\n      create: function(){\n        this.constructor.call(this);\n      },\n      inherit: SVG.Element,\n      extend: {\n        // Set in attribute\n        in: function(effect) {\n          return effect == null? this.parent() && this.parent().select('[result=\"'+this.attr('in')+'\"]').get(0) || this.attr('in') : this.attr('in', effect)\n        },\n        // Named result\n        result: function(result) {\n          return result == null? this.attr('result') : this.attr('result',result)\n        },\n        // Stringification\n        toString: function() {\n          return this.result()\n        }\n      }\n    });\n\n    // create class for parent effects like merge\n    // Inherit from SVG.Parent\n    SVG.ParentEffect = SVG.invent({\n      create: function(){\n        this.constructor.call(this);\n      },\n      inherit: SVG.Parent,\n      extend: {\n        // Set in attribute\n        in: function(effect) {\n          return effect == null? this.parent() && this.parent().select('[result=\"'+this.attr('in')+'\"]').get(0) || this.attr('in') : this.attr('in', effect)\n        },\n        // Named result\n        result: function(result) {\n          return result == null? this.attr('result') : this.attr('result',result)\n        },\n        // Stringification\n        toString: function() {\n          return this.result()\n        }\n      }\n    });\n\n    //chaining\n    var chainingEffects = {\n      // Blend effect\n      blend: function(in2, mode) {\n        return this.parent() && this.parent().blend(this, in2, mode) //pass this as the first input\n      },\n      // ColorMatrix effect\n      colorMatrix: function(type, values) {\n        return this.parent() && this.parent().colorMatrix(type, values).in(this)\n      },\n      // ConvolveMatrix effect\n      convolveMatrix: function(matrix) {\n        return this.parent() && this.parent().convolveMatrix(matrix).in(this)\n      },\n      // ComponentTransfer effect\n      componentTransfer: function(components) {\n        return this.parent() && this.parent().componentTransfer(components).in(this)\n      },\n      // Composite effect\n      composite: function(in2, operator) {\n        return this.parent() && this.parent().composite(this, in2, operator) //pass this as the first input\n      },\n      // Flood effect\n      flood: function(color, opacity) {\n        return this.parent() && this.parent().flood(color, opacity) //this effect dont have inputs\n      },\n      // Offset effect\n      offset: function(x, y) {\n        return this.parent() && this.parent().offset(x,y).in(this)\n      },\n      // Image effect\n      image: function(src) {\n        return this.parent() && this.parent().image(src) //this effect dont have inputs\n      },\n      // Merge effect\n      merge: function() {\n        return this.parent() && this.parent().merge.apply(this.parent(),[this].concat(arguments)) //pass this as the first argument\n      },\n      // Gaussian Blur effect\n      gaussianBlur: function(x,y) {\n        return this.parent() && this.parent().gaussianBlur(x,y).in(this)\n      },\n      // Morphology effect\n      morphology: function(operator,radius){\n        return this.parent() && this.parent().morphology(operator,radius).in(this)\n      },\n      // DiffuseLighting effect\n      diffuseLighting: function(surfaceScale,diffuseConstant,kernelUnitLength){\n        return this.parent() && this.parent().diffuseLighting(surfaceScale,diffuseConstant,kernelUnitLength).in(this)\n      },\n      // DisplacementMap effect\n      displacementMap: function(in2,scale,xChannelSelector,yChannelSelector){\n        return this.parent() && this.parent().displacementMap(this,in2,scale,xChannelSelector,yChannelSelector) //pass this as the first input\n      },\n      // SpecularLighting effect\n      specularLighting: function(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength){\n        return this.parent() && this.parent().specularLighting(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength).in(this)\n      },\n      // Tile effect\n      tile: function(){\n        return this.parent() && this.parent().tile().in(this)\n      },\n      // Turbulence effect\n      turbulence: function(baseFrequency,numOctaves,seed,stitchTiles,type){\n        return this.parent() && this.parent().turbulence(baseFrequency,numOctaves,seed,stitchTiles,type).in(this)\n      }\n    };\n    SVG.extend(SVG.Effect,chainingEffects);\n    SVG.extend(SVG.ParentEffect,chainingEffects);\n\n    //crea class for child effects, like MergeNode, FuncR and lights\n    SVG.ChildEffect = SVG.invent({\n      create: function(){\n        this.constructor.call(this);\n      },\n      inherit: SVG.Element,\n      extend: {\n      in: function(effect){\n        this.attr('in',effect);\n      }\n      //dont include any \"result\" functions because these types of nodes dont have them\n      }\n    });\n\n    // Create all different effects\n    var effects = {\n      blend: function(in1,in2,mode){\n        this.attr({\n          in: in1,\n          in2: in2,\n          mode: mode || 'normal'\n        });\n      },\n      colorMatrix: function(type,values){\n        if (type == 'matrix')\n          values = normaliseMatrix(values);\n\n        this.attr({\n          type:   type\n        , values: typeof values == 'undefined' ? null : values\n        });\n      },\n      convolveMatrix: function(matrix){\n        matrix = normaliseMatrix(matrix);\n\n        this.attr({\n          order:        Math.sqrt(matrix.split(' ').length)\n        , kernelMatrix: matrix\n        });\n      },\n      composite: function(in1, in2, operator){\n        this.attr({\n          in: in1,\n          in2: in2,\n          operator: operator\n        });\n      },\n      flood: function(color,opacity){\n        this.attr('flood-color',color);\n        if(opacity != null) this.attr('flood-opacity',opacity);\n      },\n      offset: function(x,y){\n        this.attr({\n          dx: x,\n          dy: y\n        });\n      },\n      image: function(src){\n        this.attr('href', src, SVG.xlink);\n      },\n      displacementMap: function(in1,in2,scale,xChannelSelector,yChannelSelector){\n        this.attr({\n          in: in1,\n          in2: in2,\n          scale: scale,\n          xChannelSelector: xChannelSelector,\n          yChannelSelector: yChannelSelector\n        });\n      },\n      gaussianBlur: function(x,y){\n        if(x != null || y != null)\n          this.attr('stdDeviation', listString(Array.prototype.slice.call(arguments)));\n        else\n          this.attr('stdDeviation', '0 0');\n      },\n      morphology: function(operator,radius){\n        this.attr({\n          operator: operator,\n          radius: radius\n        });\n      },\n      tile: function(){\n\n      },\n      turbulence: function(baseFrequency,numOctaves,seed,stitchTiles,type){\n        this.attr({\n          numOctaves: numOctaves,\n          seed: seed,\n          stitchTiles: stitchTiles,\n          baseFrequency: baseFrequency,\n          type: type\n        });\n      }\n    };\n\n    // Create all parent effects\n    var parentEffects = {\n      merge: function(){\n        var children;\n\n        //test to see if we have a set\n        if(arguments[0] instanceof SVG.Set){\n          var that = this;\n          arguments[0].each(function(i){\n            if(this instanceof SVG.MergeNode)\n              that.put(this);\n            else if(this instanceof SVG.Effect || this instanceof SVG.ParentEffect)\n              that.put(new SVG.MergeNode(this));\n          });\n        }\n        else {\n          //if the first argument is an array use it\n          if(Array.isArray(arguments[0]))\n            children = arguments[0];\n          else\n            children = arguments;\n\n          for(var i = 0; i < children.length; i++){\n            if(children[i] instanceof SVG.MergeNode){\n              this.put(children[i]);\n            }\n            else this.put(new SVG.MergeNode(children[i]));\n          }\n        }\n      },\n      componentTransfer: function(compontents){\n        /* create rgb set */\n        this.rgb = new SVG.Set\n\n        /* create components */\n        ;(['r', 'g', 'b', 'a']).forEach(function(c) {\n          /* create component */\n          this[c] = new SVG['Func' + c.toUpperCase()]('identity');\n\n          /* store component in set */\n          this.rgb.add(this[c]);\n\n          /* add component node */\n          this.node.appendChild(this[c].node);\n        }.bind(this)); //lost context in foreach\n\n        /* set components */\n        if (compontents) {\n          if (compontents.rgb) {\n  (['r', 'g', 'b']).forEach(function(c) {\n              this[c].attr(compontents.rgb);\n            }.bind(this));\n\n            delete compontents.rgb;\n          }\n\n          /* set individual components */\n          for (var c in compontents)\n            this[c].attr(compontents[c]);\n        }\n      },\n      diffuseLighting: function(surfaceScale,diffuseConstant,kernelUnitLength){\n        this.attr({\n          surfaceScale: surfaceScale,\n          diffuseConstant: diffuseConstant,\n          kernelUnitLength: kernelUnitLength\n        });\n      },\n      specularLighting: function(surfaceScale,diffuseConstant,specularExponent,kernelUnitLength){\n        this.attr({\n          surfaceScale: surfaceScale,\n          diffuseConstant: diffuseConstant,\n          specularExponent: specularExponent,\n          kernelUnitLength: kernelUnitLength\n        });\n      },\n    };\n\n    // Create child effects like PointLight and MergeNode\n    var childEffects = {\n      distantLight: function(azimuth, elevation){\n        this.attr({\n          azimuth: azimuth,\n          elevation: elevation\n        });\n      },\n      pointLight: function(x,y,z){\n        this.attr({\n          x: x,\n          y: y,\n          z: z\n        });\n      },\n      spotLight: function(x,y,z,pointsAtX,pointsAtY,pointsAtZ){\n        this.attr({\n          x: x,\n          y: y,\n          z: z,\n          pointsAtX: pointsAtX,\n          pointsAtY: pointsAtY,\n          pointsAtZ: pointsAtZ\n        });\n      },\n      mergeNode: function(in1){\n        this.attr('in',in1);\n      }\n    }\n\n    // Create compontent functions\n    ;(['r', 'g', 'b', 'a']).forEach(function(c) {\n      /* create class */\n      childEffects['Func' + c.toUpperCase()] = function(type) {\n        this.attr('type',type);\n\n        // take diffent arguments based on the type\n        switch(type){\n          case 'table':\n            this.attr('tableValues',arguments[1]);\n            break\n          case 'linear':\n            this.attr('slope',arguments[1]);\n            this.attr('intercept',arguments[2]);\n            break\n          case 'gamma':\n            this.attr('amplitude',arguments[1]);\n            this.attr('exponent',arguments[2]);\n            this.attr('offset',arguments[2]);\n            break\n        }\n      };\n    });\n\n    //create effects\n    foreach(effects,function(effect,i){\n\n      /* capitalize name */\n      var name = i.charAt(0).toUpperCase() + i.slice(1);\n      var proto = {};\n\n      /* create class */\n      SVG[name + 'Effect'] = SVG.invent({\n        create: function() {\n          //call super\n          this.constructor.call(this, SVG.create('fe' + name));\n\n          //call constructor for this effect\n          effect.apply(this,arguments);\n\n          //set the result\n          this.result(this.attr('id') + 'Out');\n        },\n        inherit: SVG.Effect,\n        extend: proto\n      });\n    });\n\n    //create parent effects\n    foreach(parentEffects,function(effect,i){\n\n      /* capitalize name */\n      var name = i.charAt(0).toUpperCase() + i.slice(1);\n      var proto = {};\n\n      /* create class */\n      SVG[name + 'Effect'] = SVG.invent({\n        create: function() {\n          //call super\n          this.constructor.call(this, SVG.create('fe' + name));\n\n          //call constructor for this effect\n          effect.apply(this,arguments);\n\n          //set the result\n          this.result(this.attr('id') + 'Out');\n        },\n        inherit: SVG.ParentEffect,\n        extend: proto\n      });\n    });\n\n    //create child effects\n    foreach(childEffects,function(effect,i){\n\n      /* capitalize name */\n      var name = i.charAt(0).toUpperCase() + i.slice(1);\n      var proto = {};\n\n      /* create class */\n      SVG[name] = SVG.invent({\n        create: function() {\n          //call super\n          this.constructor.call(this, SVG.create('fe' + name));\n\n          //call constructor for this effect\n          effect.apply(this,arguments);\n        },\n        inherit: SVG.ChildEffect,\n        extend: proto\n      });\n    });\n\n    // Effect-specific extensions\n    SVG.extend(SVG.MergeEffect,{\n      in: function(effect){\n        if(effect instanceof SVG.MergeNode)\n          this.add(effect,0);\n        else\n          this.add(new SVG.MergeNode(effect),0);\n\n        return this\n      }\n    });\n    SVG.extend(SVG.CompositeEffect,SVG.BlendEffect,SVG.DisplacementMapEffect,{\n      in2: function(effect){\n          return effect == null? this.parent() && this.parent().select('[result=\"'+this.attr('in2')+'\"]').get(0) || this.attr('in2') : this.attr('in2', effect)\n      }\n    });\n\n    // Presets\n    SVG.filter = {\n      sepiatone:  [ .343, .669, .119, 0, 0\n                  , .249, .626, .130, 0, 0\n                  , .172, .334, .111, 0, 0\n                  , .000, .000, .000, 1, 0 ]\n    };\n\n    // Helpers\n    function normaliseMatrix(matrix) {\n      /* convert possible array value to string */\n      if (Array.isArray(matrix))\n        matrix = new SVG.Array(matrix);\n\n      /* ensure there are no leading, tailing or double spaces */\n      return matrix.toString().replace(/^\\s+/, '').replace(/\\s+$/, '').replace(/\\s+/g, ' ')\n    }\n\n    function listString(list) {\n      if (!Array.isArray(list))\n        return list\n\n      for (var i = 0, l = list.length, s = []; i < l; i++)\n        s.push(list[i]);\n\n      return s.join(' ')\n    }\n\n    function foreach(){ //loops through mutiple objects\n      var fn = function(){};\n      if(typeof arguments[arguments.length-1] == 'function'){\n        fn = arguments[arguments.length-1];\n        Array.prototype.splice.call(arguments,arguments.length-1,1);\n      }\n      for(var k in arguments){\n        for(var i in arguments[k]){\n          fn(arguments[k][i],i,arguments[k]);\n        }\n      }\n    }\n\n  }).call(undefined);\n\n  (function() {\n\n  SVG.extend(SVG.PathArray, {\n    morph: function(array) {\n\n      var startArr = this.value\n        ,  destArr = this.parse(array);\n\n      var startOffsetM = 0\n        ,  destOffsetM = 0;\n\n      var startOffsetNextM = false\n        ,  destOffsetNextM = false;\n\n      while(true){\n        // stop if there is no M anymore\n        if(startOffsetM === false && destOffsetM === false) break\n\n        // find the next M in path array\n        startOffsetNextM = findNextM(startArr, startOffsetM === false ? false : startOffsetM+1);\n         destOffsetNextM = findNextM( destArr,  destOffsetM === false ? false :  destOffsetM+1);\n\n        // We have to add one M to the startArray\n        if(startOffsetM === false){\n          var bbox = new SVG.PathArray(result.start).bbox();\n\n          // when the last block had no bounding box we simply take the first M we got\n          if(bbox.height == 0 || bbox.width == 0){\n            startOffsetM =  startArr.push(startArr[0]) - 1;\n          }else {\n            // we take the middle of the bbox instead when we got one\n            startOffsetM = startArr.push( ['M', bbox.x + bbox.width/2, bbox.y + bbox.height/2 ] ) - 1;\n          }\n        }\n\n        // We have to add one M to the destArray\n        if( destOffsetM === false){\n          var bbox = new SVG.PathArray(result.dest).bbox();\n\n          if(bbox.height == 0 || bbox.width == 0){\n            destOffsetM =  destArr.push(destArr[0]) - 1;\n          }else {\n            destOffsetM =  destArr.push( ['M', bbox.x + bbox.width/2, bbox.y + bbox.height/2 ] ) - 1;\n          }\n        }\n\n        // handle block from M to next M\n        var result = handleBlock(startArr, startOffsetM, startOffsetNextM, destArr, destOffsetM, destOffsetNextM);\n\n        // update the arrays to their new values\n        startArr = startArr.slice(0, startOffsetM).concat(result.start, startOffsetNextM === false ? [] : startArr.slice(startOffsetNextM));\n         destArr =  destArr.slice(0,  destOffsetM).concat(result.dest ,  destOffsetNextM === false ? [] :  destArr.slice( destOffsetNextM));\n\n        // update offsets\n        startOffsetM = startOffsetNextM === false ? false : startOffsetM + result.start.length;\n         destOffsetM =  destOffsetNextM === false ? false :  destOffsetM + result.dest.length;\n\n      }\n\n      // copy back arrays\n      this.value = startArr;\n      this.destination = new SVG.PathArray();\n      this.destination.value = destArr;\n\n      return this\n    }\n  });\n\n\n\n  // sorry for the long declaration\n  // slices out one block (from M to M) and syncronize it so the types and length match\n  function handleBlock(startArr, startOffsetM, startOffsetNextM, destArr, destOffsetM, destOffsetNextM, undefined$1){\n\n    // slice out the block we need\n    var startArrTemp = startArr.slice(startOffsetM, startOffsetNextM || undefined$1)\n      ,  destArrTemp =  destArr.slice( destOffsetM,  destOffsetNextM || undefined$1);\n\n    var i = 0\n      , posStart = {pos:[0,0], start:[0,0]}\n      , posDest  = {pos:[0,0], start:[0,0]};\n\n    do{\n\n      // convert shorthand types to long form\n      startArrTemp[i] = simplyfy.call(posStart, startArrTemp[i]);\n       destArrTemp[i] = simplyfy.call(posDest ,  destArrTemp[i]);\n\n      // check if both shape types match\n      // 2 elliptical arc curve commands ('A'), are considered different if the\n      // flags (large-arc-flag, sweep-flag) don't match\n      if(startArrTemp[i][0] != destArrTemp[i][0] || startArrTemp[i][0] == 'M' ||\n          (startArrTemp[i][0] == 'A' &&\n            (startArrTemp[i][4] != destArrTemp[i][4] || startArrTemp[i][5] != destArrTemp[i][5])\n          )\n        ) {\n\n        // if not, convert shapes to beziere\n        Array.prototype.splice.apply(startArrTemp, [i, 1].concat(toBeziere.call(posStart, startArrTemp[i])));\n         Array.prototype.splice.apply(destArrTemp, [i, 1].concat(toBeziere.call(posDest, destArrTemp[i])));\n\n      } else {\n\n        // only update positions otherwise\n        startArrTemp[i] = setPosAndReflection.call(posStart, startArrTemp[i]);\n         destArrTemp[i] = setPosAndReflection.call(posDest ,  destArrTemp[i]);\n\n      }\n\n      // we are at the end at both arrays. stop here\n      if(++i == startArrTemp.length && i == destArrTemp.length) break\n\n      // destArray is longer. Add one element\n      if(i == startArrTemp.length){\n        startArrTemp.push([\n          'C',\n          posStart.pos[0],\n          posStart.pos[1],\n          posStart.pos[0],\n          posStart.pos[1],\n          posStart.pos[0],\n          posStart.pos[1],\n        ]);\n      }\n\n      // startArr is longer. Add one element\n      if(i == destArrTemp.length){\n        destArrTemp.push([\n          'C',\n          posDest.pos[0],\n          posDest.pos[1],\n          posDest.pos[0],\n          posDest.pos[1],\n          posDest.pos[0],\n          posDest.pos[1]\n        ]);\n      }\n\n\n    }while(true)\n\n    // return the updated block\n    return {start:startArrTemp, dest:destArrTemp}\n  }\n\n  // converts shorthand types to long form\n  function simplyfy(val){\n\n    switch(val[0]){\n      case 'z': // shorthand line to start\n      case 'Z':\n        val[0] = 'L';\n        val[1] = this.start[0];\n        val[2] = this.start[1];\n        break\n      case 'H': // shorthand horizontal line\n        val[0] = 'L';\n        val[2] = this.pos[1];\n        break\n      case 'V': // shorthand vertical line\n        val[0] = 'L';\n        val[2] = val[1];\n        val[1] = this.pos[0];\n        break\n      case 'T': // shorthand quadratic beziere\n        val[0] = 'Q';\n        val[3] = val[1];\n        val[4] = val[2];\n        val[1] = this.reflection[1];\n        val[2] = this.reflection[0];\n        break\n      case 'S': // shorthand cubic beziere\n        val[0] = 'C';\n        val[6] = val[4];\n        val[5] = val[3];\n        val[4] = val[2];\n        val[3] = val[1];\n        val[2] = this.reflection[1];\n        val[1] = this.reflection[0];\n        break\n    }\n\n    return val\n\n  }\n\n  // updates reflection point and current position\n  function setPosAndReflection(val){\n\n    var len = val.length;\n\n    this.pos = [ val[len-2], val[len-1] ];\n\n    if('SCQT'.indexOf(val[0]) != -1)\n      this.reflection = [ 2 * this.pos[0] - val[len-4], 2 * this.pos[1] - val[len-3] ];\n\n    return val\n  }\n\n  // converts all types to cubic beziere\n  function toBeziere(val){\n    var retVal = [val];\n\n    switch(val[0]){\n      case 'M': // special handling for M\n        this.pos = this.start = [val[1], val[2]];\n        return retVal\n      case 'L':\n        val[5] = val[3] = val[1];\n        val[6] = val[4] = val[2];\n        val[1] = this.pos[0];\n        val[2] = this.pos[1];\n        break\n      case 'Q':\n        val[6] = val[4];\n        val[5] = val[3];\n        val[4] = val[4] * 1/3 + val[2] * 2/3;\n        val[3] = val[3] * 1/3 + val[1] * 2/3;\n        val[2] = this.pos[1] * 1/3 + val[2] * 2/3;\n        val[1] = this.pos[0] * 1/3 + val[1] * 2/3;\n        break\n      case 'A':\n        retVal = arcToBeziere(this.pos, val);\n        val = retVal[0];\n        break\n    }\n\n    val[0] = 'C';\n    this.pos = [val[5], val[6]];\n    this.reflection = [2 * val[5] - val[3], 2 * val[6] - val[4]];\n\n    return retVal\n\n  }\n\n  // finds the next position of type M\n  function findNextM(arr, offset){\n\n    if(offset === false) return false\n\n    for(var i = offset, len = arr.length;i < len;++i){\n\n      if(arr[i][0] == 'M') return i\n\n    }\n\n    return false\n  }\n\n\n\n  // Convert an arc segment into equivalent cubic Bezier curves\n  // Depending on the arc, up to 4 curves might be used to represent it since a\n  // curve gives a good approximation for only a quarter of an ellipse\n  // The curves are returned as an array of SVG curve commands:\n  // [ ['C', x1, y1, x2, y2, x, y] ... ]\n  function arcToBeziere(pos, val) {\n      // Parameters extraction, handle out-of-range parameters as specified in the SVG spec\n      // See: https://www.w3.org/TR/SVG11/implnote.html#ArcOutOfRangeParameters\n      var rx = Math.abs(val[1]), ry = Math.abs(val[2]), xAxisRotation = val[3] % 360\n        , largeArcFlag = val[4], sweepFlag = val[5], x = val[6], y = val[7]\n        , A = new SVG.Point(pos), B = new SVG.Point(x, y)\n        , primedCoord, lambda, mat, k, c, cSquare, t, O, OA, OB, tetaStart, tetaEnd\n        , deltaTeta, nbSectors, f, arcSegPoints, angle, sinAngle, cosAngle, pt, i, il\n        , retVal = [], x1, y1, x2, y2;\n\n      // Ensure radii are non-zero\n      if(rx === 0 || ry === 0 || (A.x === B.x && A.y === B.y)) {\n        // treat this arc as a straight line segment\n        return [['C', A.x, A.y, B.x, B.y, B.x, B.y]]\n      }\n\n      // Ensure radii are large enough using the algorithm provided in the SVG spec\n      // See: https://www.w3.org/TR/SVG11/implnote.html#ArcCorrectionOutOfRangeRadii\n      primedCoord = new SVG.Point((A.x-B.x)/2, (A.y-B.y)/2).transform(new SVG.Matrix().rotate(xAxisRotation));\n      lambda = (primedCoord.x * primedCoord.x) / (rx * rx) + (primedCoord.y * primedCoord.y) / (ry * ry);\n      if(lambda > 1) {\n        lambda = Math.sqrt(lambda);\n        rx = lambda*rx;\n        ry = lambda*ry;\n      }\n\n      // To simplify calculations, we make the arc part of a unit circle (rayon is 1) instead of an ellipse\n      mat = new SVG.Matrix().rotate(xAxisRotation).scale(1/rx, 1/ry).rotate(-xAxisRotation);\n      A = A.transform(mat);\n      B = B.transform(mat);\n\n      // Calculate the horizontal and vertical distance between the initial and final point of the arc\n      k = [B.x-A.x, B.y-A.y];\n\n      // Find the length of the chord formed by A and B\n      cSquare = k[0]*k[0] + k[1]*k[1];\n      c = Math.sqrt(cSquare);\n\n      // Calculate the ratios of the horizontal and vertical distance on the length of the chord\n      k[0] /= c;\n      k[1] /= c;\n\n      // Calculate the distance between the circle center and the chord midpoint\n      // using this formula: t = sqrt(r^2 - c^2 / 4)\n      // where t is the distance between the cirle center and the chord midpoint,\n      //       r is the rayon of the circle and c is the chord length\n      // From: http://www.ajdesigner.com/phpcircle/circle_segment_chord_t.php\n      // Because of the imprecision of floating point numbers, cSquare might end\n      // up being slightly above 4 which would result in a negative radicand\n      // To prevent that, a test is made before computing the square root\n      t = (cSquare < 4) ? Math.sqrt(1 - cSquare/4) : 0;\n\n      // For most situations, there are actually two different ellipses that\n      // satisfy the constraints imposed by the points A and B, the radii rx and ry,\n      // and the xAxisRotation\n      // When the flags largeArcFlag and sweepFlag are equal, it means that the\n      // second ellipse is used as a solution\n      // See: https://www.w3.org/TR/SVG/paths.html#PathDataEllipticalArcCommands\n      if(largeArcFlag === sweepFlag) {\n          t *= -1;\n      }\n\n      // Calculate the coordinates of the center of the circle from the midpoint of the chord\n      // This is done by multiplying the ratios calculated previously by the distance between\n      // the circle center and the chord midpoint and using these values to go from the midpoint\n      // to the center of the circle\n      // The negative of the vertical distance ratio is used to modify the x coordinate while\n      // the horizontal distance ratio is used to modify the y coordinate\n      // That is because the center of the circle is perpendicular to the chord and perpendicular\n      // lines are negative reciprocals\n      O = new SVG.Point((B.x+A.x)/2 + t*-k[1], (B.y+A.y)/2 + t*k[0]);\n      // Move the center of the circle at the origin\n      OA = new SVG.Point(A.x-O.x, A.y-O.y);\n      OB = new SVG.Point(B.x-O.x, B.y-O.y);\n\n      // Calculate the start and end angle\n      tetaStart = Math.acos(OA.x/Math.sqrt(OA.x*OA.x + OA.y*OA.y));\n      if (OA.y < 0) {\n        tetaStart *= -1;\n      }\n      tetaEnd = Math.acos(OB.x/Math.sqrt(OB.x*OB.x + OB.y*OB.y));\n      if (OB.y < 0) {\n        tetaEnd *= -1;\n      }\n\n      // If sweep-flag is '1', then the arc will be drawn in a \"positive-angle\" direction,\n      // make sure that the end angle is above the start angle\n      if (sweepFlag && tetaStart > tetaEnd) {\n        tetaEnd += 2*Math.PI;\n      }\n      // If sweep-flag is '0', then the arc will be drawn in a \"negative-angle\" direction,\n      // make sure that the end angle is below the start angle\n      if (!sweepFlag && tetaStart < tetaEnd) {\n        tetaEnd -= 2*Math.PI;\n      }\n\n      // Find the number of Bezier curves that are required to represent the arc\n      // A cubic Bezier curve gives a good enough approximation when representing at most a quarter of a circle\n      nbSectors = Math.ceil(Math.abs(tetaStart-tetaEnd) * 2/Math.PI);\n\n      // Calculate the coordinates of the points of all the Bezier curves required to represent the arc\n      // For an in-depth explanation of this part see: http://pomax.github.io/bezierinfo/#circles_cubic\n      arcSegPoints = [];\n      angle = tetaStart;\n      deltaTeta = (tetaEnd-tetaStart)/nbSectors;\n      f = 4*Math.tan(deltaTeta/4)/3;\n      for (i = 0; i <= nbSectors; i++) { // The <= is because a Bezier curve have a start and a endpoint\n        cosAngle = Math.cos(angle);\n        sinAngle = Math.sin(angle);\n\n        pt = new SVG.Point(O.x+cosAngle, O.y+sinAngle);\n        arcSegPoints[i] = [new SVG.Point(pt.x+f*sinAngle, pt.y-f*cosAngle), pt, new SVG.Point(pt.x-f*sinAngle, pt.y+f*cosAngle)];\n\n        angle += deltaTeta;\n      }\n\n      // Remove the first control point of the first segment point and remove the second control point of the last segment point\n      // These two control points are not used in the approximation of the arc, that is why they are removed\n      arcSegPoints[0][0] = arcSegPoints[0][1].clone();\n      arcSegPoints[arcSegPoints.length-1][2] = arcSegPoints[arcSegPoints.length-1][1].clone();\n\n      // Revert the transformation that was applied to make the arc part of a unit circle instead of an ellipse\n      mat = new SVG.Matrix().rotate(xAxisRotation).scale(rx, ry).rotate(-xAxisRotation);\n      for (i = 0, il = arcSegPoints.length; i < il; i++) {\n        arcSegPoints[i][0] = arcSegPoints[i][0].transform(mat);\n        arcSegPoints[i][1] = arcSegPoints[i][1].transform(mat);\n        arcSegPoints[i][2] = arcSegPoints[i][2].transform(mat);\n      }\n\n\n      // Convert the segments points to SVG curve commands\n      for (i = 1, il = arcSegPoints.length; i < il; i++) {\n        pt = arcSegPoints[i-1][2];\n        x1 = pt.x;\n        y1 = pt.y;\n\n        pt = arcSegPoints[i][0];\n        x2 = pt.x;\n        y2 = pt.y;\n\n        pt = arcSegPoints[i][1];\n        x = pt.x;\n        y = pt.y;\n\n        retVal.push(['C', x1, y1, x2, y2, x, y]);\n      }\n\n      return retVal\n  }\n  }());\n\n  /*! svg.draggable.js - v2.2.2 - 2019-01-08\n  * https://github.com/svgdotjs/svg.draggable.js\n  * Copyright (c) 2019 Wout Fierens; Licensed MIT */\n  (function() {\n\n    // creates handler, saves it\n    function DragHandler(el){\n      el.remember('_draggable', this);\n      this.el = el;\n    }\n\n\n    // Sets new parameter, starts dragging\n    DragHandler.prototype.init = function(constraint, val){\n      var _this = this;\n      this.constraint = constraint;\n      this.value = val;\n      this.el.on('mousedown.drag', function(e){ _this.start(e); });\n      this.el.on('touchstart.drag', function(e){ _this.start(e); });\n    };\n\n    // transforms one point from screen to user coords\n    DragHandler.prototype.transformPoint = function(event, offset){\n        event = event || window.event;\n        var touches = event.changedTouches && event.changedTouches[0] || event;\n        this.p.x = touches.clientX - (offset || 0);\n        this.p.y = touches.clientY;\n        return this.p.matrixTransform(this.m)\n    };\n\n    // gets elements bounding box with special handling of groups, nested and use\n    DragHandler.prototype.getBBox = function(){\n\n      var box = this.el.bbox();\n\n      if(this.el instanceof SVG.Nested) box = this.el.rbox();\n\n      if (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) {\n        box.x = this.el.x();\n        box.y = this.el.y();\n      }\n\n      return box\n    };\n\n    // start dragging\n    DragHandler.prototype.start = function(e){\n\n      // check for left button\n      if(e.type == 'click'|| e.type == 'mousedown' || e.type == 'mousemove'){\n        if((e.which || e.buttons) != 1){\n            return\n        }\n      }\n\n      var _this = this;\n\n      // fire beforedrag event\n      this.el.fire('beforedrag', { event: e, handler: this });\n      if(this.el.event().defaultPrevented) return;\n\n      // prevent browser drag behavior as soon as possible\n      e.preventDefault();\n\n      // prevent propagation to a parent that might also have dragging enabled\n      e.stopPropagation();\n\n      // search for parent on the fly to make sure we can call\n      // draggable() even when element is not in the dom currently\n      this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc);\n      this.p = this.parent.node.createSVGPoint();\n\n      // save current transformation matrix\n      this.m = this.el.node.getScreenCTM().inverse();\n\n      var box = this.getBBox();\n\n      var anchorOffset;\n\n      // fix text-anchor in text-element (#37)\n      if(this.el instanceof SVG.Text){\n        anchorOffset = this.el.node.getComputedTextLength();\n\n        switch(this.el.attr('text-anchor')){\n          case 'middle':\n            anchorOffset /= 2;\n            break\n          case 'start':\n            anchorOffset = 0;\n            break;\n        }\n      }\n\n      this.startPoints = {\n        // We take absolute coordinates since we are just using a delta here\n        point: this.transformPoint(e, anchorOffset),\n        box:   box,\n        transform: this.el.transform()\n      };\n\n      // add drag and end events to window\n      SVG.on(window, 'mousemove.drag', function(e){ _this.drag(e); });\n      SVG.on(window, 'touchmove.drag', function(e){ _this.drag(e); });\n      SVG.on(window, 'mouseup.drag', function(e){ _this.end(e); });\n      SVG.on(window, 'touchend.drag', function(e){ _this.end(e); });\n\n      // fire dragstart event\n      this.el.fire('dragstart', {event: e, p: this.startPoints.point, m: this.m, handler: this});\n    };\n\n    // while dragging\n    DragHandler.prototype.drag = function(e){\n\n      var box = this.getBBox()\n        , p   = this.transformPoint(e)\n        , x   = this.startPoints.box.x + p.x - this.startPoints.point.x\n        , y   = this.startPoints.box.y + p.y - this.startPoints.point.y\n        , c   = this.constraint\n        , gx  = p.x - this.startPoints.point.x\n        , gy  = p.y - this.startPoints.point.y;\n\n      this.el.fire('dragmove', {\n          event: e\n        , p: p\n        , m: this.m\n        , handler: this\n      });\n\n      if(this.el.event().defaultPrevented) return p\n\n      // move the element to its new position, if possible by constraint\n      if (typeof c == 'function') {\n\n        var coord = c.call(this.el, x, y, this.m);\n\n        // bool, just show us if movement is allowed or not\n        if (typeof coord == 'boolean') {\n          coord = {\n            x: coord,\n            y: coord\n          };\n        }\n\n        // if true, we just move. If !false its a number and we move it there\n        if (coord.x === true) {\n          this.el.x(x);\n        } else if (coord.x !== false) {\n          this.el.x(coord.x);\n        }\n\n        if (coord.y === true) {\n          this.el.y(y);\n        } else if (coord.y !== false) {\n          this.el.y(coord.y);\n        }\n\n      } else if (typeof c == 'object') {\n\n        // keep element within constrained box\n        if (c.minX != null && x < c.minX) {\n          x = c.minX;\n          gx = x - this.startPoints.box.x;\n        } else if (c.maxX != null && x > c.maxX - box.width) {\n          x = c.maxX - box.width;\n          gx = x - this.startPoints.box.x;\n        } if (c.minY != null && y < c.minY) {\n          y = c.minY;\n          gy = y - this.startPoints.box.y;\n        } else if (c.maxY != null && y > c.maxY - box.height) {\n          y = c.maxY - box.height;\n          gy = y - this.startPoints.box.y;\n        }\n\n        if (c.snapToGrid != null) {\n          x = x - (x % c.snapToGrid);\n          y = y - (y % c.snapToGrid);\n          gx = gx - (gx % c.snapToGrid);\n          gy = gy - (gy % c.snapToGrid);\n        }\n\n        if(this.el instanceof SVG.G)\n          this.el.matrix(this.startPoints.transform).transform({x:gx, y: gy}, true);\n        else\n          this.el.move(x, y);\n      }\n\n      // so we can use it in the end-method, too\n      return p\n    };\n\n    DragHandler.prototype.end = function(e){\n\n      // final drag\n      var p = this.drag(e);\n\n      // fire dragend event\n      this.el.fire('dragend', { event: e, p: p, m: this.m, handler: this });\n\n      // unbind events\n      SVG.off(window, 'mousemove.drag');\n      SVG.off(window, 'touchmove.drag');\n      SVG.off(window, 'mouseup.drag');\n      SVG.off(window, 'touchend.drag');\n\n    };\n\n    SVG.extend(SVG.Element, {\n      // Make element draggable\n      // Constraint might be an object (as described in readme.md) or a function in the form \"function (x, y)\" that gets called before every move.\n      // The function can return a boolean or an object of the form {x, y}, to which the element will be moved. \"False\" skips moving, true moves to raw x, y.\n      draggable: function(value, constraint) {\n\n        // Check the parameters and reassign if needed\n        if (typeof value == 'function' || typeof value == 'object') {\n          constraint = value;\n          value = true;\n        }\n\n        var dragHandler = this.remember('_draggable') || new DragHandler(this);\n\n        // When no parameter is given, value is true\n        value = typeof value === 'undefined' ? true : value;\n\n        if(value) dragHandler.init(constraint || {}, value);\n        else {\n          this.off('mousedown.drag');\n          this.off('touchstart.drag');\n        }\n\n        return this\n      }\n\n    });\n\n  }).call(undefined);\n\n  (function() {\n\n  function SelectHandler(el) {\n\n      this.el = el;\n      el.remember('_selectHandler', this);\n      this.pointSelection = {isSelected: false};\n      this.rectSelection = {isSelected: false};\n\n      // helper list with position settings of each type of point\n      this.pointsList = {\n        lt: [ 0, 0 ],\n        rt: [ 'width', 0 ],\n        rb: [ 'width', 'height' ],\n        lb: [ 0, 'height' ],\n        t: [ 'width', 0 ],\n        r: [ 'width', 'height' ],\n        b: [ 'width', 'height' ],\n        l: [ 0, 'height' ]\n      };\n\n      // helper function to get point coordinates based on settings above and an object (bbox in our case)\n      this.pointCoord = function (setting, object, isPointCentered) {\n        var coord = typeof setting !== 'string' ? setting : object[setting];\n        // Top, bottom, right and left points are placed in the center of element width/height\n        return isPointCentered ? coord / 2 : coord\n      };\n\n      this.pointCoords = function (point, object) {\n        var settings = this.pointsList[point];\n\n        return {\n          x: this.pointCoord(settings[0], object, (point === 't' || point === 'b')),\n          y: this.pointCoord(settings[1], object, (point === 'r' || point === 'l'))\n        }\n      };\n  }\n\n  SelectHandler.prototype.init = function (value, options) {\n\n      var bbox = this.el.bbox();\n      this.options = {};\n\n      // store defaults list of points in order to verify users config\n      var points = this.el.selectize.defaults.points;\n\n      // Merging the defaults and the options-object together\n      for (var i in this.el.selectize.defaults) {\n          this.options[i] = this.el.selectize.defaults[i];\n          if (options[i] !== undefined) {\n              this.options[i] = options[i];\n          }\n      }\n\n      // prepare & validate list of points to be added (or excluded)\n      var pointsLists = ['points', 'pointsExclude'];\n\n      for (var i in pointsLists) {\n        var option = this.options[pointsLists[i]];\n\n        if (typeof option === 'string') {\n          if (option.length > 0) {\n            // if set as comma separated string list => convert it into an array\n            option = option.split(/\\s*,\\s*/i);\n          } else {\n            option = [];\n          }\n        } else if (typeof option === 'boolean' && pointsLists[i] === 'points') {\n          // this is not needed, but let's have it for legacy support\n          option = option ? points : [];\n        }\n\n        this.options[pointsLists[i]] = option;\n      }\n\n      // intersect correct all points options with users config (exclude unwanted points)\n      // ES5 -> NO arrow functions nor Array.includes()\n      this.options.points = [ points, this.options.points ].reduce(\n        function (a, b) {\n          return a.filter(\n            function (c) {\n              return b.indexOf(c) > -1;\n            }\n          )\n        }\n      );\n\n      // exclude pointsExclude, if wanted\n      this.options.points = [ this.options.points, this.options.pointsExclude ].reduce(\n        function (a, b) {\n          return a.filter(\n            function (c) {\n              return b.indexOf(c) < 0;\n            }\n          )\n        }\n      );\n\n      this.parent = this.el.parent();\n      this.nested = (this.nested || this.parent.group());\n      this.nested.matrix(new SVG.Matrix(this.el).translate(bbox.x, bbox.y));\n\n      // When deepSelect is enabled and the element is a line/polyline/polygon, draw only points for moving\n      if (this.options.deepSelect && ['line', 'polyline', 'polygon'].indexOf(this.el.type) !== -1) {\n          this.selectPoints(value);\n      } else {\n          this.selectRect(value);\n      }\n\n      this.observe();\n      this.cleanup();\n\n  };\n\n  SelectHandler.prototype.selectPoints = function (value) {\n\n      this.pointSelection.isSelected = value;\n\n      // When set is already there we dont have to create one\n      if (this.pointSelection.set) {\n          return this;\n      }\n\n      // Create our set of elements\n      this.pointSelection.set = this.parent.set();\n      // draw the points and mark the element as selected\n      this.drawPoints();\n\n      return this;\n\n  };\n\n  // create the point-array which contains the 2 points of a line or simply the points-array of polyline/polygon\n  SelectHandler.prototype.getPointArray = function () {\n      var bbox = this.el.bbox();\n\n      return this.el.array().valueOf().map(function (el) {\n          return [el[0] - bbox.x, el[1] - bbox.y];\n      });\n  };\n\n  // Draws a points\n  SelectHandler.prototype.drawPoints = function () {\n\n      var _this = this, array = this.getPointArray();\n\n      // go through the array of points\n      for (var i = 0, len = array.length; i < len; ++i) {\n\n          var curriedEvent = (function (k) {\n              return function (ev) {\n                  ev = ev || window.event;\n                  ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\n                  ev.stopPropagation();\n\n                  var x = ev.pageX || ev.touches[0].pageX;\n                  var y = ev.pageY || ev.touches[0].pageY;\n                  _this.el.fire('point', {x: x, y: y, i: k, event: ev});\n              };\n          })(i);\n\n          // add every point to the set\n          // add css-classes and a touchstart-event which fires our event for moving points\n          var point = this.drawPoint(array[i][0], array[i][1])\n                          .addClass(this.options.classPoints)\n                          .addClass(this.options.classPoints + '_point')\n                          .on('touchstart', curriedEvent)\n                          .on('mousedown', curriedEvent);\n          this.pointSelection.set.add(point);\n      }\n  };\n\n  // The function to draw single point\n  SelectHandler.prototype.drawPoint = function (cx, cy) {\n      var pointType = this.options.pointType;\n\n      switch (pointType) {\n          case 'circle':\n              return this.drawCircle(cx, cy);\n          case 'rect':\n              return this.drawRect(cx, cy);\n          default:\n              if (typeof pointType === 'function') {\n                  return pointType.call(this, cx, cy);\n              }\n\n              throw new Error('Unknown ' + pointType + ' point type!');\n      }\n  };\n\n  // The function to draw the circle point\n  SelectHandler.prototype.drawCircle = function (cx, cy) {\n      return this.nested.circle(this.options.pointSize)\n                        .center(cx, cy);\n  };\n\n  // The function to draw the rect point\n  SelectHandler.prototype.drawRect = function (cx, cy) {\n      return this.nested.rect(this.options.pointSize, this.options.pointSize)\n                        .center(cx, cy);\n  };\n\n  // every time a point is moved, we have to update the positions of our point\n  SelectHandler.prototype.updatePointSelection = function () {\n      var array = this.getPointArray();\n\n      this.pointSelection.set.each(function (i) {\n          if (this.cx() === array[i][0] && this.cy() === array[i][1]) {\n              return;\n          }\n          this.center(array[i][0], array[i][1]);\n      });\n  };\n\n  SelectHandler.prototype.updateRectSelection = function () {\n      var _this = this, bbox = this.el.bbox();\n\n      this.rectSelection.set.get(0).attr({\n          width: bbox.width,\n          height: bbox.height\n      });\n\n      // set.get(1) is always in the upper left corner. no need to move it\n      if (this.options.points.length) {\n        this.options.points.map(function (point, index) {\n          var coords = _this.pointCoords(point, bbox);\n\n          _this.rectSelection.set.get(index + 1).center(coords.x, coords.y);\n        });\n      }\n\n      if (this.options.rotationPoint) {\n          var length = this.rectSelection.set.length();\n\n          this.rectSelection.set.get(length - 1).center(bbox.width / 2, 20);\n      }\n  };\n\n  SelectHandler.prototype.selectRect = function (value) {\n\n      var _this = this, bbox = this.el.bbox();\n\n      this.rectSelection.isSelected = value;\n\n      // when set is already p\n      this.rectSelection.set = this.rectSelection.set || this.parent.set();\n\n      // helperFunction to create a mouse-down function which triggers the event specified in `eventName`\n      function getMoseDownFunc(eventName) {\n          return function (ev) {\n              ev = ev || window.event;\n              ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\n              ev.stopPropagation();\n\n              var x = ev.pageX || ev.touches[0].pageX;\n              var y = ev.pageY || ev.touches[0].pageY;\n              _this.el.fire(eventName, {x: x, y: y, event: ev});\n          };\n      }\n\n      // create the selection-rectangle and add the css-class\n      if (!this.rectSelection.set.get(0)) {\n          this.rectSelection.set.add(this.nested.rect(bbox.width, bbox.height).addClass(this.options.classRect));\n      }\n\n      // Draw Points at the edges, if enabled\n      if (this.options.points.length && this.rectSelection.set.length() < 2) {\n          var ename =\"touchstart\", mname = \"mousedown\";\n\n          this.options.points.map(function (point, index) {\n              var coords = _this.pointCoords(point, bbox);\n\n              var pointElement = _this.drawPoint(coords.x, coords.y)\n                                      .attr('class', _this.options.classPoints + '_' + point)\n                                      .on(mname, getMoseDownFunc(point))\n                                      .on(ename, getMoseDownFunc(point));\n              _this.rectSelection.set.add(pointElement);\n          });\n\n          this.rectSelection.set.each(function () {\n              this.addClass(_this.options.classPoints);\n          });\n      }\n\n      // draw rotationPint, if enabled\n      if (this.options.rotationPoint && ((this.options.points && !this.rectSelection.set.get(9)) || (!this.options.points && !this.rectSelection.set.get(1)))) {\n\n          var curriedEvent = function (ev) {\n              ev = ev || window.event;\n              ev.preventDefault ? ev.preventDefault() : ev.returnValue = false;\n              ev.stopPropagation();\n\n              var x = ev.pageX || ev.touches[0].pageX;\n              var y = ev.pageY || ev.touches[0].pageY;\n              _this.el.fire('rot', {x: x, y: y, event: ev});\n          };\n\n          var pointElement = this.drawPoint(bbox.width / 2, 20)\n                                .attr('class', this.options.classPoints + '_rot')\n                                .on(\"touchstart\", curriedEvent)\n                                .on(\"mousedown\", curriedEvent);\n          this.rectSelection.set.add(pointElement);\n      }\n\n  };\n\n  SelectHandler.prototype.handler = function () {\n\n      var bbox = this.el.bbox();\n      this.nested.matrix(new SVG.Matrix(this.el).translate(bbox.x, bbox.y));\n\n      if (this.rectSelection.isSelected) {\n          this.updateRectSelection();\n      }\n\n      if (this.pointSelection.isSelected) {\n          this.updatePointSelection();\n      }\n\n  };\n\n  SelectHandler.prototype.observe = function () {\n      var _this = this;\n\n      if (MutationObserver) {\n          if (this.rectSelection.isSelected || this.pointSelection.isSelected) {\n              this.observerInst = this.observerInst || new MutationObserver(function () {\n                  _this.handler();\n              });\n              this.observerInst.observe(this.el.node, {attributes: true});\n          } else {\n              try {\n                  this.observerInst.disconnect();\n                  delete this.observerInst;\n              } catch (e) {\n              }\n          }\n      } else {\n          this.el.off('DOMAttrModified.select');\n\n          if (this.rectSelection.isSelected || this.pointSelection.isSelected) {\n              this.el.on('DOMAttrModified.select', function () {\n                  _this.handler();\n              });\n          }\n      }\n  };\n\n  SelectHandler.prototype.cleanup = function () {\n\n      //var _this = this;\n\n      if (!this.rectSelection.isSelected && this.rectSelection.set) {\n          // stop watching the element, remove the selection\n          this.rectSelection.set.each(function () {\n              this.remove();\n          });\n\n          this.rectSelection.set.clear();\n          delete this.rectSelection.set;\n      }\n\n      if (!this.pointSelection.isSelected && this.pointSelection.set) {\n          // Remove all points, clear the set, stop watching the element\n          this.pointSelection.set.each(function () {\n              this.remove();\n          });\n\n          this.pointSelection.set.clear();\n          delete this.pointSelection.set;\n      }\n\n      if (!this.pointSelection.isSelected && !this.rectSelection.isSelected) {\n          this.nested.remove();\n          delete this.nested;\n\n      }\n  };\n\n\n  SVG.extend(SVG.Element, {\n      // Select element with mouse\n      selectize: function (value, options) {\n\n          // Check the parameters and reassign if needed\n          if (typeof value === 'object') {\n              options = value;\n              value = true;\n          }\n\n          var selectHandler = this.remember('_selectHandler') || new SelectHandler(this);\n\n          selectHandler.init(value === undefined ? true : value, options || {});\n\n          return this;\n\n      }\n  });\n\n  SVG.Element.prototype.selectize.defaults = {\n      points: ['lt', 'rt', 'rb', 'lb', 't', 'r', 'b', 'l'],    // which points to draw, default all\n      pointsExclude: [],                       // easier option if to exclude few than rewrite all\n      classRect: 'svg_select_boundingRect',    // Css-class added to the rect\n      classPoints: 'svg_select_points',        // Css-class added to the points\n      pointSize: 7,                            // size of point\n      rotationPoint: true,                     // If true, rotation point is drawn. Needed for rotation!\n      deepSelect: false,                       // If true, moving of single points is possible (only line, polyline, polyon)\n      pointType: 'circle'                      // Point type: circle or rect, default circle\n  };\n  }());\n\n  (function() {\n  (function () {\n\n      function ResizeHandler(el) {\n\n          el.remember('_resizeHandler', this);\n\n          this.el = el;\n          this.parameters = {};\n          this.lastUpdateCall = null;\n          this.p = el.doc().node.createSVGPoint();\n      }\n\n      ResizeHandler.prototype.transformPoint = function(x, y, m){\n\n          this.p.x = x - (this.offset.x - window.pageXOffset);\n          this.p.y = y - (this.offset.y - window.pageYOffset);\n\n          return this.p.matrixTransform(m || this.m);\n\n      };\n\n      ResizeHandler.prototype._extractPosition = function(event) {\n          // Extract a position from a mouse/touch event.\n          // Returns { x: .., y: .. }\n          return {\n              x: event.clientX != null ? event.clientX : event.touches[0].clientX,\n              y: event.clientY != null ? event.clientY : event.touches[0].clientY\n          }\n      };\n\n      ResizeHandler.prototype.init = function (options) {\n\n          var _this = this;\n\n          this.stop();\n\n          if (options === 'stop') {\n              return;\n          }\n\n          this.options = {};\n\n          // Merge options and defaults\n          for (var i in this.el.resize.defaults) {\n              this.options[i] = this.el.resize.defaults[i];\n              if (typeof options[i] !== 'undefined') {\n                  this.options[i] = options[i];\n              }\n          }\n\n          // We listen to all these events which are specifying different edges\n          this.el.on('lt.resize', function(e){ _this.resize(e || window.event); });  // Left-Top\n          this.el.on('rt.resize', function(e){ _this.resize(e || window.event); });  // Right-Top\n          this.el.on('rb.resize', function(e){ _this.resize(e || window.event); });  // Right-Bottom\n          this.el.on('lb.resize', function(e){ _this.resize(e || window.event); });  // Left-Bottom\n\n          this.el.on('t.resize', function(e){ _this.resize(e || window.event); });   // Top\n          this.el.on('r.resize', function(e){ _this.resize(e || window.event); });   // Right\n          this.el.on('b.resize', function(e){ _this.resize(e || window.event); });   // Bottom\n          this.el.on('l.resize', function(e){ _this.resize(e || window.event); });   // Left\n\n          this.el.on('rot.resize', function(e){ _this.resize(e || window.event); }); // Rotation\n\n          this.el.on('point.resize', function(e){ _this.resize(e || window.event); }); // Point-Moving\n\n          // This call ensures, that the plugin reacts to a change of snapToGrid immediately\n          this.update();\n\n      };\n\n      ResizeHandler.prototype.stop = function(){\n          this.el.off('lt.resize');\n          this.el.off('rt.resize');\n          this.el.off('rb.resize');\n          this.el.off('lb.resize');\n\n          this.el.off('t.resize');\n          this.el.off('r.resize');\n          this.el.off('b.resize');\n          this.el.off('l.resize');\n\n          this.el.off('rot.resize');\n\n          this.el.off('point.resize');\n\n          return this;\n      };\n\n      ResizeHandler.prototype.resize = function (event) {\n\n          var _this = this;\n\n          this.m = this.el.node.getScreenCTM().inverse();\n          this.offset = { x: window.pageXOffset, y: window.pageYOffset };\n\n          var txPt = this._extractPosition(event.detail.event);\n          this.parameters = {\n              type: this.el.type, // the type of element\n              p: this.transformPoint(txPt.x, txPt.y),\n              x: event.detail.x,      // x-position of the mouse when resizing started\n              y: event.detail.y,      // y-position of the mouse when resizing started\n              box: this.el.bbox(),    // The bounding-box of the element\n              rotation: this.el.transform().rotation  // The current rotation of the element\n          };\n\n          // Add font-size parameter if the element type is text\n          if (this.el.type === \"text\") {\n              this.parameters.fontSize = this.el.attr()[\"font-size\"];\n          }\n\n          // the i-param in the event holds the index of the point which is moved, when using `deepSelect`\n          if (event.detail.i !== undefined) {\n\n              // get the point array\n              var array = this.el.array().valueOf();\n\n              // Save the index and the point which is moved\n              this.parameters.i = event.detail.i;\n              this.parameters.pointCoords = [array[event.detail.i][0], array[event.detail.i][1]];\n          }\n\n          // Lets check which edge of the bounding-box was clicked and resize the this.el according to this\n          switch (event.type) {\n\n              // Left-Top-Edge\n              case 'lt':\n                  // We build a calculating function for every case which gives us the new position of the this.el\n                  this.calc = function (diffX, diffY) {\n                      // The procedure is always the same\n                      // First we snap the edge to the given grid (snapping to 1px grid is normal resizing)\n                      var snap = this.snapToGrid(diffX, diffY);\n\n                      // Now we check if the new height and width still valid (> 0)\n                      if (this.parameters.box.width - snap[0] > 0 && this.parameters.box.height - snap[1] > 0) {\n                          // ...if valid, we resize the this.el (which can include moving because the coord-system starts at the left-top and this edge is moving sometimes when resized)\n\n                          /*\n                           * but first check if the element is text box, so we can change the font size instead of\n                           * the width and height\n                           */\n\n                          if (this.parameters.type === \"text\") {\n                              this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y);\n                              this.el.attr(\"font-size\", this.parameters.fontSize - snap[0]);\n                              return;\n                          }\n\n                          snap = this.checkAspectRatio(snap);\n\n                          this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y + snap[1]).size(this.parameters.box.width - snap[0], this.parameters.box.height - snap[1]);\n                      }\n                  };\n                  break;\n\n              // Right-Top\n              case 'rt':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 1 << 1);\n                      if (this.parameters.box.width + snap[0] > 0 && this.parameters.box.height - snap[1] > 0) {\n                          if (this.parameters.type === \"text\") {\n                              this.el.move(this.parameters.box.x - snap[0], this.parameters.box.y);\n                              this.el.attr(\"font-size\", this.parameters.fontSize + snap[0]);\n                              return;\n                          }\n\n                          snap = this.checkAspectRatio(snap, true);\n\n                          this.el.move(this.parameters.box.x, this.parameters.box.y + snap[1]).size(this.parameters.box.width + snap[0], this.parameters.box.height - snap[1]);\n                      }\n                  };\n                  break;\n\n              // Right-Bottom\n              case 'rb':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 0);\n                      if (this.parameters.box.width + snap[0] > 0 && this.parameters.box.height + snap[1] > 0) {\n                          if (this.parameters.type === \"text\") {\n                              this.el.move(this.parameters.box.x - snap[0], this.parameters.box.y);\n                              this.el.attr(\"font-size\", this.parameters.fontSize + snap[0]);\n                              return;\n                          }\n\n                          snap = this.checkAspectRatio(snap);\n\n                          this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + snap[0], this.parameters.box.height + snap[1]);\n                      }\n                  };\n                  break;\n\n              // Left-Bottom\n              case 'lb':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 1);\n                      if (this.parameters.box.width - snap[0] > 0 && this.parameters.box.height + snap[1] > 0) {\n                          if (this.parameters.type === \"text\") {\n                              this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y);\n                              this.el.attr(\"font-size\", this.parameters.fontSize - snap[0]);\n                              return;\n                          }\n\n                          snap = this.checkAspectRatio(snap, true);\n\n                          this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y).size(this.parameters.box.width - snap[0], this.parameters.box.height + snap[1]);\n                      }\n                  };\n                  break;\n\n              // Top\n              case 't':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 1 << 1);\n                      if (this.parameters.box.height - snap[1] > 0) {\n                          // Disable the font-resizing if it is not from the corner of bounding-box\n                          if (this.parameters.type === \"text\") {\n                              return;\n                          }\n\n                          this.el.move(this.parameters.box.x, this.parameters.box.y + snap[1]).height(this.parameters.box.height - snap[1]);\n                      }\n                  };\n                  break;\n\n              // Right\n              case 'r':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 0);\n                      if (this.parameters.box.width + snap[0] > 0) {\n                          if (this.parameters.type === \"text\") {\n                              return;\n                          }\n\n                          this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + snap[0]);\n                      }\n                  };\n                  break;\n\n              // Bottom\n              case 'b':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 0);\n                      if (this.parameters.box.height + snap[1] > 0) {\n                          if (this.parameters.type === \"text\") {\n                              return;\n                          }\n\n                          this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + snap[1]);\n                      }\n                  };\n                  break;\n\n              // Left\n              case 'l':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n                      var snap = this.snapToGrid(diffX, diffY, 1);\n                      if (this.parameters.box.width - snap[0] > 0) {\n                          if (this.parameters.type === \"text\") {\n                              return;\n                          }\n\n                          this.el.move(this.parameters.box.x + snap[0], this.parameters.box.y).width(this.parameters.box.width - snap[0]);\n                      }\n                  };\n                  break;\n\n              // Rotation\n              case 'rot':\n                  // s.a.\n                  this.calc = function (diffX, diffY) {\n\n                      // yes this is kinda stupid but we need the mouse coords back...\n                      var current = {x: diffX + this.parameters.p.x, y: diffY + this.parameters.p.y};\n\n                      // start minus middle\n                      var sAngle = Math.atan2((this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2), (this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2));\n\n                      // end minus middle\n                      var pAngle = Math.atan2((current.y - this.parameters.box.y - this.parameters.box.height / 2), (current.x - this.parameters.box.x - this.parameters.box.width / 2));\n\n                      var angle = this.parameters.rotation + (pAngle - sAngle) * 180 / Math.PI + this.options.snapToAngle / 2;\n\n                      // We have to move the element to the center of the box first and change the rotation afterwards\n                      // because rotation always works around a rotation-center, which is changed when moving the element\n                      // We also set the new rotation center to the center of the box.\n                      this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(angle - (angle % this.options.snapToAngle), this.parameters.box.cx, this.parameters.box.cy);\n                  };\n                  break;\n\n              // Moving one single Point (needed when an element is deepSelected which means you can move every single point of the object)\n              case 'point':\n                  this.calc = function (diffX, diffY) {\n\n                      // Snapping the point to the grid\n                      var snap = this.snapToGrid(diffX, diffY, this.parameters.pointCoords[0], this.parameters.pointCoords[1]);\n\n                      // Get the point array\n                      var array = this.el.array().valueOf();\n\n                      // Changing the moved point in the array\n                      array[this.parameters.i][0] = this.parameters.pointCoords[0] + snap[0];\n                      array[this.parameters.i][1] = this.parameters.pointCoords[1] + snap[1];\n\n                      // And plot the new this.el\n                      this.el.plot(array);\n                  };\n          }\n\n          this.el.fire('resizestart', {dx: this.parameters.x, dy: this.parameters.y, event: event});\n          // When resizing started, we have to register events for...\n          // Touches.\n          SVG.on(window, 'touchmove.resize', function(e) {\n              _this.update(e || window.event);\n          });\n          SVG.on(window, 'touchend.resize', function() {\n              _this.done();\n          });\n          // Mouse.\n          SVG.on(window, 'mousemove.resize', function (e) {\n              _this.update(e || window.event);\n          });\n          SVG.on(window, 'mouseup.resize', function () {\n              _this.done();\n          });\n\n      };\n\n      // The update-function redraws the element every time the mouse is moving\n      ResizeHandler.prototype.update = function (event) {\n\n          if (!event) {\n              if (this.lastUpdateCall) {\n                  this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);\n              }\n              return;\n          }\n\n          // Calculate the difference between the mouseposition at start and now\n          var txPt = this._extractPosition(event);\n          var p = this.transformPoint(txPt.x, txPt.y);\n\n          var diffX = p.x - this.parameters.p.x,\n              diffY = p.y - this.parameters.p.y;\n\n          this.lastUpdateCall = [diffX, diffY];\n\n          // Calculate the new position and height / width of the element\n          this.calc(diffX, diffY);\n\n         // Emit an event to say we have changed.\n          this.el.fire('resizing', {dx: diffX, dy: diffY, event: event});\n      };\n\n      // Is called on mouseup.\n      // Removes the update-function from the mousemove event\n      ResizeHandler.prototype.done = function () {\n          this.lastUpdateCall = null;\n          SVG.off(window, 'mousemove.resize');\n          SVG.off(window, 'mouseup.resize');\n          SVG.off(window, 'touchmove.resize');\n          SVG.off(window, 'touchend.resize');\n          this.el.fire('resizedone');\n      };\n\n      // The flag is used to determine whether the resizing is used with a left-Point (first bit) and top-point (second bit)\n      // In this cases the temp-values are calculated differently\n      ResizeHandler.prototype.snapToGrid = function (diffX, diffY, flag, pointCoordsY) {\n\n          var temp;\n\n          // If `pointCoordsY` is given, a single Point has to be snapped (deepSelect). That's why we need a different temp-value\n          if (typeof pointCoordsY !== 'undefined') {\n              // Note that flag = pointCoordsX in this case\n              temp = [(flag + diffX) % this.options.snapToGrid, (pointCoordsY + diffY) % this.options.snapToGrid];\n          } else {\n              // We check if the flag is set and if not we set a default-value (both bits set - which means upper-left-edge)\n              flag = flag == null ? 1 | 1 << 1 : flag;\n              temp = [(this.parameters.box.x + diffX + (flag & 1 ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + diffY + (flag & (1 << 1) ? 0 : this.parameters.box.height)) % this.options.snapToGrid];\n          }\n\n          if(diffX < 0) {\n              temp[0] -= this.options.snapToGrid;\n          }\n          if(diffY < 0) {\n              temp[1] -= this.options.snapToGrid;\n          }\n\n          diffX -= (Math.abs(temp[0]) < this.options.snapToGrid / 2 ?\n                    temp[0] :\n                    temp[0] - (diffX < 0 ? -this.options.snapToGrid : this.options.snapToGrid));\n          diffY -= (Math.abs(temp[1]) < this.options.snapToGrid / 2 ?\n                    temp[1] :\n                    temp[1] - (diffY < 0 ? -this.options.snapToGrid : this.options.snapToGrid));\n\n          return this.constraintToBox(diffX, diffY, flag, pointCoordsY);\n\n      };\n\n      // keep element within constrained box\n      ResizeHandler.prototype.constraintToBox = function (diffX, diffY, flag, pointCoordsY) {\n          //return [diffX, diffY]\n          var c = this.options.constraint || {};\n          var orgX, orgY;\n\n          if (typeof pointCoordsY !== 'undefined') {\n            orgX = flag;\n            orgY = pointCoordsY;\n          } else {\n            orgX = this.parameters.box.x + (flag & 1 ? 0 : this.parameters.box.width);\n            orgY = this.parameters.box.y + (flag & (1<<1) ? 0 : this.parameters.box.height);\n          }\n\n          if (typeof c.minX !== 'undefined' && orgX + diffX < c.minX) {\n            diffX = c.minX - orgX;\n          }\n\n          if (typeof c.maxX !== 'undefined' && orgX + diffX > c.maxX) {\n            diffX = c.maxX - orgX;\n          }\n\n          if (typeof c.minY !== 'undefined' && orgY + diffY < c.minY) {\n            diffY = c.minY - orgY;\n          }\n\n          if (typeof c.maxY !== 'undefined' && orgY + diffY > c.maxY) {\n            diffY = c.maxY - orgY;\n          }\n\n          return [diffX, diffY];\n      };\n\n      ResizeHandler.prototype.checkAspectRatio = function (snap, isReverse) {\n          if (!this.options.saveAspectRatio) {\n              return snap;\n          }\n\n          var updatedSnap = snap.slice();\n          var aspectRatio = this.parameters.box.width / this.parameters.box.height;\n          var newW = this.parameters.box.width + snap[0];\n          var newH = this.parameters.box.height - snap[1];\n          var newAspectRatio = newW / newH;\n\n          if (newAspectRatio < aspectRatio) {\n              // Height is too big. Adapt it\n              updatedSnap[1] = newW / aspectRatio - this.parameters.box.height;\n              isReverse && (updatedSnap[1] = -updatedSnap[1]);\n          } else if (newAspectRatio > aspectRatio) {\n              // Width is too big. Adapt it\n              updatedSnap[0] = this.parameters.box.width - newH * aspectRatio;\n              isReverse && (updatedSnap[0] = -updatedSnap[0]);\n          }\n\n          return updatedSnap;\n      };\n\n      SVG.extend(SVG.Element, {\n          // Resize element with mouse\n          resize: function (options) {\n\n              (this.remember('_resizeHandler') || new ResizeHandler(this)).init(options || {});\n\n              return this;\n\n          }\n\n      });\n\n      SVG.Element.prototype.resize.defaults = {\n          snapToAngle: 0.1,       // Specifies the speed the rotation is happening when moving the mouse\n          snapToGrid: 1,          // Snaps to a grid of `snapToGrid` Pixels\n          constraint: {},         // keep element within constrained box\n          saveAspectRatio: false  // Save aspect ratio when resizing using lt, rt, rb or lb points\n      };\n\n  }).call(this);\n  }());\n\n  if (typeof window.Apex === 'undefined') {\n    window.Apex = {};\n  }\n\n  var InitCtxVariables = /*#__PURE__*/function () {\n    function InitCtxVariables(ctx) {\n      _classCallCheck(this, InitCtxVariables);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(InitCtxVariables, [{\n      key: \"initModules\",\n      value: function initModules() {\n        this.ctx.publicMethods = ['updateOptions', 'updateSeries', 'appendData', 'appendSeries', 'toggleSeries', 'showSeries', 'hideSeries', 'setLocale', 'resetSeries', 'zoomX', 'toggleDataPointSelection', 'dataURI', 'addXaxisAnnotation', 'addYaxisAnnotation', 'addPointAnnotation', 'clearAnnotations', 'removeAnnotation', 'paper', 'destroy'];\n        this.ctx.eventList = ['click', 'mousedown', 'mousemove', 'mouseleave', 'touchstart', 'touchmove', 'touchleave', 'mouseup', 'touchend'];\n        this.ctx.animations = new Animations(this.ctx);\n        this.ctx.axes = new Axes(this.ctx);\n        this.ctx.core = new Core(this.ctx.el, this.ctx);\n        this.ctx.config = new Config({});\n        this.ctx.data = new Data(this.ctx);\n        this.ctx.grid = new Grid(this.ctx);\n        this.ctx.graphics = new Graphics(this.ctx);\n        this.ctx.coreUtils = new CoreUtils(this.ctx);\n        this.ctx.crosshairs = new Crosshairs(this.ctx);\n        this.ctx.events = new Events(this.ctx);\n        this.ctx.exports = new Exports(this.ctx);\n        this.ctx.localization = new Localization(this.ctx);\n        this.ctx.options = new Options();\n        this.ctx.responsive = new Responsive(this.ctx);\n        this.ctx.series = new Series(this.ctx);\n        this.ctx.theme = new Theme(this.ctx);\n        this.ctx.formatters = new Formatters(this.ctx);\n        this.ctx.titleSubtitle = new TitleSubtitle(this.ctx);\n        this.ctx.legend = new Legend(this.ctx);\n        this.ctx.toolbar = new Toolbar(this.ctx);\n        this.ctx.dimensions = new Dimensions(this.ctx);\n        this.ctx.updateHelpers = new UpdateHelpers(this.ctx);\n        this.ctx.zoomPanSelection = new ZoomPanSelection(this.ctx);\n        this.ctx.w.globals.tooltip = new Tooltip(this.ctx);\n      }\n    }]);\n\n    return InitCtxVariables;\n  }();\n\n  var Destroy = /*#__PURE__*/function () {\n    function Destroy(ctx) {\n      _classCallCheck(this, Destroy);\n\n      this.ctx = ctx;\n      this.w = ctx.w;\n    }\n\n    _createClass(Destroy, [{\n      key: \"clear\",\n      value: function clear(_ref) {\n        var isUpdating = _ref.isUpdating;\n\n        if (this.ctx.zoomPanSelection) {\n          this.ctx.zoomPanSelection.destroy();\n        }\n\n        if (this.ctx.toolbar) {\n          this.ctx.toolbar.destroy();\n        }\n\n        this.ctx.animations = null;\n        this.ctx.axes = null;\n        this.ctx.annotations = null;\n        this.ctx.core = null;\n        this.ctx.data = null;\n        this.ctx.grid = null;\n        this.ctx.series = null;\n        this.ctx.responsive = null;\n        this.ctx.theme = null;\n        this.ctx.formatters = null;\n        this.ctx.titleSubtitle = null;\n        this.ctx.legend = null;\n        this.ctx.dimensions = null;\n        this.ctx.options = null;\n        this.ctx.crosshairs = null;\n        this.ctx.zoomPanSelection = null;\n        this.ctx.updateHelpers = null;\n        this.ctx.toolbar = null;\n        this.ctx.localization = null;\n        this.ctx.w.globals.tooltip = null;\n        this.clearDomElements({\n          isUpdating: isUpdating\n        });\n      }\n    }, {\n      key: \"killSVG\",\n      value: function killSVG(draw) {\n        draw.each(function (i, children) {\n          this.removeClass('*');\n          this.off();\n          this.stop();\n        }, true);\n        draw.ungroup();\n        draw.clear();\n      }\n    }, {\n      key: \"clearDomElements\",\n      value: function clearDomElements(_ref2) {\n        var _this = this;\n\n        var isUpdating = _ref2.isUpdating;\n        var elSVG = this.w.globals.dom.Paper.node; // fixes apexcharts.js#1654 & vue-apexcharts#256\n\n        if (elSVG.parentNode && elSVG.parentNode.parentNode && !isUpdating) {\n          elSVG.parentNode.parentNode.style.minHeight = 'unset';\n        } // detach root event\n\n\n        var baseEl = this.w.globals.dom.baseEl;\n\n        if (baseEl) {\n          // see https://github.com/apexcharts/vue-apexcharts/issues/275\n          this.ctx.eventList.forEach(function (event) {\n            baseEl.removeEventListener(event, _this.ctx.events.documentEvent);\n          });\n        }\n\n        var domEls = this.w.globals.dom;\n\n        if (this.ctx.el !== null) {\n          // remove all child elements - resetting the whole chart\n          while (this.ctx.el.firstChild) {\n            this.ctx.el.removeChild(this.ctx.el.firstChild);\n          }\n        }\n\n        this.killSVG(domEls.Paper);\n        domEls.Paper.remove();\n        domEls.elWrap = null;\n        domEls.elGraphical = null;\n        domEls.elAnnotations = null;\n        domEls.elLegendWrap = null;\n        domEls.baseEl = null;\n        domEls.elGridRect = null;\n        domEls.elGridRectMask = null;\n        domEls.elGridRectMarkerMask = null;\n        domEls.elForecastMask = null;\n        domEls.elNonForecastMask = null;\n        domEls.elDefs = null;\n      }\n    }]);\n\n    return Destroy;\n  }();\n\n  // Helpers to react to element resizes, regardless of what caused them\n  // TODO Currently this creates a new ResizeObserver every time we want to observe an element for resizes\n  // Ideally, we should be able to use a single observer for all elements\n  var ros = new WeakMap(); // Map callbacks to ResizeObserver instances for easy removal\n\n  function addResizeListener(el, fn) {\n    var called = false;\n    var ro = new ResizeObserver(function (r) {\n      // ROs fire immediately after being created,\n      // per spec: https://drafts.csswg.org/resize-observer/#ref-for-element%E2%91%A3\n      // we don't want that so we just discard the first run\n      if (called) {\n        fn.call(el, r);\n      }\n\n      called = true;\n    });\n\n    if (el.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      // Document fragment, observe children instead (needed for Shadow DOM, see #1332)\n      Array.from(el.children).forEach(function (c) {\n        return ro.observe(c);\n      });\n    } else {\n      ro.observe(el);\n    }\n\n    ros.set(fn, ro);\n  }\n  function removeResizeListener(el, fn) {\n    var ro = ros.get(fn);\n\n    if (ro) {\n      ro.disconnect();\n      ros.delete(fn);\n    }\n  }\n\n  var css_248z = \".apexcharts-canvas {\\n  position: relative;\\n  user-select: none;\\n  /* cannot give overflow: hidden as it will crop tooltips which overflow outside chart area */\\n}\\n\\n\\n/* scrollbar is not visible by default for legend, hence forcing the visibility */\\n.apexcharts-canvas ::-webkit-scrollbar {\\n  -webkit-appearance: none;\\n  width: 6px;\\n}\\n\\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\\n  border-radius: 4px;\\n  background-color: rgba(0, 0, 0, .5);\\n  box-shadow: 0 0 1px rgba(255, 255, 255, .5);\\n  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);\\n}\\n\\n\\n.apexcharts-inner {\\n  position: relative;\\n}\\n\\n.apexcharts-text tspan {\\n  font-family: inherit;\\n}\\n\\n.legend-mouseover-inactive {\\n  transition: 0.15s ease all;\\n  opacity: 0.20;\\n}\\n\\n.apexcharts-series-collapsed {\\n  opacity: 0;\\n}\\n\\n.apexcharts-tooltip {\\n  border-radius: 5px;\\n  box-shadow: 2px 2px 6px -4px #999;\\n  cursor: default;\\n  font-size: 14px;\\n  left: 62px;\\n  opacity: 0;\\n  pointer-events: none;\\n  position: absolute;\\n  top: 20px;\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  white-space: nowrap;\\n  z-index: 12;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-tooltip.apexcharts-active {\\n  opacity: 1;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-light {\\n  border: 1px solid #e3e3e3;\\n  background: rgba(255, 255, 255, 0.96);\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-dark {\\n  color: #fff;\\n  background: rgba(30, 30, 30, 0.8);\\n}\\n\\n.apexcharts-tooltip * {\\n  font-family: inherit;\\n}\\n\\n\\n.apexcharts-tooltip-title {\\n  padding: 6px;\\n  font-size: 15px;\\n  margin-bottom: 4px;\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\\n  background: #ECEFF1;\\n  border-bottom: 1px solid #ddd;\\n}\\n\\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\\n  background: rgba(0, 0, 0, 0.7);\\n  border-bottom: 1px solid #333;\\n}\\n\\n.apexcharts-tooltip-text-y-value,\\n.apexcharts-tooltip-text-goals-value,\\n.apexcharts-tooltip-text-z-value {\\n  display: inline-block;\\n  font-weight: 600;\\n  margin-left: 5px;\\n}\\n\\n.apexcharts-tooltip-text-y-label:empty,\\n.apexcharts-tooltip-text-y-value:empty,\\n.apexcharts-tooltip-text-goals-label:empty,\\n.apexcharts-tooltip-text-goals-value:empty,\\n.apexcharts-tooltip-text-z-value:empty {\\n  display: none;\\n}\\n\\n.apexcharts-tooltip-text-y-value,\\n.apexcharts-tooltip-text-goals-value,\\n.apexcharts-tooltip-text-z-value {\\n  font-weight: 600;\\n}\\n\\n.apexcharts-tooltip-text-goals-label, \\n.apexcharts-tooltip-text-goals-value {\\n  padding: 6px 0 5px;\\n}\\n\\n.apexcharts-tooltip-goals-group, \\n.apexcharts-tooltip-text-goals-label, \\n.apexcharts-tooltip-text-goals-value {\\n  display: flex;\\n}\\n.apexcharts-tooltip-text-goals-label:not(:empty),\\n.apexcharts-tooltip-text-goals-value:not(:empty) {\\n  margin-top: -6px;\\n}\\n\\n.apexcharts-tooltip-marker {\\n  width: 12px;\\n  height: 12px;\\n  position: relative;\\n  top: 0px;\\n  margin-right: 10px;\\n  border-radius: 50%;\\n}\\n\\n.apexcharts-tooltip-series-group {\\n  padding: 0 10px;\\n  display: none;\\n  text-align: left;\\n  justify-content: left;\\n  align-items: center;\\n}\\n\\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\\n  opacity: 1;\\n}\\n\\n.apexcharts-tooltip-series-group.apexcharts-active,\\n.apexcharts-tooltip-series-group:last-child {\\n  padding-bottom: 4px;\\n}\\n\\n.apexcharts-tooltip-series-group-hidden {\\n  opacity: 0;\\n  height: 0;\\n  line-height: 0;\\n  padding: 0 !important;\\n}\\n\\n.apexcharts-tooltip-y-group {\\n  padding: 6px 0 5px;\\n}\\n\\n.apexcharts-tooltip-box, .apexcharts-custom-tooltip {\\n  padding: 4px 8px;\\n}\\n\\n.apexcharts-tooltip-boxPlot {\\n  display: flex;\\n  flex-direction: column-reverse;\\n}\\n\\n.apexcharts-tooltip-box>div {\\n  margin: 4px 0;\\n}\\n\\n.apexcharts-tooltip-box span.value {\\n  font-weight: bold;\\n}\\n\\n.apexcharts-tooltip-rangebar {\\n  padding: 5px 8px;\\n}\\n\\n.apexcharts-tooltip-rangebar .category {\\n  font-weight: 600;\\n  color: #777;\\n}\\n\\n.apexcharts-tooltip-rangebar .series-name {\\n  font-weight: bold;\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n\\n.apexcharts-xaxistooltip {\\n  opacity: 0;\\n  padding: 9px 10px;\\n  pointer-events: none;\\n  color: #373d3f;\\n  font-size: 13px;\\n  text-align: center;\\n  border-radius: 2px;\\n  position: absolute;\\n  z-index: 10;\\n  background: #ECEFF1;\\n  border: 1px solid #90A4AE;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\\n  background: rgba(0, 0, 0, 0.7);\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\n  color: #fff;\\n}\\n\\n.apexcharts-xaxistooltip:after,\\n.apexcharts-xaxistooltip:before {\\n  left: 50%;\\n  border: solid transparent;\\n  content: \\\" \\\";\\n  height: 0;\\n  width: 0;\\n  position: absolute;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-xaxistooltip:after {\\n  border-color: rgba(236, 239, 241, 0);\\n  border-width: 6px;\\n  margin-left: -6px;\\n}\\n\\n.apexcharts-xaxistooltip:before {\\n  border-color: rgba(144, 164, 174, 0);\\n  border-width: 7px;\\n  margin-left: -7px;\\n}\\n\\n.apexcharts-xaxistooltip-bottom:after,\\n.apexcharts-xaxistooltip-bottom:before {\\n  bottom: 100%;\\n}\\n\\n.apexcharts-xaxistooltip-top:after,\\n.apexcharts-xaxistooltip-top:before {\\n  top: 100%;\\n}\\n\\n.apexcharts-xaxistooltip-bottom:after {\\n  border-bottom-color: #ECEFF1;\\n}\\n\\n.apexcharts-xaxistooltip-bottom:before {\\n  border-bottom-color: #90A4AE;\\n}\\n\\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after {\\n  border-bottom-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\\n  border-bottom-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip-top:after {\\n  border-top-color: #ECEFF1\\n}\\n\\n.apexcharts-xaxistooltip-top:before {\\n  border-top-color: #90A4AE;\\n}\\n\\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after {\\n  border-top-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\\n  border-top-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-xaxistooltip.apexcharts-active {\\n  opacity: 1;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-yaxistooltip {\\n  opacity: 0;\\n  padding: 4px 10px;\\n  pointer-events: none;\\n  color: #373d3f;\\n  font-size: 13px;\\n  text-align: center;\\n  border-radius: 2px;\\n  position: absolute;\\n  z-index: 10;\\n  background: #ECEFF1;\\n  border: 1px solid #90A4AE;\\n}\\n\\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\\n  background: rgba(0, 0, 0, 0.7);\\n  border: 1px solid rgba(0, 0, 0, 0.5);\\n  color: #fff;\\n}\\n\\n.apexcharts-yaxistooltip:after,\\n.apexcharts-yaxistooltip:before {\\n  top: 50%;\\n  border: solid transparent;\\n  content: \\\" \\\";\\n  height: 0;\\n  width: 0;\\n  position: absolute;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-yaxistooltip:after {\\n  border-color: rgba(236, 239, 241, 0);\\n  border-width: 6px;\\n  margin-top: -6px;\\n}\\n\\n.apexcharts-yaxistooltip:before {\\n  border-color: rgba(144, 164, 174, 0);\\n  border-width: 7px;\\n  margin-top: -7px;\\n}\\n\\n.apexcharts-yaxistooltip-left:after,\\n.apexcharts-yaxistooltip-left:before {\\n  left: 100%;\\n}\\n\\n.apexcharts-yaxistooltip-right:after,\\n.apexcharts-yaxistooltip-right:before {\\n  right: 100%;\\n}\\n\\n.apexcharts-yaxistooltip-left:after {\\n  border-left-color: #ECEFF1;\\n}\\n\\n.apexcharts-yaxistooltip-left:before {\\n  border-left-color: #90A4AE;\\n}\\n\\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after {\\n  border-left-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\\n  border-left-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip-right:after {\\n  border-right-color: #ECEFF1;\\n}\\n\\n.apexcharts-yaxistooltip-right:before {\\n  border-right-color: #90A4AE;\\n}\\n\\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after {\\n  border-right-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\\n  border-right-color: rgba(0, 0, 0, 0.5);\\n}\\n\\n.apexcharts-yaxistooltip.apexcharts-active {\\n  opacity: 1;\\n}\\n\\n.apexcharts-yaxistooltip-hidden {\\n  display: none;\\n}\\n\\n.apexcharts-xcrosshairs,\\n.apexcharts-ycrosshairs {\\n  pointer-events: none;\\n  opacity: 0;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-xcrosshairs.apexcharts-active,\\n.apexcharts-ycrosshairs.apexcharts-active {\\n  opacity: 1;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-ycrosshairs-hidden {\\n  opacity: 0;\\n}\\n\\n.apexcharts-selection-rect {\\n  cursor: move;\\n}\\n\\n.svg_select_boundingRect, .svg_select_points_rot {\\n  pointer-events: none;\\n  opacity: 0;\\n  visibility: hidden;\\n}\\n.apexcharts-selection-rect + g .svg_select_boundingRect,\\n.apexcharts-selection-rect + g .svg_select_points_rot {\\n  opacity: 0;\\n  visibility: hidden;\\n}\\n\\n.apexcharts-selection-rect + g .svg_select_points_l,\\n.apexcharts-selection-rect + g .svg_select_points_r {\\n  cursor: ew-resize;\\n  opacity: 1;\\n  visibility: visible;\\n}\\n\\n.svg_select_points {\\n  fill: #efefef;\\n  stroke: #333;\\n  rx: 2;\\n}\\n\\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\\n  cursor: crosshair\\n}\\n\\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\\n  cursor: move\\n}\\n\\n.apexcharts-zoom-icon,\\n.apexcharts-zoomin-icon,\\n.apexcharts-zoomout-icon,\\n.apexcharts-reset-icon,\\n.apexcharts-pan-icon,\\n.apexcharts-selection-icon,\\n.apexcharts-menu-icon,\\n.apexcharts-toolbar-custom-icon {\\n  cursor: pointer;\\n  width: 20px;\\n  height: 20px;\\n  line-height: 24px;\\n  color: #6E8192;\\n  text-align: center;\\n}\\n\\n.apexcharts-zoom-icon svg,\\n.apexcharts-zoomin-icon svg,\\n.apexcharts-zoomout-icon svg,\\n.apexcharts-reset-icon svg,\\n.apexcharts-menu-icon svg {\\n  fill: #6E8192;\\n}\\n\\n.apexcharts-selection-icon svg {\\n  fill: #444;\\n  transform: scale(0.76)\\n}\\n\\n.apexcharts-theme-dark .apexcharts-zoom-icon svg,\\n.apexcharts-theme-dark .apexcharts-zoomin-icon svg,\\n.apexcharts-theme-dark .apexcharts-zoomout-icon svg,\\n.apexcharts-theme-dark .apexcharts-reset-icon svg,\\n.apexcharts-theme-dark .apexcharts-pan-icon svg,\\n.apexcharts-theme-dark .apexcharts-selection-icon svg,\\n.apexcharts-theme-dark .apexcharts-menu-icon svg,\\n.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg {\\n  fill: #f3f4f5;\\n}\\n\\n.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg,\\n.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,\\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg {\\n  fill: #008FFB;\\n}\\n\\n.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,\\n.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,\\n.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,\\n.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg,\\n.apexcharts-theme-light .apexcharts-reset-icon:hover svg,\\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg {\\n  fill: #333;\\n}\\n\\n.apexcharts-selection-icon,\\n.apexcharts-menu-icon {\\n  position: relative;\\n}\\n\\n.apexcharts-reset-icon {\\n  margin-left: 5px;\\n}\\n\\n.apexcharts-zoom-icon,\\n.apexcharts-reset-icon,\\n.apexcharts-menu-icon {\\n  transform: scale(0.85);\\n}\\n\\n.apexcharts-zoomin-icon,\\n.apexcharts-zoomout-icon {\\n  transform: scale(0.7)\\n}\\n\\n.apexcharts-zoomout-icon {\\n  margin-right: 3px;\\n}\\n\\n.apexcharts-pan-icon {\\n  transform: scale(0.62);\\n  position: relative;\\n  left: 1px;\\n  top: 0px;\\n}\\n\\n.apexcharts-pan-icon svg {\\n  fill: #fff;\\n  stroke: #6E8192;\\n  stroke-width: 2;\\n}\\n\\n.apexcharts-pan-icon.apexcharts-selected svg {\\n  stroke: #008FFB;\\n}\\n\\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\\n  stroke: #333;\\n}\\n\\n.apexcharts-toolbar {\\n  position: absolute;\\n  z-index: 11;\\n  max-width: 176px;\\n  text-align: right;\\n  border-radius: 3px;\\n  padding: 0px 6px 2px 6px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.apexcharts-menu {\\n  background: #fff;\\n  position: absolute;\\n  top: 100%;\\n  border: 1px solid #ddd;\\n  border-radius: 3px;\\n  padding: 3px;\\n  right: 10px;\\n  opacity: 0;\\n  min-width: 110px;\\n  transition: 0.15s ease all;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-menu.apexcharts-menu-open {\\n  opacity: 1;\\n  pointer-events: all;\\n  transition: 0.15s ease all;\\n}\\n\\n.apexcharts-menu-item {\\n  padding: 6px 7px;\\n  font-size: 12px;\\n  cursor: pointer;\\n}\\n\\n.apexcharts-theme-light .apexcharts-menu-item:hover {\\n  background: #eee;\\n}\\n\\n.apexcharts-theme-dark .apexcharts-menu {\\n  background: rgba(0, 0, 0, 0.7);\\n  color: #fff;\\n}\\n\\n@media screen and (min-width: 768px) {\\n  .apexcharts-canvas:hover .apexcharts-toolbar {\\n    opacity: 1;\\n  }\\n}\\n\\n.apexcharts-datalabel.apexcharts-element-hidden {\\n  opacity: 0;\\n}\\n\\n.apexcharts-pie-label,\\n.apexcharts-datalabels,\\n.apexcharts-datalabel,\\n.apexcharts-datalabel-label,\\n.apexcharts-datalabel-value {\\n  cursor: default;\\n  pointer-events: none;\\n}\\n\\n.apexcharts-pie-label-delay {\\n  opacity: 0;\\n  animation-name: opaque;\\n  animation-duration: 0.3s;\\n  animation-fill-mode: forwards;\\n  animation-timing-function: ease;\\n}\\n\\n.apexcharts-canvas .apexcharts-element-hidden {\\n  opacity: 0;\\n}\\n\\n.apexcharts-hide .apexcharts-series-points {\\n  opacity: 0;\\n}\\n\\n.apexcharts-gridline,\\n.apexcharts-annotation-rect,\\n.apexcharts-tooltip .apexcharts-marker,\\n.apexcharts-area-series .apexcharts-area,\\n.apexcharts-line,\\n.apexcharts-zoom-rect,\\n.apexcharts-toolbar svg,\\n.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\\n.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\\n.apexcharts-radar-series path,\\n.apexcharts-radar-series polygon {\\n  pointer-events: none;\\n}\\n\\n\\n/* markers */\\n\\n.apexcharts-marker {\\n  transition: 0.15s ease all;\\n}\\n\\n@keyframes opaque {\\n  0% {\\n    opacity: 0;\\n  }\\n  100% {\\n    opacity: 1;\\n  }\\n}\\n\\n\\n/* Resize generated styles */\\n\\n@keyframes resizeanim {\\n  from {\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: 0;\\n  }\\n}\\n\\n.resize-triggers {\\n  animation: 1ms resizeanim;\\n  visibility: hidden;\\n  opacity: 0;\\n}\\n\\n.resize-triggers,\\n.resize-triggers>div,\\n.contract-trigger:before {\\n  content: \\\" \\\";\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%;\\n  overflow: hidden;\\n}\\n\\n.resize-triggers>div {\\n  background: #eee;\\n  overflow: auto;\\n}\\n\\n.contract-trigger:before {\\n  width: 200%;\\n  height: 200%;\\n}\";\n\n  /**\n   *\n   * @module ApexCharts\n   **/\n\n  var ApexCharts$1 = /*#__PURE__*/function () {\n    function ApexCharts(el, opts) {\n      _classCallCheck(this, ApexCharts);\n\n      this.opts = opts;\n      this.ctx = this; // Pass the user supplied options to the Base Class where these options will be extended with defaults. The returned object from Base Class will become the config object in the entire codebase.\n\n      this.w = new Base(opts).init();\n      this.el = el;\n      this.w.globals.cuid = Utils$1.randomId();\n      this.w.globals.chartID = this.w.config.chart.id ? Utils$1.escapeString(this.w.config.chart.id) : this.w.globals.cuid;\n      var initCtx = new InitCtxVariables(this);\n      initCtx.initModules();\n      this.create = Utils$1.bind(this.create, this);\n      this.windowResizeHandler = this._windowResizeHandler.bind(this);\n      this.parentResizeHandler = this._parentResizeCallback.bind(this);\n    }\n    /**\n     * The primary method user will call to render the chart.\n     */\n\n\n    _createClass(ApexCharts, [{\n      key: \"render\",\n      value: function render() {\n        var _this = this;\n\n        // main method\n        return new Promise(function (resolve, reject) {\n          // only draw chart, if element found\n          if (_this.el !== null) {\n            if (typeof Apex._chartInstances === 'undefined') {\n              Apex._chartInstances = [];\n            }\n\n            if (_this.w.config.chart.id) {\n              Apex._chartInstances.push({\n                id: _this.w.globals.chartID,\n                group: _this.w.config.chart.group,\n                chart: _this\n              });\n            } // set the locale here\n\n\n            _this.setLocale(_this.w.config.chart.defaultLocale);\n\n            var beforeMount = _this.w.config.chart.events.beforeMount;\n\n            if (typeof beforeMount === 'function') {\n              beforeMount(_this, _this.w);\n            }\n\n            _this.events.fireEvent('beforeMount', [_this, _this.w]);\n\n            window.addEventListener('resize', _this.windowResizeHandler);\n            addResizeListener(_this.el.parentNode, _this.parentResizeHandler); // Add CSS if not already added\n\n            if (!_this.css) {\n              var rootNode = _this.el.getRootNode && _this.el.getRootNode();\n\n              var inShadowRoot = Utils$1.is('ShadowRoot', rootNode);\n              var doc = _this.el.ownerDocument;\n              var globalCSS = doc.getElementById('apexcharts-css');\n\n              if (inShadowRoot || !globalCSS) {\n                _this.css = document.createElement('style');\n                _this.css.id = 'apexcharts-css';\n                _this.css.textContent = css_248z;\n\n                if (inShadowRoot) {\n                  // We are in Shadow DOM, add to shadow root\n                  rootNode.prepend(_this.css);\n                } else {\n                  // Add to <head> of element's document\n                  doc.head.appendChild(_this.css);\n                }\n              }\n            }\n\n            var graphData = _this.create(_this.w.config.series, {});\n\n            if (!graphData) return resolve(_this);\n\n            _this.mount(graphData).then(function () {\n              if (typeof _this.w.config.chart.events.mounted === 'function') {\n                _this.w.config.chart.events.mounted(_this, _this.w);\n              }\n\n              _this.events.fireEvent('mounted', [_this, _this.w]);\n\n              resolve(graphData);\n            }).catch(function (e) {\n              reject(e); // handle error in case no data or element not found\n            });\n          } else {\n            reject(new Error('Element not found'));\n          }\n        });\n      }\n    }, {\n      key: \"create\",\n      value: function create(ser, opts) {\n        var w = this.w;\n        var initCtx = new InitCtxVariables(this);\n        initCtx.initModules();\n        var gl = this.w.globals;\n        gl.noData = false;\n        gl.animationEnded = false;\n        this.responsive.checkResponsiveConfig(opts);\n\n        if (w.config.xaxis.convertedCatToNumeric) {\n          var defaults = new Defaults(w.config);\n          defaults.convertCatToNumericXaxis(w.config, this.ctx);\n        }\n\n        if (this.el === null) {\n          gl.animationEnded = true;\n          return null;\n        }\n\n        this.core.setupElements();\n\n        if (w.config.chart.type === 'treemap') {\n          w.config.grid.show = false;\n          w.config.yaxis[0].show = false;\n        }\n\n        if (gl.svgWidth === 0) {\n          // if the element is hidden, skip drawing\n          gl.animationEnded = true;\n          return null;\n        }\n\n        var combo = CoreUtils.checkComboSeries(ser);\n        gl.comboCharts = combo.comboCharts;\n        gl.comboBarCount = combo.comboBarCount;\n        var allSeriesAreEmpty = ser.every(function (s) {\n          return s.data && s.data.length === 0;\n        });\n\n        if (ser.length === 0 || allSeriesAreEmpty) {\n          this.series.handleNoData();\n        }\n\n        this.events.setupEventHandlers(); // Handle the data inputted by user and set some of the global variables (for eg, if data is datetime / numeric / category). Don't calculate the range / min / max at this time\n\n        this.data.parseData(ser); // this is a good time to set theme colors first\n\n        this.theme.init(); // as markers accepts array, we need to setup global markers for easier access\n\n        var markers = new Markers(this);\n        markers.setGlobalMarkerSize(); // labelFormatters should be called before dimensions as in dimensions we need text labels width\n\n        this.formatters.setLabelFormatters();\n        this.titleSubtitle.draw(); // legend is calculated here before coreCalculations because it affects the plottable area\n        // if there is some data to show or user collapsed all series, then proceed drawing legend\n\n        if (!gl.noData || gl.collapsedSeries.length === gl.series.length || w.config.legend.showForSingleSeries) {\n          this.legend.init();\n        } // check whether in multiple series, all series share the same X\n\n\n        this.series.hasAllSeriesEqualX(); // coreCalculations will give the min/max range and yaxis/axis values. It should be called here to set series variable from config to globals\n\n        if (gl.axisCharts) {\n          this.core.coreCalculations();\n\n          if (w.config.xaxis.type !== 'category') {\n            // as we have minX and maxX values, determine the default DateTimeFormat for time series\n            this.formatters.setLabelFormatters();\n          }\n\n          this.ctx.toolbar.minX = w.globals.minX;\n          this.ctx.toolbar.maxX = w.globals.maxX;\n        } // we need to generate yaxis for heatmap separately as we are not showing numerics there, but seriesNames. There are some tweaks which are required for heatmap to align labels correctly which are done in below function\n        // Also we need to do this before calculating Dimensions plotCoords() method of Dimensions\n\n\n        this.formatters.heatmapLabelFormatters(); // We got plottable area here, next task would be to calculate axis areas\n\n        this.dimensions.plotCoords();\n        var xyRatios = this.core.xySettings();\n        this.grid.createGridMask();\n        var elGraph = this.core.plotChartType(ser, xyRatios);\n        var dataLabels = new DataLabels(this);\n        dataLabels.bringForward();\n\n        if (w.config.dataLabels.background.enabled) {\n          dataLabels.dataLabelsBackground();\n        } // after all the drawing calculations, shift the graphical area (actual charts/bars) excluding legends\n\n\n        this.core.shiftGraphPosition();\n        var dim = {\n          plot: {\n            left: w.globals.translateX,\n            top: w.globals.translateY,\n            width: w.globals.gridWidth,\n            height: w.globals.gridHeight\n          }\n        };\n        return {\n          elGraph: elGraph,\n          xyRatios: xyRatios,\n          elInner: w.globals.dom.elGraphical,\n          dimensions: dim\n        };\n      }\n    }, {\n      key: \"mount\",\n      value: function mount() {\n        var _this2 = this;\n\n        var graphData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n        var me = this;\n        var w = me.w;\n        return new Promise(function (resolve, reject) {\n          // no data to display\n          if (me.el === null) {\n            return reject(new Error('Not enough data to display or target element not found'));\n          } else if (graphData === null || w.globals.allSeriesCollapsed) {\n            me.series.handleNoData();\n          }\n\n          if (w.config.chart.type !== 'treemap') {\n            me.axes.drawAxis(w.config.chart.type, graphData.xyRatios);\n          }\n\n          me.grid = new Grid(me);\n          var elgrid = me.grid.drawGrid();\n          me.annotations = new Annotations(me);\n          me.annotations.drawImageAnnos();\n          me.annotations.drawTextAnnos();\n\n          if (w.config.grid.position === 'back' && elgrid) {\n            w.globals.dom.elGraphical.add(elgrid.el);\n          }\n\n          var xAxis = new XAxis(_this2.ctx);\n          var yaxis = new YAxis(_this2.ctx);\n\n          if (elgrid !== null) {\n            xAxis.xAxisLabelCorrections(elgrid.xAxisTickWidth);\n            yaxis.setYAxisTextAlignments();\n            w.config.yaxis.map(function (yaxe, index) {\n              if (w.globals.ignoreYAxisIndexes.indexOf(index) === -1) {\n                yaxis.yAxisTitleRotate(index, yaxe.opposite);\n              }\n            });\n          }\n\n          if (w.config.annotations.position === 'back') {\n            w.globals.dom.Paper.add(w.globals.dom.elAnnotations);\n            me.annotations.drawAxesAnnotations();\n          }\n\n          if (Array.isArray(graphData.elGraph)) {\n            for (var g = 0; g < graphData.elGraph.length; g++) {\n              w.globals.dom.elGraphical.add(graphData.elGraph[g]);\n            }\n          } else {\n            w.globals.dom.elGraphical.add(graphData.elGraph);\n          }\n\n          if (w.config.grid.position === 'front' && elgrid) {\n            w.globals.dom.elGraphical.add(elgrid.el);\n          }\n\n          if (w.config.xaxis.crosshairs.position === 'front') {\n            me.crosshairs.drawXCrosshairs();\n          }\n\n          if (w.config.yaxis[0].crosshairs.position === 'front') {\n            me.crosshairs.drawYCrosshairs();\n          }\n\n          if (w.config.annotations.position === 'front') {\n            w.globals.dom.Paper.add(w.globals.dom.elAnnotations);\n            me.annotations.drawAxesAnnotations();\n          }\n\n          if (!w.globals.noData) {\n            // draw tooltips at the end\n            if (w.config.tooltip.enabled && !w.globals.noData) {\n              me.w.globals.tooltip.drawTooltip(graphData.xyRatios);\n            }\n\n            if (w.globals.axisCharts && (w.globals.isXNumeric || w.config.xaxis.convertedCatToNumeric || w.globals.isRangeBar)) {\n              if (w.config.chart.zoom.enabled || w.config.chart.selection && w.config.chart.selection.enabled || w.config.chart.pan && w.config.chart.pan.enabled) {\n                me.zoomPanSelection.init({\n                  xyRatios: graphData.xyRatios\n                });\n              }\n            } else {\n              var tools = w.config.chart.toolbar.tools;\n              var toolsArr = ['zoom', 'zoomin', 'zoomout', 'selection', 'pan', 'reset'];\n              toolsArr.forEach(function (t) {\n                tools[t] = false;\n              });\n            }\n\n            if (w.config.chart.toolbar.show && !w.globals.allSeriesCollapsed) {\n              me.toolbar.createToolbar();\n            }\n          }\n\n          if (w.globals.memory.methodsToExec.length > 0) {\n            w.globals.memory.methodsToExec.forEach(function (fn) {\n              fn.method(fn.params, false, fn.context);\n            });\n          }\n\n          if (!w.globals.axisCharts && !w.globals.noData) {\n            me.core.resizeNonAxisCharts();\n          }\n\n          resolve(me);\n        });\n      }\n      /**\n       * Destroy the chart instance by removing all elements which also clean up event listeners on those elements.\n       */\n\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        window.removeEventListener('resize', this.windowResizeHandler);\n        removeResizeListener(this.el.parentNode, this.parentResizeHandler); // remove the chart's instance from the global Apex._chartInstances\n\n        var chartID = this.w.config.chart.id;\n\n        if (chartID) {\n          Apex._chartInstances.forEach(function (c, i) {\n            if (c.id === Utils$1.escapeString(chartID)) {\n              Apex._chartInstances.splice(i, 1);\n            }\n          });\n        }\n\n        new Destroy(this.ctx).clear({\n          isUpdating: false\n        });\n      }\n      /**\n       * Allows users to update Options after the chart has rendered.\n       *\n       * @param {object} options - A new config object can be passed which will be merged with the existing config object\n       * @param {boolean} redraw - should redraw from beginning or should use existing paths and redraw from there\n       * @param {boolean} animate - should animate or not on updating Options\n       */\n\n    }, {\n      key: \"updateOptions\",\n      value: function updateOptions(options) {\n        var _this3 = this;\n\n        var redraw = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        var animate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var updateSyncedCharts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n        var overwriteInitialConfig = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n        var w = this.w; // when called externally, clear some global variables\n        // fixes apexcharts.js#1488\n\n        w.globals.selection = undefined;\n\n        if (options.series) {\n          this.series.resetSeries(false, true, false);\n\n          if (options.series.length && options.series[0].data) {\n            options.series = options.series.map(function (s, i) {\n              return _this3.updateHelpers._extendSeries(s, i);\n            });\n          } // user updated the series via updateOptions() function.\n          // Hence, we need to reset axis min/max to avoid zooming issues\n\n\n          this.updateHelpers.revertDefaultAxisMinMax();\n        } // user has set x-axis min/max externally - hence we need to forcefully set the xaxis min/max\n\n\n        if (options.xaxis) {\n          options = this.updateHelpers.forceXAxisUpdate(options);\n        }\n\n        if (options.yaxis) {\n          options = this.updateHelpers.forceYAxisUpdate(options);\n        }\n\n        if (w.globals.collapsedSeriesIndices.length > 0) {\n          this.series.clearPreviousPaths();\n        }\n        /* update theme mode#459 */\n\n\n        if (options.theme) {\n          options = this.theme.updateThemeOptions(options);\n        }\n\n        return this.updateHelpers._updateOptions(options, redraw, animate, updateSyncedCharts, overwriteInitialConfig);\n      }\n      /**\n       * Allows users to update Series after the chart has rendered.\n       *\n       * @param {array} series - New series which will override the existing\n       */\n\n    }, {\n      key: \"updateSeries\",\n      value: function updateSeries() {\n        var newSeries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var animate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var overwriteInitialSeries = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        this.series.resetSeries(false);\n        this.updateHelpers.revertDefaultAxisMinMax();\n        return this.updateHelpers._updateSeries(newSeries, animate, overwriteInitialSeries);\n      }\n      /**\n       * Allows users to append a new series after the chart has rendered.\n       *\n       * @param {array} newSerie - New serie which will be appended to the existing series\n       */\n\n    }, {\n      key: \"appendSeries\",\n      value: function appendSeries(newSerie) {\n        var animate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var overwriteInitialSeries = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n        var newSeries = this.w.config.series.slice();\n        newSeries.push(newSerie);\n        this.series.resetSeries(false);\n        this.updateHelpers.revertDefaultAxisMinMax();\n        return this.updateHelpers._updateSeries(newSeries, animate, overwriteInitialSeries);\n      }\n      /**\n       * Allows users to append Data to series.\n       *\n       * @param {array} newData - New data in the same format as series\n       */\n\n    }, {\n      key: \"appendData\",\n      value: function appendData(newData) {\n        var overwriteInitialSeries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var me = this;\n        me.w.globals.dataChanged = true;\n        me.series.getPreviousPaths();\n        var newSeries = me.w.config.series.slice();\n\n        for (var i = 0; i < newSeries.length; i++) {\n          if (newData[i] !== null && typeof newData[i] !== 'undefined') {\n            for (var j = 0; j < newData[i].data.length; j++) {\n              newSeries[i].data.push(newData[i].data[j]);\n            }\n          }\n        }\n\n        me.w.config.series = newSeries;\n\n        if (overwriteInitialSeries) {\n          me.w.globals.initialSeries = Utils$1.clone(me.w.config.series);\n        }\n\n        return this.update();\n      }\n    }, {\n      key: \"update\",\n      value: function update(options) {\n        var _this4 = this;\n\n        return new Promise(function (resolve, reject) {\n          new Destroy(_this4.ctx).clear({\n            isUpdating: true\n          });\n\n          var graphData = _this4.create(_this4.w.config.series, options);\n\n          if (!graphData) return resolve(_this4);\n\n          _this4.mount(graphData).then(function () {\n            if (typeof _this4.w.config.chart.events.updated === 'function') {\n              _this4.w.config.chart.events.updated(_this4, _this4.w);\n            }\n\n            _this4.events.fireEvent('updated', [_this4, _this4.w]);\n\n            _this4.w.globals.isDirty = true;\n            resolve(_this4);\n          }).catch(function (e) {\n            reject(e);\n          });\n        });\n      }\n      /**\n       * Get all charts in the same \"group\" (including the instance which is called upon) to sync them when user zooms in/out or pan.\n       */\n\n    }, {\n      key: \"getSyncedCharts\",\n      value: function getSyncedCharts() {\n        var chartGroups = this.getGroupedCharts();\n        var allCharts = [this];\n\n        if (chartGroups.length) {\n          allCharts = [];\n          chartGroups.forEach(function (ch) {\n            allCharts.push(ch);\n          });\n        }\n\n        return allCharts;\n      }\n      /**\n       * Get charts in the same \"group\" (excluding the instance which is called upon) to perform operations on the other charts of the same group (eg., tooltip hovering)\n       */\n\n    }, {\n      key: \"getGroupedCharts\",\n      value: function getGroupedCharts() {\n        var _this5 = this;\n\n        return Apex._chartInstances.filter(function (ch) {\n          if (ch.group) {\n            return true;\n          }\n        }).map(function (ch) {\n          return _this5.w.config.chart.group === ch.group ? ch.chart : _this5;\n        });\n      }\n    }, {\n      key: \"toggleSeries\",\n      value: function toggleSeries(seriesName) {\n        return this.series.toggleSeries(seriesName);\n      }\n    }, {\n      key: \"highlightSeriesOnLegendHover\",\n      value: function highlightSeriesOnLegendHover(e, targetElement) {\n        return this.series.toggleSeriesOnHover(e, targetElement);\n      }\n    }, {\n      key: \"showSeries\",\n      value: function showSeries(seriesName) {\n        this.series.showSeries(seriesName);\n      }\n    }, {\n      key: \"hideSeries\",\n      value: function hideSeries(seriesName) {\n        this.series.hideSeries(seriesName);\n      }\n    }, {\n      key: \"resetSeries\",\n      value: function resetSeries() {\n        var shouldUpdateChart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var shouldResetZoom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        this.series.resetSeries(shouldUpdateChart, shouldResetZoom);\n      } // Public method to add event listener on chart context\n\n    }, {\n      key: \"addEventListener\",\n      value: function addEventListener(name, handler) {\n        this.events.addEventListener(name, handler);\n      } // Public method to remove event listener on chart context\n\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(name, handler) {\n        this.events.removeEventListener(name, handler);\n      }\n    }, {\n      key: \"addXaxisAnnotation\",\n      value: function addXaxisAnnotation(opts) {\n        var pushToMemory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n        var me = this;\n\n        if (context) {\n          me = context;\n        }\n\n        me.annotations.addXaxisAnnotationExternal(opts, pushToMemory, me);\n      }\n    }, {\n      key: \"addYaxisAnnotation\",\n      value: function addYaxisAnnotation(opts) {\n        var pushToMemory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n        var me = this;\n\n        if (context) {\n          me = context;\n        }\n\n        me.annotations.addYaxisAnnotationExternal(opts, pushToMemory, me);\n      }\n    }, {\n      key: \"addPointAnnotation\",\n      value: function addPointAnnotation(opts) {\n        var pushToMemory = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        var context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n        var me = this;\n\n        if (context) {\n          me = context;\n        }\n\n        me.annotations.addPointAnnotationExternal(opts, pushToMemory, me);\n      }\n    }, {\n      key: \"clearAnnotations\",\n      value: function clearAnnotations() {\n        var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n        var me = this;\n\n        if (context) {\n          me = context;\n        }\n\n        me.annotations.clearAnnotations(me);\n      }\n    }, {\n      key: \"removeAnnotation\",\n      value: function removeAnnotation(id) {\n        var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n        var me = this;\n\n        if (context) {\n          me = context;\n        }\n\n        me.annotations.removeAnnotation(me, id);\n      }\n    }, {\n      key: \"getChartArea\",\n      value: function getChartArea() {\n        var el = this.w.globals.dom.baseEl.querySelector('.apexcharts-inner');\n        return el;\n      }\n    }, {\n      key: \"getSeriesTotalXRange\",\n      value: function getSeriesTotalXRange(minX, maxX) {\n        return this.coreUtils.getSeriesTotalsXRange(minX, maxX);\n      }\n    }, {\n      key: \"getHighestValueInSeries\",\n      value: function getHighestValueInSeries() {\n        var seriesIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var range = new Range(this.ctx);\n        return range.getMinYMaxY(seriesIndex).highestY;\n      }\n    }, {\n      key: \"getLowestValueInSeries\",\n      value: function getLowestValueInSeries() {\n        var seriesIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var range = new Range(this.ctx);\n        return range.getMinYMaxY(seriesIndex).lowestY;\n      }\n    }, {\n      key: \"getSeriesTotal\",\n      value: function getSeriesTotal() {\n        return this.w.globals.seriesTotals;\n      }\n    }, {\n      key: \"toggleDataPointSelection\",\n      value: function toggleDataPointSelection(seriesIndex, dataPointIndex) {\n        return this.updateHelpers.toggleDataPointSelection(seriesIndex, dataPointIndex);\n      }\n    }, {\n      key: \"zoomX\",\n      value: function zoomX(min, max) {\n        this.ctx.toolbar.zoomUpdateOptions(min, max);\n      }\n    }, {\n      key: \"setLocale\",\n      value: function setLocale(localeName) {\n        this.localization.setCurrentLocaleValues(localeName);\n      }\n    }, {\n      key: \"dataURI\",\n      value: function dataURI(options) {\n        var exp = new Exports(this.ctx);\n        return exp.dataURI(options);\n      }\n    }, {\n      key: \"paper\",\n      value: function paper() {\n        return this.w.globals.dom.Paper;\n      }\n    }, {\n      key: \"_parentResizeCallback\",\n      value: function _parentResizeCallback() {\n        if (this.w.globals.animationEnded && this.w.config.chart.redrawOnParentResize) {\n          this._windowResize();\n        }\n      }\n      /**\n       * Handle window resize and re-draw the whole chart.\n       */\n\n    }, {\n      key: \"_windowResize\",\n      value: function _windowResize() {\n        var _this6 = this;\n\n        clearTimeout(this.w.globals.resizeTimer);\n        this.w.globals.resizeTimer = window.setTimeout(function () {\n          _this6.w.globals.resized = true;\n          _this6.w.globals.dataChanged = false; // we need to redraw the whole chart on window resize (with a small delay).\n\n          _this6.ctx.update();\n        }, 150);\n      }\n    }, {\n      key: \"_windowResizeHandler\",\n      value: function _windowResizeHandler() {\n        var redraw = this.w.config.chart.redrawOnWindowResize;\n\n        if (typeof redraw === 'function') {\n          redraw = redraw();\n        }\n\n        redraw && this._windowResize();\n      }\n    }], [{\n      key: \"getChartByID\",\n      value: function getChartByID(id) {\n        var chartId = Utils$1.escapeString(id);\n\n        var c = Apex._chartInstances.filter(function (ch) {\n          return ch.id === chartId;\n        })[0];\n\n        return c && c.chart;\n      }\n      /**\n       * Allows the user to provide data attrs in the element and the chart will render automatically when this method is called by searching for the elements containing 'data-apexcharts' attribute\n       */\n\n    }, {\n      key: \"initOnLoad\",\n      value: function initOnLoad() {\n        var els = document.querySelectorAll('[data-apexcharts]');\n\n        for (var i = 0; i < els.length; i++) {\n          var el = els[i];\n          var options = JSON.parse(els[i].getAttribute('data-options'));\n          var apexChart = new ApexCharts(el, options);\n          apexChart.render();\n        }\n      }\n      /**\n       * This static method allows users to call chart methods without necessarily from the\n       * instance of the chart in case user has assigned chartID to the targeted chart.\n       * The chartID is used for mapping the instance stored in Apex._chartInstances global variable\n       *\n       * This is helpful in cases when you don't have reference of the chart instance\n       * easily and need to call the method from anywhere.\n       * For eg, in React/Vue applications when you have many parent/child components,\n       * and need easy reference to other charts for performing dynamic operations\n       *\n       * @param {string} chartID - The unique identifier which will be used to call methods\n       * on that chart instance\n       * @param {function} fn - The method name to call\n       * @param {object} opts - The parameters which are accepted in the original method will be passed here in the same order.\n       */\n\n    }, {\n      key: \"exec\",\n      value: function exec(chartID, fn) {\n        var chart = this.getChartByID(chartID);\n        if (!chart) return; // turn on the global exec flag to indicate this method was called\n\n        chart.w.globals.isExecCalled = true;\n        var ret = null;\n\n        if (chart.publicMethods.indexOf(fn) !== -1) {\n          for (var _len = arguments.length, opts = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n            opts[_key - 2] = arguments[_key];\n          }\n\n          ret = chart[fn].apply(chart, opts);\n        }\n\n        return ret;\n      }\n    }, {\n      key: \"merge\",\n      value: function merge(target, source) {\n        return Utils$1.extend(target, source);\n      }\n    }]);\n\n    return ApexCharts;\n  }();\n\n  return ApexCharts$1;\n\n})));\n</script>\n",
        "output": "str",
        "x": 2100,
        "y": 400,
        "wires": [
            [
                "5457ed051d9a846f"
            ]
        ]
    },
    {
        "id": "3a773acf714bdf73",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "",
        "func": "/* Declaración de datos \nAPI         = 30;   \nPy          = 3000; //psi \nPb          = 1200;  //psi\nPcrit       = 1050; // psi\nPwf_P       = 750;  //psi \nQ_p         = 2300; //BPD\nBSW         = 98;   //%\nT_fluido    = 160;  // °F\nDens_Agua   = 8.33; //ppg \nProf_Intake = 4000; //ft  Profundidad de la bomba \nProf_Sensor = 4030; //ft  Profundidad del sensor de fondo\nPMP         = 4500; //FT\nPIP_Sensor  = 750; //psi\nPCasing     = 0;   //psi\n*/\nvar Analog = global.get(\"DownHoleData\",\"memoryOnly\")||[];\n\n// ESTADO MECANICO\nvar PMP             = global.get(\"IWOC.ESTADO_MECANICO.PMP\")||4500; //Presión del tubo \nvar Prof_Discharge  = global.get(\"IWOC.ESTADO_MECANICO.Profundidad_de_descarga\")||0;\nvar Prof_Sensor     = global.get(\"IWOC.ESTADO_MECANICO.Prof_Sensor\")||4030;\nvar Prof_Intake     = global.get(\"IWOC.ESTADO_MECANICO.Profundidad_de_entrada\")||4000;\n\n// PROPIEDADES DE FLUIDO\nvar API             = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.API\")||30;\nvar T_fluido        = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.Temperatura_de_fondo\")||160;\nvar Dens_Agua       = global.get(\"IWOC.PROPIEDADES_DE_FLUIDO.Densidad_del_agua\")||8.33;\n\n// PRUEBA DE PRODUCCION\nvar Pwf_P           = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.PWF_Prueba\")||750;\nvar BSW             = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.BSW_Prueba\")||98; //Relación Agua-Petroleo\nvar Q_p             = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.Q_Prueba\")||2300;\nvar Vel_P           = global.get(\"IWOC.PRUEBA_DE_PRODUCCION.Velociad_de_prueba\")||0;\n\n// DATOS PARA IPR\nvar Py              = global.get(\"IWOC.DATOS_PARA_IPR.Presion_de_yacimiento\")||2500;\nvar Pcrit           = global.get(\"IWOC.DATOS_PARA_IPR.PWF_Critica\")||1050;\nvar Pb              = global.get(\"IWOC.DATOS_PARA_IPR.Presion_de_burbuja\")||1200;\n\n//var PIP_Sensor      = Analog.DHS[\"Presión de entrada\"]||Analog.AI[\"Presión de entrada\"];\nvar PIP_Sensor      = global.get(\"Process_data.DHS['Presión de entrada']\",\"memoryOnly\")||750; //psi / Presión de la entrada de la bomba \nvar PCasing         = global.get(\"Process_data.AI['Presión de casing']\", \"memoryOnly\") || 0;\n\nvar AxisX = [];\nvar AxisY = [];\n/*\n    Paso No. 1: Se halla Gradiente de Presión corregido por \n    temperatura y %BSW a partir de la Gravedad Específica (GE)\n    del crudo usando gravedad API del crudo.\n*/\n\nvar GE = 141.5/(131.5 + API); //Corrección de la Gravedad Especifica del crudo\n\n/*\n    Paso No. 2: Hallar valores de alfa y beta según la gravedad \n    específica (GE) siguiendo lo que indica la tabla abajo:\n*/\n\nif(GE<0.63){\n    var Alfa = 0.00097;\n    var Beta = -0.0000004;\n}\nelse if((GE<0.78) && (GE>=0.63)){\n    var Alfa = (0.00097+(GE-0.63))*((0.00075-0.00097)/(0.78-0.63));\n    var Beta = (0.0000004 + (GE-0.63))*(0.0000004/(0.78-0.63));\n}\nelse if((GE<0.85)&&(GE>=0.78)){\n    var Alfa = (0.00075+(GE-0.75))*((0.00068-0.00075)/(0.85-0.78));\n    var Beta = (0 + (GE-0.75))*(0.0000001/(0.85-0.78));\n}   \nelse if((GE<0.95)&&(GE>=0.85)){\n    var Alfa = (0.00068+(GE-0.85))*((0.00066-0.00068)/(0.95-0.85));\n    var Beta = (0.0000001 + (GE-0.85))*((0.0000001-0.0000003)/(0.95-0.85));\n}   \nelse if(GE>=0.95){\n    var Alfa = 0.00066;\n    var Beta = -0.0000003;\n}\n\n//GE_o  = Gravedad específica de aceite ajustada \nvar GE_o = GE - (Alfa*(T_fluido-60)) + (Beta*Math.pow((T_fluido-60), 2)); // Temperatura de fondo - Temperatura ambiente (60°) \n\n/*\n    Paso No. 3: Hallar el Gradiente de presión corregido\n*/\nvar Grv_TFondoBSW = (((100 - BSW) / 100) * GE_o) + ((BSW / 100) * (Dens_Agua / 8.345)) \nvar VP = 0.433 * Grv_TFondoBSW // Gradiente de presión\n\n\n/*\n    Paso No. 4: Cálculo de PIP en iWOC según tres escenarios\n    \n    •\tEscenario No. 1: Cálculo de Variables en Función del Sensor de Fondo\n\n        Cálculo de PIP, PWF y Sumergencia líquida cuando la Fuente de Medición es un sensor de fondo.\n*/\n\n    var PIP_real    = PIP_Sensor + ((Prof_Intake - Prof_Sensor)*VP);\n    var Pwf         = PIP_Sensor + ((PMP - Prof_Sensor)*VP);\n    var Sum_Liq     = (PIP_real- PCasing)/ VP;\n\n/*\n    Paso No. 5: Cálculo de Caudales\n*/    \n/* Yacimiento Subsaturado*/\nif(Py>Pb){\n    if(Pwf>Pb){\n        var IP = Q_p/(Py-Pwf_P);\n        //node.send()\n    }\n    else{\n        IP = Q_p/(Py - Pb + (Pb/1.8)*(1-(0.2*(Pwf/Pb))-0.8*(Math.pow((Pwf/Pb),2))))\n    }\n    \n    var Qb      = IP * (Py - Pb);\n    var Qmax    = Qb + (IP*Pb/1.8);\n    var N       = 80;\n    \n    for (var i = 80; i >= 0;i--){\n        var Pwf_G = (Py*i/N);\n        if(Pwf_G>Pb){\n            var Qg = IP *(Py- Pwf_G);\n        }\n        else{       \n            Qg = Qb + (Qmax - Qb) * (1 - (0.2 * (Pwf_G / Pb)) - (0.8 * ((Pwf_G / Pb) * (Pwf_G / Pb))));\n        }\n        AxisX.push(Qg);\n        AxisY.push(Pwf_G);\n    }\n    /*\n        Cálculo Caudal actual Qo\n    */\n    if(Pwf>Pb){\n        var Q0 = IP *(Py- Pwf);    \n    }\n    else{       \n        var Q0 = Qb + (Qmax - Qb) * (1 - (0.2 * (Pwf / Pb)) - (0.8 * ((Pwf / Pb) * (Pwf / Pb))));\n    }\n}\n\n\nmsg.payload = {\n    'AxisX' : AxisX,\n    'AxisY' : AxisY,\n    'Pcrit' : Pcrit,\n    'Q0'    : Q0,\n    'Pwf'   : Pwf\n};\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 400,
        "wires": [
            [
                "49c978fd3b15ff17"
            ]
        ]
    },
    {
        "id": "49c978fd3b15ff17",
        "type": "template",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "IPR Chart",
        "field": "chart",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<div id=\"chart\"></div>\n<script>\n    var options = {\n            series:[{\n                name: \"Presión de fondo fluyente (PWF)\",\n                data: [{{payload.AxisY}}]\n            }],\n            chart:{\n                height: 450,\n                width: 720,\n                type: 'line',\n                id: 'areachart-2',\n                toolbar:{\n                    show: false\n                },\n                animations:{\n                    enabled: false\n                }\n            },\n            annotations:{\n                yaxis:[\n                    {\n                        y: {{payload.Pcrit}},\n                        borderColor: '#c71e1e',\n                        label:{\n                            borderColor:'#c71e1e',\n                            position: 'left',\n                            position: 'top',\n                            offsetX: 90,\n                            offsetY: 0,                        \n                            style: {\n                                color:'#fff',\n                                background:'#000000',\n                                fontSize: '14px',\n                            },\n                            text:'Pc: ' + ({{payload.Pcrit}}).toFixed(2) + ' psi',\n                        }\n                    }, \n                    {\n                        y: {{payload.Pwf}},\n                        borderColor: '#c71e1e',\n                        label: {\n                            borderColor: '#c71e1e',\n                            offsetX: 0,\n                            offsetY: 15,\n                            style:{\n                                color: '#fff',\n                                background: '#000000',\n                                fontSize: '14px',\n                            },\n                            text: 'Pwf: ' + ({{payload.Pwf}}).toFixed(2) + ' psi',\n                        }\n                    }\n                ],\n                xaxis:[\n                    {\n                        x: {{payload.Q0}},\n                        strokeDashArray: 0,\n                        borderColor: '#775DD0',\n                        label:{\n                            borderColor: '#775DD0',\n                            style:{\n                                color: '#fff',\n                                background: '#775DD0',\n                                fontSize: '14px',\n                            },\n                            text: 'Caudal: ' + ({{payload.Q0}}).toFixed(0) + ' BPD' \n                        }\n                    }\n                ],\n                points:[{\n                    x: {{payload.Q0}},\n                    y: {{payload.Pwf}},\n                    marker: {\n                        size: 5,\n                        fillColor: '#32499d',\n                        strokeColor: '#2b2b2b',\n                        radius: 2,\n                        cssClass: 'apexcharts-custom-class'\n                    },\n                    label:{\n                        borderColor: '#2b2b2b',\n                        offsetX: -17,\n                        offsetY: 40,                        \n                        style:{\n                            color: '#fff',\n                            background: '#2b2b2b',\n                            fontSize: '14px',\n                        },\n                        text: 'Q'\n                    }\n                }]\n            },\n            tooltip:{\n                enabled: true\n            },\n            dataLabels:{\n                enabled: false\n            },\n            stroke:{\n                curve: 'straight',\n                width: [3]\n            },\n            grid:{\n                padding:{\n                    right: 30,\n                    left: 20\n                }\n            },\n            //title:{\n            //    text: 'Gráfica IPR',\n            //    align: 'center'\n            //},\n            colors: [\"#c71e1e\"],\n            xaxis:{\n                type: 'numeric',\n                show: true,\n                categories: [{{payload.AxisX}}],\n                title:{\n                    text:\"Caudal [BPD]\",\n                    style: {\n                        color: \"#000000\",\n                        fontSize: '14px',\n                        fontFamily: 'Helvetica, Arial, sans-serif',\n                        fontWeight: 600\n                    },\n                }\n            },\n            yaxis:{\n                title: {\n                    text: \"Presión [psi]\",\n                    style: {\n                        color: \"#000000\",\n                        fontSize: '14px',\n                        fontFamily: 'Helvetica, Arial, sans-serif',\n                        fontWeight: 600\n                    },\n                },\n            }            \n    };\n    \n    var chart = new ApexCharts(document.querySelector(\"#chart\"), options);\n    chart.render();\n</script>\n{{script}}\n",
        "output": "str",
        "x": 1960,
        "y": 400,
        "wires": [
            [
                "f101ac16fcca21d3"
            ]
        ]
    },
    {
        "id": "db40606e29e86f86",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::IPRflag",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1800,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "0f1a0557b5704453",
        "type": "link out",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "",
        "links": [
            "f6e4828f9a1f1d22"
        ],
        "x": 1795,
        "y": 500,
        "wires": []
    },
    {
        "id": "309130387c396001",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "IPR fist time?",
        "property": "#:(memoryOnly)::IPRflag",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1610,
        "y": 440,
        "wires": [
            [],
            [
                "db40606e29e86f86"
            ]
        ]
    },
    {
        "id": "bcc7308cbb92b877",
        "type": "link in",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "",
        "links": [
            "dc640e015754eebd"
        ],
        "x": 1345,
        "y": 440,
        "wires": [
            [
                "4587f719d8fa0196"
            ]
        ]
    },
    {
        "id": "4587f719d8fa0196",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "Pantalla",
        "property": "name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "AVAS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1450,
        "y": 440,
        "wires": [
            [
                "309130387c396001"
            ]
        ]
    },
    {
        "id": "f1efe9cad63828d0",
        "type": "inject",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#:(memoryOnly)::IPRflag",
        "payloadType": "flow",
        "x": 1430,
        "y": 500,
        "wires": [
            [
                "13259fdaccee1dce"
            ]
        ]
    },
    {
        "id": "13259fdaccee1dce",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1590,
        "y": 500,
        "wires": [
            [
                "dd59438816de153f"
            ]
        ]
    },
    {
        "id": "dd59438816de153f",
        "type": "rbe",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1710,
        "y": 500,
        "wires": [
            [
                "0f1a0557b5704453"
            ]
        ]
    },
    {
        "id": "a84433bcdd3ac9e2",
        "type": "inject",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1390,
        "y": 400,
        "wires": [
            [
                "b59377ef1f98c031"
            ]
        ]
    },
    {
        "id": "b59377ef1f98c031",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "Pantalla",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "AVAS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1520,
        "y": 400,
        "wires": [
            [
                "3ee0341b101fbe62"
            ]
        ]
    },
    {
        "id": "3ee0341b101fbe62",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "IPR?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "IPR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1650,
        "y": 400,
        "wires": [
            [
                "3a773acf714bdf73"
            ]
        ]
    },
    {
        "id": "04b67cfaf68ce34c",
        "type": "link in",
        "z": "84636ba2ba4b8fea",
        "g": "bc8cd5f1dc716592",
        "name": "",
        "links": [
            "eedbe64de6e6f65c",
            "a9485b4128f8af1c",
            "d59a7910a658d9dc"
        ],
        "x": 1855,
        "y": 480,
        "wires": [
            [
                "3a773acf714bdf73"
            ]
        ]
    },
    {
        "id": "26db00788655ebb6",
        "type": "ui_chart",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "",
        "group": "8c8bf20c342c890a",
        "order": 3,
        "width": 18,
        "height": 12,
        "label": "Carta Amperimétrica (A)",
        "chartType": "radar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#390981",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 2130,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "bba1a28e6a54b9e5",
        "type": "ui_dropdown",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "",
        "label": "Selecione Rango",
        "tooltip": "",
        "place": "Seleccione tiempo",
        "group": "8c8bf20c342c890a",
        "order": 1,
        "width": 24,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Amperimetrica diaria",
                "value": "dataday",
                "type": "str"
            },
            {
                "label": "Amperimetrica semanal",
                "value": "dataweek",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "x": 1690,
        "y": 260,
        "wires": [
            [
                "ad87b7f412d6d7f4"
            ]
        ]
    },
    {
        "id": "417bcb4a195ce272",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "amperimetric.Type",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0f82f9ee03c34d5d",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "Data show",
        "func": "var Output_Frequency = global.get(\"Cluster.SCP1.VSD.Frecuencia\", \"memoryOnly\")||0;\nvar Output_Current = global.get(\"Cluster.SCP1.VSD.Corriente_Motor\", \"memoryOnly\") || 0;\n\nreturn[\n    { payload: catcherror(Output_Frequency,3)+ \" \" + \"Hz\"},\n    { payload: catcherror(Output_Current,1) + \" \" + \"A\" },\n]\n\nfunction catcherror(variable,dec){\n    return parseFloat(variable.toFixed(dec));\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2270,
        "y": 160,
        "wires": [
            [
                "047bb0f97064e068"
            ],
            [
                "a92509e1c13ef3d7"
            ]
        ],
        "outputLabels": [
            "Output_Frequency",
            "SpeedPercentage"
        ]
    },
    {
        "id": "b25efd376ee5f9cb",
        "type": "link in",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "",
        "links": [
            "bb4f0d3ff3b1228d",
            "87857b683465f57d"
        ],
        "x": 1895,
        "y": 160,
        "wires": [
            [
                "a301903459a233a5"
            ]
        ]
    },
    {
        "id": "7bce9a88e042c4b7",
        "type": "link in",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "",
        "links": [
            "eedbe64de6e6f65c",
            "a9485b4128f8af1c",
            "d59a7910a658d9dc"
        ],
        "x": 1375,
        "y": 260,
        "wires": [
            [
                "db5d17139cddf4fc",
                "132f30d3c505dc76"
            ]
        ]
    },
    {
        "id": "9c974ead811b93f9",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "getting data",
        "func": "var i;\nvar datad = flow.get(\"amperimetric.dataday.data\")||null;\nvar datadlabel = flow.get(\"amperimetric.dataday.label\") || null;\nvar datawlabel = flow.get(\"amperimetric.dataweek.label\") || null;\nvar dataw = flow.get(\"amperimetric.dataweek.data\") || null;\nvar Output_Current = global.get(\"Cluster.SCP1.VSD.Corriente_Motor\", \"memoryOnly\") || 0;\nvar pos;\nif(datad==null){\n    datad=[null];\n    datad [239] = null;\n    datadlabel = [null];\n    datadlabel[239] = null;\n    flow.set(\"amperimetric.dataday.data\",datad);\n    for(i=0;i<datadlabel.length;i++){\n        if((i==0)||(i % 10 ==0)){\n            datadlabel[i]= (i/10)<10?\"0\"+(i/10)+\":00\":(i/10)+\":00\";\n        }\n        else datadlabel[i]=\"\";\n    }\n    flow.set(\"amperimetric.dataday.label\", datadlabel);\n}\nelse{\n    pos = ampSetValue()\n    if(pos!=-1){\n        datad[pos] = Output_Current;\n        flow.set(\"amperimetric.dataday.data\", datad);\n    }\n    if (((pos % 7 == 0) || (pos == 0)) && (dataw == null)) { flow.set(\"amperimetric.dataweek.data\", [Output_Current]); flow.set(\"amperimetric.dataweek.label\", [\"-168 h\"])}\n    if (((pos % 7 == 0) || (pos == 0)) && (dataw != null)){\n        dataw.push(Output_Current);\n        if (datawlabel.length<240){\n            if (datawlabel.length % 30 == 0) datawlabel.push(\"-\" + (168 - ((datawlabel.length/30)*21))+\" h\");\n            else datawlabel.push(\"\");\n            flow.set(\"amperimetric.dataweek.label\", datawlabel)\n        }\n        if(dataw.length==241) dataw.shift();\n        if (datawlabel.length == 241) datawlabel.shift();\n        flow.set(\"amperimetric.dataweek.data\", dataw);\n    }\n}\nfunction ampSetValue(){\n    var aux;\n    var DT = new Date();\n    var h = DT.getHours();\n    var m = DT.getMinutes();\n    if(m==0 && h==0)aux=0;\n    m % 6 ==0 ? aux = ((h*60+m)/6):aux = -1;\n    return aux;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "6f8a1025621a9bb4",
        "type": "inject",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1430,
        "y": 100,
        "wires": [
            [
                "9c974ead811b93f9",
                "d0c56317552dc00a"
            ]
        ]
    },
    {
        "id": "db5d17139cddf4fc",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "to chart",
        "func": "var time = flow.get(\"amperimetric.Type\") ||\"dataday\";\nvar data = flow.get(\"amperimetric.\"+time+\".data\") || [];\nvar labels = flow.get(\"amperimetric.\" + time + \".label\") || [];\n\nvar radarchart = [{\n    \"labels\": labels,\n    \"series\": \"\",\n    \"data\": [data]\n}];\n\nmsg.payload = radarchart;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 80,
        "wires": [
            [
                "26db00788655ebb6"
            ]
        ]
    },
    {
        "id": "d0c56317552dc00a",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "AVAS?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "AVAS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1550,
        "y": 80,
        "wires": [
            [
                "5ec4105488ad7a11"
            ]
        ]
    },
    {
        "id": "5ec4105488ad7a11",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "AVAS?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Amperimetric",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1690,
        "y": 80,
        "wires": [
            [
                "db5d17139cddf4fc"
            ]
        ]
    },
    {
        "id": "6a0bb1a22461681d",
        "type": "delay",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1790,
        "y": 140,
        "wires": [
            [
                "db5d17139cddf4fc"
            ]
        ]
    },
    {
        "id": "a301903459a233a5",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "AVAS?",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "AVAS®",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1990,
        "y": 160,
        "wires": [
            [
                "0657321b8fb40e83"
            ]
        ]
    },
    {
        "id": "0657321b8fb40e83",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "AVAS?",
        "property": "#:(memoryOnly)::Navegación.AVAS",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Amperimetric",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2110,
        "y": 160,
        "wires": [
            [
                "0f82f9ee03c34d5d"
            ]
        ]
    },
    {
        "id": "132f30d3c505dc76",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "select?",
        "func": "msg.payload = flow.get(\"amperimetric.Type\") ||\"dataday\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 260,
        "wires": [
            [
                "bba1a28e6a54b9e5"
            ]
        ]
    },
    {
        "id": "047bb0f97064e068",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Cluster.SCP1.VSD.Velocidad_Max\") || 0;\nvar min = global.get(\"Cluster.SCP1.VSD.Velocidad_Min\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? (maxopc/0.8):max};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 120,
        "wires": [
            [
                "2bdf8ed9c5cfc716"
            ]
        ]
    },
    {
        "id": "a92509e1c13ef3d7",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "Limites",
        "func": "// límites por protecciones si existen\nvar max = global.get(\"Cluster.SCP1.VSD.Protections_Sobrecarga\") || 0;\nvar min = global.get(\"Cluster.SCP1.VSD.Protections_Subcarga\") || 0;\n\n// Máximo auxiliar por si no existe límite máximo por protecciones\nvar maxopc = context.get(\"maxopc\")||0;\n\nif (msg.payload > maxopc) { maxopc = msg.payload ; context.set(\"maxopc\", maxopc);}\nmsg.control = { 'min': min, 'max': max == 0 ? (maxopc/0.8):max};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2420,
        "y": 180,
        "wires": [
            [
                "fc8b30aa16df9d26"
            ]
        ]
    },
    {
        "id": "ad87b7f412d6d7f4",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "select",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "dataweek",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1850,
        "y": 260,
        "wires": [
            [
                "be7a20fe506db703"
            ],
            [
                "417bcb4a195ce272",
                "6a0bb1a22461681d"
            ]
        ]
    },
    {
        "id": "be7a20fe506db703",
        "type": "function",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "data",
        "func": "var length = (flow.get(\"amperimetric.dataweek.data\")||[0]).length;\nmsg.payload = length < 240 ? \"other\" : msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 260,
        "wires": [
            [
                "5078502f17759936"
            ]
        ]
    },
    {
        "id": "5078502f17759936",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "true?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "other",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2170,
        "y": 260,
        "wires": [
            [
                "417bcb4a195ce272",
                "6a0bb1a22461681d"
            ],
            [
                "922cf46afad89153",
                "1f4b9f04b88b711e"
            ]
        ]
    },
    {
        "id": "922cf46afad89153",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "dataday",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dataday",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2340,
        "y": 280,
        "wires": [
            [
                "bba1a28e6a54b9e5"
            ]
        ]
    },
    {
        "id": "1f4b9f04b88b711e",
        "type": "change",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "show",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "No hay datos suficientes para suministrar carta amperimétrica semanal",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2330,
        "y": 240,
        "wires": [
            [
                "34c356f5807d3361"
            ]
        ]
    },
    {
        "id": "34c356f5807d3361",
        "type": "ui_toast",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "Aceptar",
        "cancel": "",
        "raw": false,
        "topic": "Carta amperimétrica",
        "name": "",
        "x": 2470,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "61317946b2a5311c",
        "type": "link in",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "",
        "links": [
            "dc640e015754eebd"
        ],
        "x": 1375,
        "y": 200,
        "wires": [
            [
                "cca6bdbd713cab15"
            ]
        ]
    },
    {
        "id": "cca6bdbd713cab15",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "Pantalla",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "AVAS",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1480,
        "y": 200,
        "wires": [
            [
                "4a73d5e46b34280b"
            ]
        ]
    },
    {
        "id": "4a73d5e46b34280b",
        "type": "switch",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "AVAS?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Amperimetric",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1630,
        "y": 200,
        "wires": [
            [
                "db5d17139cddf4fc"
            ]
        ]
    },
    {
        "id": "bf70eba5de93bb5d",
        "type": "link in",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "name": "",
        "links": [
            "5742c17aa56d0b81",
            "70adc24cf8e1b75d"
        ],
        "x": 1345,
        "y": 50,
        "wires": [
            [
                "d0c56317552dc00a",
                "cca6bdbd713cab15"
            ]
        ]
    },
    {
        "id": "2bdf8ed9c5cfc716",
        "type": "ui_text",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "group": "8c8bf20c342c890a",
        "order": 2,
        "width": 6,
        "height": 2,
        "name": "",
        "label": "Velocidad",
        "format": "<font size =4px>{{msg.payload}} Hz",
        "layout": "col-center",
        "x": 2560,
        "y": 120,
        "wires": []
    },
    {
        "id": "fc8b30aa16df9d26",
        "type": "ui_text",
        "z": "84636ba2ba4b8fea",
        "g": "4d8509ae5df6e2f9",
        "group": "8c8bf20c342c890a",
        "order": 4,
        "width": 6,
        "height": 2,
        "name": "",
        "label": "Corriente Motor",
        "format": "<font size =4px>{{msg.payload}} A",
        "layout": "col-center",
        "x": 2580,
        "y": 180,
        "wires": []
    },
    {
        "id": "5dd6cec381ec5f58",
        "type": "eth-ip in",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "Activacion_Bit_Vigilante_de_Tension",
        "program": "",
        "name": "Activacion Bit Vigilante de Tension",
        "x": 1190,
        "y": 660,
        "wires": [
            [
                "18e1cc57a90b61b2"
            ]
        ]
    },
    {
        "id": "be9ebd9679c36a52",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "Mensaje Vigilante de tensión en falla",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Falla alimentación entrada red 480VAC CCP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 640,
        "wires": [
            [
                "7768165e09c2a68a"
            ]
        ]
    },
    {
        "id": "7768165e09c2a68a",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1880,
        "y": 640,
        "wires": [
            [
                "530a4740ba755740"
            ]
        ]
    },
    {
        "id": "530a4740ba755740",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2040,
        "y": 640,
        "wires": [
            [
                "cd07a7b8b60f9dc8"
            ]
        ]
    },
    {
        "id": "cd07a7b8b60f9dc8",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "Evento Vigilante de tensión en falla",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Falla alimentación entrada red 480VAC CCP",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ESTADO CCP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2270,
        "y": 640,
        "wires": [
            [
                "5d5767109263df02"
            ]
        ]
    },
    {
        "id": "5d5767109263df02",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "links": [
            "1802b7d423c0faa4"
        ],
        "x": 2455,
        "y": 640,
        "wires": []
    },
    {
        "id": "97f05e57388d9d26",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "Mensaje Vigilante de tensión sin falla",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Alimentación entrada red 480VAC CCP - Normalizada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1640,
        "y": 680,
        "wires": [
            [
                "0b0c89d060b75469"
            ]
        ]
    },
    {
        "id": "0b0c89d060b75469",
        "type": "ui_toast",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1880,
        "y": 680,
        "wires": [
            [
                "be3bc6513d1cb079"
            ]
        ]
    },
    {
        "id": "be3bc6513d1cb079",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2040,
        "y": 680,
        "wires": [
            [
                "d6c636bf5abdeb80"
            ]
        ]
    },
    {
        "id": "d6c636bf5abdeb80",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "Evento Vigilante de tensión sin falla",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Alimentación entrada red 480VAC CCP - Normalizada",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ESTADO CCP",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2270,
        "y": 680,
        "wires": [
            [
                "a009825b9c3ac27e"
            ]
        ]
    },
    {
        "id": "a009825b9c3ac27e",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "links": [
            "1802b7d423c0faa4"
        ],
        "x": 2455,
        "y": 680,
        "wires": []
    },
    {
        "id": "18e1cc57a90b61b2",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "bc275a3cd7d476c7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1410,
        "y": 660,
        "wires": [
            [
                "be9ebd9679c36a52"
            ],
            [
                "97f05e57388d9d26"
            ]
        ]
    },
    {
        "id": "418048d5263b818a",
        "type": "eth-ip in",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "STATUS_INSTRUMENTO_CH.0",
        "program": "",
        "name": "Instrumento PIT OK",
        "x": 1670,
        "y": 650,
        "wires": [
            [
                "0894ca020d122006",
                "177fc935df87860c"
            ]
        ]
    },
    {
        "id": "0894ca020d122006",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Status PIT",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1870,
        "y": 620,
        "wires": [
            [
                "6d48f78997dd77d4"
            ],
            [
                "0aa6e8436bf0079a"
            ]
        ]
    },
    {
        "id": "6d48f78997dd77d4",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Mensaje PIT en falla",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Falla de alimentación eléctrica transmisor de presión PT-00960 manifold",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2060,
        "y": 600,
        "wires": [
            [
                "b5db7320049014d8"
            ]
        ]
    },
    {
        "id": "b5db7320049014d8",
        "type": "ui_toast",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2260,
        "y": 600,
        "wires": [
            [
                "dbf6467b9adaacf4"
            ]
        ]
    },
    {
        "id": "dbf6467b9adaacf4",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2430,
        "y": 600,
        "wires": [
            [
                "03548fbdda10483c",
                "ba65515a107156dd"
            ]
        ]
    },
    {
        "id": "03548fbdda10483c",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Evento instrumento PIT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Falla de alimentación eléctrica transmisor de presión PT-00960 manifold",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ESTADO INSTRUMENTO PIT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2630,
        "y": 600,
        "wires": [
            [
                "991eb055c9a9be2b"
            ]
        ]
    },
    {
        "id": "991eb055c9a9be2b",
        "type": "link out",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "links": [
            "59e817c2.295b38",
            "8be5483005b96d16"
        ],
        "x": 2785,
        "y": 600,
        "wires": []
    },
    {
        "id": "34b1e89fd40139d2",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Mensaje FIT en falla",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Falla de alimentación eléctrica en transmisor de flujo FIT-00960",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2060,
        "y": 730,
        "wires": [
            [
                "a56d3ba5862abf40"
            ]
        ]
    },
    {
        "id": "a56d3ba5862abf40",
        "type": "ui_toast",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2260,
        "y": 730,
        "wires": [
            [
                "4e9d9a11bbb1cce7"
            ]
        ]
    },
    {
        "id": "4e9d9a11bbb1cce7",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2430,
        "y": 730,
        "wires": [
            [
                "113428dcf1574e20"
            ]
        ]
    },
    {
        "id": "113428dcf1574e20",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Evento instrumento FIT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Falla de alimentación eléctrica en transmisor de flujo FIT-00960",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ESTADO INSTRUMENTO FIT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2630,
        "y": 730,
        "wires": [
            [
                "dd0bfe62af67d677"
            ]
        ]
    },
    {
        "id": "dd0bfe62af67d677",
        "type": "link out",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "links": [
            "59e817c2.295b38",
            "8be5483005b96d16"
        ],
        "x": 2785,
        "y": 730,
        "wires": []
    },
    {
        "id": "0946dbe8ddfa9a27",
        "type": "ui_toast",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2260,
        "y": 770,
        "wires": [
            [
                "83379dbdd4d088a8"
            ]
        ]
    },
    {
        "id": "83379dbdd4d088a8",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2430,
        "y": 770,
        "wires": [
            [
                "52d8b9ea7a07aef6"
            ]
        ]
    },
    {
        "id": "52d8b9ea7a07aef6",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Evento instrumento FIT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Transmisor de flujo FIT-00960 manifold normalizado",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ESTADO INSTRUMENTO FIT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2630,
        "y": 770,
        "wires": [
            [
                "a1cabd508d95e630"
            ]
        ]
    },
    {
        "id": "a1cabd508d95e630",
        "type": "link out",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "links": [
            "59e817c2.295b38",
            "6c2bad5b885f74fd"
        ],
        "x": 2785,
        "y": 770,
        "wires": []
    },
    {
        "id": "177fc935df87860c",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Status_Instrumento_PIT",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1940,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "0aa6e8436bf0079a",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Mensaje PIT OK",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Transmisor de presión PT-00960 manifold normalizado",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 640,
        "wires": [
            [
                "55d2b659bde5f7de"
            ]
        ]
    },
    {
        "id": "55d2b659bde5f7de",
        "type": "ui_toast",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2260,
        "y": 640,
        "wires": [
            [
                "907a88fdf15fe2da"
            ]
        ]
    },
    {
        "id": "907a88fdf15fe2da",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2430,
        "y": 640,
        "wires": [
            [
                "2ee2eed6916c1319"
            ]
        ]
    },
    {
        "id": "2ee2eed6916c1319",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Evento instrumento PIT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Transmisor de presión PT-00960 manifold normalizado",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "ESTADO INSTRUMENTO PIT",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2630,
        "y": 640,
        "wires": [
            [
                "a230ddb8aeaa2e12"
            ]
        ]
    },
    {
        "id": "a230ddb8aeaa2e12",
        "type": "link out",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "links": [
            "59e817c2.295b38",
            "6c2bad5b885f74fd"
        ],
        "x": 2785,
        "y": 640,
        "wires": []
    },
    {
        "id": "ba65515a107156dd",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Mensaje PIT Logica de shutdown",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Lógica de shutdown deshabilitada por falla en PT-00960 Manifold",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡LÓGICA DE SHUTDOWN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2500,
        "y": 550,
        "wires": [
            [
                "de419ae28bbac831"
            ]
        ]
    },
    {
        "id": "de419ae28bbac831",
        "type": "ui_toast",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ACEPTAR",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 2730,
        "y": 550,
        "wires": [
            [
                "566433ef16813084"
            ]
        ]
    },
    {
        "id": "566433ef16813084",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "ACEPTAR",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ACEPTAR",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2890,
        "y": 550,
        "wires": [
            [
                "78fe5a7d768cd80c"
            ]
        ]
    },
    {
        "id": "78fe5a7d768cd80c",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Evento instrumento PIT",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Lógica de shutdown deshabilitada por falla en PT-00960 Manifold",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3090,
        "y": 550,
        "wires": [
            [
                "92d91b2b89ea133a"
            ]
        ]
    },
    {
        "id": "92d91b2b89ea133a",
        "type": "link out",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "links": [
            "1802b7d423c0faa4"
        ],
        "x": 3235,
        "y": 550,
        "wires": []
    },
    {
        "id": "7f84d6e74b61bf17",
        "type": "udp out",
        "z": "e521d174e7104ca1",
        "name": "",
        "addr": "20.0.51.19",
        "iface": "",
        "port": "5505",
        "ipv": "udp4",
        "outport": "",
        "base64": false,
        "multicast": "false",
        "x": 310,
        "y": 60,
        "wires": []
    },
    {
        "id": "e88904c331526f79",
        "type": "inject",
        "z": "e521d174e7104ca1",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "Inicializar",
        "payloadType": "str",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "65c410c6a6c35ca1",
                "7f84d6e74b61bf17"
            ]
        ]
    },
    {
        "id": "65c410c6a6c35ca1",
        "type": "debug",
        "z": "e521d174e7104ca1",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 280,
        "y": 100,
        "wires": []
    },
    {
        "id": "161ade265a277369",
        "type": "udp in",
        "z": "e521d174e7104ca1",
        "name": "",
        "iface": "",
        "port": "5506",
        "ipv": "udp4",
        "multicast": "false",
        "group": "",
        "datatype": "utf8",
        "x": 80,
        "y": 250,
        "wires": [
            [
                "825496669e353b42"
            ]
        ]
    },
    {
        "id": "825496669e353b42",
        "type": "switch",
        "z": "e521d174e7104ca1",
        "name": "launching",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "launching",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 250,
        "wires": [
            [
                "649001416208992c"
            ]
        ]
    },
    {
        "id": "649001416208992c",
        "type": "delay",
        "z": "e521d174e7104ca1",
        "name": "",
        "pauseType": "delay",
        "timeout": "24",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 380,
        "y": 250,
        "wires": [
            [
                "e26466f3e6054e0e"
            ]
        ]
    },
    {
        "id": "e26466f3e6054e0e",
        "type": "delay",
        "z": "e521d174e7104ca1",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 540,
        "y": 250,
        "wires": [
            [
                "0704d033aef1972b",
                "d59a7910a658d9dc"
            ]
        ]
    },
    {
        "id": "0704d033aef1972b",
        "type": "function",
        "z": "e521d174e7104ca1",
        "name": "Cluster name",
        "func": "var loged = global.get(\"UserStatus\",\"memoryOnly\")||0;\nvar user;\nif (loged==0)user = \"Ninguno\";\nif (loged == 2) user = \"Operador\";\nif (loged == 1) user = \"Admin\";\nif (loged == 3) user = \"Root\";\n\nvar name_pozo = global.get(\"Input.Clustername\")||\"---\";\n\nmsg.payload = name_pozo + \"/ /\" +user;\nnode.status({fill:\"red\",shape:\"ring\",text:msg.payload});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 250,
        "wires": [
            [
                "f31d2d96337271ea",
                "884d07154c373c14",
                "9ce1d2c79a51036b"
            ]
        ]
    },
    {
        "id": "56fe9074a632b997",
        "type": "link in",
        "z": "e521d174e7104ca1",
        "name": "",
        "links": [
            "130d6c7b4ed4e80a"
        ],
        "x": 625,
        "y": 200,
        "wires": [
            [
                "0704d033aef1972b"
            ]
        ]
    },
    {
        "id": "02462e93ee68a2d8",
        "type": "link in",
        "z": "e521d174e7104ca1",
        "name": "",
        "links": [
            "27e5b49204d6a1d6",
            "e444a0fcd1328e6b"
        ],
        "x": 625,
        "y": 290,
        "wires": [
            [
                "0704d033aef1972b"
            ]
        ]
    },
    {
        "id": "f31d2d96337271ea",
        "type": "ui_template",
        "z": "e521d174e7104ca1",
        "group": "c5f05af1.a4c158",
        "name": "Nombre del pozo [Configuración clúster]",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(data) {\n            var elem = document.getElementById(\"headerStatus\")\n            if(elem !== null) {\n                elem.className = data.payload;\n                elem.innerHTML = data.payload;\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1020,
        "y": 250,
        "wires": [
            []
        ]
    },
    {
        "id": "9ce1d2c79a51036b",
        "type": "ui_template",
        "z": "e521d174e7104ca1",
        "group": "a706ea3d.b7fbc8",
        "name": "Nombre del pozo [Usuarios]",
        "order": 12,
        "width": 0,
        "height": 0,
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(data) {\n            var elem = document.getElementById(\"headerStatus\")\n            if(elem !== null) {\n                elem.className = data.payload;\n                elem.innerHTML = data.payload;\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 980,
        "y": 290,
        "wires": [
            []
        ]
    },
    {
        "id": "884d07154c373c14",
        "type": "ui_template",
        "z": "e521d174e7104ca1",
        "group": "0921035c8e83c6f3",
        "name": "Nombre del pozo [Despliegue general]",
        "order": 2,
        "width": "6",
        "height": "1",
        "format": "<script>\n    (function(scope) {\n        scope.$watch('msg', function(data) {\n            var elem = document.getElementById(\"headerStatus\")\n            if(elem !== null) {\n                elem.className = data.payload;\n                elem.innerHTML = data.payload;\n            }\n        });\n    })(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1010,
        "y": 210,
        "wires": [
            []
        ]
    },
    {
        "id": "6bb460a886cbe9a0",
        "type": "inject",
        "z": "e521d174e7104ca1",
        "g": "80e529568099f818",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payloadType": "date",
        "x": 150,
        "y": 360,
        "wires": [
            [
                "87857b683465f57d"
            ]
        ]
    },
    {
        "id": "87857b683465f57d",
        "type": "link out",
        "z": "e521d174e7104ca1",
        "g": "80e529568099f818",
        "name": "Refrescar datos",
        "links": [
            "a6c2dc5c222eeecc",
            "bbf14f174a3dc551",
            "7076d9dea2c20221",
            "35df64eb3de4bd1f",
            "b25efd376ee5f9cb",
            "ab1ca6b83aa28049",
            "feb2591b6dfeb717",
            "a0230928d0eeca41",
            "9ff6998a6f1ef7a1",
            "17dc55ccb105a5b8",
            "0cf47e78b5dd2816",
            "aa8b969698a20004",
            "0d5320beef504f1c",
            "e7741db0c516b97e",
            "ef9e9c0ea5b19048",
            "c083b24844b9286d",
            "0c8bc18042473d54",
            "cb9a6825c597474e",
            "15474171f57e9101",
            "98fead114b7a360f",
            "fe94f576e0e423f9",
            "57c98bdbe3e5e015",
            "bd69a1d2a9aacce2"
        ],
        "x": 255,
        "y": 360,
        "wires": []
    },
    {
        "id": "90cceaec75f88bb1",
        "type": "ui_template",
        "z": "e521d174e7104ca1",
        "group": "",
        "name": "Zona superior dashboard",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<script id=\"clockScript1\" type=\"text/javascript\">\n    var clockInterval;\n    $(function () {\n        if (clockInterval) return;\n\n        //add logo\n        var div1 = $('<div/>');\n        var logo = new Image();\n        var user =new Image();\n        logo.src = 'http://aic.local:1880/swcpro-images/logoBCPGroup_bordeado.png'\n        logo.height = 60;\n        div1[0].style.margin = '5px auto';\n\n        div1.append(logo);\n        \n        //add clock\n        var div2 = $('<div/>');\n        var p = $('<p/>');\n\n        div2.append(p);\n        div2[0].style.margin = '10px auto';\n        \n        function displayTime() {\n        //p.text(new Date().getDate() + '/' + (new Date().getMonth()+1) + '/' + new Date().getFullYear() + ', ' + new Date().getHours() + ':' +(new Date().getMinutes()>9 ?\n        //new Date().getMinutes() : ('0'+new Date().getMinutes()) ) + ':' + (new Date().getSeconds()>9 ? new Date().getSeconds() : ('0'+new Date().getSeconds()) ));\n        p.text(formatDate());\n        //p.text(new Date().toLocaleString());\n        }\n\n        function formatDate(){\n            var date = new Date(); var day = date.getDate(); var month = date.getMonth()+1; var year = date.getFullYear(); var hour = date.getHours(); var minutes = date.getMinutes();\n            if (month == 1) month = \"enero\"; if (month == 2) month = \"febrero\"; if (month == 3) month = \"marzo\"; if (month == 4) month = \"abril\"; if (month == 5) month = \"mayo\";\n            if (month == 6) month = \"junio\"; if (month == 7) month = \"julio\"; if (month == 8) month = \"agosto\"; if (month == 9) month = \"septiem.\"; if (month == 10) month = \"octubre\";\n            if (month == 11) month = \"noviem.\"; if (month == 12) month = \"diciem.\";\n            var stringdate = day + \" de \" + month + \" \" + year + \"; \" + hour + \":\" + (minutes < 10 ? (\"0\"+minutes) : minutes);\n            return stringdate;\n        }\n        \n        clockInterval = setInterval(displayTime, 10000);\n        \n        \n        var div3=$('<div />');\n        var pol = $('<p id=\"headerStatus\" />');\n        \n        div3[0].style.margin = '5px 5px 5px auto';\n        div3.append(pol);\n        \n        //add to toolbar when it's available\n        var addToToolbarTimer;\n        \n        function addToToolbar() {\n            var toolbar = $('.md-toolbar-tools');\n\n            if(!toolbar.length) return;\n            toolbar.append(div3);\n            toolbar.append(div2);\n            toolbar.append(div1);\n            clearInterval(addToToolbarTimer);\n        }\n        addToToolbarTimer = setInterval(addToToolbar, 5000);\n    });\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "x": 970,
        "y": 150,
        "wires": [
            []
        ]
    },
    {
        "id": "27e5b49204d6a1d6",
        "type": "link out",
        "z": "827787d0.ede678",
        "g": "fc7ac26950eab4f6",
        "name": "Usuario actual",
        "links": [
            "31c11db01979b2fc",
            "f57c6beca1b20786",
            "71ed49611e336397",
            "02462e93ee68a2d8"
        ],
        "x": 885,
        "y": 720,
        "wires": []
    },
    {
        "id": "ad1cd38b848d5ff7",
        "type": "switch",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "deleting?",
        "property": "#:(memoryOnly)::deleting",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1820,
        "y": 250,
        "wires": [
            [],
            [
                "901c6735c8cd4585"
            ]
        ]
    },
    {
        "id": "23b5193babb35890",
        "type": "change",
        "z": "827787d0.ede678",
        "g": "eb91dac5.690838",
        "name": "delete",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::deleting",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d59a7910a658d9dc",
        "type": "link out",
        "z": "e521d174e7104ca1",
        "name": "iniciar graf",
        "links": [
            "2947963f35e86aaf",
            "3fb6eebb29b79083",
            "437a143ee277e7e8",
            "753de0dd4495c539",
            "7c43f4c3c1f68685",
            "90d240c4618a5ff3",
            "ddea838222e6e2cc",
            "5c5c6097c3eb7f0b",
            "9a0748da886ab55b",
            "04b67cfaf68ce34c",
            "7bce9a88e042c4b7",
            "4d6efa974a0b3102"
        ],
        "x": 625,
        "y": 160,
        "wires": []
    },
    {
        "id": "3a346d956e544683",
        "type": "comment",
        "z": "e521d174e7104ca1",
        "name": "Leer Importante",
        "info": "En pantalla debe ejecutarse aplicación:\nhttps://github.com/BCP-Group/CILA_AIC_LAUNCHER.git",
        "x": 600,
        "y": 60,
        "wires": []
    },
    {
        "id": "2fa511fe.c77c8e",
        "type": "function",
        "z": "9f97d888.bf2cb8",
        "name": "pos",
        "func": "var rutaSCPselector = env.get(\"rutaSCPselector\");\nvar despla = global.get(rutaSCPselector, \"memoryOnly\") || 0;\nvar SCP = env.get(\"position\") + despla;\nvar disponible = global.get(\"Cluster[\" + (SCP - 1) + \"].Disponible\") || \"No\";\nvar enabled = disponible == \"No\" ? false : true;\nvar status = global.get(\"Cluster.SCP\" + SCP + \".VSD.Estado\", \"memoryOnly\") || 5;\nvar stsmemory = global.get(\"Cluster.SCP\" + SCP + \".VSD.Disponible\",\"memoryOnly\")||false;\nglobal.set(\"SCP\",SCP,\"memoryOnly\");\nif (!stsmemory) enabled = false;\n//\nvar Nombre_del_Pozo = SCP + \": \" + (global.get(\"Cluster[\" + (SCP - 1) + \"].Nombre\") || \"\");\n//\nvar Unidades = global.get(\"Cluster[\" + (SCP - 1) + \"].ALS\") || null;\nvar velocidad;\nif (enabled && status != 4) {\n    if (Unidades == \"ESP\") {\n        velocidad = (global.get(\"Cluster.SCP\" + SCP + \".VSD.Frecuencia\", \"memoryOnly\") || 0).toFixed(1) + \" \" + \"Hz\";\n    } else if (Unidades == \"PCP\") {\n        velocidad = (global.get(\"Cluster.SCP\" + SCP + \".VSD.RPM\", \"memoryOnly\") || 0).toFixed(0) + \" \" + \"RPM\";\n    }\n}\nelse velocidad = \"---\";\n\nvar led = enabled ? getAlert(status) : \"Deshabilitado\";\n// VSD\nvar corrienteVSD    = global.get(\"Cluster.SCP\" + SCP + \".VSD.Corriente_VSD\", \"memoryOnly\") || 0;\nvar potenciaVSD     = global.get(\"Cluster.SCP\" + SCP + \".VSD.Potencia_Actual\", \"memoryOnly\") || 0;\nvar voltajeVSD      = global.get(\"Cluster.SCP\" + SCP + \".VSD.Voltaje_VSD\", \"memoryOnly\") || 0;\nvar voltajeMotor    = global.get(\"Cluster.SCP\" + SCP + \".VSD.Voltaje_Motor\", \"memoryOnly\") || 0;\nvar corrienteMotor  = global.get(\"Cluster.SCP\" + SCP + \".VSD.Corriente_Motor\", \"memoryOnly\") || 0;\nvar BusDC           = global.get(\"Cluster.SCP\" + SCP + \".VSD.Voltaje_Bus_DC\", \"memoryOnly\") || 0;\n\n//Instrumentación\nvar THP         = global.get(\"Cluster.SCP\" + SCP + \".INST.THP_PIT_PV\", \"memoryOnly\") || 0;\nvar THT         = global.get(\"Cluster.SCP\" + SCP + \".INST.THT_TIT_PV\", \"memoryOnly\") || 0;\n\n// Fondo\nvar EngineTemp  = global.get(\"Cluster.SCP\" + SCP + \".DHOLE.Temperatura_Motor\", \"memoryOnly\") || 0;\nvar IntakeTemp  = global.get(\"Cluster.SCP\" + SCP + \".DHOLE.Temperatura_Entrada\", \"memoryOnly\") || 0;\nvar PIP         = global.get(\"Cluster.SCP\" + SCP + \".DHOLE.PIP\", \"memoryOnly\") || 0;\nvar PDP         = global.get(\"Cluster.SCP\" + SCP + \".DHOLE.PDP\", \"memoryOnly\") || 0;\nvar DischTemp   = global.get(\"Cluster.SCP\" + SCP + \".DHOLE.Temperatura_Descarga\", \"memoryOnly\") || 0;\nvar GenVibra    = global.get(\"Cluster.SCP\" + SCP + \".DHOLE.Vibracion\", \"memoryOnly\") || 0;\nvar Fuga        = global.get(\"Cluster.SCP\" + SCP + \".DHOLE.Corriente_Fuga\", \"memoryOnly\") || 0;\nvar Vibracion_X = global.get(\"Cluster.SCP\" + SCP + \".DHOLE.Vibracion_Eje_X\", \"memoryOnly\") || 0;\nvar Vibracion_Y = global.get(\"Cluster.SCP\" + SCP + \".DHOLE.Vibracion_Eje_Y\", \"memoryOnly\") || 0;\nvar Vibracion_Z = global.get(\"Cluster.SCP\" + SCP + \".DHOLE.Vibracion_Eje_Z\", \"memoryOnly\") || 0;\n\nreturn [\n    { payload: Nombre_del_Pozo, enabled: enabled },\n    { payload: disponible, enabled: enabled },\n    { payload: velocidad, enabled: enabled },\n    { payload: catchdisabled(voltajeVSD, 1,\"V\"), enabled: enabled },\n    { payload: catchdisabled(corrienteVSD, 1,\"A\"), enabled: enabled },\n    { payload: catchdisabled(potenciaVSD, 1,\"KW\"), enabled: enabled },\n    { payload: catchdisabled(voltajeMotor, 1,\"V\"), enabled: enabled },\n    { payload: catchdisabled(corrienteMotor, 1,\"A\"), enabled: enabled },\n    { payload: catchdisabled(PIP, 1,\"psi\"), enabled: enabled },\n    { payload: catchdisabled(THP, 1,\"psi\"), enabled: enabled },\n    { payload: catchdisabled(THT, 1,\"ºF\"), enabled: enabled },\n    { payload: catchdisabled(BusDC, 1,\"V\"), enabled: enabled },\n    { payload: catchdisabled(EngineTemp, 1,\"ºF\"), enabled: enabled },\n    { payload: catchdisabled(IntakeTemp, 1,\"ºF\"), enabled: enabled },\n    { payload: catchdisabled(GenVibra, 2,\"G\"), enabled: enabled },\n    { payload: catchdisabled(Fuga, 2,\"mA\"), enabled: enabled },\n    { payload: catchdisabled(DischTemp, 1,\"ºF\"), enabled: enabled },\n    { payload: catchdisabled(PDP, 0,\"psi\"), enabled: enabled },\n    { payload: Unidades, enabled: enabled },\n    { payload: catchdisabled(Vibracion_X, 2, \"G\"), enabled: enabled },\n    { payload: catchdisabled(Vibracion_Y, 2, \"G\"), enabled: enabled },\n    { payload: catchdisabled(Vibracion_Z, 2, \"G\"), enabled: enabled }\n]\n\nfunction catchdisabled(variable, dec,units) {\n    return enabled && status != 4 ? (parseFloat(variable.toFixed(dec)) + \" \" + units) : \"---\";\n}\n\nfunction getAlert(estatus) {\n    var resp = \"\";\n    switch (estatus) {\n        case 0:\n            resp = \"Equipo operativo!\";\n            break;\n\n        case 1:\n            resp = \"Equipo detenido!\";\n            break;\n\n        case 2:\n            resp = \"VSD Alarma\";\n            break;\n\n        case 3:\n            resp = \"VSD Falla!\";\n            break;\n\n        case 4:\n            resp = \"VSD Falla COMM\";\n            break;\n\n        case 5:\n            resp = \"Equipo Apagado\";\n            break;\n\n        case 6:\n            resp = \"VSD Sin Tension\";\n            break;\n    }\n    return resp\n}",
        "outputs": 22,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 130,
        "wires": [
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [
                "5f0f862c.a007a8"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "5f0f862c.a007a8",
        "type": "switch",
        "z": "9f97d888.bf2cb8",
        "name": "ALS",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ESP",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PCP",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 350,
        "y": 210,
        "wires": [
            [
                "7056c43c824d8355"
            ],
            [
                "8c2400b3a4a6e0d3"
            ],
            [
                "dabb508d.a5ddf"
            ]
        ]
    },
    {
        "id": "dabb508d.a5ddf",
        "type": "template",
        "z": "9f97d888.bf2cb8",
        "name": "UNDEF",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n            <!--<div class=\"col\">-->\n                <h6><span class=\"badge badge-secondary\">Sin asignar</span></h6>\n                <!-- <img src=\"http://localhost:1880/swcpro-images/hlogo.png\" style=\"width:50%;\">-->\n            <!--</div>-->\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/ESP.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 740,
        "y": 230,
        "wires": [
            []
        ]
    },
    {
        "id": "2a50827a3f7af931",
        "type": "subflow:9f97d888.bf2cb8",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "name": "SCP1",
        "env": [
            {
                "name": "position",
                "value": "1",
                "type": "num"
            },
            {
                "name": "rutaSCPselector",
                "value": "Navegacionaux.principal",
                "type": "str"
            }
        ],
        "x": 360,
        "y": 280,
        "wires": [
            [
                "95efdd10e4932dd6"
            ],
            [
                "821d9be0ddb497ac"
            ],
            [
                "f151ef75ee689f12"
            ],
            [
                "1971c53732ba9843"
            ],
            [
                "f0e67f4f0d829127"
            ],
            [
                "c4cd163112c9c257"
            ],
            [
                "357c4e57e594ef65"
            ],
            [
                "f398db3e910a7124"
            ],
            [
                "843e8ecefd58da7f"
            ],
            [
                "a4d4d93e835a326b"
            ],
            [
                "06245e5bbc124fe4"
            ],
            [
                "1c9102315cfb9531"
            ],
            [
                "e5d02252158d5a07"
            ],
            [
                "0795ef62c6cdf22b"
            ],
            [],
            [],
            [],
            [],
            [
                "29bb553b5154ac9a"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "b22ff88f14cdc2c9",
        "type": "link in",
        "z": "dcee4298f5de57d2",
        "g": "b8537f731ac9a09a",
        "name": "",
        "links": [
            "449b37406b29dc93"
        ],
        "x": 125,
        "y": 750,
        "wires": [
            [
                "b0f0100dece46923"
            ]
        ]
    },
    {
        "id": "b0f0100dece46923",
        "type": "change",
        "z": "dcee4298f5de57d2",
        "g": "b8537f731ac9a09a",
        "name": "init nav pral",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegacionaux.principal",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 750,
        "wires": [
            [
                "cc344bb71296453d"
            ]
        ]
    },
    {
        "id": "60699e0b54e92ff4",
        "type": "link out",
        "z": "dcee4298f5de57d2",
        "g": "b8537f731ac9a09a",
        "name": "",
        "links": [
            "5d2602e2.edde2c",
            "12f5a21.640115e",
            "75d170e.6aca29",
            "ad0ab6a2.3df868",
            "82f329ab.34e0e8",
            "3711ec87.550724",
            "92f1c259.a4c0e",
            "f4884d0f.b1f14",
            "fb2c57dc.220888",
            "489679e0.836f98",
            "a70d3a96.909ad8",
            "c91673ec5dacc4a2",
            "dd5b88beb35b395f"
        ],
        "x": 815,
        "y": 750,
        "wires": []
    },
    {
        "id": "843e8ecefd58da7f",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "order": 13,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "P. entrada",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 600,
        "y": 340,
        "wires": []
    },
    {
        "id": "a4d4d93e835a326b",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "order": 11,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "PIT",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 590,
        "y": 380,
        "wires": []
    },
    {
        "id": "06245e5bbc124fe4",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "order": 12,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "TIT",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 590,
        "y": 420,
        "wires": []
    },
    {
        "id": "1c9102315cfb9531",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "order": 10,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Bus DC",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 600,
        "y": 460,
        "wires": []
    },
    {
        "id": "e5d02252158d5a07",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "order": 9,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "T. motor",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 600,
        "y": 500,
        "wires": []
    },
    {
        "id": "0795ef62c6cdf22b",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "group": "04c0fe5a58c91c22",
        "order": 14,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "T. entrada",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 600,
        "y": 540,
        "wires": []
    },
    {
        "id": "feb2591b6dfeb717",
        "type": "link in",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "name": "",
        "links": [
            "87857b683465f57d"
        ],
        "x": 125,
        "y": 280,
        "wires": [
            [
                "0fb279837faa347f"
            ]
        ]
    },
    {
        "id": "0fb279837faa347f",
        "type": "switch",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "name": "Pantalla?",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Despliegue general",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 220,
        "y": 280,
        "wires": [
            [
                "2a50827a3f7af931"
            ]
        ]
    },
    {
        "id": "821d9be0ddb497ac",
        "type": "link out",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "name": "",
        "links": [
            "112ec72e4a22b13f"
        ],
        "x": 485,
        "y": 100,
        "wires": []
    },
    {
        "id": "7056c43c824d8355",
        "type": "function",
        "z": "9f97d888.bf2cb8",
        "name": "ESP Status - SCP",
        "func": "var rutaSCPselector = env.get(\"rutaSCPselector\");\nvar despla = global.get(rutaSCPselector, \"memoryOnly\") || 0;\nvar SCP = env.get(\"position\") + despla;\nvar Estado_VSD = global.get(\"Cluster.SCP\" + SCP + \".VSD.Estado\",\"memoryOnly\");\nif(Estado_VSD == 0)\n    msg.Detenido = \"BES DETENIDA\";\nelse if (Estado_VSD == 1)\n    msg.Operativo = \"BES EN MARCHA\";\nelse if(Estado_VSD == 2)\n    msg.Alarma = \"BES EN ALARMA\";\nelse if(Estado_VSD == 3)\n    msg.Falla = \"BES EN FALLA\";\nelse if(Estado_VSD == 4)\n    msg.Comunicacion = \"BES FALLA COMUNICACION\";\nelse if(Estado_VSD == 5)\n    msg.Apagado = \"BES APAGADO\";\nelse\n    msg.Nodisp = \"BES NO DISPONIBLE\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 160,
        "wires": [
            [
                "f19d22c110b0dee6"
            ]
        ]
    },
    {
        "id": "8c2400b3a4a6e0d3",
        "type": "function",
        "z": "9f97d888.bf2cb8",
        "name": "PCP Status - SCP",
        "func": "var rutaSCPselector = env.get(\"rutaSCPselector\");\nvar despla = global.get(rutaSCPselector, \"memoryOnly\") || 0;\nvar SCP = env.get(\"position\") + despla;\nvar Estado_VSD = global.get(\"Cluster.SCP\" + SCP + \".VSD.Estado\", \"memoryOnly\");\nif (Estado_VSD == 0)\n    msg.Detenido = \"PCP DETENIDA\";\nelse if (Estado_VSD == 1)\n    msg.Operativo = \"PCP EN MARCHA\";\nelse if (Estado_VSD == 2)\n    msg.Alarma = \"PCP EN ALARMA\";\nelse if (Estado_VSD == 3)\n    msg.Falla = \"PCP EN FALLA\";\nelse if (Estado_VSD == 4)\n    msg.Comunicacion = \"PCP FALLA COMUNICACION\";\nelse if (Estado_VSD == 5)\n    msg.Apagado = \"BES APAGADO\";\nelse\n    msg.Nodisp = \"PCP NO DISPONIBLE\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 200,
        "wires": [
            [
                "f19d22c110b0dee6"
            ]
        ]
    },
    {
        "id": "f19d22c110b0dee6",
        "type": "template",
        "z": "9f97d888.bf2cb8",
        "name": "Status ESP SCP 1",
        "field": "template",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n            <h6><span class=\"badge badge-success\">{{Operativo}}</span></h6>\n            <h6><span class=\"badge badge-danger\">{{Falla}}</span></h6>\n            <h6><span class=\"badge badge-warning\">{{Alarma}}</span></h6>\n            <h6><span class=\"badge badge-info\">{{Comunicacion}}</span></h6>\n            <h6><span class=\"badge badge-secondary\">{{Detenido}}</span></h6>\n            <h6><span class=\"badge badge-primary\">{{Nodisp}}</span></h6>\n            <h6><span class=\"badge badge-dark\">{{Apagado}}</span></h6>\n\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 710,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4658098e99000b6b",
        "type": "switch",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "name": "Pantalla?",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Despliegue general",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 980,
        "y": 220,
        "wires": [
            [
                "468735a3363946df"
            ]
        ]
    },
    {
        "id": "a0230928d0eeca41",
        "type": "link in",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "name": "",
        "links": [
            "87857b683465f57d"
        ],
        "x": 885,
        "y": 220,
        "wires": [
            [
                "4658098e99000b6b"
            ]
        ]
    },
    {
        "id": "468735a3363946df",
        "type": "subflow:9f97d888.bf2cb8",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "name": "SCP2",
        "env": [
            {
                "name": "position",
                "value": "2",
                "type": "num"
            },
            {
                "name": "rutaSCPselector",
                "value": "Navegacionaux.principal",
                "type": "str"
            }
        ],
        "x": 1120,
        "y": 220,
        "wires": [
            [
                "20146e27f081f2f5"
            ],
            [],
            [
                "76b343739d5d83d3"
            ],
            [
                "bb7c17b43dc01971"
            ],
            [
                "952e7831f8ba38da"
            ],
            [
                "6befad24b902ee83"
            ],
            [
                "3c41753814bbff34"
            ],
            [
                "70b9003a66d74660"
            ],
            [
                "c2f95795d38b15b4"
            ],
            [
                "9f80e76bb214c53e"
            ],
            [
                "f8fd7eee237caf88"
            ],
            [
                "d76dff8f74dbb40b"
            ],
            [
                "610bc39c43b63394"
            ],
            [
                "7a0c3503923f7963"
            ],
            [],
            [],
            [],
            [],
            [
                "081cafd2b18a8c0b"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "c2f95795d38b15b4",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "order": 13,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "P. entrada",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 1410,
        "y": 340,
        "wires": []
    },
    {
        "id": "9f80e76bb214c53e",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "order": 11,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "PIT",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 1400,
        "y": 380,
        "wires": []
    },
    {
        "id": "f8fd7eee237caf88",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "order": 12,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "TIT",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 1400,
        "y": 420,
        "wires": []
    },
    {
        "id": "d76dff8f74dbb40b",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "order": 10,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Bus DC",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 1410,
        "y": 460,
        "wires": []
    },
    {
        "id": "610bc39c43b63394",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "order": 9,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "T. motor",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 1410,
        "y": 500,
        "wires": []
    },
    {
        "id": "7a0c3503923f7963",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "group": "8383e0d6be75437c",
        "order": 14,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "T. entrada",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 1410,
        "y": 540,
        "wires": []
    },
    {
        "id": "9ff6998a6f1ef7a1",
        "type": "link in",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "name": "",
        "links": [
            "87857b683465f57d"
        ],
        "x": 1685,
        "y": 210,
        "wires": [
            [
                "75718ac42ef4fefc"
            ]
        ]
    },
    {
        "id": "75718ac42ef4fefc",
        "type": "switch",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "name": "Pantalla?",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Despliegue general",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1790,
        "y": 210,
        "wires": [
            [
                "757142fa2f461483"
            ]
        ]
    },
    {
        "id": "757142fa2f461483",
        "type": "subflow:9f97d888.bf2cb8",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "name": "SCP3",
        "env": [
            {
                "name": "position",
                "value": "3",
                "type": "num"
            },
            {
                "name": "rutaSCPselector",
                "value": "Navegacionaux.principal",
                "type": "str"
            }
        ],
        "x": 1920,
        "y": 210,
        "wires": [
            [
                "dd9e0e91a716fe95"
            ],
            [],
            [
                "0c3c00860e527ec9"
            ],
            [
                "67d6bef6d812233c"
            ],
            [
                "8270a86bf4c4117c"
            ],
            [
                "11914dc48622820b"
            ],
            [
                "4c9bd0aeb0e2a492"
            ],
            [
                "8a72ed007ec0bbd6"
            ],
            [
                "1319c225b52c8337"
            ],
            [
                "5741ce45918551a6"
            ],
            [
                "f52712eb8d047187"
            ],
            [
                "91ef17fe5822adfc"
            ],
            [
                "d9fc8e1b8c8ba9cf"
            ],
            [
                "eb893e6cd74834b7"
            ],
            [],
            [],
            [],
            [],
            [
                "09a2fe0707ac9cef"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "1319c225b52c8337",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "order": 13,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "P. entrada",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 2190,
        "y": 340,
        "wires": []
    },
    {
        "id": "5741ce45918551a6",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "order": 11,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "PIT",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 2180,
        "y": 380,
        "wires": []
    },
    {
        "id": "f52712eb8d047187",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "order": 12,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "TIT",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 2180,
        "y": 420,
        "wires": []
    },
    {
        "id": "91ef17fe5822adfc",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "order": 10,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Bus DC",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 2190,
        "y": 460,
        "wires": []
    },
    {
        "id": "d9fc8e1b8c8ba9cf",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "order": 9,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "T. motor",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 2190,
        "y": 500,
        "wires": []
    },
    {
        "id": "eb893e6cd74834b7",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "group": "7b3e660828c01ed0",
        "order": 14,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "T. entrada",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 2190,
        "y": 540,
        "wires": []
    },
    {
        "id": "d7440f14ce40e795",
        "type": "subflow:9f97d888.bf2cb8",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "name": "SCP4",
        "env": [
            {
                "name": "position",
                "value": "4",
                "type": "num"
            },
            {
                "name": "rutaSCPselector",
                "value": "Navegacionaux.principal",
                "type": "str"
            }
        ],
        "x": 2690,
        "y": 230,
        "wires": [
            [
                "98a97a63a6bb5b41"
            ],
            [],
            [
                "0707e99d923f37a2"
            ],
            [
                "bed2e7e74ac3b1ef"
            ],
            [
                "3b62e6fd6ccbfa18"
            ],
            [
                "be09dae2fbef4e6e"
            ],
            [
                "0a37be73420b7fe8"
            ],
            [
                "bf98e1b239b6dcc2"
            ],
            [
                "1f1b46b7ce05919d"
            ],
            [
                "b309a6a5ad58635e"
            ],
            [
                "93eb60ea83212d45"
            ],
            [
                "da9338d430e54c73"
            ],
            [
                "91212a984e2beb5f"
            ],
            [
                "f528f7baa7fa8d7f"
            ],
            [],
            [],
            [],
            [],
            [
                "4c8093fea15c33ac"
            ],
            [],
            [],
            []
        ]
    },
    {
        "id": "527c06e4d41d2bdb",
        "type": "switch",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "name": "Pantalla?",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Despliegue general",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2560,
        "y": 230,
        "wires": [
            [
                "d7440f14ce40e795"
            ]
        ]
    },
    {
        "id": "17dc55ccb105a5b8",
        "type": "link in",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "name": "",
        "links": [
            "87857b683465f57d"
        ],
        "x": 2455,
        "y": 230,
        "wires": [
            [
                "527c06e4d41d2bdb"
            ]
        ]
    },
    {
        "id": "1f1b46b7ce05919d",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "order": 13,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "P. entrada",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 2960,
        "y": 340,
        "wires": []
    },
    {
        "id": "b309a6a5ad58635e",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "order": 11,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "PIT",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 2950,
        "y": 380,
        "wires": []
    },
    {
        "id": "da9338d430e54c73",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "order": 10,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "Bus DC",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 2960,
        "y": 460,
        "wires": []
    },
    {
        "id": "91212a984e2beb5f",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "order": 9,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "T. motor",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 2960,
        "y": 500,
        "wires": []
    },
    {
        "id": "f528f7baa7fa8d7f",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "order": 14,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "T. entrada",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 2960,
        "y": 540,
        "wires": []
    },
    {
        "id": "93eb60ea83212d45",
        "type": "ui_text",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "group": "79da3138fb6677c1",
        "order": 12,
        "width": 3,
        "height": 2,
        "name": "",
        "label": "TIT",
        "format": "<font size =4px>{{msg.payload}} ",
        "layout": "col-center",
        "x": 2950,
        "y": 420,
        "wires": []
    },
    {
        "id": "37460a34c2618776",
        "type": "inject",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "name": "viewer",
        "props": [
            {
                "p": "enabled",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 2450,
        "y": 530,
        "wires": [
            [
                "ba157db276676859"
            ]
        ]
    },
    {
        "id": "9b21c692dbc99177",
        "type": "inject",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "name": "viewer",
        "props": [
            {
                "p": "enabled",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 1700,
        "y": 540,
        "wires": [
            [
                "93bd70a570662db5"
            ]
        ]
    },
    {
        "id": "2545a2c9037578c0",
        "type": "inject",
        "z": "dcee4298f5de57d2",
        "g": "6e58f0ae3fe125af",
        "name": "viewer",
        "props": [
            {
                "p": "enabled",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 950,
        "y": 450,
        "wires": [
            [
                "659ae12f0356cea2"
            ]
        ]
    },
    {
        "id": "63c685875964e413",
        "type": "inject",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "name": "viewer",
        "props": [
            {
                "p": "enabled",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 360,
        "y": 590,
        "wires": [
            [
                "b0a0856ce0a6a98e"
            ]
        ]
    },
    {
        "id": "aeece35ccc591620",
        "type": "comment",
        "z": "dcee4298f5de57d2",
        "g": "1c17956307e44e29",
        "name": "Leer Importante",
        "info": "Si no se visualizan los cajetines correc-\ntamente, `pulsar injects \"viewer\" en los\n4 grupos SCP",
        "x": 380,
        "y": 550,
        "wires": []
    },
    {
        "id": "c91673ec5dacc4a2",
        "type": "link in",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "name": "",
        "links": [
            "60699e0b54e92ff4",
            "39296a701cb39f3c"
        ],
        "x": 1605,
        "y": 490,
        "wires": [
            [
                "afe95b9080436748"
            ]
        ]
    },
    {
        "id": "dd5b88beb35b395f",
        "type": "link in",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "name": "",
        "links": [
            "60699e0b54e92ff4",
            "39296a701cb39f3c"
        ],
        "x": 2355,
        "y": 470,
        "wires": [
            [
                "abc219f2ed8515d1"
            ]
        ]
    },
    {
        "id": "abc219f2ed8515d1",
        "type": "switch",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "name": "SCP3",
        "property": "#:(memoryOnly)::Navegacionaux.principal",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "16",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2440,
        "y": 470,
        "wires": [
            [
                "eb3da2225a3bbe02"
            ],
            [
                "ba157db276676859"
            ]
        ]
    },
    {
        "id": "cc344bb71296453d",
        "type": "ui_dropdown",
        "z": "dcee4298f5de57d2",
        "g": "b8537f731ac9a09a",
        "name": "selección",
        "label": "<font size =3px;font color = purple>Seleccione un grupo de SCP para visualizar",
        "tooltip": "",
        "place": "Seleccione un grupo",
        "group": "0921035c8e83c6f3",
        "order": 1,
        "width": "18",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "SCP1 - SCP4",
                "value": 0,
                "type": "num"
            },
            {
                "label": "SCP5 - SCP8",
                "value": 4,
                "type": "num"
            },
            {
                "label": "SCP9 - SCP12",
                "value": 8,
                "type": "num"
            },
            {
                "label": "SCP13 - SCP16",
                "value": 12,
                "type": "num"
            },
            {
                "label": "SCP17 - SCP18",
                "value": 16,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 400,
        "y": 750,
        "wires": [
            [
                "740f53e30c4f0078"
            ]
        ]
    },
    {
        "id": "740f53e30c4f0078",
        "type": "change",
        "z": "dcee4298f5de57d2",
        "g": "b8537f731ac9a09a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegacionaux.principal",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 750,
        "wires": [
            [
                "60699e0b54e92ff4"
            ]
        ]
    },
    {
        "id": "da0c6a7f64bd0422",
        "type": "comment",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "name": "Leer Importante",
        "info": "Si no se visualizan los cajetines correc-\ntamente, `pulsar injects \"viewer\" en los\n4 grupos SCP",
        "x": 220,
        "y": 350,
        "wires": []
    },
    {
        "id": "a0f44da51d28e071",
        "type": "inject",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "name": "viewer",
        "props": [
            {
                "p": "enabled",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 200,
        "y": 450,
        "wires": [
            [
                "5e64a142de84ac39"
            ]
        ]
    },
    {
        "id": "999c38a49eeae4af",
        "type": "inject",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "name": "viewer",
        "props": [
            {
                "p": "enabled",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 900,
        "y": 450,
        "wires": [
            [
                "fba119f4cedc1546"
            ]
        ]
    },
    {
        "id": "452b70b9fe791a7f",
        "type": "inject",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "name": "viewer",
        "props": [
            {
                "p": "enabled",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 1650,
        "y": 450,
        "wires": [
            [
                "14e5c966f0ac7a55"
            ]
        ]
    },
    {
        "id": "e1c466c14e5d5103",
        "type": "inject",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "name": "viewer",
        "props": [
            {
                "p": "enabled",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 2370,
        "y": 450,
        "wires": [
            [
                "bffe69dd0beff361"
            ]
        ]
    },
    {
        "id": "5922dbb308812a60",
        "type": "link in",
        "z": "77e50510.f482bc",
        "g": "47c7e078aa019952",
        "name": "",
        "links": [
            "449b37406b29dc93"
        ],
        "x": 145,
        "y": 560,
        "wires": [
            [
                "b08573f5fa1c7169"
            ]
        ]
    },
    {
        "id": "b08573f5fa1c7169",
        "type": "change",
        "z": "77e50510.f482bc",
        "g": "47c7e078aa019952",
        "name": "init nav pral",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegacionaux.datosfondo",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 560,
        "wires": [
            [
                "9bf20bca3a15225d"
            ]
        ]
    },
    {
        "id": "9bf20bca3a15225d",
        "type": "ui_dropdown",
        "z": "77e50510.f482bc",
        "g": "47c7e078aa019952",
        "name": "selección",
        "label": "<font size =3px;font color = purple>Seleccione un grupo de SCP para visualizar",
        "tooltip": "",
        "place": "Seleccione un grupo",
        "group": "4bbd76540a4ed318",
        "order": 1,
        "width": "18",
        "height": "1",
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "SCP1 - SCP4",
                "value": 0,
                "type": "num"
            },
            {
                "label": "SCP5 - SCP8",
                "value": 4,
                "type": "num"
            },
            {
                "label": "SCP9 - SCP12",
                "value": 8,
                "type": "num"
            },
            {
                "label": "SCP13 - SCP16",
                "value": 12,
                "type": "num"
            },
            {
                "label": "SCP17 - SCP18",
                "value": 16,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 420,
        "y": 560,
        "wires": [
            [
                "89ff4bb15f48dd5b"
            ]
        ]
    },
    {
        "id": "89ff4bb15f48dd5b",
        "type": "change",
        "z": "77e50510.f482bc",
        "g": "47c7e078aa019952",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Navegacionaux.datosfondo",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 560,
        "wires": [
            [
                "9fd4a9ed252b6a9d"
            ]
        ]
    },
    {
        "id": "9fd4a9ed252b6a9d",
        "type": "link out",
        "z": "77e50510.f482bc",
        "g": "47c7e078aa019952",
        "name": "",
        "links": [
            "d25de6de0c651d64",
            "24235145d79127f3"
        ],
        "x": 875,
        "y": 560,
        "wires": []
    },
    {
        "id": "0cf47e78b5dd2816",
        "type": "link in",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "name": "",
        "links": [
            "87857b683465f57d"
        ],
        "x": 145,
        "y": 220,
        "wires": [
            [
                "f984444e3f0ca6ae"
            ]
        ]
    },
    {
        "id": "f984444e3f0ca6ae",
        "type": "switch",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "name": "Pantalla?",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Datos de fondo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 240,
        "y": 220,
        "wires": [
            [
                "c0e8b2a38c8e9384"
            ]
        ]
    },
    {
        "id": "c0e8b2a38c8e9384",
        "type": "subflow:9f97d888.bf2cb8",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "name": "SCP1",
        "env": [
            {
                "name": "position",
                "value": "1",
                "type": "num"
            },
            {
                "name": "rutaSCPselector",
                "value": "Navegacionaux.datosfondo",
                "type": "str"
            }
        ],
        "x": 370,
        "y": 220,
        "wires": [
            [
                "731f78948e165ee4"
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [
                "bdac1cda867bdcab"
            ],
            [],
            [],
            [],
            [
                "e5640f06a750ebcb"
            ],
            [
                "37163e74bd4b85e7"
            ],
            [],
            [
                "cf36016a415e7a37"
            ],
            [
                "a16ce9d88bfe2b25"
            ],
            [
                "140d811fb12cab05"
            ],
            [],
            [
                "a5be9e647a1b2f3b"
            ],
            [
                "fa1c1388f6ea6d9e"
            ],
            [
                "88cdc40fe1b37fa5"
            ]
        ]
    },
    {
        "id": "e4bcafa88fdee7a8",
        "type": "switch",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "name": "Pantalla?",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Datos de fondo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 220,
        "wires": [
            [
                "b0cefaad1317dbb0"
            ]
        ]
    },
    {
        "id": "aa8b969698a20004",
        "type": "link in",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "name": "",
        "links": [
            "87857b683465f57d"
        ],
        "x": 825,
        "y": 220,
        "wires": [
            [
                "e4bcafa88fdee7a8"
            ]
        ]
    },
    {
        "id": "b0cefaad1317dbb0",
        "type": "subflow:9f97d888.bf2cb8",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "name": "SCP2",
        "env": [
            {
                "name": "position",
                "value": "2",
                "type": "num"
            },
            {
                "name": "rutaSCPselector",
                "value": "Navegacionaux.datosfondo",
                "type": "str"
            }
        ],
        "x": 1060,
        "y": 220,
        "wires": [
            [
                "393452c83811ec62"
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [
                "2195733359b0c0ff"
            ],
            [],
            [],
            [],
            [
                "695d5c290ba4a321"
            ],
            [
                "9c1c13f0850b6142"
            ],
            [],
            [
                "cb712cd4a0c9a16a"
            ],
            [
                "f1bfe8f2f2eb0f62"
            ],
            [
                "d72d7c062d4d29c7"
            ],
            [],
            [
                "a6b7268ff5be11dc"
            ],
            [
                "4b85a9e2790b7bae"
            ],
            [
                "7ff2646d70c075ac"
            ]
        ]
    },
    {
        "id": "299beb21057a53c6",
        "type": "switch",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "name": "Pantalla?",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Datos de fondo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1640,
        "y": 220,
        "wires": [
            [
                "799f45ffce7d8ae1"
            ]
        ]
    },
    {
        "id": "0d5320beef504f1c",
        "type": "link in",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "name": "",
        "links": [
            "87857b683465f57d"
        ],
        "x": 1535,
        "y": 220,
        "wires": [
            [
                "299beb21057a53c6"
            ]
        ]
    },
    {
        "id": "799f45ffce7d8ae1",
        "type": "subflow:9f97d888.bf2cb8",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "name": "SCP3",
        "env": [
            {
                "name": "position",
                "value": "3",
                "type": "num"
            },
            {
                "name": "rutaSCPselector",
                "value": "Navegacionaux.datosfondo",
                "type": "str"
            }
        ],
        "x": 1770,
        "y": 220,
        "wires": [
            [
                "cade0b57011f86d9"
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [
                "25d6918b6db7b666"
            ],
            [],
            [],
            [],
            [
                "d628812c7bd251e5"
            ],
            [
                "17590db1c0418c14"
            ],
            [],
            [
                "94dee28cfda89e7a"
            ],
            [
                "11e471a9e2260188"
            ],
            [
                "841b81a75dbd3795"
            ],
            [],
            [
                "88e528e757b091ac"
            ],
            [
                "74909346a2727647"
            ],
            [
                "d4afa70e71dfe781"
            ]
        ]
    },
    {
        "id": "a6bb77d2abf09c49",
        "type": "switch",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "name": "Pantalla?",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Datos de fondo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2330,
        "y": 220,
        "wires": [
            [
                "5354fd789c946d60"
            ]
        ]
    },
    {
        "id": "e7741db0c516b97e",
        "type": "link in",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "name": "",
        "links": [
            "87857b683465f57d"
        ],
        "x": 2235,
        "y": 220,
        "wires": [
            [
                "a6bb77d2abf09c49"
            ]
        ]
    },
    {
        "id": "5354fd789c946d60",
        "type": "subflow:9f97d888.bf2cb8",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "name": "SCP4",
        "env": [
            {
                "name": "position",
                "value": "4",
                "type": "num"
            },
            {
                "name": "rutaSCPselector",
                "value": "Navegacionaux.datosfondo",
                "type": "str"
            }
        ],
        "x": 2470,
        "y": 220,
        "wires": [
            [
                "3e156f1b4a291e52"
            ],
            [],
            [],
            [],
            [],
            [],
            [],
            [],
            [
                "d1eef4f9ee9a3a95"
            ],
            [],
            [],
            [],
            [
                "f1205c6a282f6189"
            ],
            [
                "58b3f4a929359d92"
            ],
            [],
            [
                "f1618da6aa38eca9"
            ],
            [
                "be78e364b61dd1fe"
            ],
            [
                "8e67b3b175edf584"
            ],
            [],
            [
                "0b3df8fe40d049d1"
            ],
            [
                "a19e81c383a7e44c"
            ],
            [
                "3de8b0576878b726"
            ]
        ]
    },
    {
        "id": "d25de6de0c651d64",
        "type": "link in",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "name": "",
        "links": [
            "9fd4a9ed252b6a9d",
            "51b0f5a838209f51"
        ],
        "x": 1615,
        "y": 500,
        "wires": [
            [
                "d1f003b03a60e19b"
            ]
        ]
    },
    {
        "id": "d1f003b03a60e19b",
        "type": "switch",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "name": "SCP3",
        "property": "#:(memoryOnly)::Navegacionaux.datosfondo",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "16",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1700,
        "y": 500,
        "wires": [
            [
                "7eeaa59705bca2d0"
            ],
            [
                "14e5c966f0ac7a55"
            ]
        ]
    },
    {
        "id": "39a224c4dfa43d19",
        "type": "switch",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "name": "SCP3",
        "property": "#:(memoryOnly)::Navegacionaux.datosfondo",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "16",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2370,
        "y": 500,
        "wires": [
            [
                "ad844df1387fbd1a"
            ],
            [
                "bffe69dd0beff361"
            ]
        ]
    },
    {
        "id": "24235145d79127f3",
        "type": "link in",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "name": "",
        "links": [
            "9fd4a9ed252b6a9d",
            "51b0f5a838209f51"
        ],
        "x": 2285,
        "y": 500,
        "wires": [
            [
                "39a224c4dfa43d19"
            ]
        ]
    },
    {
        "id": "6ae987f442317d17",
        "type": "delay",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1970,
        "y": 480,
        "wires": [
            [
                "1a320b572504fdef"
            ]
        ]
    },
    {
        "id": "c2142d4e72432c49",
        "type": "delay",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 2660,
        "y": 480,
        "wires": [
            [
                "0183201e685f5f8f"
            ]
        ]
    },
    {
        "id": "8c0abdf5a7d1991f",
        "type": "delay",
        "z": "dcee4298f5de57d2",
        "g": "da4321a277ed136b",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1960,
        "y": 520,
        "wires": [
            [
                "5acd401d2f46b060"
            ]
        ]
    },
    {
        "id": "38705d0965924c63",
        "type": "delay",
        "z": "dcee4298f5de57d2",
        "g": "4e67a9385d518b82",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 2690,
        "y": 500,
        "wires": [
            [
                "81ed717ceb1aadc5"
            ]
        ]
    },
    {
        "id": "ef9e9c0ea5b19048",
        "type": "link in",
        "z": "e997ba3b.48cc18",
        "g": "89dd768a.673f58",
        "name": "",
        "links": [
            "87857b683465f57d"
        ],
        "x": 945,
        "y": 110,
        "wires": [
            [
                "35696a34.d09d86"
            ]
        ]
    },
    {
        "id": "c29d3b17f539b594",
        "type": "change",
        "z": "c8989d0a.49ea8",
        "d": true,
        "g": "e00b7d1188a4ce2f",
        "name": "Simular PLC",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Cluster",
                "pt": "global",
                "to": "{\"SCP6\":{\"VSD\":{\"Disponible\":false,\"Arranque_Remoto_PD\":false,\"Arranque_Esc_Ejec\":false,\"Parada_Remota_PD\":false,\"Reset_Remoto_PD\":false,\"Estado_RefProlongada\":false,\"Activacion_RefProlongada_PD\":false,\"Estado_Prot_Sob_Carga\":false,\"Estado_Prot_Sub_Carga\":false,\"Selec_Parada_General\":false,\"Estado\":0,\"Tipo\":0,\"Marca\":0,\"Velocidad_Min\":0,\"Velocidad_Max\":0,\"Tiempo_Rearran_Resta_Seg\":0,\"T_Disp_Subcarga\":0,\"T_Disp_Sobrecarga\":0,\"Torque_porcentual\":0,\"Confirmaciones_Escritura\":0,\"Numero_Pozo\":0,\"Frecuencia\":0,\"Referencia_Frecuencia\":0,\"Referencia_Frecuencia_Remota_PD\":0,\"Hz_Ini_Rampa_Escal\":0,\"Corriente_VSD\":0,\"Voltaje_VSD\":0,\"Voltaje_Bus_DC\":0,\"Temperatura\":0,\"Corriente_Motor\":0,\"Voltaje_Motor\":0,\"Potencia_Actual\":0,\"Factor_Potencia\":0,\"Relacion_TX\":0,\"RPM\":0,\"Referencia_RPM\":0,\"Referencia_RPM_Remota_PD\":0,\"Torque\":0,\"Torque_Nominal\":0,\"Prot_Subcarga\":0,\"Valor_Prot_Subcarga\":0,\"Valor_Prot_Subcarga_PD\":0,\"Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga_PD\":0,\"Prot_Subcarga_VSD\":0,\"Prot_Sobrecarga_VSD\":0,\"Valor_Step_Frecuencia_PD\":0,\"T_RefProlongada_HZ\":0,\"T_Porc_Ref_Prolong\":0,\"Valor_T_RefProlongada_HZ\":0,\"Valor_T_RefProlongada_HZ_PD\":0},\"PQM\":{\"Voltaje_L_L_Pro\":0,\"Voltaje_L1_L2\":0,\"Voltaje_L2_L3\":0,\"Voltaje_L1_L3\":0,\"Voltaje_L_N_Pro\":0,\"Voltaje_L1_N\":0,\"Voltaje_L2_N\":0,\"Voltaje_L3_N\":0,\"Amp_Pro\":0,\"Amp_L1\":0,\"Amp_L2\":0,\"Amp_L3\":0,\"Hz_Act_Pro\":0,\"KWATT_Act_Pro\":0,\"KWATT_Act_L1\":0,\"KWATT_Act_L2\":0,\"KWATT_Act_L3\":0,\"KVA_Act_Pro\":0,\"KVA_Act_L1\":0,\"KVA_Act_L2\":0,\"KVA_Act_L3\":0,\"KVAr_Act_Pro\":0,\"KVAr_Act_L1\":0,\"KVAr_Act_L2\":0,\"KVAr_Act_L3\":0,\"FP_Pro\":0,\"FP_L1\":0,\"FP_L2\":0,\"FP_L3\":0,\"THD_I_Pro\":0,\"THD_V_Pro\":0,\"THD_I_N\":0,\"THD_I_L1\":0,\"THD_I_L2\":0,\"THD_I_L3\":0,\"THD_V_L1\":0,\"THD_V_L2\":0,\"THD_V_L3\":0},\"INST\":{\"THP_PIT_Dev_Stat\":false,\"THT_TIT_Dev_Stat\":false,\"THP_PIT_PV\":0,\"THT_TIT_PV\":0},\"DHOLE\":{\"Estado_Comm\":true,\"Marca\":1,\"PIP\":0,\"PDP\":0,\"Temperatura_Entrada\":0,\"Temperatura_Motor\":0,\"Temperatura_Descarga\":0,\"Vibracion\":0,\"Corriente_Fuga\":0}},\"SCP1\":{\"VSD\":{\"Disponible\":true,\"Arranque_Remoto_PD\":false,\"Arranque_Esc_Ejec\":false,\"Parada_Remota_PD\":false,\"Reset_Remoto_PD\":false,\"Estado_RefProlongada\":false,\"Activacion_RefProlongada_PD\":false,\"Estado_Prot_Sob_Carga\":false,\"Estado_Prot_Sub_Carga\":false,\"Selec_Parada_General\":false,\"Estado\":1,\"Tipo\":1,\"Marca\":3,\"Velocidad_Min\":0,\"Velocidad_Max\":0,\"Tiempo_Rearran_Resta_Seg\":0,\"T_Disp_Subcarga\":0,\"T_Disp_Sobrecarga\":0,\"Torque_porcentual\":0,\"Confirmaciones_Escritura\":0,\"Numero_Pozo\":0,\"Frecuencia\":0,\"Referencia_Frecuencia\":0,\"Referencia_Frecuencia_Remota_PD\":34,\"Hz_Ini_Rampa_Escal\":0,\"Corriente_VSD\":0,\"Voltaje_VSD\":0,\"Voltaje_Bus_DC\":0,\"Temperatura\":0,\"Corriente_Motor\":0,\"Voltaje_Motor\":0,\"Potencia_Actual\":0,\"Factor_Potencia\":0,\"Relacion_TX\":0,\"RPM\":0,\"Referencia_RPM\":0,\"Referencia_RPM_Remota_PD\":0,\"Torque\":0,\"Torque_Nominal\":0,\"Prot_Subcarga\":0,\"Valor_Prot_Subcarga\":0,\"Valor_Prot_Subcarga_PD\":0,\"Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga_PD\":0,\"Prot_Subcarga_VSD\":0,\"Prot_Sobrecarga_VSD\":0,\"Valor_Step_Frecuencia_PD\":0,\"T_RefProlongada_HZ\":0,\"T_Porc_Ref_Prolong\":0,\"Valor_T_RefProlongada_HZ\":0,\"Valor_T_RefProlongada_HZ_PD\":0},\"PQM\":{\"Voltaje_L_L_Pro\":0,\"Voltaje_L1_L2\":0,\"Voltaje_L2_L3\":0,\"Voltaje_L1_L3\":0,\"Voltaje_L_N_Pro\":0,\"Voltaje_L1_N\":0,\"Voltaje_L2_N\":0,\"Voltaje_L3_N\":0,\"Amp_Pro\":0,\"Amp_L1\":0,\"Amp_L2\":0,\"Amp_L3\":0,\"Hz_Act_Pro\":0,\"KWATT_Act_Pro\":0,\"KWATT_Act_L1\":0,\"KWATT_Act_L2\":0,\"KWATT_Act_L3\":0,\"KVA_Act_Pro\":0,\"KVA_Act_L1\":0,\"KVA_Act_L2\":0,\"KVA_Act_L3\":0,\"KVAr_Act_Pro\":0,\"KVAr_Act_L1\":0,\"KVAr_Act_L2\":0,\"KVAr_Act_L3\":0,\"FP_Pro\":0,\"FP_L1\":0,\"FP_L2\":0,\"FP_L3\":0,\"THD_I_Pro\":0,\"THD_V_Pro\":0,\"THD_I_N\":0,\"THD_I_L1\":0,\"THD_I_L2\":0,\"THD_I_L3\":0,\"THD_V_L1\":0,\"THD_V_L2\":0,\"THD_V_L3\":0},\"INST\":{\"THP_PIT_Dev_Stat\":false,\"THT_TIT_Dev_Stat\":true,\"THP_PIT_PV\":0,\"THT_TIT_PV\":0},\"DHOLE\":{\"Estado_Comm\":true,\"Marca\":1,\"PIP\":0,\"PDP\":0,\"Temperatura_Entrada\":0,\"Temperatura_Motor\":0,\"Temperatura_Descarga\":0,\"Vibracion\":0,\"Corriente_Fuga\":0}},\"SCP2\":{\"VSD\":{\"Disponible\":true,\"Arranque_Remoto_PD\":true,\"Arranque_Esc_Ejec\":false,\"Parada_Remota_PD\":false,\"Reset_Remoto_PD\":false,\"Estado_RefProlongada\":false,\"Activacion_RefProlongada_PD\":false,\"Estado_Prot_Sob_Carga\":false,\"Estado_Prot_Sub_Carga\":false,\"Selec_Parada_General\":false,\"Estado\":4,\"Tipo\":1,\"Marca\":2,\"Velocidad_Min\":0,\"Velocidad_Max\":0,\"Tiempo_Rearran_Resta_Seg\":0,\"T_Disp_Subcarga\":0,\"T_Disp_Sobrecarga\":0,\"Torque_porcentual\":0,\"Confirmaciones_Escritura\":0,\"Numero_Pozo\":0,\"Frecuencia\":0,\"Referencia_Frecuencia\":0,\"Referencia_Frecuencia_Remota_PD\":0,\"Hz_Ini_Rampa_Escal\":0,\"Corriente_VSD\":0,\"Voltaje_VSD\":0,\"Voltaje_Bus_DC\":0,\"Temperatura\":0,\"Corriente_Motor\":0,\"Voltaje_Motor\":0,\"Potencia_Actual\":0,\"Factor_Potencia\":0,\"Relacion_TX\":0,\"RPM\":0,\"Referencia_RPM\":0,\"Referencia_RPM_Remota_PD\":0,\"Torque\":0,\"Torque_Nominal\":0,\"Prot_Subcarga\":0,\"Valor_Prot_Subcarga\":0,\"Valor_Prot_Subcarga_PD\":0,\"Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga_PD\":0,\"Prot_Subcarga_VSD\":0,\"Prot_Sobrecarga_VSD\":0,\"Valor_Step_Frecuencia_PD\":0,\"T_RefProlongada_HZ\":0,\"T_Porc_Ref_Prolong\":0,\"Valor_T_RefProlongada_HZ\":0,\"Valor_T_RefProlongada_HZ_PD\":0},\"PQM\":{\"Voltaje_L_L_Pro\":32.599998474121094,\"Voltaje_L1_L2\":48.20000076293945,\"Voltaje_L2_L3\":48,\"Voltaje_L1_L3\":0.4000000059604645,\"Voltaje_L_N_Pro\":59.20000076293945,\"Voltaje_L1_N\":99.30000305175781,\"Voltaje_L2_N\":0.10000000149011612,\"Voltaje_L3_N\":0,\"Amp_Pro\":1997.5999755859375,\"Amp_L1\":62.5,\"Amp_L2\":0,\"Amp_L3\":0,\"Hz_Act_Pro\":585,\"KWATT_Act_Pro\":19.600000381469727,\"KWATT_Act_L1\":0,\"KWATT_Act_L2\":0,\"KWATT_Act_L3\":0,\"KVA_Act_Pro\":52.400001525878906,\"KVA_Act_L1\":0,\"KVA_Act_L2\":0,\"KVA_Act_L3\":0,\"KVAr_Act_Pro\":0.5,\"KVAr_Act_L1\":0,\"KVAr_Act_L2\":0,\"KVAr_Act_L3\":0,\"FP_Pro\":0.4790000021457672,\"FP_L1\":0,\"FP_L2\":0,\"FP_L3\":0,\"THD_I_Pro\":0,\"THD_V_Pro\":0,\"THD_I_N\":0,\"THD_I_L1\":0,\"THD_I_L2\":0,\"THD_I_L3\":0,\"THD_V_L1\":0,\"THD_V_L2\":0,\"THD_V_L3\":0},\"INST\":{\"THP_PIT_Dev_Stat\":false,\"THT_TIT_Dev_Stat\":true,\"THP_PIT_PV\":0,\"THT_TIT_PV\":0},\"DHOLE\":{\"Estado_Comm\":true,\"Marca\":1,\"PIP\":0,\"PDP\":0,\"Temperatura_Entrada\":0,\"Temperatura_Motor\":0,\"Temperatura_Descarga\":0,\"Vibracion\":0,\"Corriente_Fuga\":0}},\"SCP3\":{\"VSD\":{\"Disponible\":true,\"Arranque_Remoto_PD\":false,\"Arranque_Esc_Ejec\":false,\"Parada_Remota_PD\":false,\"Reset_Remoto_PD\":false,\"Estado_RefProlongada\":false,\"Activacion_RefProlongada_PD\":false,\"Estado_Prot_Sob_Carga\":false,\"Estado_Prot_Sub_Carga\":false,\"Selec_Parada_General\":false,\"Estado\":1,\"Tipo\":1,\"Marca\":1,\"Velocidad_Min\":0,\"Velocidad_Max\":0,\"Tiempo_Rearran_Resta_Seg\":0,\"T_Disp_Subcarga\":0,\"T_Disp_Sobrecarga\":0,\"Torque_porcentual\":0,\"Confirmaciones_Escritura\":0,\"Numero_Pozo\":0,\"Frecuencia\":0,\"Referencia_Frecuencia\":0,\"Referencia_Frecuencia_Remota_PD\":0,\"Hz_Ini_Rampa_Escal\":0,\"Corriente_VSD\":0,\"Voltaje_VSD\":0,\"Voltaje_Bus_DC\":0,\"Temperatura\":0,\"Corriente_Motor\":0,\"Voltaje_Motor\":0,\"Potencia_Actual\":0,\"Factor_Potencia\":0,\"Relacion_TX\":0,\"RPM\":0,\"Referencia_RPM\":0,\"Referencia_RPM_Remota_PD\":0,\"Torque\":0,\"Torque_Nominal\":0,\"Prot_Subcarga\":0,\"Valor_Prot_Subcarga\":0,\"Valor_Prot_Subcarga_PD\":0,\"Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga_PD\":0,\"Prot_Subcarga_VSD\":0,\"Prot_Sobrecarga_VSD\":0,\"Valor_Step_Frecuencia_PD\":0,\"T_RefProlongada_HZ\":1.5,\"T_Porc_Ref_Prolong\":0,\"Valor_T_RefProlongada_HZ\":0,\"Valor_T_RefProlongada_HZ_PD\":0},\"PQM\":{\"Voltaje_L_L_Pro\":0,\"Voltaje_L1_L2\":0,\"Voltaje_L2_L3\":0,\"Voltaje_L1_L3\":0,\"Voltaje_L_N_Pro\":0,\"Voltaje_L1_N\":0,\"Voltaje_L2_N\":0,\"Voltaje_L3_N\":0,\"Amp_Pro\":0,\"Amp_L1\":0,\"Amp_L2\":0,\"Amp_L3\":0,\"Hz_Act_Pro\":0,\"KWATT_Act_Pro\":0,\"KWATT_Act_L1\":0,\"KWATT_Act_L2\":0,\"KWATT_Act_L3\":0,\"KVA_Act_Pro\":0,\"KVA_Act_L1\":0,\"KVA_Act_L2\":0,\"KVA_Act_L3\":0,\"KVAr_Act_Pro\":0,\"KVAr_Act_L1\":0,\"KVAr_Act_L2\":0,\"KVAr_Act_L3\":0,\"FP_Pro\":0,\"FP_L1\":0,\"FP_L2\":0,\"FP_L3\":0,\"THD_I_Pro\":0,\"THD_V_Pro\":0,\"THD_I_N\":0,\"THD_I_L1\":0,\"THD_I_L2\":0,\"THD_I_L3\":0,\"THD_V_L1\":0,\"THD_V_L2\":0,\"THD_V_L3\":0},\"INST\":{\"THP_PIT_Dev_Stat\":false,\"THT_TIT_Dev_Stat\":false,\"THP_PIT_PV\":0,\"THT_TIT_PV\":0},\"DHOLE\":{\"Estado_Comm\":true,\"Marca\":2,\"PIP\":0,\"PDP\":0,\"Temperatura_Entrada\":0,\"Temperatura_Motor\":0,\"Temperatura_Descarga\":0,\"Vibracion\":0,\"Corriente_Fuga\":0}},\"SCP9\":{\"VSD\":{\"Disponible\":true,\"Arranque_Remoto_PD\":false,\"Arranque_Esc_Ejec\":false,\"Parada_Remota_PD\":false,\"Reset_Remoto_PD\":false,\"Estado_RefProlongada\":false,\"Activacion_RefProlongada_PD\":false,\"Estado_Prot_Sob_Carga\":true,\"Estado_Prot_Sub_Carga\":true,\"Selec_Parada_General\":false,\"Estado\":4,\"Tipo\":1,\"Marca\":8,\"Velocidad_Min\":28,\"Velocidad_Max\":60,\"Tiempo_Rearran_Resta_Seg\":60,\"T_Disp_Subcarga\":1500,\"T_Disp_Sobrecarga\":2,\"Torque_porcentual\":0,\"Confirmaciones_Escritura\":0,\"Numero_Pozo\":0,\"Frecuencia\":0,\"Referencia_Frecuencia\":0,\"Referencia_Frecuencia_Remota_PD\":0,\"Hz_Ini_Rampa_Escal\":30,\"Corriente_VSD\":0,\"Voltaje_VSD\":0,\"Voltaje_Bus_DC\":0,\"Temperatura\":0,\"Corriente_Motor\":0,\"Voltaje_Motor\":0,\"Potencia_Actual\":0,\"Factor_Potencia\":0,\"Relacion_TX\":6.206250190734863,\"RPM\":0,\"Referencia_RPM\":0,\"Referencia_RPM_Remota_PD\":0,\"Torque\":0,\"Torque_Nominal\":0,\"Prot_Subcarga\":9,\"Valor_Prot_Subcarga\":0,\"Valor_Prot_Subcarga_PD\":0,\"Prot_Sobrecarga\":55,\"Valor_Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga_PD\":0,\"Prot_Subcarga_VSD\":56,\"Prot_Sobrecarga_VSD\":341,\"Valor_Step_Frecuencia_PD\":0,\"T_RefProlongada_HZ\":0,\"T_Porc_Ref_Prolong\":0,\"Valor_T_RefProlongada_HZ\":0,\"Valor_T_RefProlongada_HZ_PD\":0},\"PQM\":{\"Voltaje_L_L_Pro\":0,\"Voltaje_L1_L2\":0,\"Voltaje_L2_L3\":0,\"Voltaje_L1_L3\":0,\"Voltaje_L_N_Pro\":0,\"Voltaje_L1_N\":0,\"Voltaje_L2_N\":0,\"Voltaje_L3_N\":0,\"Amp_Pro\":0,\"Amp_L1\":0,\"Amp_L2\":0,\"Amp_L3\":0,\"Hz_Act_Pro\":0,\"KWATT_Act_Pro\":0,\"KWATT_Act_L1\":0,\"KWATT_Act_L2\":0,\"KWATT_Act_L3\":0,\"KVA_Act_Pro\":0,\"KVA_Act_L1\":0,\"KVA_Act_L2\":0,\"KVA_Act_L3\":0,\"KVAr_Act_Pro\":0,\"KVAr_Act_L1\":0,\"KVAr_Act_L2\":0,\"KVAr_Act_L3\":0,\"FP_Pro\":0,\"FP_L1\":0,\"FP_L2\":0,\"FP_L3\":0,\"THD_I_Pro\":0,\"THD_V_Pro\":0,\"THD_I_N\":0,\"THD_I_L1\":0,\"THD_I_L2\":0,\"THD_I_L3\":0,\"THD_V_L1\":0,\"THD_V_L2\":0,\"THD_V_L3\":0},\"INST\":{\"THP_PIT_Dev_Stat\":false,\"THT_TIT_Dev_Stat\":true,\"THP_PIT_PV\":0,\"THT_TIT_PV\":-24.947002410888672},\"DHOLE\":{\"Estado_Comm\":false,\"Marca\":1,\"PIP\":0,\"PDP\":0,\"Temperatura_Entrada\":0,\"Temperatura_Motor\":0,\"Temperatura_Descarga\":0,\"Vibracion\":0,\"Corriente_Fuga\":0}},\"SCP4\":{\"VSD\":{\"Disponible\":false,\"Arranque_Remoto_PD\":false,\"Arranque_Esc_Ejec\":false,\"Parada_Remota_PD\":false,\"Reset_Remoto_PD\":false,\"Estado_RefProlongada\":false,\"Activacion_RefProlongada_PD\":false,\"Estado_Prot_Sob_Carga\":false,\"Estado_Prot_Sub_Carga\":false,\"Selec_Parada_General\":false,\"Estado\":5,\"Tipo\":1,\"Marca\":0,\"Velocidad_Min\":28,\"Velocidad_Max\":65,\"Tiempo_Rearran_Resta_Seg\":0,\"T_Disp_Subcarga\":1500,\"T_Disp_Sobrecarga\":2,\"Torque_porcentual\":0,\"Confirmaciones_Escritura\":0,\"Numero_Pozo\":0,\"Frecuencia\":0,\"Referencia_Frecuencia\":0,\"Referencia_Frecuencia_Remota_PD\":60,\"Hz_Ini_Rampa_Escal\":28,\"Corriente_VSD\":0,\"Voltaje_VSD\":0,\"Voltaje_Bus_DC\":0,\"Temperatura\":0,\"Corriente_Motor\":0,\"Voltaje_Motor\":0,\"Potencia_Actual\":0,\"Factor_Potencia\":0,\"Relacion_TX\":0,\"RPM\":0,\"Referencia_RPM\":0,\"Referencia_RPM_Remota_PD\":0,\"Torque\":0,\"Torque_Nominal\":0,\"Prot_Subcarga\":0,\"Valor_Prot_Subcarga\":0,\"Valor_Prot_Subcarga_PD\":60,\"Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga_PD\":135,\"Prot_Subcarga_VSD\":73,\"Prot_Sobrecarga_VSD\":187,\"Valor_Step_Frecuencia_PD\":0,\"T_RefProlongada_HZ\":0,\"T_Porc_Ref_Prolong\":0,\"Valor_T_RefProlongada_HZ\":0,\"Valor_T_RefProlongada_HZ_PD\":0},\"PQM\":{\"Voltaje_L_L_Pro\":0,\"Voltaje_L1_L2\":0,\"Voltaje_L2_L3\":0,\"Voltaje_L1_L3\":0,\"Voltaje_L_N_Pro\":0,\"Voltaje_L1_N\":0,\"Voltaje_L2_N\":0,\"Voltaje_L3_N\":0,\"Amp_Pro\":0,\"Amp_L1\":0,\"Amp_L2\":0,\"Amp_L3\":0,\"Hz_Act_Pro\":0,\"KWATT_Act_Pro\":0,\"KWATT_Act_L1\":0,\"KWATT_Act_L2\":0,\"KWATT_Act_L3\":0,\"KVA_Act_Pro\":0,\"KVA_Act_L1\":0,\"KVA_Act_L2\":0,\"KVA_Act_L3\":0,\"KVAr_Act_Pro\":0,\"KVAr_Act_L1\":0,\"KVAr_Act_L2\":0,\"KVAr_Act_L3\":0,\"FP_Pro\":0,\"FP_L1\":0,\"FP_L2\":0,\"FP_L3\":0,\"THD_I_Pro\":0,\"THD_V_Pro\":0,\"THD_I_N\":0,\"THD_I_L1\":0,\"THD_I_L2\":0,\"THD_I_L3\":0,\"THD_V_L1\":0,\"THD_V_L2\":0,\"THD_V_L3\":0},\"INST\":{\"THP_PIT_Dev_Stat\":false,\"THT_TIT_Dev_Stat\":false,\"THP_PIT_PV\":0,\"THT_TIT_PV\":0},\"DHOLE\":{\"Estado_Comm\":true,\"Marca\":3,\"PIP\":0,\"PDP\":0,\"Temperatura_Entrada\":0,\"Temperatura_Motor\":0,\"Temperatura_Descarga\":0,\"Vibracion\":0,\"Corriente_Fuga\":0}},\"SCP5\":{\"VSD\":{\"Disponible\":false,\"Arranque_Remoto_PD\":false,\"Arranque_Esc_Ejec\":false,\"Parada_Remota_PD\":false,\"Reset_Remoto_PD\":false,\"Estado_RefProlongada\":false,\"Activacion_RefProlongada_PD\":false,\"Estado_Prot_Sob_Carga\":false,\"Estado_Prot_Sub_Carga\":false,\"Selec_Parada_General\":false,\"Estado\":0,\"Tipo\":0,\"Marca\":0,\"Velocidad_Min\":0,\"Velocidad_Max\":0,\"Tiempo_Rearran_Resta_Seg\":0,\"T_Disp_Subcarga\":0,\"T_Disp_Sobrecarga\":0,\"Torque_porcentual\":0,\"Confirmaciones_Escritura\":0,\"Numero_Pozo\":0,\"Frecuencia\":0,\"Referencia_Frecuencia\":0,\"Referencia_Frecuencia_Remota_PD\":0,\"Hz_Ini_Rampa_Escal\":0,\"Corriente_VSD\":0,\"Voltaje_VSD\":0,\"Voltaje_Bus_DC\":0,\"Temperatura\":0,\"Corriente_Motor\":0,\"Voltaje_Motor\":0,\"Potencia_Actual\":0,\"Factor_Potencia\":0,\"Relacion_TX\":0,\"RPM\":0,\"Referencia_RPM\":0,\"Referencia_RPM_Remota_PD\":0,\"Torque\":0,\"Torque_Nominal\":0,\"Prot_Subcarga\":0,\"Valor_Prot_Subcarga\":0,\"Valor_Prot_Subcarga_PD\":0,\"Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga_PD\":0,\"Prot_Subcarga_VSD\":0,\"Prot_Sobrecarga_VSD\":0,\"Valor_Step_Frecuencia_PD\":0,\"T_RefProlongada_HZ\":0,\"T_Porc_Ref_Prolong\":0,\"Valor_T_RefProlongada_HZ\":0,\"Valor_T_RefProlongada_HZ_PD\":0},\"PQM\":{\"Voltaje_L_L_Pro\":0,\"Voltaje_L1_L2\":0,\"Voltaje_L2_L3\":0,\"Voltaje_L1_L3\":0,\"Voltaje_L_N_Pro\":0,\"Voltaje_L1_N\":0,\"Voltaje_L2_N\":0,\"Voltaje_L3_N\":0,\"Amp_Pro\":0,\"Amp_L1\":0,\"Amp_L2\":0,\"Amp_L3\":0,\"Hz_Act_Pro\":0,\"KWATT_Act_Pro\":0,\"KWATT_Act_L1\":0,\"KWATT_Act_L2\":0,\"KWATT_Act_L3\":0,\"KVA_Act_Pro\":0,\"KVA_Act_L1\":0,\"KVA_Act_L2\":0,\"KVA_Act_L3\":0,\"KVAr_Act_Pro\":0,\"KVAr_Act_L1\":0,\"KVAr_Act_L2\":0,\"KVAr_Act_L3\":0,\"FP_Pro\":0,\"FP_L1\":0,\"FP_L2\":0,\"FP_L3\":0,\"THD_I_Pro\":0,\"THD_V_Pro\":0,\"THD_I_N\":0,\"THD_I_L1\":0,\"THD_I_L2\":0,\"THD_I_L3\":0,\"THD_V_L1\":0,\"THD_V_L2\":0,\"THD_V_L3\":0},\"INST\":{\"THP_PIT_Dev_Stat\":false,\"THT_TIT_Dev_Stat\":true,\"THP_PIT_PV\":0,\"THT_TIT_PV\":-24.947002410888672},\"DHOLE\":{\"Estado_Comm\":true,\"Marca\":1,\"PIP\":0,\"PDP\":0,\"Temperatura_Entrada\":0,\"Temperatura_Motor\":0,\"Temperatura_Descarga\":0,\"Vibracion\":0,\"Corriente_Fuga\":0}},\"SCP8\":{\"VSD\":{\"Disponible\":false,\"Arranque_Remoto_PD\":false,\"Arranque_Esc_Ejec\":false,\"Parada_Remota_PD\":false,\"Reset_Remoto_PD\":false,\"Estado_RefProlongada\":false,\"Activacion_RefProlongada_PD\":false,\"Estado_Prot_Sob_Carga\":false,\"Estado_Prot_Sub_Carga\":false,\"Selec_Parada_General\":false,\"Estado\":0,\"Tipo\":0,\"Marca\":0,\"Velocidad_Min\":0,\"Velocidad_Max\":0,\"Tiempo_Rearran_Resta_Seg\":0,\"T_Disp_Subcarga\":0,\"T_Disp_Sobrecarga\":0,\"Torque_porcentual\":0,\"Confirmaciones_Escritura\":0,\"Numero_Pozo\":0,\"Frecuencia\":0,\"Referencia_Frecuencia\":0,\"Referencia_Frecuencia_Remota_PD\":0,\"Hz_Ini_Rampa_Escal\":0,\"Corriente_VSD\":0,\"Voltaje_VSD\":0,\"Voltaje_Bus_DC\":0,\"Temperatura\":0,\"Corriente_Motor\":0,\"Voltaje_Motor\":0,\"Potencia_Actual\":0,\"Factor_Potencia\":0,\"Relacion_TX\":0,\"RPM\":0,\"Referencia_RPM\":0,\"Referencia_RPM_Remota_PD\":0,\"Torque\":0,\"Torque_Nominal\":0,\"Prot_Subcarga\":0,\"Valor_Prot_Subcarga\":0,\"Valor_Prot_Subcarga_PD\":0,\"Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga_PD\":0,\"Prot_Subcarga_VSD\":0,\"Prot_Sobrecarga_VSD\":0,\"Valor_Step_Frecuencia_PD\":0,\"T_RefProlongada_HZ\":0,\"T_Porc_Ref_Prolong\":0,\"Valor_T_RefProlongada_HZ\":0,\"Valor_T_RefProlongada_HZ_PD\":0},\"PQM\":{\"Voltaje_L_L_Pro\":0,\"Voltaje_L1_L2\":0,\"Voltaje_L2_L3\":0,\"Voltaje_L1_L3\":0,\"Voltaje_L_N_Pro\":0,\"Voltaje_L1_N\":0,\"Voltaje_L2_N\":0,\"Voltaje_L3_N\":0,\"Amp_Pro\":0,\"Amp_L1\":0,\"Amp_L2\":0,\"Amp_L3\":0,\"Hz_Act_Pro\":0,\"KWATT_Act_Pro\":0,\"KWATT_Act_L1\":0,\"KWATT_Act_L2\":0,\"KWATT_Act_L3\":0,\"KVA_Act_Pro\":0,\"KVA_Act_L1\":0,\"KVA_Act_L2\":0,\"KVA_Act_L3\":0,\"KVAr_Act_Pro\":0,\"KVAr_Act_L1\":0,\"KVAr_Act_L2\":0,\"KVAr_Act_L3\":0,\"FP_Pro\":0,\"FP_L1\":0,\"FP_L2\":0,\"FP_L3\":0,\"THD_I_Pro\":0,\"THD_V_Pro\":0,\"THD_I_N\":0,\"THD_I_L1\":0,\"THD_I_L2\":0,\"THD_I_L3\":0,\"THD_V_L1\":0,\"THD_V_L2\":0,\"THD_V_L3\":0},\"INST\":{\"THP_PIT_Dev_Stat\":false,\"THT_TIT_Dev_Stat\":false,\"THP_PIT_PV\":0,\"THT_TIT_PV\":0},\"DHOLE\":{\"Estado_Comm\":false,\"Marca\":3,\"PIP\":0,\"PDP\":0,\"Temperatura_Entrada\":0,\"Temperatura_Motor\":0,\"Temperatura_Descarga\":0,\"Vibracion\":0,\"Corriente_Fuga\":0}},\"SCP7\":{\"VSD\":{\"Disponible\":false,\"Arranque_Remoto_PD\":false,\"Arranque_Esc_Ejec\":false,\"Parada_Remota_PD\":false,\"Reset_Remoto_PD\":false,\"Estado_RefProlongada\":false,\"Activacion_RefProlongada_PD\":false,\"Estado_Prot_Sob_Carga\":false,\"Estado_Prot_Sub_Carga\":false,\"Selec_Parada_General\":false,\"Estado\":0,\"Tipo\":0,\"Marca\":0,\"Velocidad_Min\":0,\"Velocidad_Max\":0,\"Tiempo_Rearran_Resta_Seg\":0,\"T_Disp_Subcarga\":0,\"T_Disp_Sobrecarga\":0,\"Torque_porcentual\":0,\"Confirmaciones_Escritura\":0,\"Numero_Pozo\":0,\"Frecuencia\":0,\"Referencia_Frecuencia\":0,\"Referencia_Frecuencia_Remota_PD\":0,\"Hz_Ini_Rampa_Escal\":0,\"Corriente_VSD\":0,\"Voltaje_VSD\":0,\"Voltaje_Bus_DC\":0,\"Temperatura\":0,\"Corriente_Motor\":0,\"Voltaje_Motor\":0,\"Potencia_Actual\":0,\"Factor_Potencia\":0,\"Relacion_TX\":0,\"RPM\":0,\"Referencia_RPM\":0,\"Referencia_RPM_Remota_PD\":0,\"Torque\":0,\"Torque_Nominal\":0,\"Prot_Subcarga\":0,\"Valor_Prot_Subcarga\":0,\"Valor_Prot_Subcarga_PD\":0,\"Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga\":0,\"Valor_Prot_Sobrecarga_PD\":0,\"Prot_Subcarga_VSD\":0,\"Prot_Sobrecarga_VSD\":0,\"Valor_Step_Frecuencia_PD\":0,\"T_RefProlongada_HZ\":0,\"T_Porc_Ref_Prolong\":0,\"Valor_T_RefProlongada_HZ\":0,\"Valor_T_RefProlongada_HZ_PD\":0},\"PQM\":{\"Voltaje_L_L_Pro\":0,\"Voltaje_L1_L2\":0,\"Voltaje_L2_L3\":0,\"Voltaje_L1_L3\":0,\"Voltaje_L_N_Pro\":0,\"Voltaje_L1_N\":0,\"Voltaje_L2_N\":0,\"Voltaje_L3_N\":0,\"Amp_Pro\":0,\"Amp_L1\":0,\"Amp_L2\":0,\"Amp_L3\":0,\"Hz_Act_Pro\":0,\"KWATT_Act_Pro\":0,\"KWATT_Act_L1\":0,\"KWATT_Act_L2\":0,\"KWATT_Act_L3\":0,\"KVA_Act_Pro\":0,\"KVA_Act_L1\":0,\"KVA_Act_L2\":0,\"KVA_Act_L3\":0,\"KVAr_Act_Pro\":0,\"KVAr_Act_L1\":0,\"KVAr_Act_L2\":0,\"KVAr_Act_L3\":0,\"FP_Pro\":0,\"FP_L1\":0,\"FP_L2\":0,\"FP_L3\":0,\"THD_I_Pro\":0,\"THD_V_Pro\":0,\"THD_I_N\":0,\"THD_I_L1\":0,\"THD_I_L2\":0,\"THD_I_L3\":0,\"THD_V_L1\":0,\"THD_V_L2\":0,\"THD_V_L3\":0},\"INST\":{\"THP_PIT_Dev_Stat\":false,\"THT_TIT_Dev_Stat\":false,\"THP_PIT_PV\":0,\"THT_TIT_PV\":0},\"DHOLE\":{\"Estado_Comm\":true,\"Marca\":1,\"PIP\":0,\"PDP\":0,\"Temperatura_Entrada\":0,\"Temperatura_Motor\":0,\"Temperatura_Descarga\":0,\"Vibracion\":0,\"Corriente_Fuga\":0}},\"PQM\":{\"Voltaje_L1_N\":0,\"Voltaje_L_L_Pro\":0,\"Voltaje_L1_L2\":0,\"Voltaje_L2_L3\":0,\"Voltaje_L1_L3\":0,\"Voltaje_L_N_Pro\":0,\"Voltaje_L2_N\":0,\"Voltaje_L3_N\":0,\"Amp_Pro\":0,\"Amp_L1\":0,\"Amp_L2\":0,\"Amp_L3\":0,\"Hz_Act_Pro\":0,\"KWATT_Act_Pro\":0,\"KWATT_Act_L1\":0,\"KWATT_Act_L2\":0,\"KWATT_Act_L3\":0,\"KVA_Act_Pro\":0,\"KVA_Act_L1\":0,\"KVA_Act_L2\":0,\"KVA_Act_L3\":0,\"KVAr_Act_Pro\":0,\"KVAr_Act_L1\":0,\"KVAr_Act_L2\":0,\"KVAr_Act_L3\":0,\"FP_Pro\":0,\"FP_L1\":0,\"FP_L2\":0,\"FP_L3\":0,\"THD_I_Pro\":0,\"THD_V_Pro\":0,\"THD_I_N\":0,\"THD_I_L1\":0,\"THD_I_L2\":0,\"THD_I_L3\":0,\"THD_V_L1\":0,\"THD_V_L2\":0,\"THD_V_L3\":0},\"INST_MNF\":{\"PIT_Dev_Stat\":true,\"FIT_Dev_Stat\":true,\"PIT_Presion\":0,\"FIT_Flujo\":0,\"FIT_Flujo_Total\":0,\"FIT_Tempetatura\":0,\"FIT_Densidad\":0}}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "6fa437dfceb3a929",
        "type": "inject",
        "z": "c8989d0a.49ea8",
        "g": "e00b7d1188a4ce2f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 170,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "82f44a0478397706",
        "type": "switch",
        "z": "e997ba3b.48cc18",
        "g": "89dd768a.673f58",
        "name": "Screen",
        "property": "#:(memoryOnly)::Navegación.Pantalla",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "Datos operativos pozos",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1360,
        "y": 110,
        "wires": [
            [
                "24e0f6e3.56cf0a"
            ]
        ]
    },
    {
        "id": "d7dcf99d19a0794e",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Input.Clustername",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 500,
        "wires": [
            [
                "cceedd5a9a2ea195"
            ]
        ]
    },
    {
        "id": "6a7a05e6729f5b0c",
        "type": "link in",
        "z": "a70735f4.fb54d8",
        "g": "73df5953.fc56e8",
        "name": "",
        "links": [
            "449b37406b29dc93"
        ],
        "x": 155,
        "y": 500,
        "wires": [
            [
                "d7dcf99d19a0794e"
            ]
        ]
    },
    {
        "id": "560676cd859a1422",
        "type": "inject",
        "z": "85d78935bd11be27",
        "g": "4c83aa9822cc63bb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "40",
        "topic": "",
        "payloadType": "date",
        "x": 180,
        "y": 110,
        "wires": [
            [
                "ca49cfa7aeb877c0"
            ]
        ]
    },
    {
        "id": "ca49cfa7aeb877c0",
        "type": "function",
        "z": "85d78935bd11be27",
        "g": "4c83aa9822cc63bb",
        "name": "multiple measurement points",
        "func": "var data = global.get(\"Cluster\", \"memoryOnly\") || \"\";\n// Llaves de los pozos existentes en data \nvar pozos = Object.keys(data);\nmsg.payload = []\n\nfor (var i = 0; i < pozos.length; i += 1) {\n    //Todo lo que hay dentro de la información de cada pozo\n    var pozo = data[pozos[i]]\n    //Llaves de los dispositivos de cada pozo (VSD,PQM,DOWNHOLE...)\n    var dispositivos = Object.keys(pozo);\n\n    for (var j = 0; j < dispositivos.length; j += 1) {\n        //Información existente dentro de los dispositivos de cada pozo\n        var info_dispositivo = pozo[dispositivos[j]]\n\n        //Organizar la escritura a la BD\n        var medicion = {\n            measurement: pozos[i] + \"_\" + dispositivos[j],\n            fields: info_dispositivo\n        }\n        msg.payload.push(medicion);\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 110,
        "wires": [
            [
                "61ed79f83de77405"
            ]
        ]
    },
    {
        "id": "61ed79f83de77405",
        "type": "influxdb batch",
        "z": "85d78935bd11be27",
        "g": "4c83aa9822cc63bb",
        "influxdb": "ab25613c47d557df",
        "precision": "",
        "retentionPolicy": "",
        "name": "Escritura BD",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 630,
        "y": 110,
        "wires": []
    },
    {
        "id": "d8cded3afb375cb9",
        "type": "complete",
        "z": "85d78935bd11be27",
        "g": "13d2193b2dc0f18d",
        "name": "",
        "scope": [
            "82303bb7181527b9"
        ],
        "uncaught": false,
        "x": 160,
        "y": 450,
        "wires": [
            [
                "a8226b9089842764"
            ]
        ]
    },
    {
        "id": "a8226b9089842764",
        "type": "function",
        "z": "85d78935bd11be27",
        "g": "13d2193b2dc0f18d",
        "name": "Variables",
        "func": "var data = msg.payload;\nvar keys = Object.keys(data[0]);\nvar values = Object.values(keys);\n\nmsg.options = values.slice(1, (values.length));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 450,
        "wires": [
            [
                "5bdfce06d4bc789a"
            ]
        ]
    },
    {
        "id": "21a6467e90925aea",
        "type": "influxdb in",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "influxdb": "ab25613c47d557df",
        "name": "Consulta",
        "query": "SHOW MEASUREMENTS",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 700,
        "y": 240,
        "wires": [
            [
                "b7c05d70d357942d",
                "572e9151a926352a"
            ]
        ]
    },
    {
        "id": "55f9d490edafdf8d",
        "type": "ui_dropdown",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "Drop Pozo",
        "label": "",
        "tooltip": "",
        "place": "Select pozo",
        "group": "6a2538cbc7b3b5fc",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1030,
        "y": 240,
        "wires": [
            [
                "e48317a5283cbf0a"
            ]
        ]
    },
    {
        "id": "b7c05d70d357942d",
        "type": "function",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "Pozos",
        "func": "var datos = msg.payload;\nvar drop_pozos = [];\n\n// Convierte todo en unico array\nfor (let i = 0; i < datos.length; i++) {\n  // Extrae la etiqueta del objeto\n  var values = Object.values(datos[i])[0]\n\n  // Rompe la cadena por el caracter de separación: _\n  var index_ = values.indexOf(\"_\")\n  var pozo = (values.substring(0, 3) + values.substring(3, index_) );\n\n  //Añade el pozo al array del drop si no existe\n  if (drop_pozos.indexOf(pozo) == -1) drop_pozos.push(pozo)\n\n}\nmsg.options = drop_pozos;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 240,
        "wires": [
            [
                "55f9d490edafdf8d"
            ]
        ]
    },
    {
        "id": "732c8863fb2cd243",
        "type": "ui_dropdown",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "Drop Dispo",
        "label": "",
        "tooltip": "",
        "place": "Select Device",
        "group": "6a2538cbc7b3b5fc",
        "order": 5,
        "width": 9,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1030,
        "y": 280,
        "wires": [
            [
                "5c7d1480dca17bf8"
            ]
        ]
    },
    {
        "id": "572e9151a926352a",
        "type": "function",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "Dispositivo",
        "func": "var datos = msg.payload;\nvar drop_dispositivo = [];\n\n// Convierte todo en unico array\nfor (let i = 0; i < datos.length; i++) {\n  // Extrae la etiqueta del objeto\n  var values = Object.values(datos[i])[0]\n\n  // Rompe la cadena por el caracter de separación: _\n  var index_ = values.indexOf(\"_\")\n  var dispositivo = (values.substring((index_+1), (values.length)));\n\n  if (dispositivo == \"DHOLE\") dispositivo = \"DOWNHOLE\"\n  if (dispositivo == \"INST\") dispositivo = \"INSTRUMENTACIÓN\"\n\n\n  //Añade el pozo al array del drop si no existe\n  if (drop_dispositivo.indexOf(dispositivo) == -1) drop_dispositivo.push(dispositivo)\n  \n}\nmsg.options = drop_dispositivo;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 280,
        "wires": [
            [
                "732c8863fb2cd243"
            ]
        ]
    },
    {
        "id": "817fe254ae9c2d33",
        "type": "ui_date_picker",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "Inicio",
        "label": "Fecha Inicio",
        "group": "6a2538cbc7b3b5fc",
        "order": 9,
        "width": 8,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "x": 1050,
        "y": 320,
        "wires": [
            [
                "4f0bd0996f398205"
            ]
        ]
    },
    {
        "id": "2aa8e2b1173191ba",
        "type": "ui_date_picker",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "Fin",
        "label": "Fecha Fin",
        "group": "6a2538cbc7b3b5fc",
        "order": 11,
        "width": 9,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "x": 1050,
        "y": 360,
        "wires": [
            [
                "e1970a3b161a5236"
            ]
        ]
    },
    {
        "id": "b99c5537e976fb29",
        "type": "function",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "QueryConsulta",
        "func": "var pozo         = flow.get(\"basededatos.pozo\",\"memoryOnly\") || null;\nvar dispositivo  = flow.get(\"basededatos.dispositivo\", \"memoryOnly\") || null;\nvar date_ini     = flow.get(\"basededatos.date_ini\", \"memoryOnly\") || null;\nvar date_fin     = flow.get(\"basededatos.date_fin\", \"memoryOnly\") || null;\n\nif (dispositivo == \"DOWNHOLE\") dispositivo = \"DHOLE\"\nif (dispositivo == \"INSTRUMENTACIÓN\") dispositivo = \"INST\"\n\nmsg.query = \"SELECT * FROM\" + \" \" + pozo + \"_\" + dispositivo + \" \" + \"WHERE time > \" + date_ini + \"ms and time < \" + date_fin + \"ms\" || null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 240,
        "wires": [
            [
                "17e423b079c3e727"
            ]
        ]
    },
    {
        "id": "e48317a5283cbf0a",
        "type": "change",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::basededatos.pozo",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1260,
        "y": 240,
        "wires": [
            [
                "b99c5537e976fb29"
            ]
        ]
    },
    {
        "id": "5c7d1480dca17bf8",
        "type": "change",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::basededatos.dispositivo",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 280,
        "wires": [
            [
                "b99c5537e976fb29"
            ]
        ]
    },
    {
        "id": "4f0bd0996f398205",
        "type": "change",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::basededatos.date_ini",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 320,
        "wires": [
            [
                "b99c5537e976fb29"
            ]
        ]
    },
    {
        "id": "e1970a3b161a5236",
        "type": "change",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::basededatos.date_fin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 360,
        "wires": [
            [
                "b99c5537e976fb29",
                "62985078035f5152"
            ]
        ]
    },
    {
        "id": "5f27cd3f11034d13",
        "type": "ui_button",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "",
        "group": "6a2538cbc7b3b5fc",
        "order": 15,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Consultar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1320,
        "y": 200,
        "wires": [
            [
                "b99c5537e976fb29",
                "11e3cb104578d0fe"
            ]
        ]
    },
    {
        "id": "17e423b079c3e727",
        "type": "influxdb in",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "influxdb": "ab25613c47d557df",
        "name": "Consulta",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 1660,
        "y": 240,
        "wires": [
            [
                "82303bb7181527b9",
                "de9967dd57c46201"
            ]
        ]
    },
    {
        "id": "82303bb7181527b9",
        "type": "change",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::basededatos.Dataquery",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1870,
        "y": 240,
        "wires": [
            [
                "48d40319351790b8"
            ]
        ]
    },
    {
        "id": "a39226787f356942",
        "type": "ui_dropdown",
        "z": "85d78935bd11be27",
        "g": "13d2193b2dc0f18d",
        "name": "Drop Var",
        "label": "",
        "tooltip": "",
        "place": "Seleccione una o más variables",
        "group": "6a2538cbc7b3b5fc",
        "order": 19,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 630,
        "y": 450,
        "wires": [
            [
                "f55bcf1b9afa8eaa"
            ]
        ]
    },
    {
        "id": "5bdfce06d4bc789a",
        "type": "change",
        "z": "85d78935bd11be27",
        "g": "13d2193b2dc0f18d",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "query",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 450,
        "wires": [
            [
                "a39226787f356942"
            ]
        ]
    },
    {
        "id": "f55bcf1b9afa8eaa",
        "type": "change",
        "z": "85d78935bd11be27",
        "g": "13d2193b2dc0f18d",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::basededatos.request",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 450,
        "wires": [
            [
                "8ff39960ea177e6a"
            ]
        ]
    },
    {
        "id": "8ff39960ea177e6a",
        "type": "function",
        "z": "85d78935bd11be27",
        "g": "13d2193b2dc0f18d",
        "name": "Trends",
        "func": "var request = flow.get(\"basededatos.request\",\"memoryOnly\");\nvar Dataquery = flow.get(\"basededatos.Dataquery\",\"memoryOnly\");\n\nvar data = [];\nvar data1 = [];\nvar series = [];\n\nfor (let i = 0; i < request.length; i++) {\n   for (let j = 0; j < Dataquery.length; j++) {\n       data1.push({ \"x\": Dataquery[j].time, \"y\": Dataquery[j][request[i]]});\n    }\n\n    data.push(data1);\n    data1 = [];\n}\n\nvar chart = [{\n    \"series\": request,\n    \"data\": data,\n    \"labels\": [\"\"]\n}];\n\ncontext.set(\"chart\", chart);\nflow.set(\"basededatos.dataExport\", data);\n\nif (data.length != 0)\n    msg.payload = chart;\nelse\n    msg.payload = [];\n\nreturn msg;\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 450,
        "wires": [
            [
                "34049ab78b4edb4c"
            ]
        ]
    },
    {
        "id": "34049ab78b4edb4c",
        "type": "ui_chart",
        "z": "85d78935bd11be27",
        "g": "13d2193b2dc0f18d",
        "name": "",
        "group": "6a2538cbc7b3b5fc",
        "order": 21,
        "width": 20,
        "height": 5,
        "label": "",
        "chartType": "line",
        "legend": "true",
        "xformat": "D/M",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "1",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#c300d1",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "x": 1180,
        "y": 450,
        "wires": [
            []
        ]
    },
    {
        "id": "48d40319351790b8",
        "type": "ui_text",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "group": "6a2538cbc7b3b5fc",
        "order": 17,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Resultado de la ultima consulta",
        "format": "{{msg.payload.length}} Entradas",
        "layout": "row-center",
        "x": 2150,
        "y": 240,
        "wires": []
    },
    {
        "id": "1c19879f42efe603",
        "type": "ui_toast",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "yellow",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 1660,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "62985078035f5152",
        "type": "function",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "Rango fechas",
        "func": "var inicio      = flow.get(\"basededatos.date_ini\",\"memoryOnly\");\nvar fin         = flow.get(\"basededatos.date_fin\", \"memoryOnly\");\nvar DT          = new Date();\nvar date_actual = Date.parse(DT)\n\nvar resta = Math.abs(fin - date_actual)\nvar diferencia = resta / (1000 * 3600 * 24)\n\n\nmsg.topic = \"Rango de consulta\"\nif (inicio > fin) msg.payload = \"Rango de fecha incorrectos\";\nelse if (diferencia >= 1) msg.payload = \"Rango de fecha fuera de límites\";\nelse return\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480,
        "y": 360,
        "wires": [
            [
                "1c19879f42efe603"
            ]
        ]
    },
    {
        "id": "de9967dd57c46201",
        "type": "debug",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1790,
        "y": 280,
        "wires": []
    },
    {
        "id": "fd8af8a4efae6580",
        "type": "comment",
        "z": "85d78935bd11be27",
        "name": "Recomendaciones de uso",
        "info": "\n\n**Deshabilitar el flujo \"Base de datos\"\n\nUso de la base de datos: \n\n1. Instalación de la base de datos Influx DB \n    https://simonhearne.com/2020/pi-influx-grafana/#step-2-install-influxdb\n\n2. Creación de la base de datos \n    2.1 Una vez instalado el Influx DB\n    2.2 Ingresar por putty al controlador \n    2.3 Ingreso a Influx >>Influx \n\n    >>SHOW DATABASES\n    En caso de que no esté la base de datos llamada SWCPRO, se procede a crearla \n    >>CREATE DATABASE SWCPRO\n    Una vez creada la base de datos, se procede a usarla \n    >>USE SWCPRO\n    \n3. Comando para configurar la politica de retención \n\n4. Paquete de datos para el uso del algoritmo \n    Para el caso del CILA AIC, se necesita tener una estructura de datos:\n\n    Cluster.pozo.dispositivo.datos - De tipo global - memoryOnly\n\n        //No ulitizar espacios, reemplazar por \"_\"\n        \"SCP1\":{\n            \"VSD\":{\n                \"Disponible\":false,\n                \"Arranque_Remoto_PD\":false,\n                ...\n            },\n            \"PQM\":{\n                \"Voltaje_L_L_Pro\":0,\n                ...\n            },\n            \"INST\":{\n                \"THP_PIT_Dev_Stat\":false,\n                ...\n            },\n            \"DHOLE\":{\n                \"Estado_Comm\":false,\n                ...\n            }\n        }\n         \"SCP2\":{\n            \"VSD\":{\n                \"Disponible\":false,\n                \"Arranque_Remoto_PD\":false,\n                ...\n            },\n            \"PQM\":{\n                \"Voltaje_L_L_Pro\":0,\n                ...\n            },\n            \"INST\":{\n                \"THP_PIT_Dev_Stat\":false,\n                ...\n            },\n            \"DHOLE\":{\n                \"Estado_Comm\":false,\n                ...\n            }\n        }\n\n\n        DROP DATABASE AIC;\n\n        CREATE RETENTION POLICY \"trimestral\" ON \"AIC\" DURATION 12w REPLICATION 1 DEFAULT\n        DROP RETENTION POLICY \"trimestral\" ON \"AIC\"",
        "x": 180,
        "y": 40,
        "wires": []
    },
    {
        "id": "ee89b458b55779ef",
        "type": "file",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 810,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "4ae0bb1a2ebb141b",
        "type": "csv",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "all",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 500,
        "y": 760,
        "wires": [
            [
                "dc4ad158d3f126f6"
            ]
        ]
    },
    {
        "id": "dc4ad158d3f126f6",
        "type": "change",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "+++/Base_de_datos/---.csv",
                "tot": "str"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "+++",
                "fromt": "str",
                "to": "#:(memoryOnly)::USB_Drive",
                "tot": "global"
            },
            {
                "t": "change",
                "p": "filename",
                "pt": "msg",
                "from": "---",
                "fromt": "str",
                "to": "#:(memoryOnly)::basededatos.pozo",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 760,
        "wires": [
            [
                "ee89b458b55779ef",
                "c33aa73684305b69"
            ]
        ]
    },
    {
        "id": "15a406755ff02a39",
        "type": "function",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "Formato descarga",
        "func": "var Dataquery   = flow.get(\"basededatos.Dataquery\", \"memoryOnly\");\nvar request     = flow.get(\"basededatos.request\", \"memoryOnly\");\nvar data_obj = {};\nvar requ_obj = {};\nvar objeto = [];\n\nif (request.indexOf(\"time\") == -1) request.unshift(\"time\");\n\nfor (let i = 0; i < Dataquery.length; i++) {\n    data_obj = Dataquery [i];\n    \n    // Calcular fecha basada en Time()\n    var tiempo = new Date(data_obj[\"time\"]);\n    var fecha = tiempo.getFullYear() + \"/\" + (tiempo.getMonth() + 1) + \"/\" + tiempo.getDay() + \" \" + tiempo.getHours() + \":\" + tiempo.getMinutes() + \":\" + tiempo.getSeconds();\n    data_obj[\"time\"] = fecha;\n    //Crear el objeto para descargar los archivos \n    for (let j = 0; j < request.length; j++) {\n        requ_obj[request[j]] = data_obj[request[j]];\n    }\n    objeto.push({...requ_obj});\n}\n\nmsg.payload = objeto; \nmsg.columns = Object.keys(objeto[0]).toString();\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 760,
        "wires": [
            [
                "4ae0bb1a2ebb141b"
            ]
        ]
    },
    {
        "id": "6e8a9338e6f7d004",
        "type": "function",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "USB_Spaces",
        "func": "var USB = global.get(\"USB_Drive\",\"memoryOnly\");\nvar div = USB.split(\"/\");\nvar aux = div[3].split(\" \");\nif (aux.length>1)\n    var name = \"/\" + div[1] + \"/\" + div[2] + \"/\" + \"'\" + div[3] + \"'\";\nelse\n    name = USB;\n\nflow.set(\"USBname\", name,\"memoryOnly\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "88dcdbf8.24dc88",
        "type": "exec",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "command": "cd /media/bcpgrp && ls",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 370,
        "y": 610,
        "wires": [
            [
                "37820ee5.859272",
                "b67add6d.8a94a",
                "57b7954081dfb327"
            ],
            [],
            []
        ]
    },
    {
        "id": "8102dc0f.63d08",
        "type": "exec",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "command": "df /dev/sda1",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 330,
        "y": 660,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "febace6d.62f9c",
        "type": "change",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::USB_Drive",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 720,
        "wires": [
            [
                "6e8a9338e6f7d004"
            ]
        ]
    },
    {
        "id": "8f26d964.56a778",
        "type": "watch",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "",
        "files": "/media/bcpgrp",
        "recursive": false,
        "x": 170,
        "y": 610,
        "wires": [
            [
                "8102dc0f.63d08",
                "88dcdbf8.24dc88",
                "febace6d.62f9c"
            ]
        ]
    },
    {
        "id": "37820ee5.859272",
        "type": "ui_text",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "group": "6a2538cbc7b3b5fc",
        "order": 23,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "USB",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "x": 550,
        "y": 600,
        "wires": []
    },
    {
        "id": "c33aa73684305b69",
        "type": "debug",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 800,
        "wires": []
    },
    {
        "id": "13da0a72fbeff069",
        "type": "ui_button",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "",
        "group": "6a2538cbc7b3b5fc",
        "order": 24,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Descargar",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 760,
        "wires": [
            [
                "15a406755ff02a39"
            ]
        ]
    },
    {
        "id": "45ba8097.f74b1",
        "type": "ui_button",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "",
        "group": "6a2538cbc7b3b5fc",
        "order": 25,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Expulsar USB",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 740,
        "y": 590,
        "wires": [
            [
                "8db0f092.83eb9"
            ]
        ]
    },
    {
        "id": "8db0f092.83eb9",
        "type": "exec",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "command": "sudo eject /dev/sdb1/",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 940,
        "y": 590,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "bd43bd09.9aab9",
        "type": "change",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "USB",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Dispositivo USB expulsado",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Dispositivo USB",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 640,
        "wires": [
            [
                "f8f6d7e7.a66d88"
            ]
        ]
    },
    {
        "id": "f8f6d7e7.a66d88",
        "type": "ui_toast",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "USB Expulsada",
        "x": 830,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "b67add6d.8a94a",
        "type": "switch",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "",
        "property": "type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "none",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 640,
        "wires": [
            [
                "bd43bd09.9aab9"
            ]
        ]
    },
    {
        "id": "57b7954081dfb327",
        "type": "switch",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "",
        "property": "type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "directory",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 680,
        "wires": [
            [
                "988525db947e5320"
            ]
        ]
    },
    {
        "id": "988525db947e5320",
        "type": "change",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "name": "USB",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Dispositivo USB detectado",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Dispositivo USB",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 680,
        "wires": [
            [
                "cf314147286d26d5"
            ]
        ]
    },
    {
        "id": "cf314147286d26d5",
        "type": "ui_toast",
        "z": "85d78935bd11be27",
        "g": "0fa5f2a3ef50ac33",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "USB detectada",
        "x": 830,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "249a7d5f76316134",
        "type": "catch",
        "z": "85d78935bd11be27",
        "g": "13d2193b2dc0f18d",
        "name": "",
        "scope": [
            "a8226b9089842764"
        ],
        "uncaught": false,
        "x": 140,
        "y": 490,
        "wires": [
            []
        ]
    },
    {
        "id": "963664e4a877a2af",
        "type": "inject",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "Clear",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 490,
        "y": 300,
        "wires": [
            [
                "45169aed9610f89b"
            ]
        ]
    },
    {
        "id": "45169aed9610f89b",
        "type": "function",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "Clear",
        "func": "delete msg.payload;\nmsg.options =[];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 300,
        "wires": [
            [
                "55f9d490edafdf8d"
            ]
        ]
    },
    {
        "id": "11e3cb104578d0fe",
        "type": "function",
        "z": "85d78935bd11be27",
        "g": "13d2193b2dc0f18d",
        "name": "Clear",
        "func": "msg.payload= [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 490,
        "wires": [
            [
                "34049ab78b4edb4c",
                "a39226787f356942"
            ]
        ]
    },
    {
        "id": "57c98bdbe3e5e015",
        "type": "link in",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "",
        "links": [
            "87857b683465f57d"
        ],
        "x": 105,
        "y": 240,
        "wires": [
            [
                "c0145af1fa708bde"
            ]
        ]
    },
    {
        "id": "37fec61d8cb2f783",
        "type": "switch",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "Pantalla?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Datos históricos",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 560,
        "y": 240,
        "wires": [
            [
                "21a6467e90925aea"
            ]
        ]
    },
    {
        "id": "0858807b8a145e7e",
        "type": "rbe",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 410,
        "y": 240,
        "wires": [
            [
                "37fec61d8cb2f783"
            ]
        ]
    },
    {
        "id": "c0145af1fa708bde",
        "type": "change",
        "z": "85d78935bd11be27",
        "g": "498c1a6f5f418d4d",
        "name": "actual pantalla",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#:(memoryOnly)::Navegación.Pantalla",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 240,
        "wires": [
            [
                "0858807b8a145e7e"
            ]
        ]
    },
    {
        "id": "8487caef487fba55",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "enabled",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 1490,
        "wires": [
            [
                "01d3ec8eebc233f0"
            ]
        ]
    },
    {
        "id": "279ee1694dac8740",
        "type": "link in",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "links": [
            "449b37406b29dc93"
        ],
        "x": 1065,
        "y": 1430,
        "wires": [
            [
                "a1d43b891c79081b",
                "44c1b3682fbfd0fa",
                "1537d2b28d115d3e"
            ]
        ]
    },
    {
        "id": "74b97cf9360de41e",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "false",
        "rules": [
            {
                "t": "set",
                "p": "Switch.Habilitacion",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2450,
        "y": 1230,
        "wires": [
            []
        ]
    },
    {
        "id": "4cdd038148a62cfd",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "",
        "links": [
            "6d53d119943aea85"
        ],
        "x": 2415,
        "y": 1270,
        "wires": []
    },
    {
        "id": "6d53d119943aea85",
        "type": "link in",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "",
        "links": [
            "449b37406b29dc93",
            "4cdd038148a62cfd"
        ],
        "x": 1065,
        "y": 1070,
        "wires": [
            [
                "9c8c8ad0534a95bc"
            ]
        ]
    },
    {
        "id": "9c8c8ad0534a95bc",
        "type": "delay",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1170,
        "y": 1070,
        "wires": [
            []
        ]
    },
    {
        "id": "694b9eb48edc1905",
        "type": "switch",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Switch.Habilitacion",
                "vt": "flow"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1730,
        "y": 1090,
        "wires": [
            []
        ]
    },
    {
        "id": "eef1cdc50dc3b966",
        "type": "trigger",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "msg.delay",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "25",
        "extend": false,
        "overrideDelay": true,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1550,
        "y": 2230,
        "wires": [
            [
                "7ab7dc110e3f6c14",
                "4dbc5ae4904e149e"
            ]
        ]
    },
    {
        "id": "56bae0fb22d96fb4",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "",
        "links": [
            "464ffead7c323d25"
        ],
        "x": 2415,
        "y": 990,
        "wires": []
    },
    {
        "id": "464ffead7c323d25",
        "type": "link in",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "links": [
            "56bae0fb22d96fb4"
        ],
        "x": 1205,
        "y": 2270,
        "wires": [
            [
                "3afb8a957aa67a1c"
            ]
        ]
    },
    {
        "id": "3afb8a957aa67a1c",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 2270,
        "wires": [
            [
                "eef1cdc50dc3b966"
            ]
        ]
    },
    {
        "id": "7ab7dc110e3f6c14",
        "type": "link out",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "links": [
            "a3d11fadb3acbe9a",
            "eb3e48265cb3c627"
        ],
        "x": 1685,
        "y": 2230,
        "wires": []
    },
    {
        "id": "a3d11fadb3acbe9a",
        "type": "link in",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "",
        "links": [
            "7ab7dc110e3f6c14"
        ],
        "x": 1365,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "eb3e48265cb3c627",
        "type": "link in",
        "z": "a70735f4.fb54d8",
        "g": "5b44b24d93b88118",
        "name": "",
        "links": [
            "7ab7dc110e3f6c14"
        ],
        "x": 2325,
        "y": 1030,
        "wires": [
            [
                "ada745a8b159b348",
                "69591c2347f38b1e",
                "c97826ab146fbc15"
            ]
        ]
    },
    {
        "id": "ee5f740a9ca9c51c",
        "type": "change",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::temp3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 2190,
        "wires": [
            []
        ]
    },
    {
        "id": "4b3c3bdb98c7abbb",
        "type": "function",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "msg.delay",
        "func": "var enabled = flow.get(\"Switch.Habilitacion\") || false;\nvar timmer3 = flow.get(\"Timer['3']\")||0;\nvar temp3 = (flow.get(\"temp3\", \"memoryOnly\") || 0)/60;\nif (temp3 >= timmer3 && !enabled){\nmsg.delay = (flow.get(\"Timer['3']\") || 0)*60000;\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 2230,
        "wires": [
            [
                "eef1cdc50dc3b966"
            ]
        ]
    },
    {
        "id": "bd69a1d2a9aacce2",
        "type": "link in",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "links": [
            "87857b683465f57d"
        ],
        "x": 1205,
        "y": 2230,
        "wires": [
            [
                "4b3c3bdb98c7abbb"
            ]
        ]
    },
    {
        "id": "4dbc5ae4904e149e",
        "type": "delay",
        "z": "a70735f4.fb54d8",
        "g": "b06bbdd518536a01",
        "name": "",
        "pauseType": "delay",
        "timeout": "0.5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 1550,
        "y": 2270,
        "wires": [
            [
                "3afb8a957aa67a1c"
            ]
        ]
    },
    {
        "id": "7414bc966287131d",
        "type": "eth-ip in",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "endpoint": "2a41a00be7f37a48",
        "mode": "single",
        "variable": "STATUS_INSTRUMENTO_CH.1",
        "program": "",
        "name": "Instrumento FIT OK",
        "x": 1670,
        "y": 780,
        "wires": [
            [
                "31be1c34ecab20b8",
                "e123891250972186"
            ]
        ]
    },
    {
        "id": "31be1c34ecab20b8",
        "type": "switch",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Status PIT",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1860,
        "y": 750,
        "wires": [
            [
                "34b1e89fd40139d2"
            ],
            [
                "d5b941e2a96bbfa3"
            ]
        ]
    },
    {
        "id": "e123891250972186",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Status_Instrumento_FIT",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1930,
        "y": 810,
        "wires": [
            []
        ]
    },
    {
        "id": "df95654a91fb1023",
        "type": "function",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "Data estado FIT",
        "func": "// Estado de instrumento PIT ubicado en Manifold\nvar Status_Instrumento_PIT = global.get(\"Status_Instrumento_FIT\",\"memoryOnly\")||false;\n\n// Traer variables de lectura de Manifold\nvar INST_MNF     = global.get(\"Cluster.INST_MNF\", \"memoryOnly\") || [];\n\n// Distribución de variables de Manifold\nvar Flujo_FIT       = (INST_MNF.FIT_Flujo).toFixed(1);\nvar Flujo_Total_FIT = (INST_MNF.FIT_Flujo_Total).toFixed(1);\nvar Temperatura_FIT = (INST_MNF.FIT_Tempetatura).toFixed(1);\nvar Densidad_FIT    = (INST_MNF.FIT_Densidad).toFixed(1);\n\nif (Status_Instrumento_PIT == false){\n    msg.PIZIT           = Flujo_FIT;\n    msg.FIT_FLUJO_TOTAL = Flujo_Total_FIT + \" BFPD\";\n    msg.FIT_TEMPERATURA = Temperatura_FIT + \" °F\";\n    msg.FIT_DENSIDAD    = Densidad_FIT + \" lb/ft\" + \"3\".sup();\n\n} else if (Status_Instrumento_PIT == true){\n    msg.PIZIT           = \"- - - - - -\";\n    msg.FIT_FLUJO_TOTAL = \"- - - - - -\";\n    msg.FIT_TEMPERATURA = \"- - - - - -\";\n    msg.FIT_DENSIDAD    = \"- - - - - -\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 180,
        "wires": [
            [
                "6d4ca22faacfb6a7",
                "7026ba7070318c79",
                "d6e9e6cb27b824f9"
            ]
        ]
    },
    {
        "id": "27d20979e826e75b",
        "type": "ui_template",
        "z": "a409994f70cf4cc4",
        "g": "b75b4b5233e4eb65",
        "group": "e3d7c8c1d1b0ce27",
        "name": "Navegacion Datos Eléctricos Cluster",
        "order": 1,
        "width": 24,
        "height": 1,
        "format": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <!-- Navigation bar -->\n    <nav>\n        <div class=\"nav nav-pills nav-fill\" id=\"nav-tab\" role=\"tablist\">\n            <a class=\"nav-item nav-link active\" id=\"nav-Analisis_Electrico-tab\" data-toggle=\"tab\" href=\"#nav-Analisis_Electrico\" role=\"tab\"\n                aria-controls=\"nav-Analisis_Electrico\" aria-selected=\"true\" ng-click=\"send({payload:Analisis_Electrico()})\">Análisis eléctrico CCP</a>\n            <a class=\"nav-item nav-link\" id=\"nav-Estado_CCP-tab\" data-toggle=\"tab\" href=\"#nav-Estado_CCP\" role=\"tab\" \n                aria-controls=\"nav-Estado_CCP\" aria-selected=\"false\" ng-click=\"send({payload:Estado_CCP()})\">Estado CCP</a>\n            \n        </div>\n    </nav>\n\n    <script>\n        this.scope.Analisis_Electrico = function() { return \"Analisis_Electrico\"; };\n        this.scope.Estado_CCP = function() { return \"Estado_CCP\"; };\n        \n        \n    </script>\n\n    <!-- Optional JavaScript -->\n    <!-- jQuery first, then Popper.js, then Bootstrap JS -->\n</body>\n\n</html>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 270,
        "y": 1370,
        "wires": [
            [
                "41187449c97f31d7"
            ]
        ]
    },
    {
        "id": "41187449c97f31d7",
        "type": "switch",
        "z": "a409994f70cf4cc4",
        "g": "b75b4b5233e4eb65",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Analisis_Electrico",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Estado_CCP",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 1370,
        "wires": [
            [
                "2b555d81f96082f5"
            ],
            [
                "db4708faaa5ac7b5"
            ]
        ]
    },
    {
        "id": "2b555d81f96082f5",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "b75b4b5233e4eb65",
        "name": "Análisis eléctrico CCP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"show\":[ \"Datos_eléctricos_clúster_Analisis_electrico_CCP\"],\t       \"hide\":[ \"Datos_eléctricos_clúster_Estado_CCP\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 660,
        "y": 1350,
        "wires": [
            [
                "abc9b8b81ab87e58"
            ]
        ]
    },
    {
        "id": "abc9b8b81ab87e58",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "b75b4b5233e4eb65",
        "name": "",
        "links": [
            "82aa836a1d0ebabd",
            "a908951142dcc258"
        ],
        "x": 815,
        "y": 1350,
        "wires": []
    },
    {
        "id": "053623fb4ec2e26f",
        "type": "link out",
        "z": "a409994f70cf4cc4",
        "g": "b75b4b5233e4eb65",
        "name": "",
        "links": [
            "82aa836a1d0ebabd",
            "a908951142dcc258"
        ],
        "x": 815,
        "y": 1390,
        "wires": []
    },
    {
        "id": "80c3d5cca8f0000d",
        "type": "link in",
        "z": "a409994f70cf4cc4",
        "g": "b75b4b5233e4eb65",
        "name": "",
        "links": [
            "b56aa71999519568"
        ],
        "x": 515,
        "y": 1320,
        "wires": [
            [
                "2b555d81f96082f5"
            ]
        ]
    },
    {
        "id": "9a5e2769197ec091",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 2,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Voltaje L1-L2",
        "format": "{{msg.VL1L2}} VAC",
        "layout": "col-center",
        "x": 570,
        "y": 220,
        "wires": []
    },
    {
        "id": "d4e4552a6e429ca2",
        "type": "link in",
        "z": "aa547d69.9cb8e",
        "name": "",
        "links": [
            "bc99cf40ab6d6e51"
        ],
        "x": 65,
        "y": 220,
        "wires": [
            [
                "cd3f340c.1706c8",
                "d3d47a3e10781e4d"
            ]
        ]
    },
    {
        "id": "1e198fdd729abbe4",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 8,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Voltaje L2-L3",
        "format": "{{msg.VL2L3}} VAC",
        "layout": "col-center",
        "x": 570,
        "y": 260,
        "wires": []
    },
    {
        "id": "74b5b171e69e432f",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 14,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Voltaje L1-L3",
        "format": "{{msg.VL1L3}} VAC",
        "layout": "col-center",
        "x": 570,
        "y": 300,
        "wires": []
    },
    {
        "id": "8c85a2863fa5d796",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 3,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Voltaje L1-N",
        "format": "{{msg.VL1N}} VAC",
        "layout": "col-center",
        "x": 400,
        "y": 220,
        "wires": []
    },
    {
        "id": "fb327ab1ca42c55c",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 9,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Voltaje L2-N",
        "format": "{{msg.VL2N}} VAC",
        "layout": "col-center",
        "x": 400,
        "y": 260,
        "wires": []
    },
    {
        "id": "d7e7d882e120bbac",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 15,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Voltaje L3-N",
        "format": "{{msg.VL3N}} VAC",
        "layout": "col-center",
        "x": 400,
        "y": 300,
        "wires": []
    },
    {
        "id": "d7424337f0afdb1e",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 4,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Corriente L1",
        "format": "{{msg.CL1}} A",
        "layout": "col-center",
        "x": 740,
        "y": 220,
        "wires": []
    },
    {
        "id": "33fbc077863bf214",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 10,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Corriente L2",
        "format": "{{msg.CL2}} A",
        "layout": "col-center",
        "x": 740,
        "y": 260,
        "wires": []
    },
    {
        "id": "92879f0db2d33c77",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 16,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "Corriente L3",
        "format": "{{msg.CL3}} A",
        "layout": "col-center",
        "x": 740,
        "y": 300,
        "wires": []
    },
    {
        "id": "a022b1638c40e2d4",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 5,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "P. Activa L1",
        "format": "{{msg.L1_kW}} kW",
        "layout": "col-center",
        "x": 910,
        "y": 220,
        "wires": []
    },
    {
        "id": "c499dcb5ef5697b0",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 11,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "P. Activa L2",
        "format": "{{msg.L2_kW}} kW",
        "layout": "col-center",
        "x": 910,
        "y": 260,
        "wires": []
    },
    {
        "id": "762a782f6f35ebe6",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 17,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "P. Activa L3",
        "format": "{{msg.L3_kW}} kW",
        "layout": "col-center",
        "x": 910,
        "y": 300,
        "wires": []
    },
    {
        "id": "61956eafcbc929ed",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 6,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "P. Aparente L1",
        "format": "{{msg.L1_kVA}} kVA",
        "layout": "col-center",
        "x": 1090,
        "y": 220,
        "wires": []
    },
    {
        "id": "ddf34afe525e8000",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 12,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "P. Aparente L2",
        "format": "{{msg.L2_kVA}} kVA",
        "layout": "col-center",
        "x": 1090,
        "y": 260,
        "wires": []
    },
    {
        "id": "685b153041347c40",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 18,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "P. Aparente  L3",
        "format": "{{msg.L3_kVA}} kVA",
        "layout": "col-center",
        "x": 1090,
        "y": 300,
        "wires": []
    },
    {
        "id": "ce2acc58edb02677",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 7,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "P. Reactiva L1",
        "format": "{{msg.L1_kVAR}} kVAR",
        "layout": "col-center",
        "x": 1280,
        "y": 220,
        "wires": []
    },
    {
        "id": "7617e107945bf319",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 13,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "P. Reactiva L2",
        "format": "{{msg.L2_kVAR}} kVAR",
        "layout": "col-center",
        "x": 1280,
        "y": 260,
        "wires": []
    },
    {
        "id": "7c6447ff989f473e",
        "type": "ui_text",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "order": 19,
        "width": 4,
        "height": 2,
        "name": "",
        "label": "P. Reactiva L3",
        "format": "{{msg.L3_kVAR}} kVAR",
        "layout": "col-center",
        "x": 1280,
        "y": 300,
        "wires": []
    },
    {
        "id": "9f7411a7cc83b029",
        "type": "ui_template",
        "z": "aa547d69.9cb8e",
        "group": "cc789a9d.61fab8",
        "name": "Titulo Datos eléctricos",
        "order": 1,
        "width": 24,
        "height": 2,
        "format": "<div ng-bind-html=\"msg.payload | trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 450,
        "y": 410,
        "wires": [
            []
        ]
    },
    {
        "id": "d3d47a3e10781e4d",
        "type": "template",
        "z": "aa547d69.9cb8e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n\n</head>\n\n<body>\n    <h1><b><center>Datos eléctricos clúster CASE0096</center></b></h1>\n</body>\n\n</html>",
        "output": "str",
        "x": 270,
        "y": 410,
        "wires": [
            [
                "9f7411a7cc83b029"
            ]
        ]
    },
    {
        "id": "db4708faaa5ac7b5",
        "type": "change",
        "z": "a409994f70cf4cc4",
        "g": "b75b4b5233e4eb65",
        "name": "Estado CCP",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"group\":{\t       \"hide\":[ \"Datos_eléctricos_clúster_Analisis_electrico_CCP\"],\t       \"show\":[ \"Datos_eléctricos_clúster_Estado_CCP\"]\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 1390,
        "wires": [
            [
                "053623fb4ec2e26f"
            ]
        ]
    },
    {
        "id": "9d98a2129132376e",
        "type": "inject",
        "z": "e521d174e7104ca1",
        "d": true,
        "g": "fd043472d98f9c2f",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 140,
        "y": 450,
        "wires": [
            [
                "197d21ec14a2be14"
            ]
        ]
    },
    {
        "id": "197d21ec14a2be14",
        "type": "function",
        "z": "e521d174e7104ca1",
        "d": true,
        "g": "fd043472d98f9c2f",
        "name": "",
        "func": "var Bandera = context.get(\"Bandera\", 'memoryOnly');\nif (Bandera) {\n    context.set(\"Bandera\", false, 'memoryOnly');\n}\nelse {\n    context.set(\"Bandera\", true, 'memoryOnly');\n}\nmsg.payload = Bandera;\nnode.status({ fill: \"green\", shape: \"dot\", text: \"Bandera: \" + msg.payload });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 450,
        "wires": [
            [
                "c51623889408d427"
            ]
        ]
    },
    {
        "id": "c51623889408d427",
        "type": "eth-ip out",
        "z": "e521d174e7104ca1",
        "d": true,
        "g": "fd043472d98f9c2f",
        "endpoint": "840b5464d21970fd",
        "variable": "Comunicacion_HMI_PLC",
        "program": "",
        "name": "",
        "x": 460,
        "y": 450,
        "wires": []
    },
    {
        "id": "53d8091c95b2bb91",
        "type": "eth-ip in",
        "z": "e521d174e7104ca1",
        "d": true,
        "g": "fd043472d98f9c2f",
        "endpoint": "9672b85c4451585b",
        "mode": "single",
        "variable": "Status_Com_PLC_HMI_1.TT",
        "program": "",
        "name": "",
        "x": 180,
        "y": 530,
        "wires": [
            [
                "1756efa5047ff391",
                "1f632255cb1722ff"
            ]
        ]
    },
    {
        "id": "1f632255cb1722ff",
        "type": "delay",
        "z": "e521d174e7104ca1",
        "d": true,
        "g": "fd043472d98f9c2f",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "x": 400,
        "y": 550,
        "wires": [
            [
                "23cd048150c665a3"
            ]
        ]
    },
    {
        "id": "1756efa5047ff391",
        "type": "change",
        "z": "e521d174e7104ca1",
        "d": true,
        "g": "fd043472d98f9c2f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 510,
        "wires": [
            [
                "23cd048150c665a3"
            ]
        ]
    },
    {
        "id": "23cd048150c665a3",
        "type": "trigger",
        "z": "e521d174e7104ca1",
        "d": true,
        "g": "fd043472d98f9c2f",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "5",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "reset",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 580,
        "y": 510,
        "wires": [
            [
                "4e7a6d85a6662864",
                "05aa201180649b16"
            ]
        ]
    },
    {
        "id": "4e7a6d85a6662864",
        "type": "debug",
        "z": "e521d174e7104ca1",
        "d": true,
        "g": "fd043472d98f9c2f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 740,
        "y": 550,
        "wires": []
    },
    {
        "id": "05aa201180649b16",
        "type": "change",
        "z": "e521d174e7104ca1",
        "d": true,
        "g": "fd043472d98f9c2f",
        "name": "Status_PLC_COM",
        "rules": [
            {
                "t": "set",
                "p": "#:(memoryOnly)::Status_PLC_COM",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 510,
        "wires": [
            []
        ]
    },
    {
        "id": "7ecaa3f7e96aa7c9",
        "type": "ui_toast",
        "z": "e521d174e7104ca1",
        "position": "top right",
        "displayTime": "8",
        "highlight": "red",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "Notificación borde rojo",
        "x": 490,
        "y": 650,
        "wires": []
    },
    {
        "id": "2c792793e7d5550b",
        "type": "ui_toast",
        "z": "e521d174e7104ca1",
        "position": "top right",
        "displayTime": "8",
        "highlight": "green",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "Notificación borde verde",
        "x": 500,
        "y": 690,
        "wires": []
    },
    {
        "id": "33e2930d13a2ec2b",
        "type": "ui_toast",
        "z": "e521d174e7104ca1",
        "position": "top right",
        "displayTime": "8",
        "highlight": "yellow",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "Notificación borde amarillo",
        "x": 510,
        "y": 730,
        "wires": []
    },
    {
        "id": "8be5483005b96d16",
        "type": "link in",
        "z": "e521d174e7104ca1",
        "name": "Notificación roja",
        "links": [
            "34e61f0acdfbe811",
            "b13f7069320f03ce",
            "991eb055c9a9be2b",
            "dd0bfe62af67d677"
        ],
        "x": 355,
        "y": 650,
        "wires": [
            [
                "7ecaa3f7e96aa7c9"
            ]
        ]
    },
    {
        "id": "6c2bad5b885f74fd",
        "type": "link in",
        "z": "e521d174e7104ca1",
        "name": "Notificación verde",
        "links": [
            "8c4ae2530865a4bc",
            "8cf04e500b246f90",
            "35cde5193b778c94",
            "acb3163797abe44e",
            "afb58a546368ee20",
            "acd53fe898395050",
            "a4a38a6812fcbe0c",
            "6f2d66e5045c1f08",
            "c9431e31a85352c5",
            "2d18199a5c5712c0",
            "83fe066f74219d58",
            "571b11117e80a0d2",
            "6c9cbc5f13c208de",
            "2a4b9087d5ee1da1",
            "04773618fbf0dcda",
            "dfc052d89d43424b",
            "154b741a5abdbb7d",
            "bd2e2cacb5c2d7cb",
            "cfb2c42d93e9e1ee",
            "280e4cd5c1140e28",
            "9ad294dc5c727876",
            "d97988d997fd4a60",
            "69468fe7909081de",
            "7bc4ef3f5c4b4a92",
            "1d502d179b7be8e0",
            "172b71e894976487",
            "2582b79a5a66256a",
            "7a848364d51272bd",
            "15dd3565585026a6",
            "0e88388fcb5738cd",
            "05d0671af4728704",
            "dcc5b47701793560",
            "53068a30972e632b",
            "7d68ef265d1e3035",
            "da1899281ec8a4bc",
            "c98c6a0b37ce9501",
            "a230ddb8aeaa2e12",
            "a1cabd508d95e630",
            "e83ec346916a6a44",
            "0db3231e87512499"
        ],
        "x": 355,
        "y": 690,
        "wires": [
            [
                "2c792793e7d5550b"
            ]
        ]
    },
    {
        "id": "a63a7d4884a36264",
        "type": "link in",
        "z": "e521d174e7104ca1",
        "name": "Notificación amarilla",
        "links": [
            "d27d1f89019d8a16",
            "2e04301f0ad2bc1c"
        ],
        "x": 355,
        "y": 730,
        "wires": [
            [
                "33e2930d13a2ec2b"
            ]
        ]
    },
    {
        "id": "88e39700f7042263",
        "type": "switch",
        "z": "c8989d0a.49ea8",
        "g": "a0798509.56f3c8",
        "name": "",
        "property": "#:(memoryOnly)::Status_PLC_COM",
        "propertyType": "global",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 110,
        "wires": [
            []
        ]
    },
    {
        "id": "1437e72f5a804b3b",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "group": "ce04ff9503714276",
        "name": "THT SCP7",
        "order": 3,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 540,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "473726524e154a1f",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "group": "ce04ff9503714276",
        "name": "THP SCP7",
        "order": 2,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 540,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "51081c83c9cef8b7",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "group": "b87436fa5ffcfaff",
        "name": "THP SCP8",
        "order": 2,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 540,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "b9fc8ea3105d14ae",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "group": "b87436fa5ffcfaff",
        "name": "THT SCP8",
        "order": 3,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 540,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "1f78e21de434e722",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "group": "293ed8c46314aa68",
        "name": "THT SCP9",
        "order": 3,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 540,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "3b76a1a9216fb434",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "group": "293ed8c46314aa68",
        "name": "THP SCP9",
        "order": 2,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 540,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "bbae5a0fbe59bcce",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "64cc751322ef5934",
        "name": "SCP1",
        "func": "var Cluster     = global.get(\"Cluster\",\"memoryOnly\");\nvar Estado_VSD = global.get(\"Cluster.SCP1.VSD.Estado\", \"memoryOnly\");\nvar THP = (Cluster.SCP1.INST.THP_PIT_PV).toFixed(2);\nvar THT = (Cluster.SCP1.INST.THT_TIT_PV).toFixed(2);\n\nif (Estado_VSD == 4) {\n    msg.THT = \"------\";\n    msg.THP = \"------\";\n} else if (Estado_VSD == 0 || Estado_VSD == 1 || Estado_VSD == 2 || Estado_VSD == 3) {\n    msg.THT = THT + \" °F\";\n    msg.THP = THP + \" PSI\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 120,
        "wires": [
            [
                "33ac7a0e3663121c",
                "0b8b05a7b4d325e9"
            ]
        ]
    },
    {
        "id": "33ac7a0e3663121c",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "64cc751322ef5934",
        "group": "ce58b093f470f8dc",
        "order": 4,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Presión cabeza ",
        "format": "<font size =4px>{{msg.THP}}",
        "layout": "col-center",
        "x": 500,
        "y": 80,
        "wires": []
    },
    {
        "id": "b25f21c072a89d76",
        "type": "link in",
        "z": "0dd66b875552d6bc",
        "g": "64cc751322ef5934",
        "name": "",
        "links": [
            "0bea077dd52f0325"
        ],
        "x": 195,
        "y": 180,
        "wires": [
            [
                "bbae5a0fbe59bcce",
                "4793bc4fc745636c",
                "9a6313d8c0495a06",
                "1f0709f959c285f0"
            ]
        ]
    },
    {
        "id": "0b8b05a7b4d325e9",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "64cc751322ef5934",
        "group": "ce58b093f470f8dc",
        "order": 5,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Temp. cabeza",
        "format": "<font size =4px>{{msg.THT}}",
        "layout": "col-center",
        "x": 500,
        "y": 120,
        "wires": []
    },
    {
        "id": "39e883bf7ad9c69c",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "64cc751322ef5934",
        "group": "ce58b093f470f8dc",
        "name": "",
        "order": 1,
        "width": "8",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 620,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "4793bc4fc745636c",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "64cc751322ef5934",
        "name": "Pozo SCP1",
        "func": "var Nombre_del_Pozo = global.get(\"Cluster[0].Nombre\");\nmsg.Wellname = Nombre_del_Pozo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 160,
        "wires": [
            [
                "4d3ee88d550db7e3"
            ]
        ]
    },
    {
        "id": "4d3ee88d550db7e3",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "64cc751322ef5934",
        "name": "SCP 1",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{Wellname}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 490,
        "y": 160,
        "wires": [
            [
                "39e883bf7ad9c69c"
            ]
        ]
    },
    {
        "id": "9a6313d8c0495a06",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "64cc751322ef5934",
        "name": "Nombre THT SCP1",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-TT-00961</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 370,
        "y": 200,
        "wires": [
            [
                "38b713544719c774"
            ]
        ]
    },
    {
        "id": "38b713544719c774",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "64cc751322ef5934",
        "group": "ce58b093f470f8dc",
        "name": "THT SCP1",
        "order": 3,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 560,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "1f0709f959c285f0",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "64cc751322ef5934",
        "name": "Nombre THP SCP1",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-PT-00961</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 370,
        "y": 240,
        "wires": [
            [
                "a268c6438f8a7858"
            ]
        ]
    },
    {
        "id": "a268c6438f8a7858",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "64cc751322ef5934",
        "group": "ce58b093f470f8dc",
        "name": "THP SCP1",
        "order": 2,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 560,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "f9e738f8a1629bbc",
        "type": "link in",
        "z": "0dd66b875552d6bc",
        "g": "38e22d287129a8ea",
        "name": "",
        "links": [
            "0bea077dd52f0325"
        ],
        "x": 195,
        "y": 430,
        "wires": [
            [
                "787fd68ca75216ab",
                "0ceca3af17b4f17a",
                "951d6df4b4cbc7c9",
                "80d214b62db56bc9"
            ]
        ]
    },
    {
        "id": "787fd68ca75216ab",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "38e22d287129a8ea",
        "name": "SCP2",
        "func": "var Cluster = global.get(\"Cluster\", \"memoryOnly\");\nvar Estado_VSD = global.get(\"Cluster.SCP2.VSD.Estado\", \"memoryOnly\");\nvar THP = (Cluster.SCP2.INST.THP_PIT_PV).toFixed(2);\nvar THT = (Cluster.SCP2.INST.THT_TIT_PV).toFixed(2);\n\nif (Estado_VSD == 4) {\n    msg.THT = \"------\";\n    msg.THP = \"------\";\n} else if (Estado_VSD == 0 || Estado_VSD == 1 || Estado_VSD == 2 || Estado_VSD == 3) {\n    msg.THT = THT + \" °F\";\n    msg.THP = THP + \" PSI\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 370,
        "wires": [
            [
                "9c6ff010dc9d4920",
                "8e54d373d18f63d7"
            ]
        ]
    },
    {
        "id": "9c6ff010dc9d4920",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "38e22d287129a8ea",
        "group": "26480ddee04313ab",
        "order": 4,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Presión cabeza ",
        "format": "<font size =4px>{{msg.THP}}",
        "layout": "col-center",
        "x": 500,
        "y": 330,
        "wires": []
    },
    {
        "id": "8e54d373d18f63d7",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "38e22d287129a8ea",
        "group": "26480ddee04313ab",
        "order": 5,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Temp. cabeza",
        "format": "<font size =4px>{{msg.THT}}",
        "layout": "col-center",
        "x": 500,
        "y": 370,
        "wires": []
    },
    {
        "id": "fcce4ee41deefce0",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "38e22d287129a8ea",
        "group": "26480ddee04313ab",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 620,
        "y": 410,
        "wires": [
            []
        ]
    },
    {
        "id": "0ceca3af17b4f17a",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "38e22d287129a8ea",
        "name": "Pozo SCP2",
        "func": "var Nombre_del_Pozo = global.get(\"Cluster[1].Nombre\");\nmsg.Wellname = Nombre_del_Pozo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 410,
        "wires": [
            [
                "99acea264230fa12"
            ]
        ]
    },
    {
        "id": "99acea264230fa12",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "38e22d287129a8ea",
        "name": "SCP 2",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{Wellname}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 490,
        "y": 410,
        "wires": [
            [
                "fcce4ee41deefce0"
            ]
        ]
    },
    {
        "id": "951d6df4b4cbc7c9",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "38e22d287129a8ea",
        "name": "Nombre THT SCP2",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-TT-00962</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 370,
        "y": 450,
        "wires": [
            [
                "97b6e1dcfa2ab810"
            ]
        ]
    },
    {
        "id": "80d214b62db56bc9",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "38e22d287129a8ea",
        "name": "Nombre THP SCP2",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-PT-00962</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 370,
        "y": 490,
        "wires": [
            [
                "8e8519153dd1d5b1"
            ]
        ]
    },
    {
        "id": "97b6e1dcfa2ab810",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "38e22d287129a8ea",
        "group": "26480ddee04313ab",
        "name": "THT SCP2",
        "order": 3,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 560,
        "y": 450,
        "wires": [
            []
        ]
    },
    {
        "id": "8e8519153dd1d5b1",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "38e22d287129a8ea",
        "group": "26480ddee04313ab",
        "name": "THP SCP2",
        "order": 2,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 560,
        "y": 490,
        "wires": [
            []
        ]
    },
    {
        "id": "0ae00dda62a8086b",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "750dd829ec7858d9",
        "name": "SCP3",
        "func": "var Cluster = global.get(\"Cluster\", \"memoryOnly\");\nvar Estado_VSD = global.get(\"Cluster.SCP3.VSD.Estado\", \"memoryOnly\");\nvar THP = (Cluster.SCP3.INST.THP_PIT_PV).toFixed(2);\nvar THT = (Cluster.SCP3.INST.THT_TIT_PV).toFixed(2);\n\nif (Estado_VSD == 4) {\n    msg.THT = \"------\";\n    msg.THP = \"------\";\n} else if (Estado_VSD == 0 || Estado_VSD == 1 || Estado_VSD == 2 || Estado_VSD == 3) {\n    msg.THT = THT + \" °F\";\n    msg.THP = THP + \" PSI\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 620,
        "wires": [
            [
                "b7ee3e791f2f5bd5",
                "2b0b3db582739a3f"
            ]
        ]
    },
    {
        "id": "79fb845d5e01a13b",
        "type": "link in",
        "z": "0dd66b875552d6bc",
        "g": "750dd829ec7858d9",
        "name": "",
        "links": [
            "0bea077dd52f0325"
        ],
        "x": 195,
        "y": 680,
        "wires": [
            [
                "0ae00dda62a8086b",
                "4c39ad9710b549bc",
                "d03e529c3124753f",
                "46298b9bf300450b"
            ]
        ]
    },
    {
        "id": "b7ee3e791f2f5bd5",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "750dd829ec7858d9",
        "group": "1da706f94581f20c",
        "order": 4,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Presión cabeza ",
        "format": "<font size =4px>{{msg.THP}}",
        "layout": "col-center",
        "x": 500,
        "y": 580,
        "wires": []
    },
    {
        "id": "2b0b3db582739a3f",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "750dd829ec7858d9",
        "group": "1da706f94581f20c",
        "order": 5,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Temp. cabeza",
        "format": "<font size =4px>{{msg.THT}}",
        "layout": "col-center",
        "x": 500,
        "y": 620,
        "wires": []
    },
    {
        "id": "d8a8ed3038ebcf62",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "750dd829ec7858d9",
        "group": "1da706f94581f20c",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 620,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "4c39ad9710b549bc",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "750dd829ec7858d9",
        "name": "Pozo SCP3",
        "func": "var Nombre_del_Pozo = global.get(\"Cluster[2].Nombre\");\nmsg.Wellname = Nombre_del_Pozo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 660,
        "wires": [
            [
                "eeb631996f5a5ac1"
            ]
        ]
    },
    {
        "id": "eeb631996f5a5ac1",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "750dd829ec7858d9",
        "name": "SCP 3",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{Wellname}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 490,
        "y": 660,
        "wires": [
            [
                "d8a8ed3038ebcf62"
            ]
        ]
    },
    {
        "id": "d03e529c3124753f",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "750dd829ec7858d9",
        "name": "Nombre THT SCP3",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-TT-00963</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 370,
        "y": 700,
        "wires": [
            [
                "566a0fce5217ea06"
            ]
        ]
    },
    {
        "id": "46298b9bf300450b",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "750dd829ec7858d9",
        "name": "Nombre THP SCP3",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-PT-00963</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 370,
        "y": 740,
        "wires": [
            [
                "8704fb9191b3c44d"
            ]
        ]
    },
    {
        "id": "566a0fce5217ea06",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "750dd829ec7858d9",
        "group": "1da706f94581f20c",
        "name": "THT SCP3",
        "order": 3,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 560,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "8704fb9191b3c44d",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "750dd829ec7858d9",
        "group": "1da706f94581f20c",
        "name": "THP SCP3",
        "order": 2,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 560,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "7d8a9efd01a681e4",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "ea89d8ce08984fd2",
        "name": "SCP4",
        "func": "var Cluster = global.get(\"Cluster\", \"memoryOnly\");\nvar Estado_VSD = global.get(\"Cluster.SCP4.VSD.Estado\", \"memoryOnly\");\nvar THP = (Cluster.SCP4.INST.THP_PIT_PV).toFixed(2);\nvar THT = (Cluster.SCP4.INST.THT_TIT_PV).toFixed(2);\n\nif (Estado_VSD == 4) {\n    msg.THT = \"------\";\n    msg.THP = \"------\";\n} else if (Estado_VSD == 0 || Estado_VSD == 1 || Estado_VSD == 2 || Estado_VSD == 3) {\n    msg.THT = THT + \" °F\";\n    msg.THP = THP + \" PSI\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 870,
        "wires": [
            [
                "ce0007ba9a293d80",
                "ee41171b6b15eb17"
            ]
        ]
    },
    {
        "id": "8d32439056797752",
        "type": "link in",
        "z": "0dd66b875552d6bc",
        "g": "ea89d8ce08984fd2",
        "name": "",
        "links": [
            "0bea077dd52f0325"
        ],
        "x": 195,
        "y": 930,
        "wires": [
            [
                "7d8a9efd01a681e4",
                "a4b198269b7aabe7",
                "b8ab71a82b3187f8",
                "4b662789f5c979a5"
            ]
        ]
    },
    {
        "id": "ce0007ba9a293d80",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "ea89d8ce08984fd2",
        "group": "e7646dae311fa50e",
        "order": 4,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Presión cabeza ",
        "format": "<font size =4px>{{msg.THP}}",
        "layout": "col-center",
        "x": 500,
        "y": 830,
        "wires": []
    },
    {
        "id": "ee41171b6b15eb17",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "ea89d8ce08984fd2",
        "group": "e7646dae311fa50e",
        "order": 5,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Temp. cabeza",
        "format": "<font size =4px>{{msg.THT}}",
        "layout": "col-center",
        "x": 500,
        "y": 870,
        "wires": []
    },
    {
        "id": "bea26cdcb475708b",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "ea89d8ce08984fd2",
        "group": "e7646dae311fa50e",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 620,
        "y": 910,
        "wires": [
            []
        ]
    },
    {
        "id": "a4b198269b7aabe7",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "ea89d8ce08984fd2",
        "name": "Pozo SCP4",
        "func": "var Nombre_del_Pozo = global.get(\"Cluster[3].Nombre\");\nmsg.Wellname = Nombre_del_Pozo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 910,
        "wires": [
            [
                "69d637f38fcd9ee8"
            ]
        ]
    },
    {
        "id": "69d637f38fcd9ee8",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "ea89d8ce08984fd2",
        "name": "SCP 4",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{Wellname}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 490,
        "y": 910,
        "wires": [
            [
                "bea26cdcb475708b"
            ]
        ]
    },
    {
        "id": "b8ab71a82b3187f8",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "ea89d8ce08984fd2",
        "name": "Nombre THT SCP4",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-TT-00964</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 370,
        "y": 950,
        "wires": [
            [
                "c508ef59a28bfbec"
            ]
        ]
    },
    {
        "id": "4b662789f5c979a5",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "ea89d8ce08984fd2",
        "name": "Nombre THP SCP4",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-PT-00964</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 370,
        "y": 990,
        "wires": [
            [
                "0037d0d2bc04a4e0"
            ]
        ]
    },
    {
        "id": "c508ef59a28bfbec",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "ea89d8ce08984fd2",
        "group": "e7646dae311fa50e",
        "name": "THT SCP4",
        "order": 3,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 560,
        "y": 950,
        "wires": [
            []
        ]
    },
    {
        "id": "0037d0d2bc04a4e0",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "ea89d8ce08984fd2",
        "group": "e7646dae311fa50e",
        "name": "THP SCP4",
        "order": 2,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 560,
        "y": 990,
        "wires": [
            []
        ]
    },
    {
        "id": "5f01be5b0e092fc6",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "4bd44e626bbf406c",
        "name": "SCP5",
        "func": "var Cluster = global.get(\"Cluster\", \"memoryOnly\");\nvar Estado_VSD = global.get(\"Cluster.SCP5.VSD.Estado\", \"memoryOnly\");\nvar THP = (Cluster.SCP5.INST.THP_PIT_PV).toFixed(2);\nvar THT = (Cluster.SCP5.INST.THT_TIT_PV).toFixed(2);\n\nif (Estado_VSD == 4) {\n    msg.THT = \"------\";\n    msg.THP = \"------\";\n} else if (Estado_VSD == 0 || Estado_VSD == 1 || Estado_VSD == 2 || Estado_VSD == 3) {\n    msg.THT = THT + \" °F\";\n    msg.THP = THP + \" PSI\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1120,
        "wires": [
            [
                "87428f9aeff14226",
                "0717b76e7038d01c"
            ]
        ]
    },
    {
        "id": "3640b09426630830",
        "type": "link in",
        "z": "0dd66b875552d6bc",
        "g": "4bd44e626bbf406c",
        "name": "",
        "links": [
            "0bea077dd52f0325"
        ],
        "x": 195,
        "y": 1180,
        "wires": [
            [
                "5f01be5b0e092fc6",
                "d8e8cabcbd54bfc9",
                "8ce5fe500c5b1513",
                "ee847912f9e40353"
            ]
        ]
    },
    {
        "id": "87428f9aeff14226",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "4bd44e626bbf406c",
        "group": "489a7baf80e178f1",
        "order": 4,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Presión cabeza ",
        "format": "<font size =4px>{{msg.THP}}",
        "layout": "col-center",
        "x": 490,
        "y": 1080,
        "wires": []
    },
    {
        "id": "0717b76e7038d01c",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "4bd44e626bbf406c",
        "group": "489a7baf80e178f1",
        "order": 5,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Temp. cabeza",
        "format": "<font size =4px>{{msg.THT}}",
        "layout": "col-center",
        "x": 490,
        "y": 1120,
        "wires": []
    },
    {
        "id": "7e8f5389d2a93bd6",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "4bd44e626bbf406c",
        "group": "489a7baf80e178f1",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 620,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "d8e8cabcbd54bfc9",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "4bd44e626bbf406c",
        "name": "Pozo SCP5",
        "func": "var Nombre_del_Pozo = global.get(\"Cluster[4].Nombre\");\nmsg.Wellname = Nombre_del_Pozo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1160,
        "wires": [
            [
                "d56907c54e8e1596"
            ]
        ]
    },
    {
        "id": "d56907c54e8e1596",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "4bd44e626bbf406c",
        "name": "SCP 5",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{Wellname}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 480,
        "y": 1160,
        "wires": [
            [
                "7e8f5389d2a93bd6"
            ]
        ]
    },
    {
        "id": "8ce5fe500c5b1513",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "4bd44e626bbf406c",
        "name": "Nombre THT SCP5",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-TT-00965</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 360,
        "y": 1200,
        "wires": [
            [
                "d081d71ef70e45f4"
            ]
        ]
    },
    {
        "id": "ee847912f9e40353",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "4bd44e626bbf406c",
        "name": "Nombre THP SCP5",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-PT-00965</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 360,
        "y": 1240,
        "wires": [
            [
                "4d57b96fde22f032"
            ]
        ]
    },
    {
        "id": "d081d71ef70e45f4",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "4bd44e626bbf406c",
        "group": "489a7baf80e178f1",
        "name": "THT SCP5",
        "order": 3,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 550,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "4d57b96fde22f032",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "4bd44e626bbf406c",
        "group": "489a7baf80e178f1",
        "name": "THP SCP5",
        "order": 2,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 550,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "677cd1ee31d78d8d",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "a7308af0919f6403",
        "name": "SCP6",
        "func": "var Cluster = global.get(\"Cluster\", \"memoryOnly\");\nvar Estado_VSD = global.get(\"Cluster.SCP6.VSD.Estado\", \"memoryOnly\");\nvar THP = (Cluster.SCP6.INST.THP_PIT_PV).toFixed(2);\nvar THT = (Cluster.SCP6.INST.THT_TIT_PV).toFixed(2);\n\nif (Estado_VSD == 4) {\n    msg.THT = \"------\";\n    msg.THP = \"------\";\n} else if (Estado_VSD == 0 || Estado_VSD == 1 || Estado_VSD == 2 || Estado_VSD == 3) {\n    msg.THT = THT + \" °F\";\n    msg.THP = THP + \" PSI\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1380,
        "wires": [
            [
                "72f8401580fcc052",
                "18ad6cc163845bd6"
            ]
        ]
    },
    {
        "id": "a998910bbff4676e",
        "type": "link in",
        "z": "0dd66b875552d6bc",
        "g": "a7308af0919f6403",
        "name": "",
        "links": [
            "0bea077dd52f0325"
        ],
        "x": 195,
        "y": 1440,
        "wires": [
            [
                "677cd1ee31d78d8d",
                "9fc84a9fe53244bc",
                "d9f8b649767637fb",
                "6cd2728790313f7e"
            ]
        ]
    },
    {
        "id": "72f8401580fcc052",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "a7308af0919f6403",
        "group": "47fd3d535dbc0b67",
        "order": 4,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Presión cabeza ",
        "format": "<font size =4px>{{msg.THP}}",
        "layout": "col-center",
        "x": 490,
        "y": 1340,
        "wires": []
    },
    {
        "id": "18ad6cc163845bd6",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "a7308af0919f6403",
        "group": "47fd3d535dbc0b67",
        "order": 5,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Temp. cabeza",
        "format": "<font size =4px>{{msg.THT}}",
        "layout": "col-center",
        "x": 490,
        "y": 1380,
        "wires": []
    },
    {
        "id": "8a9f952f13531107",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "a7308af0919f6403",
        "group": "47fd3d535dbc0b67",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 620,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "9fc84a9fe53244bc",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "a7308af0919f6403",
        "name": "Pozo SCP6",
        "func": "var Nombre_del_Pozo = global.get(\"Cluster[5].Nombre\");\nmsg.Wellname = Nombre_del_Pozo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1420,
        "wires": [
            [
                "ebccaaefe8e75b09"
            ]
        ]
    },
    {
        "id": "ebccaaefe8e75b09",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "a7308af0919f6403",
        "name": "SCP 6",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{Wellname}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 480,
        "y": 1420,
        "wires": [
            [
                "8a9f952f13531107"
            ]
        ]
    },
    {
        "id": "d9f8b649767637fb",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "a7308af0919f6403",
        "name": "Nombre THT SCP6",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-TT-00966</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 360,
        "y": 1460,
        "wires": [
            [
                "c1ab4100666af48a"
            ]
        ]
    },
    {
        "id": "6cd2728790313f7e",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "a7308af0919f6403",
        "name": "Nombre THP SCP6",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-PT-00966</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 360,
        "y": 1500,
        "wires": [
            [
                "b3664ef992bce9bb"
            ]
        ]
    },
    {
        "id": "c1ab4100666af48a",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "a7308af0919f6403",
        "group": "47fd3d535dbc0b67",
        "name": "THT SCP6",
        "order": 3,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 550,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "b3664ef992bce9bb",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "a7308af0919f6403",
        "group": "47fd3d535dbc0b67",
        "name": "THP SCP6",
        "order": 2,
        "width": "4",
        "height": "1",
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 550,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "53a1a34c6cc2f81e",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "a1277f9ddcd91b3f",
        "name": "SCP7",
        "func": "var Cluster = global.get(\"Cluster\", \"memoryOnly\");\nvar Estado_VSD = global.get(\"Cluster.SCP7.VSD.Estado\", \"memoryOnly\");\nvar THP = (Cluster.SCP7.INST.THP_PIT_PV).toFixed(2);\nvar THT = (Cluster.SCP7.INST.THT_TIT_PV).toFixed(2);\n\nif (Estado_VSD == 4) {\n    msg.THT = \"------\";\n    msg.THP = \"------\";\n} else if (Estado_VSD == 0 || Estado_VSD == 1 || Estado_VSD == 2 || Estado_VSD == 3) {\n    msg.THT = THT + \" °F\";\n    msg.THP = THP + \" PSI\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1620,
        "wires": [
            [
                "d4274be31fc446ca",
                "20d689eb4b2e46bb"
            ]
        ]
    },
    {
        "id": "63439e39cc0fdc8c",
        "type": "link in",
        "z": "0dd66b875552d6bc",
        "g": "a1277f9ddcd91b3f",
        "name": "",
        "links": [
            "0bea077dd52f0325"
        ],
        "x": 195,
        "y": 1700,
        "wires": [
            [
                "53a1a34c6cc2f81e",
                "4859dc6a5f988b62",
                "bf6ba4f89903c541",
                "492f8b6865dad046"
            ]
        ]
    },
    {
        "id": "d4274be31fc446ca",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "a1277f9ddcd91b3f",
        "group": "ce04ff9503714276",
        "order": 4,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Presión cabeza ",
        "format": "<font size =4px>{{msg.THP}}",
        "layout": "col-center",
        "x": 490,
        "y": 1600,
        "wires": []
    },
    {
        "id": "20d689eb4b2e46bb",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "a1277f9ddcd91b3f",
        "group": "ce04ff9503714276",
        "order": 5,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Temp. cabeza",
        "format": "<font size =4px>{{msg.THT}}",
        "layout": "col-center",
        "x": 490,
        "y": 1640,
        "wires": []
    },
    {
        "id": "269b86d499d87a36",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "a1277f9ddcd91b3f",
        "group": "ce04ff9503714276",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 620,
        "y": 1680,
        "wires": [
            []
        ]
    },
    {
        "id": "4859dc6a5f988b62",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "a1277f9ddcd91b3f",
        "name": "Pozo SCP7",
        "func": "var Nombre_del_Pozo = global.get(\"Cluster[6].Nombre\");\nmsg.Wellname = Nombre_del_Pozo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1680,
        "wires": [
            [
                "28dd29257d223ba1"
            ]
        ]
    },
    {
        "id": "28dd29257d223ba1",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "a1277f9ddcd91b3f",
        "name": "SCP 7",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{Wellname}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 480,
        "y": 1680,
        "wires": [
            [
                "269b86d499d87a36"
            ]
        ]
    },
    {
        "id": "bf6ba4f89903c541",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "a1277f9ddcd91b3f",
        "name": "Nombre THT SCP7",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-TT-00967</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 360,
        "y": 1720,
        "wires": [
            [
                "1437e72f5a804b3b"
            ]
        ]
    },
    {
        "id": "492f8b6865dad046",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "a1277f9ddcd91b3f",
        "name": "Nombre THP SCP7",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">CS-CASE0096-PT-00967</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 360,
        "y": 1760,
        "wires": [
            [
                "473726524e154a1f"
            ]
        ]
    },
    {
        "id": "91e016e3f820ccbf",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "67a470604f7a755b",
        "name": "SCP8",
        "func": "var Cluster = global.get(\"Cluster\", \"memoryOnly\");\nvar Estado_VSD = global.get(\"Cluster.SCP8.VSD.Estado\", \"memoryOnly\");\nvar THP = (Cluster.SCP8.INST.THP_PIT_PV).toFixed(2);\nvar THT = (Cluster.SCP8.INST.THT_TIT_PV).toFixed(2);\n\nif (Estado_VSD == 4) {\n    msg.THT = \"------\";\n    msg.THP = \"------\";\n} else if (Estado_VSD == 0 || Estado_VSD == 1 || Estado_VSD == 2 || Estado_VSD == 3) {\n    msg.THT = THT + \" °F\";\n    msg.THP = THP + \" PSI\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1880,
        "wires": [
            [
                "96dd2670c2d473f9",
                "3843b7e2b67ddea2"
            ]
        ]
    },
    {
        "id": "2a661f24233a555f",
        "type": "link in",
        "z": "0dd66b875552d6bc",
        "g": "67a470604f7a755b",
        "name": "",
        "links": [
            "0bea077dd52f0325"
        ],
        "x": 195,
        "y": 1960,
        "wires": [
            [
                "91e016e3f820ccbf",
                "84a81178ab8c3f16",
                "02fc596005c4eedc",
                "d6c13c7a5de39416"
            ]
        ]
    },
    {
        "id": "3843b7e2b67ddea2",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "67a470604f7a755b",
        "group": "b87436fa5ffcfaff",
        "order": 4,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Presión cabeza ",
        "format": "<font size =4px>{{msg.THP}}",
        "layout": "col-center",
        "x": 490,
        "y": 1860,
        "wires": []
    },
    {
        "id": "96dd2670c2d473f9",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "67a470604f7a755b",
        "group": "b87436fa5ffcfaff",
        "order": 5,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Temp. cabeza",
        "format": "<font size =4px>{{msg.THT}}",
        "layout": "col-center",
        "x": 490,
        "y": 1900,
        "wires": []
    },
    {
        "id": "696537aa1984b7bc",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "67a470604f7a755b",
        "group": "b87436fa5ffcfaff",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 620,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "84a81178ab8c3f16",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "67a470604f7a755b",
        "name": "Pozo SCP8",
        "func": "var Nombre_del_Pozo = global.get(\"Cluster[7].Nombre\");\nmsg.Wellname = Nombre_del_Pozo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1940,
        "wires": [
            [
                "f8bad344f0b0ea9a"
            ]
        ]
    },
    {
        "id": "f8bad344f0b0ea9a",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "67a470604f7a755b",
        "name": "SCP 8",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{Wellname}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 480,
        "y": 1940,
        "wires": [
            [
                "696537aa1984b7bc"
            ]
        ]
    },
    {
        "id": "02fc596005c4eedc",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "67a470604f7a755b",
        "name": "Nombre THT SCP8",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">-----</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 360,
        "y": 1980,
        "wires": [
            [
                "b9fc8ea3105d14ae"
            ]
        ]
    },
    {
        "id": "d6c13c7a5de39416",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "67a470604f7a755b",
        "name": "Nombre THP SCP8",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">-----</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 360,
        "y": 2020,
        "wires": [
            [
                "51081c83c9cef8b7"
            ]
        ]
    },
    {
        "id": "d90da710e1c1ab7a",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "a23f5a3789f2ca13",
        "name": "SCP9",
        "func": "var Cluster = global.get(\"Cluster\", \"memoryOnly\");\nvar Estado_VSD = global.get(\"Cluster.SCP9.VSD.Estado\", \"memoryOnly\");\nvar THP = (Cluster.SCP9.INST.THP_PIT_PV).toFixed(2);\nvar THT = (Cluster.SCP9.INST.THT_TIT_PV).toFixed(2);\n\nif (Estado_VSD == 4) {\n    msg.THT = \"------\";\n    msg.THP = \"------\";\n} else if (Estado_VSD == 0 || Estado_VSD == 1 || Estado_VSD == 2 || Estado_VSD == 3) {\n    msg.THT = THT + \" °F\";\n    msg.THP = THP + \" PSI\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 2140,
        "wires": [
            [
                "4a62953eaf5312c2",
                "b7a3f487dd689d68"
            ]
        ]
    },
    {
        "id": "8f5a32b3ebe6f9a8",
        "type": "link in",
        "z": "0dd66b875552d6bc",
        "g": "a23f5a3789f2ca13",
        "name": "",
        "links": [
            "0bea077dd52f0325"
        ],
        "x": 195,
        "y": 2220,
        "wires": [
            [
                "d90da710e1c1ab7a",
                "1bd3155d0ebfa8cd",
                "b88d086ec8d77868",
                "140bcd1b6259e44e"
            ]
        ]
    },
    {
        "id": "4a62953eaf5312c2",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "a23f5a3789f2ca13",
        "group": "293ed8c46314aa68",
        "order": 4,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Presión cabeza ",
        "format": "<font size =4px>{{msg.THP}}",
        "layout": "col-center",
        "x": 490,
        "y": 2120,
        "wires": []
    },
    {
        "id": "b7a3f487dd689d68",
        "type": "ui_text",
        "z": "0dd66b875552d6bc",
        "g": "a23f5a3789f2ca13",
        "group": "293ed8c46314aa68",
        "order": 5,
        "width": "4",
        "height": "2",
        "name": "",
        "label": "Temp. cabeza",
        "format": "<font size =4px>{{msg.THT}}",
        "layout": "col-center",
        "x": 490,
        "y": 2160,
        "wires": []
    },
    {
        "id": "93a3876e9457a1ab",
        "type": "ui_template",
        "z": "0dd66b875552d6bc",
        "g": "a23f5a3789f2ca13",
        "group": "293ed8c46314aa68",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 620,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "1bd3155d0ebfa8cd",
        "type": "function",
        "z": "0dd66b875552d6bc",
        "g": "a23f5a3789f2ca13",
        "name": "Pozo SCP9",
        "func": "var Nombre_del_Pozo = global.get(\"Cluster[8].Nombre\");\nmsg.Wellname = Nombre_del_Pozo;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2200,
        "wires": [
            [
                "1a90063a43a8ea2d"
            ]
        ]
    },
    {
        "id": "1a90063a43a8ea2d",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "a23f5a3789f2ca13",
        "name": "SCP 9",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">{{Wellname}}</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 480,
        "y": 2200,
        "wires": [
            [
                "93a3876e9457a1ab"
            ]
        ]
    },
    {
        "id": "b88d086ec8d77868",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "a23f5a3789f2ca13",
        "name": "Nombre THT SCP9",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">-----</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 360,
        "y": 2240,
        "wires": [
            [
                "1f78e21de434e722"
            ]
        ]
    },
    {
        "id": "140bcd1b6259e44e",
        "type": "template",
        "z": "0dd66b875552d6bc",
        "g": "a23f5a3789f2ca13",
        "name": "Nombre THP SCP9",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h6><span class=\"badge badge-secondary\">-----</span></h6>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 360,
        "y": 2280,
        "wires": [
            [
                "3b76a1a9216fb434"
            ]
        ]
    },
    {
        "id": "9a0b9216db14530e",
        "type": "template",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "SCP 4",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">CS-CASE0383-PT-03830</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 260,
        "y": 100,
        "wires": [
            [
                "e37221e3efababac"
            ]
        ]
    },
    {
        "id": "e37221e3efababac",
        "type": "ui_template",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "group": "ad633f3f.37b43",
        "name": "Titulo PIT",
        "order": 1,
        "width": 6,
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 460,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "a13647535e0c20a6",
        "type": "ui_template",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "group": "ad633f3f.37b43",
        "name": "Titulo FIT",
        "order": 2,
        "width": 6,
        "height": 1,
        "format": "<div ng-bind-html=\"msg.payload |trusted\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 460,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c18438482aa78cfc",
        "type": "template",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "SCP 4",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!doctype html>\n<html lang=\"en\">\n\n<head>\n    <!-- Required meta tags -->\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n\n    <!-- Bootstrap CSS -->\n    <link rel=\"stylesheet\" href=\"http://localhost:1880/bootstrap/dist/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container align-self-center\">\n        <div class=\"row justify-content-center\">\n           <h4><span class=\"badge badge-primary\">CS-CASE0383-FIT-03830</span></h4>\n        </div>\n    </div>\n</body>\n\n<script src=\"http://localhost:1880/jquery/jquery.min.js\"></script>\n<script src=\"http://localhost:1880/popper.js/dist/popper.min.js\"></script>\n<script src=\"http://localhost:1880/bootstrap/dist/js/bootstrap.min.js\"></script>\n\n<style>\n    .disable-select {\n        user-select: none;\n        /* supported by Chrome and Opera */\n        -webkit-user-select: none;\n        /* Safari */\n        -khtml-user-select: none;\n        /* Konqueror HTML */\n        -moz-user-select: none;\n        /* Firefox */\n        -ms-user-select: none;\n        /* Internet Explorer/Edge */\n    }\n\n    .imagen {\n        height: 90px;\n        background-image: url(http://localhost:1880/swcpro-images/hlogo.png);\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center center;\n    }\n</style>\n\n</html>",
        "output": "str",
        "x": 270,
        "y": 260,
        "wires": [
            [
                "a13647535e0c20a6"
            ]
        ]
    },
    {
        "id": "a5be9e647a1b2f3b",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "group": "9699862a.4679e8",
        "order": 7,
        "width": "3",
        "height": 2,
        "name": "Vibracion eje X",
        "label": "Vibración X",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 590,
        "y": 360,
        "wires": []
    },
    {
        "id": "fa1c1388f6ea6d9e",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "group": "9699862a.4679e8",
        "order": 7,
        "width": "3",
        "height": 2,
        "name": "Vibracion eje Y",
        "label": "Vibración Y",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 590,
        "y": 400,
        "wires": []
    },
    {
        "id": "88cdc40fe1b37fa5",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "cd21ba46bdc44b70",
        "group": "9699862a.4679e8",
        "order": 7,
        "width": "3",
        "height": 2,
        "name": "Vibracion eje Z",
        "label": "Vibración Z",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 590,
        "y": 440,
        "wires": []
    },
    {
        "id": "4b85a9e2790b7bae",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "group": "40cbe96.5ec1618",
        "order": 7,
        "width": "3",
        "height": 2,
        "name": "Vibracion eje Y",
        "label": "Vibración Y",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1300,
        "y": 400,
        "wires": []
    },
    {
        "id": "7ff2646d70c075ac",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "f98bc2e0af73e621",
        "group": "40cbe96.5ec1618",
        "order": 7,
        "width": "3",
        "height": 2,
        "name": "Vibracion eje Z",
        "label": "Vibración Z",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 1300,
        "y": 440,
        "wires": []
    },
    {
        "id": "88e528e757b091ac",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "group": "12be7692.1a93f9",
        "order": 7,
        "width": "3",
        "height": 2,
        "name": "Vibracion eje X",
        "label": "Vibración X",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2000,
        "y": 360,
        "wires": []
    },
    {
        "id": "74909346a2727647",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "group": "12be7692.1a93f9",
        "order": 7,
        "width": "3",
        "height": 2,
        "name": "Vibracion eje Y",
        "label": "Vibración Y",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2000,
        "y": 400,
        "wires": []
    },
    {
        "id": "d4afa70e71dfe781",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "0ef33a76c589a53f",
        "group": "12be7692.1a93f9",
        "order": 7,
        "width": "3",
        "height": 2,
        "name": "Vibracion eje Z",
        "label": "Vibración Z",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2000,
        "y": 440,
        "wires": []
    },
    {
        "id": "0b3df8fe40d049d1",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "group": "54c5820f.3a1ccc",
        "order": 7,
        "width": "3",
        "height": 2,
        "name": "Vibracion eje X",
        "label": "Vibración X",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2730,
        "y": 360,
        "wires": []
    },
    {
        "id": "a19e81c383a7e44c",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "group": "54c5820f.3a1ccc",
        "order": 7,
        "width": "3",
        "height": 2,
        "name": "Vibracion eje Y",
        "label": "Vibración Y",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2730,
        "y": 400,
        "wires": []
    },
    {
        "id": "3de8b0576878b726",
        "type": "ui_text",
        "z": "77e50510.f482bc",
        "g": "6c28199fa6fc206b",
        "group": "54c5820f.3a1ccc",
        "order": 7,
        "width": "3",
        "height": 2,
        "name": "Vibracion eje Z",
        "label": "Vibración Z",
        "format": "<font size =4px>{{msg.payload}}",
        "layout": "col-center",
        "x": 2730,
        "y": 440,
        "wires": []
    },
    {
        "id": "5f369438a30f131e",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "a20d6c09c126296e",
        "order": 7,
        "width": 8,
        "height": 2,
        "name": "Vibracion en X",
        "label": "Vibración en X",
        "format": "<font size =4px>{{msg.Vibracion_X}} G",
        "layout": "col-center",
        "x": 780,
        "y": 1300,
        "wires": []
    },
    {
        "id": "53147a8c96b2f39c",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "a20d6c09c126296e",
        "order": 8,
        "width": 8,
        "height": 2,
        "name": "Vibracion en Y",
        "label": "Vibración en Y",
        "format": "<font size =4px>{{msg.Vibracion_Y}} G",
        "layout": "col-center",
        "x": 780,
        "y": 1340,
        "wires": []
    },
    {
        "id": "933dd1c21cde4459",
        "type": "ui_text",
        "z": "e997ba3b.48cc18",
        "g": "d516d3f7ea6bbe72",
        "group": "a20d6c09c126296e",
        "order": 9,
        "width": 8,
        "height": 2,
        "name": "Vibracion en Z",
        "label": "Vibración en Z",
        "format": "<font size =4px>{{msg.Vibracion_Z}} G",
        "layout": "col-center",
        "x": 780,
        "y": 1380,
        "wires": []
    },
    {
        "id": "d2f4febb.5191d",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W01.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP1",
        "x": 890,
        "y": 60,
        "wires": []
    },
    {
        "id": "d938c95c.283108",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W01.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP1",
        "x": 890,
        "y": 110,
        "wires": []
    },
    {
        "id": "47d1f5ad.53fdfc",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W01.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP1",
        "x": 880,
        "y": 160,
        "wires": []
    },
    {
        "id": "e73deb28.ab7c58",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W02.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP2",
        "x": 890,
        "y": 210,
        "wires": []
    },
    {
        "id": "308496cc.1a08fa",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W02.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP2",
        "x": 890,
        "y": 260,
        "wires": []
    },
    {
        "id": "38d893df.8a333c",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W02.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP2",
        "x": 880,
        "y": 310,
        "wires": []
    },
    {
        "id": "8ba61d08.68924",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W03.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP3",
        "x": 890,
        "y": 370,
        "wires": []
    },
    {
        "id": "b804dc17.3c11c",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W03.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP3",
        "x": 890,
        "y": 420,
        "wires": []
    },
    {
        "id": "f853ef97.ea1b",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W03.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP3",
        "x": 880,
        "y": 470,
        "wires": []
    },
    {
        "id": "f7e2b76f.736738",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W04.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP4",
        "x": 890,
        "y": 520,
        "wires": []
    },
    {
        "id": "8d5fdd06.4fa45",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W04.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP4",
        "x": 890,
        "y": 570,
        "wires": []
    },
    {
        "id": "b9f20f86.e4bf1",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W04.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP4",
        "x": 880,
        "y": 620,
        "wires": []
    },
    {
        "id": "8eab2d74.7f1fe",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W05.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP5",
        "x": 890,
        "y": 670,
        "wires": []
    },
    {
        "id": "656bbea4.ffa3f",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W05.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP5",
        "x": 890,
        "y": 720,
        "wires": []
    },
    {
        "id": "160ab9fc.7eb4e6",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W05.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP5",
        "x": 880,
        "y": 770,
        "wires": []
    },
    {
        "id": "e444da6e.5f8128",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W06.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP6",
        "x": 890,
        "y": 820,
        "wires": []
    },
    {
        "id": "25eeaa97.48ca86",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W06.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP6",
        "x": 890,
        "y": 870,
        "wires": []
    },
    {
        "id": "932b0db5.b3daa",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W06.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP6",
        "x": 880,
        "y": 920,
        "wires": []
    },
    {
        "id": "de245ad1.e52908",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W09.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP9",
        "x": 890,
        "y": 1270,
        "wires": []
    },
    {
        "id": "a86fabcb.194488",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W09.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP9",
        "x": 890,
        "y": 1330,
        "wires": []
    },
    {
        "id": "a4fc6f8.fdca09",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W09.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP9",
        "x": 880,
        "y": 1380,
        "wires": []
    },
    {
        "id": "ac4b1a1d.2a0158",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W08.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP8",
        "x": 890,
        "y": 1120,
        "wires": []
    },
    {
        "id": "3851f53d.72a3ea",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W08.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP8",
        "x": 890,
        "y": 1170,
        "wires": []
    },
    {
        "id": "57de4f88.31f6f",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W08.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP8",
        "x": 880,
        "y": 1220,
        "wires": []
    },
    {
        "id": "2bf7ce89.c48ff2",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W07.VSD.Arranque_Remoto_PD",
        "program": "",
        "name": "Arranque SCP7",
        "x": 890,
        "y": 970,
        "wires": []
    },
    {
        "id": "95c6abd4.4862d8",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W07.VSD.Parada_Remota_PD",
        "program": "",
        "name": "Parada SCP7",
        "x": 890,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7998e18f.da1ef",
        "type": "eth-ip out",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "endpoint": "98638e25.bf675",
        "variable": "CLUSTER.W07.VSD.Reset_Remoto_PD",
        "program": "",
        "name": "Reset SCP7",
        "x": 880,
        "y": 1070,
        "wires": []
    },
    {
        "id": "ca6808c4.0ce2b8",
        "type": "function",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "name": "",
        "func": "var Comandos = global.get(\"Comandos\", \"memoryOnly\") || [];\nvar SCP = global.get(\"SCP\", \"memoryOnly\") || [];\n\nvar Arranque = [], Parada = [], Reset = [];\n\nArranque[SCP] = Comandos[SCP].Arranque_Remoto_PD;\nParada[SCP] = Comandos[SCP].Parada_Remota_PD;\nReset[SCP] = Comandos[SCP].Reset_Remoto_PD;\nswitch (SCP) {\n      case 0:\n            var day = \"--\";\n            break;\n\n      case 1:\n\n            var msg0 = { payload: Arranque[1] };\n            var msg1 = { payload: Parada[1] };\n            var msg2 = { payload: Reset[1] };\n            break;\n      case 2:\n\n            var msg3 = { payload: Arranque[2] };\n            var msg4 = { payload: Parada[2] };\n            var msg5 = { payload: Reset[2] };\n            break;\n\n      case 3:\n\n            var msg6 = { payload: Arranque[3] };\n            var msg7 = { payload: Parada[3] };\n            var msg8 = { payload: Reset[3] };\n            break;\n\n      case 4:\n\n            var msg9 = { payload: Arranque[4] };\n            var msg10 = { payload: Parada[4] };\n            var msg11 = { payload: Reset[4] };\n            break;\n\n      case 5:\n\n            var msg12 = { payload: Reset[5] };\n            var msg13 = { payload: Arranque[5] };\n            var msg14 = { payload: Parada[5] };\n            break;\n\n      case 6:\n\n            var msg15 = { payload: Reset[6] };\n            var msg16 = { payload: Arranque[6] };\n            var msg17 = { payload: Parada[6] };\n            break;\n\n      case 7:\n            var msg18 = { payload: Reset[7] };\n            var msg19 = { payload: Arranque[7] };\n            var msg20 = { payload: Parada[7] };\n            break;\n\n      case 8:\n\n            var msg21 = { payload: Reset[8] };\n            var msg22 = { payload: Arranque[8] };\n            var msg23 = { payload: Parada[8] };\n            break;\n\n      case 9:\n\n            var msg24 = { payload: Reset[9] };\n            var msg25 = { payload: Arranque[9] };\n            var msg26 = { payload: Parada[9] };\n}\n\nreturn [msg0, msg1, msg2, msg3, msg4, msg5, msg6, msg7, msg8, msg9, msg10, msg12, msg13, msg14, msg15, msg16, msg17, msg18, msg19, msg20, msg21, msg22, msg23, msg24, msg25, msg26];",
        "outputs": 27,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 720,
        "wires": [
            [
                "d2f4febb.5191d"
            ],
            [
                "d938c95c.283108"
            ],
            [
                "47d1f5ad.53fdfc"
            ],
            [
                "e73deb28.ab7c58"
            ],
            [
                "308496cc.1a08fa"
            ],
            [
                "38d893df.8a333c"
            ],
            [
                "8ba61d08.68924"
            ],
            [
                "b804dc17.3c11c"
            ],
            [
                "f853ef97.ea1b"
            ],
            [
                "f7e2b76f.736738"
            ],
            [
                "8d5fdd06.4fa45"
            ],
            [
                "b9f20f86.e4bf1"
            ],
            [
                "8eab2d74.7f1fe"
            ],
            [
                "656bbea4.ffa3f"
            ],
            [
                "160ab9fc.7eb4e6"
            ],
            [
                "e444da6e.5f8128"
            ],
            [
                "25eeaa97.48ca86"
            ],
            [
                "932b0db5.b3daa"
            ],
            [
                "2bf7ce89.c48ff2"
            ],
            [
                "95c6abd4.4862d8"
            ],
            [
                "7998e18f.da1ef"
            ],
            [
                "ac4b1a1d.2a0158"
            ],
            [
                "3851f53d.72a3ea"
            ],
            [
                "57de4f88.31f6f"
            ],
            [
                "de245ad1.e52908"
            ],
            [
                "a86fabcb.194488"
            ],
            [
                "a4fc6f8.fdca09"
            ]
        ]
    },
    {
        "id": "c5614143.9411",
        "type": "link in",
        "z": "c8989d0a.49ea8",
        "g": "657e2074.735a3",
        "name": "Arranque/ Paro com",
        "links": [
            "35e356e7.8ebc5a"
        ],
        "x": 515,
        "y": 720,
        "wires": [
            [
                "ca6808c4.0ce2b8"
            ]
        ]
    },
    {
        "id": "d5b941e2a96bbfa3",
        "type": "change",
        "z": "f10e7ce.d57828",
        "g": "1b162d57908931b5",
        "name": "Mensaje FIT OK",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Transmisor de flujo FIT-00960 manifold normalizado",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "¡ATENCIÓN!",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2040,
        "y": 770,
        "wires": [
            [
                "0946dbe8ddfa9a27"
            ]
        ]
    },
    {
        "id": "8b4d36053dc5b2b5",
        "type": "link in",
        "z": "f10e7ce.d57828",
        "g": "9d8df5b4f6b8aaf2",
        "name": "",
        "links": [
            "449b37406b29dc93"
        ],
        "x": 75,
        "y": 490,
        "wires": [
            [
                "af7b84cbace278b1",
                "3e7176c02d57fe4b",
                "96ada6f2934db373",
                "698edc58289bb46b",
                "69711da5e2395d69",
                "4fffcddd14dcf8ba",
                "1b0193143db63bd0",
                "ff105a49c624aed7"
            ]
        ]
    },
    {
        "id": "f6c4b6bdd7d87649",
        "type": "function",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "name": "Evento de confirmación",
        "func": "var NameClus    = global.get(\"NameClus\",\"memoryOnly\")||\" \";\nvar Referencia  = flow.get(\"Pozo.Referencia\") || \"--\";\nmsg.payload = \"Pozo \" + NameClus + \" a \" + Referencia +  \" Hz\";\n//msg.payload = \"Cambio de velocidad en\" + \" \" + NameClus + \" a \" + Referencia + \" Hz\";\nmsg.topic = \"Cambio de velocidad\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 550,
        "wires": [
            [
                "0db3231e87512499"
            ]
        ]
    },
    {
        "id": "0db3231e87512499",
        "type": "link out",
        "z": "e997ba3b.48cc18",
        "g": "2f18e23b.de32ce",
        "name": "Arranque/Parada",
        "links": [
            "59e817c2.295b38",
            "6c2bad5b885f74fd"
        ],
        "x": 605,
        "y": 550,
        "wires": []
    }
]